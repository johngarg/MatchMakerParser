## Symbols used:
# ydbar
# yd
# lambdaQ5
# lambdaNbar
# MN
# iCPV
# yl
# ylbar
# g1
# lambdaN
# muH
# g2
# MQ5
# invepsilonbar
# lam
# mu
# g3
# yubar
# lambdaQ5bar
# onelooporder
# yu

import python.matchingresult
import numpy as np

class GranadaQ5_GranadaNMatchingResult(python.matchingresult.GenericMatchingResult):
    def __init__(self, name='GranadaQ5_GranadaN', scale=91.1876):
        super().__init__(name, scale)
        self.MGranadaN = 1
        self.MGranadaQ5 = 1
        self.lambdaN = np.ones((3))
        self.lambdaNbar = np.ones((3))
        self.lambdaQ5 = np.ones((3))
        self.lambdaQ5bar = np.ones((3))
        self.nonvanishing = ['alphaO3G', 'alphaO3W', 'alphaOHG', 'alphaOHW', 'alphaOHB', 'alphaOHWB', 'alphaOHBox', 'alphaOHD', 'alphaOH', 'alphaOdG', 'alphaOdW', 'alphaOdB', 'alphaOeW', 'alphaOeB', 'alphaOHq1', 'alphaOHq3', 'alphaOHu', 'alphaOHd', 'alphaOHud', 'alphaOHl1', 'alphaOHl3', 'alphaOHe', 'alphaOuH', 'alphaOdH', 'alphaOeH', 'alphaOqq1', 'alphaOqq3', 'alphaOuu', 'alphaOdd', 'alphaOud1', 'alphaOud8', 'alphaOqu1', 'alphaOqu8', 'alphaOqd1', 'alphaOqd8', 'alphaOquqd1', 'alphaOll', 'alphaOee', 'alphaOle', 'alphaOlq1', 'alphaOlq3', 'alphaOeu', 'alphaOed', 'alphaOqe', 'alphaOlu', 'alphaOld', 'alphaOledq', 'alphaOlequ1', 'alphaWeinberg']

    def alphaO3G(self, ):
        return -1/1440 * (self.g3)**(3) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2)

    def alphaO3Gt(self, ):
        return 0

    def alphaO3W(self, ):
        return -1/960 * (self.g2)**(3) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2)

    def alphaO3Wt(self, ):
        return 0

    def alphaOHG(self, ):
        return (1/96 * (self.g3)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] + 1/96 * (self.g3)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] + 1/96 * (self.g3)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2])

    def alphaOHGt(self, ):
        return 0

    def alphaOHW(self, ):
        return (1/384 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] + 1/384 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] + 1/384 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2])

    def alphaOHWt(self, ):
        return 0

    def alphaOHB(self, ):
        return (1/384 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] + 1/384 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] + 1/384 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] + 7/576 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] + 7/576 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] + 7/576 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2])

    def alphaOHBt(self, ):
        return 0

    def alphaOHWB(self, ):
        return (1/192 * self.g1 * self.g2 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] + 1/192 * self.g1 * self.g2 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] + 1/192 * self.g1 * self.g2 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] + 1/192 * self.g1 * self.g2 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] + 1/192 * self.g1 * self.g2 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] + 1/192 * self.g1 * self.g2 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2])

    def alphaOHWBt(self, ):
        return 0

    def alphaOHBox(self, ):
        return (-5/576 * (self.g1)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) + -3/320 * (self.g2)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) + -5/1152 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] + -5/384 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] + -1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] + -17/192 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[0])**(2) * (self.lambdaNbar[0])**(2) + -1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[0])**(2) * (self.lambdaNbar[0])**(2) + -5/1152 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] + -5/384 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] + -1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] + -17/96 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[1] * self.lambdaNbar[0] * self.lambdaNbar[1] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[1] * self.lambdaNbar[0] * self.lambdaNbar[1] + -17/192 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[1])**(2) * (self.lambdaNbar[1])**(2) + -1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[1])**(2) * (self.lambdaNbar[1])**(2) + -5/1152 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] + -5/384 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] + -1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] + -17/96 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[2] * self.lambdaNbar[0] * self.lambdaNbar[2] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[2] * self.lambdaNbar[0] * self.lambdaNbar[2] + -17/96 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[2] * self.lambdaNbar[1] * self.lambdaNbar[2] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[2] * self.lambdaNbar[1] * self.lambdaNbar[2] + -17/192 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[2])**(2) * (self.lambdaNbar[2])**(2) + -1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[2])**(2) * (self.lambdaNbar[2])**(2) + 5/192 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] + 1/32 * (self.g2)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[0])**(2) * (self.lambdaQ5bar[0])**(2) + 5/192 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] + 1/32 * (self.g2)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[1])**(2) * (self.lambdaQ5bar[1])**(2) + 5/192 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] + 1/32 * (self.g2)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[2])**(2) * (self.lambdaQ5bar[2])**(2) + 1/192 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/64 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[0])**(2) * (self.lambdaNbar[0])**(2) * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/192 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/64 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[1] * self.lambdaNbar[0] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[1])**(2) * (self.lambdaNbar[1])**(2) * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/192 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/64 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[2] * self.lambdaNbar[0] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[2] * self.lambdaNbar[1] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[2])**(2) * (self.lambdaNbar[2])**(2) * np.log((self.MN)**(2) * (self.mu)**(-2)) + -1/96 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + -1/96 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + -1/96 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + -15/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,0] * self.ydbar[0,0] + -3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,0] * self.ydbar[0,0] + 3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] + -15/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,0] + -3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,0] + 3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,0] + -15/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,0] + -3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,0] + 3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,0] + -15/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,0] * self.ydbar[0,1] + -3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,0] * self.ydbar[0,1] + 3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,1] + -15/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,1] + -3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,1] + 3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] + -15/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,1] + -3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,1] + 3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,1] + -15/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.ydbar[0,2] + -3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.ydbar[0,2] + 3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,2] + -15/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,2] + -3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,2] + 3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,2] + -15/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,2] + -3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,2] + 3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] + -15/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[1,0] * self.ydbar[1,0] + -3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[1,0] * self.ydbar[1,0] + 3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] + -15/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,0] + -3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,0] + 3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,0] + -15/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,0] + -3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,0] + 3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,0] + -15/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[1,0] * self.ydbar[1,1] + -3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[1,0] * self.ydbar[1,1] + 3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,1] + -15/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,1] + -3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,1] + 3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] + -15/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,1] + -3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,1] + 3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,1] + -15/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.ydbar[1,2] + -3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.ydbar[1,2] + 3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,2] + -15/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,2] + -3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,2] + 3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,2] + -15/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,2] + -3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,2] + 3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,2] + -15/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[2,0] * self.ydbar[2,0] + -3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[2,0] * self.ydbar[2,0] + 3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] + -15/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,0] + -3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,0] + 3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,0] + -15/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,0] + -3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,0] + 3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,0] + -15/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[2,0] * self.ydbar[2,1] + -3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[2,0] * self.ydbar[2,1] + 3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,1] + -15/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,1] + -3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,1] + 3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,1] + -15/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,1] + -3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,1] + 3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,1] + -15/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[2,0] * self.ydbar[2,2] + -3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[2,0] * self.ydbar[2,2] + 3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,2] + -15/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,2] + -3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,2] + 3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,2] + -15/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,2] + -3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,2] + 3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,0] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,0] * self.ylbar[0,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,0] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,0] * self.ylbar[0,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,0] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,0] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,0] * self.ylbar[0,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,0] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,1] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,1] * self.ylbar[0,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,1] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,1] * self.ylbar[0,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,1] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,1] * self.ylbar[0,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,2] * self.ylbar[0,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,2] * self.ylbar[0,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,2] * self.ylbar[0,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,0] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,0] * self.ylbar[1,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[1,0] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,0] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,0] * self.ylbar[1,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,0] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,0] * self.ylbar[1,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,0] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,1] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,1] * self.ylbar[1,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[1,1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,1] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,1] * self.ylbar[1,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,1] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,1] * self.ylbar[1,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,2] * self.ylbar[1,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[1,2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,2] * self.ylbar[1,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,2] * self.ylbar[1,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,0] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,0] * self.ylbar[2,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[2,0] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,0] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,0] * self.ylbar[2,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[2,0] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,0] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,0] * self.ylbar[2,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,1] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,1] * self.ylbar[2,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[2,1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,1] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,1] * self.ylbar[2,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[2,1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,1] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,1] * self.ylbar[2,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,2] * self.ylbar[2,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[2,2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,2] * self.ylbar[2,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[2,2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,2] * self.ylbar[2,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,2])

    def alphaOHD(self, ):
        return (-5/144 * (self.g1)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) + -5/288 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] + -5/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[0])**(2) * (self.lambdaNbar[0])**(2) + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[0])**(2) * (self.lambdaNbar[0])**(2) + -5/288 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] + -5/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[1] * self.lambdaNbar[0] * self.lambdaNbar[1] + -1/8 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[1] * self.lambdaNbar[0] * self.lambdaNbar[1] + -5/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[1])**(2) * (self.lambdaNbar[1])**(2) + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[1])**(2) * (self.lambdaNbar[1])**(2) + -5/288 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] + -5/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[2] * self.lambdaNbar[0] * self.lambdaNbar[2] + -1/8 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[2] * self.lambdaNbar[0] * self.lambdaNbar[2] + -5/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[2] * self.lambdaNbar[1] * self.lambdaNbar[2] + -1/8 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[2] * self.lambdaNbar[1] * self.lambdaNbar[2] + -5/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[2])**(2) * (self.lambdaNbar[2])**(2) + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[2])**(2) * (self.lambdaNbar[2])**(2) + 5/48 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] + 1/24 * (self.g1)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] + -1/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[0])**(2) * (self.lambdaQ5bar[0])**(2) + 5/48 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] + 1/24 * (self.g1)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] + -1/4 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] + -1/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[1])**(2) * (self.lambdaQ5bar[1])**(2) + 5/48 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] + 1/24 * (self.g1)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] + -1/4 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] + -1/4 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] + -1/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[2])**(2) * (self.lambdaQ5bar[2])**(2) + 1/48 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[0])**(2) * (self.lambdaNbar[0])**(2) * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/48 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/8 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[1] * self.lambdaNbar[0] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[1])**(2) * (self.lambdaNbar[1])**(2) * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/48 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/8 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[2] * self.lambdaNbar[0] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/8 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[2] * self.lambdaNbar[1] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[2])**(2) * (self.lambdaNbar[2])**(2) * np.log((self.MN)**(2) * (self.mu)**(-2)) + -1/24 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + -1/24 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + -1/24 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + -9/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,0] * self.ydbar[0,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,0] * self.ydbar[0,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] + -9/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,0] + -9/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,0] + -9/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,0] * self.ydbar[0,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,0] * self.ydbar[0,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,1] + -9/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] + -9/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,1] + -9/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.ydbar[0,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.ydbar[0,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,2] + -9/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,2] + -9/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] + -9/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[1,0] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[1,0] * self.ydbar[1,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] + -9/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,0] + -9/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,0] + -9/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[1,0] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[1,0] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,1] + -9/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] + -9/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,1] + -9/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,2] + -9/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,2] + -9/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,2] + -9/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[2,0] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[2,0] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] + -9/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,0] + -9/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,0] + -9/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[2,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[2,0] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,1] + -9/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,1] + -9/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,1] + -9/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[2,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[2,0] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,2] + -9/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,2] + -9/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,0] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,0] * self.ylbar[0,0] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,0] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,0] * self.ylbar[0,0] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,0] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,0] * self.ylbar[0,0] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,1] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,1] * self.ylbar[0,1] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,1] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,1] * self.ylbar[0,1] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,1] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,1] * self.ylbar[0,1] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,2] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,2] * self.ylbar[0,2] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,2] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,2] * self.ylbar[0,2] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,2] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,2] * self.ylbar[0,2] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,0] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,0] * self.ylbar[1,0] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[1,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,0] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,0] * self.ylbar[1,0] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,0] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,0] * self.ylbar[1,0] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,1] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,1] * self.ylbar[1,1] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[1,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,1] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,1] * self.ylbar[1,1] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,1] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,1] * self.ylbar[1,1] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,2] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,2] * self.ylbar[1,2] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[1,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,2] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,2] * self.ylbar[1,2] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,2] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,2] * self.ylbar[1,2] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,0] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,0] * self.ylbar[2,0] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[2,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,0] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,0] * self.ylbar[2,0] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[2,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,0] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,0] * self.ylbar[2,0] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,1] * self.ylbar[2,1] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[2,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,1] * self.ylbar[2,1] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[2,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,1] * self.ylbar[2,1] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,2] * self.ylbar[2,2] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[2,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,2] * self.ylbar[2,2] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[2,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,2] * self.ylbar[2,2] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,2])

    def alphaOH(self, ):
        return (-1/40 * (self.g2)**(4) * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) + -5/144 * (self.g2)**(2) * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] + -1/24 * (self.g2)**(2) * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] + 1/12 * (self.lam)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] + -5/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[0])**(2) * (self.lambdaNbar[0])**(2) + -1/8 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[0])**(2) * (self.lambdaNbar[0])**(2) + -1/24 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[0])**(3) * (self.lambdaNbar[0])**(3) + -5/144 * (self.g2)**(2) * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] + -1/24 * (self.g2)**(2) * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] + 1/12 * (self.lam)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] + -5/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[1] * self.lambdaNbar[0] * self.lambdaNbar[1] + -1/4 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[1] * self.lambdaNbar[0] * self.lambdaNbar[1] + -1/8 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[0])**(2) * self.lambdaN[1] * (self.lambdaNbar[0])**(2) * self.lambdaNbar[1] + -5/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[1])**(2) * (self.lambdaNbar[1])**(2) + -1/8 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[1])**(2) * (self.lambdaNbar[1])**(2) + -1/8 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * (self.lambdaN[1])**(2) * self.lambdaNbar[0] * (self.lambdaNbar[1])**(2) + -1/24 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[1])**(3) * (self.lambdaNbar[1])**(3) + -5/144 * (self.g2)**(2) * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] + -1/24 * (self.g2)**(2) * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] + 1/12 * (self.lam)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] + -5/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[2] * self.lambdaNbar[0] * self.lambdaNbar[2] + -1/4 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[2] * self.lambdaNbar[0] * self.lambdaNbar[2] + -1/8 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[0])**(2) * self.lambdaN[2] * (self.lambdaNbar[0])**(2) * self.lambdaNbar[2] + -5/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[2] * self.lambdaNbar[1] * self.lambdaNbar[2] + -1/4 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[2] * self.lambdaNbar[1] * self.lambdaNbar[2] + -1/4 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[1] * self.lambdaN[2] * self.lambdaNbar[0] * self.lambdaNbar[1] * self.lambdaNbar[2] + -1/8 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[1])**(2) * self.lambdaN[2] * (self.lambdaNbar[1])**(2) * self.lambdaNbar[2] + -5/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[2])**(2) * (self.lambdaNbar[2])**(2) + -1/8 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[2])**(2) * (self.lambdaNbar[2])**(2) + -1/8 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * (self.lambdaN[2])**(2) * self.lambdaNbar[0] * (self.lambdaNbar[2])**(2) + -1/8 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * (self.lambdaN[2])**(2) * self.lambdaNbar[1] * (self.lambdaNbar[2])**(2) + -1/24 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[2])**(3) * (self.lambdaNbar[2])**(3) + 1/12 * (self.g2)**(2) * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] + 1/4 * (self.lam)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] + -5/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[0])**(2) * (self.lambdaQ5bar[0])**(2) + 1/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[0])**(3) * (self.lambdaQ5bar[0])**(3) + 1/12 * (self.g2)**(2) * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] + 1/4 * (self.lam)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] + -5/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] + 3/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[0])**(2) * self.lambdaQ5[1] * (self.lambdaQ5bar[0])**(2) * self.lambdaQ5bar[1] + -5/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[1])**(2) * (self.lambdaQ5bar[1])**(2) + 3/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * (self.lambdaQ5[1])**(2) * self.lambdaQ5bar[0] * (self.lambdaQ5bar[1])**(2) + 1/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[1])**(3) * (self.lambdaQ5bar[1])**(3) + 1/12 * (self.g2)**(2) * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] + 1/4 * (self.lam)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] + -5/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] + 3/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[0])**(2) * self.lambdaQ5[2] * (self.lambdaQ5bar[0])**(2) * self.lambdaQ5bar[2] + -5/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[1] * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] + 3/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[1])**(2) * self.lambdaQ5[2] * (self.lambdaQ5bar[1])**(2) * self.lambdaQ5bar[2] + -5/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[2])**(2) * (self.lambdaQ5bar[2])**(2) + 3/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * (self.lambdaQ5[2])**(2) * self.lambdaQ5bar[0] * (self.lambdaQ5bar[2])**(2) + 3/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * (self.lambdaQ5[2])**(2) * self.lambdaQ5bar[1] * (self.lambdaQ5bar[2])**(2) + 1/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[2])**(3) * (self.lambdaQ5bar[2])**(3) + 1/24 * (self.g2)**(2) * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[0])**(2) * (self.lambdaNbar[0])**(2) * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/24 * (self.g2)**(2) * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/4 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[1] * self.lambdaNbar[0] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[1])**(2) * (self.lambdaNbar[1])**(2) * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/24 * (self.g2)**(2) * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/4 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[2] * self.lambdaNbar[0] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/4 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[2] * self.lambdaNbar[1] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[2])**(2) * (self.lambdaNbar[2])**(2) * np.log((self.MN)**(2) * (self.mu)**(-2)) + -9/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,0] * self.ydbar[0,0] + 3/8 * self.invepsilonbar * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,0] * self.ydbar[0,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[0])**(2) * (self.lambdaQ5bar[0])**(2) * self.yd[0,0] * self.ydbar[0,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * self.yd[0,0] * self.ydbar[0,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * self.yd[0,0] * self.ydbar[0,0] + -3/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] + -9/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,0] + 3/8 * self.invepsilonbar * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[0])**(2) * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[1] * (self.lambdaQ5bar[1])**(2) * self.yd[0,1] * self.ydbar[0,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * self.yd[0,1] * self.ydbar[0,0] + -3/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,0] + -9/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,0] + 3/8 * self.invepsilonbar * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[0])**(2) * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[2] * (self.lambdaQ5bar[2])**(2) * self.yd[0,2] * self.ydbar[0,0] + -3/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * (self.yd[0,0])**(2) * (self.ydbar[0,0])**(2) + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * (self.yd[0,0])**(2) * (self.ydbar[0,0])**(2) + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * (self.yd[0,0])**(2) * (self.ydbar[0,0])**(2) + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,0] * self.yd[0,1] * (self.ydbar[0,0])**(2) + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,0] * self.yd[0,1] * (self.ydbar[0,0])**(2) + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[0,1] * (self.ydbar[0,0])**(2) + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,0] * self.yd[0,2] * (self.ydbar[0,0])**(2) + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,0] * self.yd[0,2] * (self.ydbar[0,0])**(2) + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[0,2] * (self.ydbar[0,0])**(2) + -9/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,0] * self.ydbar[0,1] + 3/8 * self.invepsilonbar * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,0] * self.ydbar[0,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[1] * (self.lambdaQ5bar[0])**(2) * self.yd[0,0] * self.ydbar[0,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[1])**(2) * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * self.yd[0,0] * self.ydbar[0,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * self.yd[0,0] * self.ydbar[0,1] + -3/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,1] + -9/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,1] + 3/8 * self.invepsilonbar * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[1])**(2) * (self.lambdaQ5bar[1])**(2) * self.yd[0,1] * self.ydbar[0,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * self.yd[0,1] * self.ydbar[0,1] + -3/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] + -9/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,1] + 3/8 * self.invepsilonbar * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[1])**(2) * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[2] * (self.lambdaQ5bar[2])**(2) * self.yd[0,2] * self.ydbar[0,1] + -3/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * (self.yd[0,0])**(2) * self.ydbar[0,0] * self.ydbar[0,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * (self.yd[0,0])**(2) * self.ydbar[0,0] * self.ydbar[0,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * (self.yd[0,0])**(2) * self.ydbar[0,0] * self.ydbar[0,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[0,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[0,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,0] * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[0,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,0] * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[0,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[0,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[0,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * (self.yd[0,1])**(2) * self.ydbar[0,0] * self.ydbar[0,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * (self.yd[0,1])**(2) * self.ydbar[0,0] * self.ydbar[0,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * (self.yd[0,1])**(2) * self.ydbar[0,0] * self.ydbar[0,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,0] * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[0,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,0] * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[0,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[0,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,1] * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[0,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,1] * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[0,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[0,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[0,1] * (self.ydbar[0,1])**(2) + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[0,1] * (self.ydbar[0,1])**(2) + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[0,1] * (self.ydbar[0,1])**(2) + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * (self.yd[0,1])**(2) * (self.ydbar[0,1])**(2) + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * (self.yd[0,1])**(2) * (self.ydbar[0,1])**(2) + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * (self.yd[0,1])**(2) * (self.ydbar[0,1])**(2) + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,1] * self.yd[0,2] * (self.ydbar[0,1])**(2) + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,1] * self.yd[0,2] * (self.ydbar[0,1])**(2) + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[0,2] * (self.ydbar[0,1])**(2) + -9/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.ydbar[0,2] + 3/8 * self.invepsilonbar * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.ydbar[0,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[2] * (self.lambdaQ5bar[0])**(2) * self.yd[0,0] * self.ydbar[0,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * self.yd[0,0] * self.ydbar[0,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[2])**(2) * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * self.yd[0,0] * self.ydbar[0,2] + -3/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,2] + -9/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,2] + 3/8 * self.invepsilonbar * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[2] * (self.lambdaQ5bar[1])**(2) * self.yd[0,1] * self.ydbar[0,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[2])**(2) * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * self.yd[0,1] * self.ydbar[0,2] + -3/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,2] + -9/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,2] + 3/8 * self.invepsilonbar * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[2])**(2) * (self.lambdaQ5bar[2])**(2) * self.yd[0,2] * self.ydbar[0,2] + -3/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * (self.yd[0,0])**(2) * self.ydbar[0,0] * self.ydbar[0,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * (self.yd[0,0])**(2) * self.ydbar[0,0] * self.ydbar[0,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * (self.yd[0,0])**(2) * self.ydbar[0,0] * self.ydbar[0,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,0] * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[0,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,0] * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[0,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[0,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[0,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[0,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,0] * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[0,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,0] * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[0,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[0,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[0,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[0,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[0,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[0,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * (self.yd[0,2])**(2) * self.ydbar[0,0] * self.ydbar[0,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * (self.yd[0,2])**(2) * self.ydbar[0,0] * self.ydbar[0,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * (self.yd[0,2])**(2) * self.ydbar[0,0] * self.ydbar[0,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[0,1] * self.ydbar[0,1] * self.ydbar[0,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[0,1] * self.ydbar[0,1] * self.ydbar[0,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[0,1] * self.ydbar[0,1] * self.ydbar[0,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * (self.yd[0,1])**(2) * self.ydbar[0,1] * self.ydbar[0,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * (self.yd[0,1])**(2) * self.ydbar[0,1] * self.ydbar[0,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * (self.yd[0,1])**(2) * self.ydbar[0,1] * self.ydbar[0,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[0,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[0,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[0,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[0,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[0,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,1] * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[0,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,1] * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[0,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[0,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[0,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * (self.yd[0,2])**(2) * self.ydbar[0,1] * self.ydbar[0,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * (self.yd[0,2])**(2) * self.ydbar[0,1] * self.ydbar[0,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * (self.yd[0,2])**(2) * self.ydbar[0,1] * self.ydbar[0,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[0,2] * (self.ydbar[0,2])**(2) + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[0,2] * (self.ydbar[0,2])**(2) + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[0,2] * (self.ydbar[0,2])**(2) + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[0,2] * (self.ydbar[0,2])**(2) + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[0,2] * (self.ydbar[0,2])**(2) + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[0,2] * (self.ydbar[0,2])**(2) + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * (self.yd[0,2])**(2) * (self.ydbar[0,2])**(2) + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * (self.yd[0,2])**(2) * (self.ydbar[0,2])**(2) + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * (self.yd[0,2])**(2) * (self.ydbar[0,2])**(2) + -9/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[1,0] * self.ydbar[1,0] + 3/8 * self.invepsilonbar * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[1,0] * self.ydbar[1,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[0])**(2) * (self.lambdaQ5bar[0])**(2) * self.yd[1,0] * self.ydbar[1,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * self.yd[1,0] * self.ydbar[1,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * self.yd[1,0] * self.ydbar[1,0] + -3/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] + -9/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,0] + 3/8 * self.invepsilonbar * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[0])**(2) * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[1] * (self.lambdaQ5bar[1])**(2) * self.yd[1,1] * self.ydbar[1,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * self.yd[1,1] * self.ydbar[1,0] + -3/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,0] + -9/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,0] + 3/8 * self.invepsilonbar * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[0])**(2) * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[2] * (self.lambdaQ5bar[2])**(2) * self.yd[1,2] * self.ydbar[1,0] + -3/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,0] + -3/4 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,0] + -3/4 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,0] + 3/4 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,0] * self.yd[1,1] * self.ydbar[0,0] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,0] * self.yd[1,1] * self.ydbar[0,0] * self.ydbar[1,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,1] * self.ydbar[0,0] * self.ydbar[1,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,0] * self.yd[1,2] * self.ydbar[0,0] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,0] * self.yd[1,2] * self.ydbar[0,0] * self.ydbar[1,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,2] * self.ydbar[0,0] * self.ydbar[1,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[1,0] * self.ydbar[0,1] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[1,0] * self.ydbar[0,1] * self.ydbar[1,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,0] * self.ydbar[0,1] * self.ydbar[1,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,0] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,0] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,0] * self.yd[1,2] * self.ydbar[0,1] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,0] * self.yd[1,2] * self.ydbar[0,1] * self.ydbar[1,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,2] * self.ydbar[0,1] * self.ydbar[1,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[1,0] * self.ydbar[0,2] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[1,0] * self.ydbar[0,2] * self.ydbar[1,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,0] * self.ydbar[0,2] * self.ydbar[1,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,0] * self.yd[1,1] * self.ydbar[0,2] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,0] * self.yd[1,1] * self.ydbar[0,2] * self.ydbar[1,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,1] * self.ydbar[0,2] * self.ydbar[1,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,0] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,0] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * (self.yd[1,0])**(2) * (self.ydbar[1,0])**(2) + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * (self.yd[1,0])**(2) * (self.ydbar[1,0])**(2) + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * (self.yd[1,0])**(2) * (self.ydbar[1,0])**(2) + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[1,0] * self.yd[1,1] * (self.ydbar[1,0])**(2) + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[1,0] * self.yd[1,1] * (self.ydbar[1,0])**(2) + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[1,1] * (self.ydbar[1,0])**(2) + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[1,0] * self.yd[1,2] * (self.ydbar[1,0])**(2) + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[1,0] * self.yd[1,2] * (self.ydbar[1,0])**(2) + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[1,2] * (self.ydbar[1,0])**(2) + -9/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[1,0] * self.ydbar[1,1] + 3/8 * self.invepsilonbar * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[1,0] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[1] * (self.lambdaQ5bar[0])**(2) * self.yd[1,0] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[1])**(2) * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * self.yd[1,0] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * self.yd[1,0] * self.ydbar[1,1] + -3/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,1] + -9/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,1] + 3/8 * self.invepsilonbar * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[1])**(2) * (self.lambdaQ5bar[1])**(2) * self.yd[1,1] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * self.yd[1,1] * self.ydbar[1,1] + -3/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] + -9/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,1] + 3/8 * self.invepsilonbar * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[1])**(2) * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[2] * (self.lambdaQ5bar[2])**(2) * self.yd[1,2] * self.ydbar[1,1] + -3/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,1] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,1] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[1,1] * self.ydbar[0,0] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[1,1] * self.ydbar[0,0] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,1] * self.ydbar[0,0] * self.ydbar[1,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,1] * self.yd[1,2] * self.ydbar[0,0] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,1] * self.yd[1,2] * self.ydbar[0,0] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,2] * self.ydbar[0,0] * self.ydbar[1,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,1] * self.yd[1,0] * self.ydbar[0,1] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,1] * self.yd[1,0] * self.ydbar[0,1] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,0] * self.ydbar[0,1] * self.ydbar[1,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,1] + -3/4 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,1] + -3/4 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,1] + 3/4 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,1] * self.yd[1,2] * self.ydbar[0,1] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,1] * self.yd[1,2] * self.ydbar[0,1] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,2] * self.ydbar[0,1] * self.ydbar[1,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,1] * self.yd[1,0] * self.ydbar[0,2] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,1] * self.yd[1,0] * self.ydbar[0,2] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,0] * self.ydbar[0,2] * self.ydbar[1,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[1,1] * self.ydbar[0,2] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[1,1] * self.ydbar[0,2] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,1] * self.ydbar[0,2] * self.ydbar[1,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,1] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,1] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * (self.yd[1,0])**(2) * self.ydbar[1,0] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * (self.yd[1,0])**(2) * self.ydbar[1,0] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * (self.yd[1,0])**(2) * self.ydbar[1,0] * self.ydbar[1,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[1,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[1,0] * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[1,0] * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[1,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * (self.yd[1,1])**(2) * self.ydbar[1,0] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * (self.yd[1,1])**(2) * self.ydbar[1,0] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * (self.yd[1,1])**(2) * self.ydbar[1,0] * self.ydbar[1,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[1,0] * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[1,0] * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[1,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[1,1] * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[1,1] * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[1,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[1,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[1,1] * (self.ydbar[1,1])**(2) + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[1,1] * (self.ydbar[1,1])**(2) + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[1,1] * (self.ydbar[1,1])**(2) + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * (self.yd[1,1])**(2) * (self.ydbar[1,1])**(2) + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * (self.yd[1,1])**(2) * (self.ydbar[1,1])**(2) + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * (self.yd[1,1])**(2) * (self.ydbar[1,1])**(2) + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[1,1] * self.yd[1,2] * (self.ydbar[1,1])**(2) + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[1,1] * self.yd[1,2] * (self.ydbar[1,1])**(2) + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[1,2] * (self.ydbar[1,1])**(2) + -9/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.ydbar[1,2] + 3/8 * self.invepsilonbar * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[2] * (self.lambdaQ5bar[0])**(2) * self.yd[1,0] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * self.yd[1,0] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[2])**(2) * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * self.yd[1,0] * self.ydbar[1,2] + -3/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,2] + -9/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,2] + 3/8 * self.invepsilonbar * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[2] * (self.lambdaQ5bar[1])**(2) * self.yd[1,1] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[2])**(2) * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * self.yd[1,1] * self.ydbar[1,2] + -3/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,2] + -9/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,2] + 3/8 * self.invepsilonbar * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[2])**(2) * (self.lambdaQ5bar[2])**(2) * self.yd[1,2] * self.ydbar[1,2] + -3/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,2] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,2] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,2] * self.yd[1,1] * self.ydbar[0,0] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,2] * self.yd[1,1] * self.ydbar[0,0] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,1] * self.ydbar[0,0] * self.ydbar[1,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[1,2] * self.ydbar[0,0] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[1,2] * self.ydbar[0,0] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,2] * self.ydbar[0,0] * self.ydbar[1,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,2] * self.yd[1,0] * self.ydbar[0,1] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,2] * self.yd[1,0] * self.ydbar[0,1] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,0] * self.ydbar[0,1] * self.ydbar[1,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,2] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,2] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[1,2] * self.ydbar[0,1] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[1,2] * self.ydbar[0,1] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,2] * self.ydbar[0,1] * self.ydbar[1,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,2] * self.yd[1,0] * self.ydbar[0,2] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,2] * self.yd[1,0] * self.ydbar[0,2] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,0] * self.ydbar[0,2] * self.ydbar[1,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,2] * self.yd[1,1] * self.ydbar[0,2] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,2] * self.yd[1,1] * self.ydbar[0,2] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,1] * self.ydbar[0,2] * self.ydbar[1,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,2] + -3/4 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,2] + -3/4 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,2] + 3/4 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * (self.yd[1,0])**(2) * self.ydbar[1,0] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * (self.yd[1,0])**(2) * self.ydbar[1,0] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * (self.yd[1,0])**(2) * self.ydbar[1,0] * self.ydbar[1,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[1,0] * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[1,0] * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[1,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[1,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[1,0] * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[1,0] * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[1,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[1,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * (self.yd[1,2])**(2) * self.ydbar[1,0] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * (self.yd[1,2])**(2) * self.ydbar[1,0] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * (self.yd[1,2])**(2) * self.ydbar[1,0] * self.ydbar[1,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[1,1] * self.ydbar[1,1] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[1,1] * self.ydbar[1,1] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[1,1] * self.ydbar[1,1] * self.ydbar[1,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * (self.yd[1,1])**(2) * self.ydbar[1,1] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * (self.yd[1,1])**(2) * self.ydbar[1,1] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * (self.yd[1,1])**(2) * self.ydbar[1,1] * self.ydbar[1,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[1,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[1,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[1,1] * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[1,1] * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[1,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * (self.yd[1,2])**(2) * self.ydbar[1,1] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * (self.yd[1,2])**(2) * self.ydbar[1,1] * self.ydbar[1,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * (self.yd[1,2])**(2) * self.ydbar[1,1] * self.ydbar[1,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[1,2] * (self.ydbar[1,2])**(2) + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[1,2] * (self.ydbar[1,2])**(2) + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[1,2] * (self.ydbar[1,2])**(2) + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[1,2] * (self.ydbar[1,2])**(2) + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[1,2] * (self.ydbar[1,2])**(2) + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[1,2] * (self.ydbar[1,2])**(2) + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * (self.yd[1,2])**(2) * (self.ydbar[1,2])**(2) + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * (self.yd[1,2])**(2) * (self.ydbar[1,2])**(2) + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * (self.yd[1,2])**(2) * (self.ydbar[1,2])**(2) + -9/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[2,0] * self.ydbar[2,0] + 3/8 * self.invepsilonbar * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[2,0] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[0])**(2) * (self.lambdaQ5bar[0])**(2) * self.yd[2,0] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * self.yd[2,0] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * self.yd[2,0] * self.ydbar[2,0] + -3/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] + -9/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,0] + 3/8 * self.invepsilonbar * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[0])**(2) * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[1] * (self.lambdaQ5bar[1])**(2) * self.yd[2,1] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * self.yd[2,1] * self.ydbar[2,0] + -3/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,0] + -9/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,0] + 3/8 * self.invepsilonbar * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[0])**(2) * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[2] * (self.lambdaQ5bar[2])**(2) * self.yd[2,2] * self.ydbar[2,0] + -3/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,0] + -3/4 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,0] + -3/4 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,0] + 3/4 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,0] * self.yd[2,1] * self.ydbar[0,0] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,0] * self.yd[2,1] * self.ydbar[0,0] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,1] * self.ydbar[0,0] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,0] * self.yd[2,2] * self.ydbar[0,0] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,0] * self.yd[2,2] * self.ydbar[0,0] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,2] * self.ydbar[0,0] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[2,0] * self.ydbar[0,1] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[2,0] * self.ydbar[0,1] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,0] * self.ydbar[0,1] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,0] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,0] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,0] * self.yd[2,2] * self.ydbar[0,1] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,0] * self.yd[2,2] * self.ydbar[0,1] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,2] * self.ydbar[0,1] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[2,0] * self.ydbar[0,2] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[2,0] * self.ydbar[0,2] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,0] * self.ydbar[0,2] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,0] * self.yd[2,1] * self.ydbar[0,2] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,0] * self.yd[2,1] * self.ydbar[0,2] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,1] * self.ydbar[0,2] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,0] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,0] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,0] + -3/4 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,0] + -3/4 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,0] + 3/4 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[1,0] * self.yd[2,1] * self.ydbar[1,0] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[1,0] * self.yd[2,1] * self.ydbar[1,0] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,1] * self.ydbar[1,0] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[1,0] * self.yd[2,2] * self.ydbar[1,0] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[1,0] * self.yd[2,2] * self.ydbar[1,0] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,2] * self.ydbar[1,0] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[2,0] * self.ydbar[1,1] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[2,0] * self.ydbar[1,1] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,0] * self.ydbar[1,1] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[1,0] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[1,0] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[1,0] * self.yd[2,2] * self.ydbar[1,1] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[1,0] * self.yd[2,2] * self.ydbar[1,1] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,2] * self.ydbar[1,1] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[2,0] * self.ydbar[1,2] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[2,0] * self.ydbar[1,2] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,0] * self.ydbar[1,2] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[1,0] * self.yd[2,1] * self.ydbar[1,2] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[1,0] * self.yd[2,1] * self.ydbar[1,2] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,1] * self.ydbar[1,2] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[1,0] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[1,0] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,0] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,0] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * (self.yd[2,0])**(2) * (self.ydbar[2,0])**(2) + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * (self.yd[2,0])**(2) * (self.ydbar[2,0])**(2) + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * (self.yd[2,0])**(2) * (self.ydbar[2,0])**(2) + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[2,0] * self.yd[2,1] * (self.ydbar[2,0])**(2) + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[2,0] * self.yd[2,1] * (self.ydbar[2,0])**(2) + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yd[2,1] * (self.ydbar[2,0])**(2) + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[2,0] * self.yd[2,2] * (self.ydbar[2,0])**(2) + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[2,0] * self.yd[2,2] * (self.ydbar[2,0])**(2) + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yd[2,2] * (self.ydbar[2,0])**(2) + -9/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[2,0] * self.ydbar[2,1] + 3/8 * self.invepsilonbar * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[2,0] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[1] * (self.lambdaQ5bar[0])**(2) * self.yd[2,0] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[1])**(2) * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * self.yd[2,0] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * self.yd[2,0] * self.ydbar[2,1] + -3/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,1] + -9/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,1] + 3/8 * self.invepsilonbar * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[1])**(2) * (self.lambdaQ5bar[1])**(2) * self.yd[2,1] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * self.yd[2,1] * self.ydbar[2,1] + -3/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,1] + -9/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,1] + 3/8 * self.invepsilonbar * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[1])**(2) * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[2] * (self.lambdaQ5bar[2])**(2) * self.yd[2,2] * self.ydbar[2,1] + -3/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,1] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,1] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[2,1] * self.ydbar[0,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[2,1] * self.ydbar[0,0] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,1] * self.ydbar[0,0] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,1] * self.yd[2,2] * self.ydbar[0,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,1] * self.yd[2,2] * self.ydbar[0,0] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,2] * self.ydbar[0,0] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,1] * self.yd[2,0] * self.ydbar[0,1] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,1] * self.yd[2,0] * self.ydbar[0,1] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,0] * self.ydbar[0,1] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,1] + -3/4 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,1] + -3/4 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,1] + 3/4 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,1] * self.yd[2,2] * self.ydbar[0,1] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,1] * self.yd[2,2] * self.ydbar[0,1] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,2] * self.ydbar[0,1] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,1] * self.yd[2,0] * self.ydbar[0,2] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,1] * self.yd[2,0] * self.ydbar[0,2] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,0] * self.ydbar[0,2] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[2,1] * self.ydbar[0,2] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[2,1] * self.ydbar[0,2] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,1] * self.ydbar[0,2] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,1] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,1] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[1,1] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[1,1] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[2,1] * self.ydbar[1,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[2,1] * self.ydbar[1,0] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,1] * self.ydbar[1,0] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[1,1] * self.yd[2,2] * self.ydbar[1,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[1,1] * self.yd[2,2] * self.ydbar[1,0] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,2] * self.ydbar[1,0] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[1,1] * self.yd[2,0] * self.ydbar[1,1] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[1,1] * self.yd[2,0] * self.ydbar[1,1] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,0] * self.ydbar[1,1] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,1] + -3/4 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,1] + -3/4 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,1] + 3/4 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[1,1] * self.yd[2,2] * self.ydbar[1,1] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[1,1] * self.yd[2,2] * self.ydbar[1,1] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,2] * self.ydbar[1,1] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[1,1] * self.yd[2,0] * self.ydbar[1,2] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[1,1] * self.yd[2,0] * self.ydbar[1,2] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,0] * self.ydbar[1,2] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[2,1] * self.ydbar[1,2] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[2,1] * self.ydbar[1,2] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,1] * self.ydbar[1,2] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[1,1] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[1,1] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * (self.yd[2,0])**(2) * self.ydbar[2,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * (self.yd[2,0])**(2) * self.ydbar[2,0] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * (self.yd[2,0])**(2) * self.ydbar[2,0] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[2,0] * self.yd[2,1] * self.ydbar[2,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[2,0] * self.yd[2,1] * self.ydbar[2,0] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[2,0] * self.yd[2,1] * self.ydbar[2,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[2,0] * self.yd[2,1] * self.ydbar[2,0] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yd[2,1] * self.ydbar[2,0] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yd[2,1] * self.ydbar[2,0] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * (self.yd[2,1])**(2) * self.ydbar[2,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * (self.yd[2,1])**(2) * self.ydbar[2,0] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * (self.yd[2,1])**(2) * self.ydbar[2,0] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[2,0] * self.yd[2,2] * self.ydbar[2,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[2,0] * self.yd[2,2] * self.ydbar[2,0] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yd[2,2] * self.ydbar[2,0] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[2,1] * self.yd[2,2] * self.ydbar[2,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[2,1] * self.yd[2,2] * self.ydbar[2,0] * self.ydbar[2,1] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.yd[2,2] * self.ydbar[2,0] * self.ydbar[2,1] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[2,0] * self.yd[2,1] * (self.ydbar[2,1])**(2) + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[2,0] * self.yd[2,1] * (self.ydbar[2,1])**(2) + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yd[2,1] * (self.ydbar[2,1])**(2) + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * (self.yd[2,1])**(2) * (self.ydbar[2,1])**(2) + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * (self.yd[2,1])**(2) * (self.ydbar[2,1])**(2) + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * (self.yd[2,1])**(2) * (self.ydbar[2,1])**(2) + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[2,1] * self.yd[2,2] * (self.ydbar[2,1])**(2) + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[2,1] * self.yd[2,2] * (self.ydbar[2,1])**(2) + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.yd[2,2] * (self.ydbar[2,1])**(2) + -9/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[2,0] * self.ydbar[2,2] + 3/8 * self.invepsilonbar * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[2,0] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[2] * (self.lambdaQ5bar[0])**(2) * self.yd[2,0] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * self.yd[2,0] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[2])**(2) * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * self.yd[2,0] * self.ydbar[2,2] + -3/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,2] + -9/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,2] + 3/8 * self.invepsilonbar * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[2] * (self.lambdaQ5bar[1])**(2) * self.yd[2,1] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[2])**(2) * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * self.yd[2,1] * self.ydbar[2,2] + -3/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,2] + -9/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,2] + 3/8 * self.invepsilonbar * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[2])**(2) * (self.lambdaQ5bar[2])**(2) * self.yd[2,2] * self.ydbar[2,2] + -3/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,2] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,2] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,2] * self.yd[2,1] * self.ydbar[0,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,2] * self.yd[2,1] * self.ydbar[0,0] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,1] * self.ydbar[0,0] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[2,2] * self.ydbar[0,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[2,2] * self.ydbar[0,0] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,2] * self.ydbar[0,0] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,2] * self.yd[2,0] * self.ydbar[0,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,2] * self.yd[2,0] * self.ydbar[0,1] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,0] * self.ydbar[0,1] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,2] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,2] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[2,2] * self.ydbar[0,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[2,2] * self.ydbar[0,1] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,2] * self.ydbar[0,1] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,2] * self.yd[2,0] * self.ydbar[0,2] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,2] * self.yd[2,0] * self.ydbar[0,2] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,0] * self.ydbar[0,2] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,2] * self.yd[2,1] * self.ydbar[0,2] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,2] * self.yd[2,1] * self.ydbar[0,2] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,1] * self.ydbar[0,2] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,2] + -3/4 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,2] + -3/4 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,2] + 3/4 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[1,2] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[1,2] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[1,2] * self.yd[2,1] * self.ydbar[1,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[1,2] * self.yd[2,1] * self.ydbar[1,0] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,1] * self.ydbar[1,0] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[2,2] * self.ydbar[1,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[2,2] * self.ydbar[1,0] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,2] * self.ydbar[1,0] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[1,2] * self.yd[2,0] * self.ydbar[1,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[1,2] * self.yd[2,0] * self.ydbar[1,1] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,0] * self.ydbar[1,1] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[1,2] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[1,2] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[2,2] * self.ydbar[1,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[2,2] * self.ydbar[1,1] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,2] * self.ydbar[1,1] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[1,2] * self.yd[2,0] * self.ydbar[1,2] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[1,2] * self.yd[2,0] * self.ydbar[1,2] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,0] * self.ydbar[1,2] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[1,2] * self.yd[2,1] * self.ydbar[1,2] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[1,2] * self.yd[2,1] * self.ydbar[1,2] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,1] * self.ydbar[1,2] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,2] + -3/4 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,2] + -3/4 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,2] + 3/4 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * (self.yd[2,0])**(2) * self.ydbar[2,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * (self.yd[2,0])**(2) * self.ydbar[2,0] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * (self.yd[2,0])**(2) * self.ydbar[2,0] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[2,0] * self.yd[2,1] * self.ydbar[2,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[2,0] * self.yd[2,1] * self.ydbar[2,0] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yd[2,1] * self.ydbar[2,0] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[2,0] * self.yd[2,2] * self.ydbar[2,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[2,0] * self.yd[2,2] * self.ydbar[2,0] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[2,0] * self.yd[2,2] * self.ydbar[2,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[2,0] * self.yd[2,2] * self.ydbar[2,0] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yd[2,2] * self.ydbar[2,0] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yd[2,2] * self.ydbar[2,0] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[2,1] * self.yd[2,2] * self.ydbar[2,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[2,1] * self.yd[2,2] * self.ydbar[2,0] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.yd[2,2] * self.ydbar[2,0] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * (self.yd[2,2])**(2) * self.ydbar[2,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * (self.yd[2,2])**(2) * self.ydbar[2,0] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * (self.yd[2,2])**(2) * self.ydbar[2,0] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[2,0] * self.yd[2,1] * self.ydbar[2,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[2,0] * self.yd[2,1] * self.ydbar[2,1] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yd[2,1] * self.ydbar[2,1] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * (self.yd[2,1])**(2) * self.ydbar[2,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * (self.yd[2,1])**(2) * self.ydbar[2,1] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * (self.yd[2,1])**(2) * self.ydbar[2,1] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[2,0] * self.yd[2,2] * self.ydbar[2,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[2,0] * self.yd[2,2] * self.ydbar[2,1] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yd[2,2] * self.ydbar[2,1] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[2,1] * self.yd[2,2] * self.ydbar[2,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[2,1] * self.yd[2,2] * self.ydbar[2,1] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[2,1] * self.yd[2,2] * self.ydbar[2,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[2,1] * self.yd[2,2] * self.ydbar[2,1] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.yd[2,2] * self.ydbar[2,1] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.yd[2,2] * self.ydbar[2,1] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * (self.yd[2,2])**(2) * self.ydbar[2,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * (self.yd[2,2])**(2) * self.ydbar[2,1] * self.ydbar[2,2] + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * (self.yd[2,2])**(2) * self.ydbar[2,1] * self.ydbar[2,2] + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[2,0] * self.yd[2,2] * (self.ydbar[2,2])**(2) + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[2,0] * self.yd[2,2] * (self.ydbar[2,2])**(2) + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yd[2,2] * (self.ydbar[2,2])**(2) + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[2,1] * self.yd[2,2] * (self.ydbar[2,2])**(2) + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[2,1] * self.yd[2,2] * (self.ydbar[2,2])**(2) + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.yd[2,2] * (self.ydbar[2,2])**(2) + -3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * (self.yd[2,2])**(2) * (self.ydbar[2,2])**(2) + -3/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * (self.yd[2,2])**(2) * (self.ydbar[2,2])**(2) + 3/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * (self.yd[2,2])**(2) * (self.ydbar[2,2])**(2) + 1/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,0] * self.ylbar[0,0] + 1/8 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,0] * self.ylbar[0,0] + -1/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] + 1/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,0] * self.ylbar[0,0] + 1/8 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,0] * self.ylbar[0,0] + -1/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,0] + 1/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,0] * self.ylbar[0,0] + 1/8 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,0] * self.ylbar[0,0] + -1/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,0] + 1/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,1] * self.ylbar[0,1] + 1/8 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,1] * self.ylbar[0,1] + -1/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] + 1/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,1] * self.ylbar[0,1] + 1/8 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,1] * self.ylbar[0,1] + -1/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,1] + 1/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,1] * self.ylbar[0,1] + 1/8 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,1] * self.ylbar[0,1] + -1/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,1] + 1/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,2] * self.ylbar[0,2] + 1/8 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,2] * self.ylbar[0,2] + -1/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] + 1/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,2] * self.ylbar[0,2] + 1/8 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,2] * self.ylbar[0,2] + -1/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,2] + 1/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,2] * self.ylbar[0,2] + 1/8 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,2] * self.ylbar[0,2] + -1/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,2] + 1/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,0] * self.ylbar[1,0] + 1/8 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,0] * self.ylbar[1,0] + -1/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[1,0] + 1/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,0] * self.ylbar[1,0] + 1/8 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,0] * self.ylbar[1,0] + -1/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] + 1/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,0] * self.ylbar[1,0] + 1/8 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,0] * self.ylbar[1,0] + -1/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,0] + 1/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,1] * self.ylbar[1,1] + 1/8 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,1] * self.ylbar[1,1] + -1/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[1,1] + 1/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,1] * self.ylbar[1,1] + 1/8 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,1] * self.ylbar[1,1] + -1/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] + 1/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,1] * self.ylbar[1,1] + 1/8 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,1] * self.ylbar[1,1] + -1/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,1] + 1/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,2] * self.ylbar[1,2] + 1/8 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,2] * self.ylbar[1,2] + -1/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[1,2] + 1/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,2] * self.ylbar[1,2] + 1/8 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,2] * self.ylbar[1,2] + -1/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,2] + 1/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,2] * self.ylbar[1,2] + 1/8 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,2] * self.ylbar[1,2] + -1/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,2] + 1/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,0] * self.ylbar[2,0] + 1/8 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,0] * self.ylbar[2,0] + -1/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[2,0] + 1/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,0] * self.ylbar[2,0] + 1/8 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,0] * self.ylbar[2,0] + -1/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[2,0] + 1/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,0] * self.ylbar[2,0] + 1/8 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,0] * self.ylbar[2,0] + -1/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] + 1/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,1] * self.ylbar[2,1] + 1/8 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,1] * self.ylbar[2,1] + -1/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[2,1] + 1/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,1] * self.ylbar[2,1] + 1/8 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,1] * self.ylbar[2,1] + -1/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[2,1] + 1/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,1] * self.ylbar[2,1] + 1/8 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,1] * self.ylbar[2,1] + -1/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,1] + 1/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,2] * self.ylbar[2,2] + 1/8 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,2] * self.ylbar[2,2] + -1/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[2,2] + 1/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,2] * self.ylbar[2,2] + 1/8 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,2] * self.ylbar[2,2] + -1/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[2,2] + 1/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,2] * self.ylbar[2,2] + 1/8 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,2] * self.ylbar[2,2] + -1/8 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,2])

    def alphaOuG(self, mif1,mif2):
        return 0

    def alphaOuW(self, mif1,mif2):
        return 0

    def alphaOuB(self, mif1,mif2):
        return 0

    def alphaOdG(self, mif1,mif2):
        return (1/192 * self.g3 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[mif1,0] + 1/64 * self.g3 * (self.iCPV)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[mif1,0] + 1/192 * self.g3 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[mif1,1] + 1/64 * self.g3 * (self.iCPV)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[mif1,1] + 1/192 * self.g3 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[mif1,2] + 1/64 * self.g3 * (self.iCPV)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[mif1,2])

    def alphaOdW(self, mif1,mif2):
        return (-1/128 * self.g2 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[mif1,0] + -1/128 * self.g2 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[mif1,1] + -1/128 * self.g2 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[mif1,2])

    def alphaOdB(self, mif1,mif2):
        return (-11/1152 * self.g1 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[mif1,0] + -5/384 * self.g1 * (self.iCPV)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[mif1,0] + -11/1152 * self.g1 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[mif1,1] + -5/384 * self.g1 * (self.iCPV)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[mif1,1] + -11/1152 * self.g1 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[mif1,2] + -5/384 * self.g1 * (self.iCPV)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[mif1,2])

    def alphaOeW(self, mif1,mif2):
        return (5/384 * self.g2 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,mif2] + 5/384 * self.g2 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[1,mif2] + 5/384 * self.g2 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[2,mif2])

    def alphaOeB(self, mif1,mif2):
        return (1/384 * self.g1 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,mif2] + 1/384 * self.g1 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[1,mif2] + 1/384 * self.g1 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[2,mif2])

    def alphaOHq1(self, mif1,mif2):
        return (-5/864 * (self.g1)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -5/3456 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[0] * self.lambdaNbar[0] + -1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[0] * self.lambdaNbar[0] + -5/3456 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[1] * self.lambdaNbar[1] + -1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[1] * self.lambdaNbar[1] + -5/3456 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[2] * self.lambdaNbar[2] + -1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[2] * self.lambdaNbar[2] + 5/576 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] + 1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] + 5/576 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] + 1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] + 5/576 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] + 1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] + 1/576 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/576 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/576 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) + -1/288 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + -1/288 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + -1/288 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + -13/384 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[mif1,0] * self.ydbar[mif2,0] + 1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[mif1,0] * self.ydbar[mif2,0] + -1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[mif2,0] + -13/384 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[mif1,1] * self.ydbar[mif2,0] + 1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[mif1,1] * self.ydbar[mif2,0] + -1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[mif2,0] + -13/384 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[mif1,2] * self.ydbar[mif2,0] + 1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[mif1,2] * self.ydbar[mif2,0] + -1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[mif2,0] + -13/384 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[mif1,0] * self.ydbar[mif2,1] + 1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[mif1,0] * self.ydbar[mif2,1] + -1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[mif2,1] + -13/384 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[mif1,1] * self.ydbar[mif2,1] + 1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[mif1,1] * self.ydbar[mif2,1] + -1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[mif2,1] + -13/384 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[mif1,2] * self.ydbar[mif2,1] + 1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[mif1,2] * self.ydbar[mif2,1] + -1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[mif2,1] + -13/384 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[mif1,0] * self.ydbar[mif2,2] + 1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[mif1,0] * self.ydbar[mif2,2] + -1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[mif2,2] + -13/384 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[mif1,1] * self.ydbar[mif2,2] + 1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[mif1,1] * self.ydbar[mif2,2] + -1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[mif2,2] + -13/384 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[mif1,2] * self.ydbar[mif2,2] + 1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[mif1,2] * self.ydbar[mif2,2] + -1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[mif2,2])

    def alphaOHq3(self, mif1,mif2):
        return (-1/160 * (self.g2)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -5/1152 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[0] * self.lambdaNbar[0] + -1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[0] * self.lambdaNbar[0] + -5/1152 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[1] * self.lambdaNbar[1] + -1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[1] * self.lambdaNbar[1] + -5/1152 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[2] * self.lambdaNbar[2] + -1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[2] * self.lambdaNbar[2] + 1/96 * (self.g2)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] + 1/96 * (self.g2)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] + 1/96 * (self.g2)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] + 1/192 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/192 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/192 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) + -5/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[mif1,0] * self.ydbar[mif2,0] + -5/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[mif1,1] * self.ydbar[mif2,0] + -5/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[mif1,2] * self.ydbar[mif2,0] + -5/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[mif1,0] * self.ydbar[mif2,1] + -5/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[mif1,1] * self.ydbar[mif2,1] + -5/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[mif1,2] * self.ydbar[mif2,1] + -5/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[mif1,0] * self.ydbar[mif2,2] + -5/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[mif1,1] * self.ydbar[mif2,2] + -5/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[mif1,2] * self.ydbar[mif2,2])

    def alphaOHu(self, mif1,mif2):
        return (-5/216 * (self.g1)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -5/864 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[0] * self.lambdaNbar[0] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[0] * self.lambdaNbar[0] + -5/864 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[1] * self.lambdaNbar[1] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[1] * self.lambdaNbar[1] + -5/864 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[2] * self.lambdaNbar[2] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[2] * self.lambdaNbar[2] + 5/144 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] + 1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] + 5/144 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] + 1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] + 5/144 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] + 1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] + 1/144 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/144 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/144 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) + -1/72 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + -1/72 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + -1/72 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)))

    def alphaOHd(self, mif1,mif2):
        return (5/432 * (self.g1)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 5/1728 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[0] * self.lambdaNbar[0] + 1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[0] * self.lambdaNbar[0] + 5/1728 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[1] * self.lambdaNbar[1] + 1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[1] * self.lambdaNbar[1] + 5/1728 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[2] * self.lambdaNbar[2] + 1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[2] * self.lambdaNbar[2] + -5/288 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] + -5/288 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] + -5/288 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] + -1/2 * (self.MQ5)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif1] + -73/6912 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif1] + -3/256 * (self.g2)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif1] + 5/384 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif1] + 19/384 * (self.g1)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif1] + 9/128 * (self.g2)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif1] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif1] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif1] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif1] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif1] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif1] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif1] + 1/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[mif1] + 1/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[mif1] + 3/32 * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[mif1] + 1/16 * self.invepsilonbar * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[mif1] + 1/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[mif1] + 1/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[mif1] + 3/32 * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[mif1] + 1/16 * self.invepsilonbar * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[mif1] + 1/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.lambdaQ5bar[mif1] + 1/8 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.lambdaQ5bar[mif1] + 3/32 * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.lambdaQ5bar[mif1] + 1/16 * self.invepsilonbar * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.lambdaQ5bar[mif1] + -1/288 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) + -1/288 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + -1/288 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/144 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + 1/144 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + 1/144 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + -19/384 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + -9/128 * (self.g2)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + -1/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[mif1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + -1/16 * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[mif1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + -1/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[mif1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + -1/16 * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[mif1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + -1/8 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.lambdaQ5bar[mif1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + -1/16 * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.lambdaQ5bar[mif1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[mif1] * self.yd[0,mif2] * self.ydbar[0,0] + -1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[mif1] * self.yd[0,mif2] * self.ydbar[0,0] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[mif1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.ydbar[0,0] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[mif1] * self.yd[0,mif2] * self.ydbar[0,1] + -1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[mif1] * self.yd[0,mif2] * self.ydbar[0,1] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[mif1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.ydbar[0,1] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[mif1] * self.yd[0,mif2] * self.ydbar[0,2] + -1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[mif1] * self.yd[0,mif2] * self.ydbar[0,2] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[mif1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.ydbar[0,2] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.ydbar[0,mif1] + -1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.ydbar[0,mif1] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,mif1] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,mif1] + -1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,mif1] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,mif1] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,mif1] + -1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,mif1] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,mif1] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[mif1] * self.yd[1,mif2] * self.ydbar[1,0] + -1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[mif1] * self.yd[1,mif2] * self.ydbar[1,0] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[mif1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.ydbar[1,0] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[mif1] * self.yd[1,mif2] * self.ydbar[1,1] + -1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[mif1] * self.yd[1,mif2] * self.ydbar[1,1] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[mif1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.ydbar[1,1] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[mif1] * self.yd[1,mif2] * self.ydbar[1,2] + -1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[mif1] * self.yd[1,mif2] * self.ydbar[1,2] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[mif1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.ydbar[1,2] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.ydbar[1,mif1] + -1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.ydbar[1,mif1] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,mif1] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,mif1] + -1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,mif1] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,mif1] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,mif1] + -1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,mif1] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,mif1] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[mif1] * self.yd[2,mif2] * self.ydbar[2,0] + -1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[mif1] * self.yd[2,mif2] * self.ydbar[2,0] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[mif1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.ydbar[2,0] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[mif1] * self.yd[2,mif2] * self.ydbar[2,1] + -1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[mif1] * self.yd[2,mif2] * self.ydbar[2,1] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[mif1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.ydbar[2,1] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[mif1] * self.yd[2,mif2] * self.ydbar[2,2] + -1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[mif1] * self.yd[2,mif2] * self.ydbar[2,2] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[mif1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.ydbar[2,2] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[2,0] * self.ydbar[2,mif1] + -1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[2,0] * self.ydbar[2,mif1] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,mif1] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,mif1] + -1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,mif1] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,mif1] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,mif1] + -1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,mif1] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,mif1])

    def alphaOHud(self, mif1,mif2):
        return (1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yubar[0,mif1] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yubar[0,mif1] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yubar[0,mif1] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yubar[0,mif1] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yubar[0,mif1] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yubar[0,mif1] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yubar[0,mif1] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yubar[0,mif1] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yubar[0,mif1] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yubar[1,mif1] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yubar[1,mif1] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yubar[1,mif1] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yubar[1,mif1] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yubar[1,mif1] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yubar[1,mif1] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yubar[1,mif1] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yubar[1,mif1] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yubar[1,mif1] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[2,0] * self.yubar[2,mif1] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[2,0] * self.yubar[2,mif1] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yubar[2,mif1] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[2,1] * self.yubar[2,mif1] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[2,1] * self.yubar[2,mif1] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.yubar[2,mif1] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[2,2] * self.yubar[2,mif1] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[2,2] * self.yubar[2,mif1] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.yubar[2,mif1])

    def alphaOHl1(self, mif1,mif2):
        return (5/288 * (self.g1)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 5/1152 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[0] * self.lambdaNbar[0] + 1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[0] * self.lambdaNbar[0] + 5/1152 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[1] * self.lambdaNbar[1] + 1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[1] * self.lambdaNbar[1] + 5/1152 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[2] * self.lambdaNbar[2] + 1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[2] * self.lambdaNbar[2] + 1/4 * (self.MN)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] + 121/4608 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] + 33/512 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] + 11/768 * (self.g1)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] + 9/256 * (self.g2)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] + -21/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[mif2] * self.lambdaNbar[0] * self.lambdaNbar[mif1] + -7/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[mif2] * self.lambdaNbar[0] * self.lambdaNbar[mif1] + -3/128 * (self.MN)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[mif2] * self.lambdaNbar[0] * self.lambdaNbar[mif1] + -1/64 * self.invepsilonbar * (self.MN)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[mif2] * self.lambdaNbar[0] * self.lambdaNbar[mif1] + -21/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[mif2] * self.lambdaNbar[1] * self.lambdaNbar[mif1] + -7/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[mif2] * self.lambdaNbar[1] * self.lambdaNbar[mif1] + -3/128 * (self.MN)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[mif2] * self.lambdaNbar[1] * self.lambdaNbar[mif1] + -1/64 * self.invepsilonbar * (self.MN)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[mif2] * self.lambdaNbar[1] * self.lambdaNbar[mif1] + -21/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaN[mif2] * self.lambdaNbar[2] * self.lambdaNbar[mif1] + -7/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaN[mif2] * self.lambdaNbar[2] * self.lambdaNbar[mif1] + -3/128 * (self.MN)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaN[mif2] * self.lambdaNbar[2] * self.lambdaNbar[mif1] + -1/64 * self.invepsilonbar * (self.MN)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaN[mif2] * self.lambdaNbar[2] * self.lambdaNbar[mif1] + -5/192 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] + -3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.lambdaQ5[0] * self.lambdaQ5bar[0] + -3/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.lambdaQ5[0] * self.lambdaQ5bar[0] + -5/192 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] + -3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.lambdaQ5[1] * self.lambdaQ5bar[1] + -3/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.lambdaQ5[1] * self.lambdaQ5bar[1] + -5/192 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] + -3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.lambdaQ5[2] * self.lambdaQ5bar[2] + -3/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.lambdaQ5[2] * self.lambdaQ5bar[2] + -1/192 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) + -1/192 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + -1/192 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) + -11/768 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + -9/256 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 7/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[mif2] * self.lambdaNbar[0] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/64 * (self.MN)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[mif2] * self.lambdaNbar[0] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 7/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[mif2] * self.lambdaNbar[1] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/64 * (self.MN)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[mif2] * self.lambdaNbar[1] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 7/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaN[mif2] * self.lambdaNbar[2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/64 * (self.MN)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaN[mif2] * self.lambdaNbar[2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/96 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + 3/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + 1/96 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + 3/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + 1/96 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + 3/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[0] * self.yl[mif1,0] * self.ylbar[0,0] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[0] * self.yl[mif1,0] * self.ylbar[0,0] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[0,0] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[0] * self.yl[mif1,1] * self.ylbar[0,1] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[0] * self.yl[mif1,1] * self.ylbar[0,1] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[0,1] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[0] * self.yl[mif1,2] * self.ylbar[0,2] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[0] * self.yl[mif1,2] * self.ylbar[0,2] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[0,2] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[1] * self.yl[mif1,0] * self.ylbar[1,0] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[1] * self.yl[mif1,0] * self.ylbar[1,0] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[1,0] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[1] * self.yl[mif1,1] * self.ylbar[1,1] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[1] * self.yl[mif1,1] * self.ylbar[1,1] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[1,1] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[1] * self.yl[mif1,2] * self.ylbar[1,2] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[1] * self.yl[mif1,2] * self.ylbar[1,2] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[1,2] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[2] * self.yl[mif1,0] * self.ylbar[2,0] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[2] * self.yl[mif1,0] * self.ylbar[2,0] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[2,0] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[2] * self.yl[mif1,1] * self.ylbar[2,1] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[2] * self.yl[mif1,1] * self.ylbar[2,1] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[2,1] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[2] * self.yl[mif1,2] * self.ylbar[2,2] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[2] * self.yl[mif1,2] * self.ylbar[2,2] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[2,2] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,0] * self.ylbar[mif2,0] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,0] * self.ylbar[mif2,0] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[mif2,0] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[1,0] * self.ylbar[mif2,0] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[1,0] * self.ylbar[mif2,0] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[mif2,0] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[2,0] * self.ylbar[mif2,0] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[2,0] * self.ylbar[mif2,0] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[mif2,0] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,1] * self.ylbar[mif2,1] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,1] * self.ylbar[mif2,1] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[mif2,1] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[1,1] * self.ylbar[mif2,1] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[1,1] * self.ylbar[mif2,1] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[mif2,1] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[2,1] * self.ylbar[mif2,1] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[2,1] * self.ylbar[mif2,1] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[mif2,1] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,2] * self.ylbar[mif2,2] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,2] * self.ylbar[mif2,2] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[mif2,2] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[1,2] * self.ylbar[mif2,2] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[1,2] * self.ylbar[mif2,2] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[mif2,2] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[2,2] * self.ylbar[mif2,2] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[2,2] * self.ylbar[mif2,2] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[mif2,2])

    def alphaOHl3(self, mif1,mif2):
        return (-1/160 * (self.g2)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -5/1152 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[0] * self.lambdaNbar[0] + -1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[0] * self.lambdaNbar[0] + -5/1152 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[1] * self.lambdaNbar[1] + -1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[1] * self.lambdaNbar[1] + -5/1152 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[2] * self.lambdaNbar[2] + -1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[2] * self.lambdaNbar[2] + -1/4 * (self.MN)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] + -11/512 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] + 77/4608 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] + -3/256 * (self.g1)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] + 7/768 * (self.g2)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] + 7/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[mif2] * self.lambdaNbar[0] * self.lambdaNbar[mif1] + 5/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[mif2] * self.lambdaNbar[0] * self.lambdaNbar[mif1] + 3/128 * (self.MN)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[mif2] * self.lambdaNbar[0] * self.lambdaNbar[mif1] + 1/64 * self.invepsilonbar * (self.MN)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[mif2] * self.lambdaNbar[0] * self.lambdaNbar[mif1] + 7/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[mif2] * self.lambdaNbar[1] * self.lambdaNbar[mif1] + 5/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[mif2] * self.lambdaNbar[1] * self.lambdaNbar[mif1] + 3/128 * (self.MN)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[mif2] * self.lambdaNbar[1] * self.lambdaNbar[mif1] + 1/64 * self.invepsilonbar * (self.MN)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[mif2] * self.lambdaNbar[1] * self.lambdaNbar[mif1] + 7/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaN[mif2] * self.lambdaNbar[2] * self.lambdaNbar[mif1] + 5/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaN[mif2] * self.lambdaNbar[2] * self.lambdaNbar[mif1] + 3/128 * (self.MN)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaN[mif2] * self.lambdaNbar[2] * self.lambdaNbar[mif1] + 1/64 * self.invepsilonbar * (self.MN)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaN[mif2] * self.lambdaNbar[2] * self.lambdaNbar[mif1] + 1/96 * (self.g2)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.lambdaQ5[0] * self.lambdaQ5bar[0] + 3/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.lambdaQ5[0] * self.lambdaQ5bar[0] + 1/96 * (self.g2)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.lambdaQ5[1] * self.lambdaQ5bar[1] + 3/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.lambdaQ5[1] * self.lambdaQ5bar[1] + 1/96 * (self.g2)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.lambdaQ5[2] * self.lambdaQ5bar[2] + 3/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.lambdaQ5[2] * self.lambdaQ5bar[2] + 1/192 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/192 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/192 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 3/256 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + -7/768 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + -5/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[mif2] * self.lambdaNbar[0] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + -1/64 * (self.MN)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[mif2] * self.lambdaNbar[0] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + -5/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[mif2] * self.lambdaNbar[1] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + -1/64 * (self.MN)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[mif2] * self.lambdaNbar[1] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + -5/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaN[mif2] * self.lambdaNbar[2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + -1/64 * (self.MN)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaN[mif2] * self.lambdaNbar[2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + -3/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + -3/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + -3/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[0] * self.yl[mif1,0] * self.ylbar[0,0] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[0] * self.yl[mif1,0] * self.ylbar[0,0] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[0,0] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[0] * self.yl[mif1,1] * self.ylbar[0,1] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[0] * self.yl[mif1,1] * self.ylbar[0,1] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[0,1] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[0] * self.yl[mif1,2] * self.ylbar[0,2] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[0] * self.yl[mif1,2] * self.ylbar[0,2] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[0,2] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[1] * self.yl[mif1,0] * self.ylbar[1,0] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[1] * self.yl[mif1,0] * self.ylbar[1,0] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[1,0] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[1] * self.yl[mif1,1] * self.ylbar[1,1] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[1] * self.yl[mif1,1] * self.ylbar[1,1] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[1,1] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[1] * self.yl[mif1,2] * self.ylbar[1,2] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[1] * self.yl[mif1,2] * self.ylbar[1,2] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[1,2] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[2] * self.yl[mif1,0] * self.ylbar[2,0] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[2] * self.yl[mif1,0] * self.ylbar[2,0] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[2,0] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[2] * self.yl[mif1,1] * self.ylbar[2,1] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[2] * self.yl[mif1,1] * self.ylbar[2,1] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[2,1] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[2] * self.yl[mif1,2] * self.ylbar[2,2] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[2] * self.yl[mif1,2] * self.ylbar[2,2] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[2,2] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,0] * self.ylbar[mif2,0] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,0] * self.ylbar[mif2,0] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[mif2,0] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[1,0] * self.ylbar[mif2,0] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[1,0] * self.ylbar[mif2,0] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[mif2,0] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[2,0] * self.ylbar[mif2,0] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[2,0] * self.ylbar[mif2,0] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[mif2,0] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,1] * self.ylbar[mif2,1] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,1] * self.ylbar[mif2,1] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[mif2,1] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[1,1] * self.ylbar[mif2,1] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[1,1] * self.ylbar[mif2,1] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[mif2,1] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[2,1] * self.ylbar[mif2,1] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[2,1] * self.ylbar[mif2,1] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[mif2,1] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,2] * self.ylbar[mif2,2] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,2] * self.ylbar[mif2,2] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[mif2,2] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[1,2] * self.ylbar[mif2,2] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[1,2] * self.ylbar[mif2,2] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[mif2,2] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[2,2] * self.ylbar[mif2,2] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[2,2] * self.ylbar[mif2,2] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[mif2,2])

    def alphaOHe(self, mif1,mif2):
        return (5/144 * (self.g1)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 5/576 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[0] * self.lambdaNbar[0] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[0] * self.lambdaNbar[0] + 5/576 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[1] * self.lambdaNbar[1] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[1] * self.lambdaNbar[1] + 5/576 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[2] * self.lambdaNbar[2] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[2] * self.lambdaNbar[2] + -5/96 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] + -5/96 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] + -5/96 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] + -1/96 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) + -1/96 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + -1/96 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/48 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + 1/48 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + 1/48 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + -5/384 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,mif2] * self.ylbar[0,mif1] + -1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,mif2] * self.ylbar[0,mif1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,mif1] + -5/384 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,mif2] * self.ylbar[0,mif1] + -1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,mif2] * self.ylbar[0,mif1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[0,mif1] + -5/384 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,mif2] * self.ylbar[0,mif1] + -1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,mif2] * self.ylbar[0,mif1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[0,mif1] + -5/384 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,mif2] * self.ylbar[1,mif1] + -1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,mif2] * self.ylbar[1,mif1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[1,mif1] + -5/384 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,mif2] * self.ylbar[1,mif1] + -1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,mif2] * self.ylbar[1,mif1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,mif1] + -5/384 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,mif2] * self.ylbar[1,mif1] + -1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,mif2] * self.ylbar[1,mif1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[1,mif1] + -5/384 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,mif2] * self.ylbar[2,mif1] + -1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,mif2] * self.ylbar[2,mif1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[2,mif1] + -5/384 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,mif2] * self.ylbar[2,mif1] + -1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,mif2] * self.ylbar[2,mif1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[2,mif1] + -5/384 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,mif2] * self.ylbar[2,mif1] + -1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,mif2] * self.ylbar[2,mif1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,mif1])

    def alphaOuH(self, mif1,mif2):
        return (-5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[mif1,0] * self.ydbar[0,0] * self.yu[0,mif2] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[mif1,0] * self.ydbar[0,0] * self.yu[0,mif2] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[0,0] * self.yu[0,mif2] + -5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[mif1,1] * self.ydbar[0,0] * self.yu[0,mif2] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[mif1,1] * self.ydbar[0,0] * self.yu[0,mif2] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[0,0] * self.yu[0,mif2] + -5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[mif1,2] * self.ydbar[0,0] * self.yu[0,mif2] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[mif1,2] * self.ydbar[0,0] * self.yu[0,mif2] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[0,0] * self.yu[0,mif2] + -5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[mif1,0] * self.ydbar[0,1] * self.yu[0,mif2] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[mif1,0] * self.ydbar[0,1] * self.yu[0,mif2] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[0,1] * self.yu[0,mif2] + -5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[mif1,1] * self.ydbar[0,1] * self.yu[0,mif2] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[mif1,1] * self.ydbar[0,1] * self.yu[0,mif2] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[0,1] * self.yu[0,mif2] + -5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[mif1,2] * self.ydbar[0,1] * self.yu[0,mif2] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[mif1,2] * self.ydbar[0,1] * self.yu[0,mif2] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[0,1] * self.yu[0,mif2] + -5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[mif1,0] * self.ydbar[0,2] * self.yu[0,mif2] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[mif1,0] * self.ydbar[0,2] * self.yu[0,mif2] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[0,2] * self.yu[0,mif2] + -5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[mif1,1] * self.ydbar[0,2] * self.yu[0,mif2] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[mif1,1] * self.ydbar[0,2] * self.yu[0,mif2] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[0,2] * self.yu[0,mif2] + -5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yu[0,mif2] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yu[0,mif2] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[0,2] * self.yu[0,mif2] + -5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[mif1,0] * self.ydbar[1,0] * self.yu[1,mif2] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[mif1,0] * self.ydbar[1,0] * self.yu[1,mif2] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[1,0] * self.yu[1,mif2] + -5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[mif1,1] * self.ydbar[1,0] * self.yu[1,mif2] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[mif1,1] * self.ydbar[1,0] * self.yu[1,mif2] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[1,0] * self.yu[1,mif2] + -5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[mif1,2] * self.ydbar[1,0] * self.yu[1,mif2] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[mif1,2] * self.ydbar[1,0] * self.yu[1,mif2] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[1,0] * self.yu[1,mif2] + -5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[mif1,0] * self.ydbar[1,1] * self.yu[1,mif2] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[mif1,0] * self.ydbar[1,1] * self.yu[1,mif2] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[1,1] * self.yu[1,mif2] + -5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[mif1,1] * self.ydbar[1,1] * self.yu[1,mif2] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[mif1,1] * self.ydbar[1,1] * self.yu[1,mif2] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[1,1] * self.yu[1,mif2] + -5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[mif1,2] * self.ydbar[1,1] * self.yu[1,mif2] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[mif1,2] * self.ydbar[1,1] * self.yu[1,mif2] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[1,1] * self.yu[1,mif2] + -5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[mif1,0] * self.ydbar[1,2] * self.yu[1,mif2] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[mif1,0] * self.ydbar[1,2] * self.yu[1,mif2] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[1,2] * self.yu[1,mif2] + -5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[mif1,1] * self.ydbar[1,2] * self.yu[1,mif2] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[mif1,1] * self.ydbar[1,2] * self.yu[1,mif2] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[1,2] * self.yu[1,mif2] + -5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yu[1,mif2] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yu[1,mif2] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[1,2] * self.yu[1,mif2] + -5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[mif1,0] * self.ydbar[2,0] * self.yu[2,mif2] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[mif1,0] * self.ydbar[2,0] * self.yu[2,mif2] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[2,0] * self.yu[2,mif2] + -5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[mif1,1] * self.ydbar[2,0] * self.yu[2,mif2] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[mif1,1] * self.ydbar[2,0] * self.yu[2,mif2] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[2,0] * self.yu[2,mif2] + -5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[mif1,2] * self.ydbar[2,0] * self.yu[2,mif2] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[mif1,2] * self.ydbar[2,0] * self.yu[2,mif2] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[2,0] * self.yu[2,mif2] + -5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[mif1,0] * self.ydbar[2,1] * self.yu[2,mif2] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[mif1,0] * self.ydbar[2,1] * self.yu[2,mif2] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[2,1] * self.yu[2,mif2] + -5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[mif1,1] * self.ydbar[2,1] * self.yu[2,mif2] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[mif1,1] * self.ydbar[2,1] * self.yu[2,mif2] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[2,1] * self.yu[2,mif2] + -5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[mif1,2] * self.ydbar[2,1] * self.yu[2,mif2] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[mif1,2] * self.ydbar[2,1] * self.yu[2,mif2] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[2,1] * self.yu[2,mif2] + -5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[mif1,0] * self.ydbar[2,2] * self.yu[2,mif2] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[mif1,0] * self.ydbar[2,2] * self.yu[2,mif2] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[2,2] * self.yu[2,mif2] + -5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[mif1,1] * self.ydbar[2,2] * self.yu[2,mif2] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[mif1,1] * self.ydbar[2,2] * self.yu[2,mif2] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[2,2] * self.yu[2,mif2] + -5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yu[2,mif2] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yu[2,mif2] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[2,2] * self.yu[2,mif2] + -1/160 * (self.g2)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -5/576 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yu[mif1,mif2] + -1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yu[mif1,mif2] + 1/24 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yu[mif1,mif2] + -5/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[0])**(2) * (self.lambdaNbar[0])**(2) * self.yu[mif1,mif2] + -1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[0])**(2) * (self.lambdaNbar[0])**(2) * self.yu[mif1,mif2] + -5/576 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yu[mif1,mif2] + -1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yu[mif1,mif2] + 1/24 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yu[mif1,mif2] + -5/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[1] * self.lambdaNbar[0] * self.lambdaNbar[1] * self.yu[mif1,mif2] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[1] * self.lambdaNbar[0] * self.lambdaNbar[1] * self.yu[mif1,mif2] + -5/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[1])**(2) * (self.lambdaNbar[1])**(2) * self.yu[mif1,mif2] + -1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[1])**(2) * (self.lambdaNbar[1])**(2) * self.yu[mif1,mif2] + -5/576 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yu[mif1,mif2] + -1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yu[mif1,mif2] + 1/24 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yu[mif1,mif2] + -5/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[2] * self.lambdaNbar[0] * self.lambdaNbar[2] * self.yu[mif1,mif2] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[2] * self.lambdaNbar[0] * self.lambdaNbar[2] * self.yu[mif1,mif2] + -5/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[2] * self.lambdaNbar[1] * self.lambdaNbar[2] * self.yu[mif1,mif2] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[2] * self.lambdaNbar[1] * self.lambdaNbar[2] * self.yu[mif1,mif2] + -5/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[2])**(2) * (self.lambdaNbar[2])**(2) * self.yu[mif1,mif2] + -1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[2])**(2) * (self.lambdaNbar[2])**(2) * self.yu[mif1,mif2] + 1/48 * (self.g2)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yu[mif1,mif2] + 1/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yu[mif1,mif2] + -5/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[0])**(2) * (self.lambdaQ5bar[0])**(2) * self.yu[mif1,mif2] + 1/48 * (self.g2)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yu[mif1,mif2] + 1/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yu[mif1,mif2] + -5/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * self.yu[mif1,mif2] + -5/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[1])**(2) * (self.lambdaQ5bar[1])**(2) * self.yu[mif1,mif2] + 1/48 * (self.g2)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yu[mif1,mif2] + 1/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yu[mif1,mif2] + -5/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * self.yu[mif1,mif2] + -5/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * self.yu[mif1,mif2] + -5/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[2])**(2) * (self.lambdaQ5bar[2])**(2) * self.yu[mif1,mif2] + 1/96 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[0])**(2) * (self.lambdaNbar[0])**(2) * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 1/96 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[1] * self.lambdaNbar[0] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[1])**(2) * (self.lambdaNbar[1])**(2) * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 1/96 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[2] * self.lambdaNbar[0] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[2] * self.lambdaNbar[1] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[2])**(2) * (self.lambdaNbar[2])**(2) * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,0] * self.ydbar[0,0] * self.yu[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,0] * self.ydbar[0,0] * self.yu[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] * self.yu[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,0] * self.yu[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,0] * self.yu[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,0] * self.yu[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,0] * self.yu[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,0] * self.yu[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,0] * self.yu[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,0] * self.ydbar[0,1] * self.yu[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,0] * self.ydbar[0,1] * self.yu[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,1] * self.yu[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,1] * self.yu[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,1] * self.yu[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] * self.yu[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,1] * self.yu[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,1] * self.yu[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,1] * self.yu[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.ydbar[0,2] * self.yu[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.ydbar[0,2] * self.yu[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,2] * self.yu[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,2] * self.yu[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,2] * self.yu[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,2] * self.yu[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,2] * self.yu[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,2] * self.yu[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] * self.yu[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[1,0] * self.ydbar[1,0] * self.yu[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[1,0] * self.ydbar[1,0] * self.yu[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] * self.yu[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,0] * self.yu[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,0] * self.yu[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,0] * self.yu[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,0] * self.yu[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,0] * self.yu[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,0] * self.yu[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[1,0] * self.ydbar[1,1] * self.yu[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[1,0] * self.ydbar[1,1] * self.yu[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,1] * self.yu[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,1] * self.yu[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,1] * self.yu[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] * self.yu[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,1] * self.yu[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,1] * self.yu[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,1] * self.yu[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.ydbar[1,2] * self.yu[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.ydbar[1,2] * self.yu[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,2] * self.yu[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,2] * self.yu[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,2] * self.yu[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,2] * self.yu[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,2] * self.yu[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,2] * self.yu[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,2] * self.yu[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[2,0] * self.ydbar[2,0] * self.yu[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[2,0] * self.ydbar[2,0] * self.yu[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] * self.yu[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,0] * self.yu[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,0] * self.yu[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,0] * self.yu[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,0] * self.yu[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,0] * self.yu[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,0] * self.yu[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[2,0] * self.ydbar[2,1] * self.yu[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[2,0] * self.ydbar[2,1] * self.yu[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,1] * self.yu[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,1] * self.yu[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,1] * self.yu[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,1] * self.yu[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,1] * self.yu[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,1] * self.yu[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,1] * self.yu[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[2,0] * self.ydbar[2,2] * self.yu[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[2,0] * self.ydbar[2,2] * self.yu[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,2] * self.yu[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,2] * self.yu[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,2] * self.yu[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,2] * self.yu[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,2] * self.yu[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,2] * self.yu[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,2] * self.yu[mif1,mif2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,0] * self.ylbar[0,0] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,0] * self.ylbar[0,0] * self.yu[mif1,mif2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] * self.yu[mif1,mif2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,0] * self.ylbar[0,0] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,0] * self.ylbar[0,0] * self.yu[mif1,mif2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,0] * self.yu[mif1,mif2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,0] * self.ylbar[0,0] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,0] * self.ylbar[0,0] * self.yu[mif1,mif2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,0] * self.yu[mif1,mif2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,1] * self.ylbar[0,1] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,1] * self.ylbar[0,1] * self.yu[mif1,mif2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] * self.yu[mif1,mif2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,1] * self.ylbar[0,1] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,1] * self.ylbar[0,1] * self.yu[mif1,mif2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,1] * self.yu[mif1,mif2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,1] * self.ylbar[0,1] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,1] * self.ylbar[0,1] * self.yu[mif1,mif2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,1] * self.yu[mif1,mif2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,2] * self.ylbar[0,2] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,2] * self.ylbar[0,2] * self.yu[mif1,mif2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] * self.yu[mif1,mif2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,2] * self.ylbar[0,2] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,2] * self.ylbar[0,2] * self.yu[mif1,mif2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,2] * self.yu[mif1,mif2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,2] * self.ylbar[0,2] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,2] * self.ylbar[0,2] * self.yu[mif1,mif2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,2] * self.yu[mif1,mif2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,0] * self.ylbar[1,0] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,0] * self.ylbar[1,0] * self.yu[mif1,mif2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[1,0] * self.yu[mif1,mif2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,0] * self.ylbar[1,0] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,0] * self.ylbar[1,0] * self.yu[mif1,mif2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] * self.yu[mif1,mif2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,0] * self.ylbar[1,0] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,0] * self.ylbar[1,0] * self.yu[mif1,mif2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,0] * self.yu[mif1,mif2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,1] * self.ylbar[1,1] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,1] * self.ylbar[1,1] * self.yu[mif1,mif2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[1,1] * self.yu[mif1,mif2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,1] * self.ylbar[1,1] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,1] * self.ylbar[1,1] * self.yu[mif1,mif2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] * self.yu[mif1,mif2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,1] * self.ylbar[1,1] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,1] * self.ylbar[1,1] * self.yu[mif1,mif2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,1] * self.yu[mif1,mif2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,2] * self.ylbar[1,2] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,2] * self.ylbar[1,2] * self.yu[mif1,mif2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[1,2] * self.yu[mif1,mif2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,2] * self.ylbar[1,2] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,2] * self.ylbar[1,2] * self.yu[mif1,mif2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,2] * self.yu[mif1,mif2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,2] * self.ylbar[1,2] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,2] * self.ylbar[1,2] * self.yu[mif1,mif2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,2] * self.yu[mif1,mif2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,0] * self.ylbar[2,0] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,0] * self.ylbar[2,0] * self.yu[mif1,mif2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[2,0] * self.yu[mif1,mif2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,0] * self.ylbar[2,0] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,0] * self.ylbar[2,0] * self.yu[mif1,mif2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[2,0] * self.yu[mif1,mif2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,0] * self.ylbar[2,0] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,0] * self.ylbar[2,0] * self.yu[mif1,mif2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] * self.yu[mif1,mif2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,1] * self.ylbar[2,1] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,1] * self.ylbar[2,1] * self.yu[mif1,mif2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[2,1] * self.yu[mif1,mif2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,1] * self.ylbar[2,1] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,1] * self.ylbar[2,1] * self.yu[mif1,mif2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[2,1] * self.yu[mif1,mif2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,1] * self.ylbar[2,1] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,1] * self.ylbar[2,1] * self.yu[mif1,mif2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,1] * self.yu[mif1,mif2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,2] * self.ylbar[2,2] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,2] * self.ylbar[2,2] * self.yu[mif1,mif2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[2,2] * self.yu[mif1,mif2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,2] * self.ylbar[2,2] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,2] * self.ylbar[2,2] * self.yu[mif1,mif2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[2,2] * self.yu[mif1,mif2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,2] * self.ylbar[2,2] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,2] * self.ylbar[2,2] * self.yu[mif1,mif2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,2] * self.yu[mif1,mif2])

    def alphaOdH(self, mif1,mif2):
        return (1/2 * (self.MQ5)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[mif1,0] + -1/32 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[mif1,0] + -1/16 * (self.g2)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[mif1,0] + -3/32 * (self.g1)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[mif1,0] + -3/16 * (self.g2)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[mif1,0] + 19/32 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[mif1,0] + 7/16 * self.invepsilonbar * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[mif1,0] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[mif1,0] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[mif1,0] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[mif1,0] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[mif1,0] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[mif1,0] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[mif1,0] + -1/4 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[mif2] * (self.lambdaQ5bar[0])**(2) * self.yd[mif1,0] + -7/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[mif2] * (self.lambdaQ5bar[0])**(2) * self.yd[mif1,0] + -11/64 * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[mif2] * (self.lambdaQ5bar[0])**(2) * self.yd[mif1,0] + -1/8 * self.invepsilonbar * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[mif2] * (self.lambdaQ5bar[0])**(2) * self.yd[mif1,0] + -1/4 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * self.yd[mif1,0] + -7/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * self.yd[mif1,0] + -11/64 * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * self.yd[mif1,0] + -1/8 * self.invepsilonbar * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * self.yd[mif1,0] + -1/4 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * self.yd[mif1,0] + -7/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * self.yd[mif1,0] + -11/64 * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * self.yd[mif1,0] + -1/8 * self.invepsilonbar * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * self.yd[mif1,0] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] + 3/32 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] + 3/16 * (self.g2)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] + -7/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] + 7/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[mif2] * (self.lambdaQ5bar[0])**(2) * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] + 1/8 * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[mif2] * (self.lambdaQ5bar[0])**(2) * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] + 7/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] + 1/8 * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] + 7/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] + 1/8 * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] + 1/2 * (self.MQ5)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[mif1,1] + -1/32 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[mif1,1] + -1/16 * (self.g2)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[mif1,1] + -3/32 * (self.g1)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[mif1,1] + -3/16 * (self.g2)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[mif1,1] + 19/32 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[mif1,1] + 7/16 * self.invepsilonbar * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[mif1,1] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[mif1,1] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[mif1,1] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[mif1,1] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[mif1,1] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[mif1,1] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[mif1,1] + -1/4 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * self.yd[mif1,1] + -7/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * self.yd[mif1,1] + -11/64 * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * self.yd[mif1,1] + -1/8 * self.invepsilonbar * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * self.yd[mif1,1] + -1/4 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[mif2] * (self.lambdaQ5bar[1])**(2) * self.yd[mif1,1] + -7/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[mif2] * (self.lambdaQ5bar[1])**(2) * self.yd[mif1,1] + -11/64 * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[mif2] * (self.lambdaQ5bar[1])**(2) * self.yd[mif1,1] + -1/8 * self.invepsilonbar * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[mif2] * (self.lambdaQ5bar[1])**(2) * self.yd[mif1,1] + -1/4 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * self.yd[mif1,1] + -7/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * self.yd[mif1,1] + -11/64 * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * self.yd[mif1,1] + -1/8 * self.invepsilonbar * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * self.yd[mif1,1] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] + 3/32 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] + 3/16 * (self.g2)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] + -7/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] + 7/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] + 1/8 * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] + 7/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[mif2] * (self.lambdaQ5bar[1])**(2) * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] + 1/8 * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[mif2] * (self.lambdaQ5bar[1])**(2) * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] + 7/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] + 1/8 * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] + 1/2 * (self.MQ5)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[mif1,2] + -1/32 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[mif1,2] + -1/16 * (self.g2)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[mif1,2] + -3/32 * (self.g1)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[mif1,2] + -3/16 * (self.g2)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[mif1,2] + 19/32 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[mif1,2] + 7/16 * self.invepsilonbar * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[mif1,2] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[mif1,2] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[mif1,2] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[mif1,2] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[mif1,2] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[mif1,2] + -3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[mif1,2] + -1/4 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * self.yd[mif1,2] + -7/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * self.yd[mif1,2] + -11/64 * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * self.yd[mif1,2] + -1/8 * self.invepsilonbar * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * self.yd[mif1,2] + -1/4 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * self.yd[mif1,2] + -7/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * self.yd[mif1,2] + -11/64 * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * self.yd[mif1,2] + -1/8 * self.invepsilonbar * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * self.yd[mif1,2] + -1/4 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5[mif2] * (self.lambdaQ5bar[2])**(2) * self.yd[mif1,2] + -7/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5[mif2] * (self.lambdaQ5bar[2])**(2) * self.yd[mif1,2] + -11/64 * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5[mif2] * (self.lambdaQ5bar[2])**(2) * self.yd[mif1,2] + -1/8 * self.invepsilonbar * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5[mif2] * (self.lambdaQ5bar[2])**(2) * self.yd[mif1,2] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] + 3/32 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] + 3/16 * (self.g2)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] + -7/16 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] + 7/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] + 1/8 * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] + 7/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] + 1/8 * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] + 7/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5[mif2] * (self.lambdaQ5bar[2])**(2) * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] + 1/8 * (self.MQ5)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5[mif2] * (self.lambdaQ5bar[2])**(2) * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] + -1/160 * (self.g2)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -5/576 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yd[mif1,mif2] + -1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yd[mif1,mif2] + 1/24 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yd[mif1,mif2] + -5/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[0])**(2) * (self.lambdaNbar[0])**(2) * self.yd[mif1,mif2] + -1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[0])**(2) * (self.lambdaNbar[0])**(2) * self.yd[mif1,mif2] + -5/576 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yd[mif1,mif2] + -1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yd[mif1,mif2] + 1/24 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yd[mif1,mif2] + -5/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[1] * self.lambdaNbar[0] * self.lambdaNbar[1] * self.yd[mif1,mif2] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[1] * self.lambdaNbar[0] * self.lambdaNbar[1] * self.yd[mif1,mif2] + -5/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[1])**(2) * (self.lambdaNbar[1])**(2) * self.yd[mif1,mif2] + -1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[1])**(2) * (self.lambdaNbar[1])**(2) * self.yd[mif1,mif2] + -5/576 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yd[mif1,mif2] + -1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yd[mif1,mif2] + 1/24 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yd[mif1,mif2] + -5/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[2] * self.lambdaNbar[0] * self.lambdaNbar[2] * self.yd[mif1,mif2] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[2] * self.lambdaNbar[0] * self.lambdaNbar[2] * self.yd[mif1,mif2] + -5/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[2] * self.lambdaNbar[1] * self.lambdaNbar[2] * self.yd[mif1,mif2] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[2] * self.lambdaNbar[1] * self.lambdaNbar[2] * self.yd[mif1,mif2] + -5/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[2])**(2) * (self.lambdaNbar[2])**(2) * self.yd[mif1,mif2] + -1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[2])**(2) * (self.lambdaNbar[2])**(2) * self.yd[mif1,mif2] + 1/48 * (self.g2)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[mif1,mif2] + 1/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[mif1,mif2] + -5/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[0])**(2) * (self.lambdaQ5bar[0])**(2) * self.yd[mif1,mif2] + 1/48 * (self.g2)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[mif1,mif2] + 1/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[mif1,mif2] + -5/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * self.yd[mif1,mif2] + -5/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[1])**(2) * (self.lambdaQ5bar[1])**(2) * self.yd[mif1,mif2] + 1/48 * (self.g2)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[mif1,mif2] + 1/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[mif1,mif2] + -5/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * self.yd[mif1,mif2] + -5/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * self.yd[mif1,mif2] + -5/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[2])**(2) * (self.lambdaQ5bar[2])**(2) * self.yd[mif1,mif2] + 1/96 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[0])**(2) * (self.lambdaNbar[0])**(2) * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 1/96 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[1] * self.lambdaNbar[0] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[1])**(2) * (self.lambdaNbar[1])**(2) * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 1/96 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[2] * self.lambdaNbar[0] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[2] * self.lambdaNbar[1] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[2])**(2) * (self.lambdaNbar[2])**(2) * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[mif1,0] * self.ydbar[0,0] + 3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[mif1,0] * self.ydbar[0,0] + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[mif1,0] * self.ydbar[0,0] + 5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[mif1,0] * self.ydbar[0,0] + 3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[mif1,0] * self.ydbar[0,0] + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[mif1,0] * self.ydbar[0,0] + 5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[mif1,0] * self.ydbar[0,0] + 3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[mif1,0] * self.ydbar[0,0] + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[mif1,0] * self.ydbar[0,0] + 19/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] + 19/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,0] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,0] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,0] + 19/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,0] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,0] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,0] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[mif1,mif2] * self.ydbar[0,0] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[mif1,mif2] * self.ydbar[0,0] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[mif1,mif2] * self.ydbar[0,0] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[mif1,mif2] * self.ydbar[0,0] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[mif1,mif2] * self.ydbar[0,0] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[mif1,mif2] * self.ydbar[0,0] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[mif1,mif2] * self.ydbar[0,0] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[mif1,mif2] * self.ydbar[0,0] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[mif1,mif2] * self.ydbar[0,0] + 19/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,1] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,1] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,1] + 5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[mif1,1] * self.ydbar[0,1] + 3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[mif1,1] * self.ydbar[0,1] + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[mif1,1] * self.ydbar[0,1] + 5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[mif1,1] * self.ydbar[0,1] + 3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[mif1,1] * self.ydbar[0,1] + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[mif1,1] * self.ydbar[0,1] + 5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[mif1,1] * self.ydbar[0,1] + 3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[mif1,1] * self.ydbar[0,1] + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[mif1,1] * self.ydbar[0,1] + 19/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] + 19/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,1] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,1] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,1] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[mif1,mif2] * self.ydbar[0,1] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[mif1,mif2] * self.ydbar[0,1] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[mif1,mif2] * self.ydbar[0,1] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[mif1,mif2] * self.ydbar[0,1] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[mif1,mif2] * self.ydbar[0,1] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[mif1,mif2] * self.ydbar[0,1] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[mif1,mif2] * self.ydbar[0,1] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[mif1,mif2] * self.ydbar[0,1] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[mif1,mif2] * self.ydbar[0,1] + 19/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,2] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,2] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,2] + 19/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,2] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,2] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,2] + 5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[mif1,2] * self.ydbar[0,2] + 3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[mif1,2] * self.ydbar[0,2] + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[mif1,2] * self.ydbar[0,2] + 5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[mif1,2] * self.ydbar[0,2] + 3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[mif1,2] * self.ydbar[0,2] + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[mif1,2] * self.ydbar[0,2] + 5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[mif1,2] * self.ydbar[0,2] + 3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[mif1,2] * self.ydbar[0,2] + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[mif1,2] * self.ydbar[0,2] + 19/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[mif1,mif2] * self.ydbar[0,2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.yd[mif1,mif2] * self.ydbar[0,2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[mif1,mif2] * self.ydbar[0,2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[mif1,mif2] * self.ydbar[0,2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.yd[mif1,mif2] * self.ydbar[0,2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[mif1,mif2] * self.ydbar[0,2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[mif1,mif2] * self.ydbar[0,2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.yd[mif1,mif2] * self.ydbar[0,2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[mif1,mif2] * self.ydbar[0,2] + 5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[mif1,0] * self.ydbar[1,0] + 3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[mif1,0] * self.ydbar[1,0] + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[mif1,0] * self.ydbar[1,0] + 5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[mif1,0] * self.ydbar[1,0] + 3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[mif1,0] * self.ydbar[1,0] + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[mif1,0] * self.ydbar[1,0] + 5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[mif1,0] * self.ydbar[1,0] + 3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[mif1,0] * self.ydbar[1,0] + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[mif1,0] * self.ydbar[1,0] + 19/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] + 19/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,0] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,0] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,0] + 19/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,0] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,0] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,0] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[mif1,mif2] * self.ydbar[1,0] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[mif1,mif2] * self.ydbar[1,0] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[mif1,mif2] * self.ydbar[1,0] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[mif1,mif2] * self.ydbar[1,0] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[mif1,mif2] * self.ydbar[1,0] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[mif1,mif2] * self.ydbar[1,0] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[mif1,mif2] * self.ydbar[1,0] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[mif1,mif2] * self.ydbar[1,0] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[mif1,mif2] * self.ydbar[1,0] + 19/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,1] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,1] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,1] + 5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[mif1,1] * self.ydbar[1,1] + 3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[mif1,1] * self.ydbar[1,1] + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[mif1,1] * self.ydbar[1,1] + 5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[mif1,1] * self.ydbar[1,1] + 3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[mif1,1] * self.ydbar[1,1] + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[mif1,1] * self.ydbar[1,1] + 5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[mif1,1] * self.ydbar[1,1] + 3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[mif1,1] * self.ydbar[1,1] + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[mif1,1] * self.ydbar[1,1] + 19/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] + 19/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,1] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,1] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,1] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[mif1,mif2] * self.ydbar[1,1] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[mif1,mif2] * self.ydbar[1,1] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[mif1,mif2] * self.ydbar[1,1] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[mif1,mif2] * self.ydbar[1,1] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[mif1,mif2] * self.ydbar[1,1] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[mif1,mif2] * self.ydbar[1,1] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[mif1,mif2] * self.ydbar[1,1] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[mif1,mif2] * self.ydbar[1,1] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[mif1,mif2] * self.ydbar[1,1] + 19/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,2] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,2] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,2] + 19/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,2] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,2] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,2] + 5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[mif1,2] * self.ydbar[1,2] + 3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[mif1,2] * self.ydbar[1,2] + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[mif1,2] * self.ydbar[1,2] + 5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[mif1,2] * self.ydbar[1,2] + 3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[mif1,2] * self.ydbar[1,2] + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[mif1,2] * self.ydbar[1,2] + 5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[mif1,2] * self.ydbar[1,2] + 3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[mif1,2] * self.ydbar[1,2] + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[mif1,2] * self.ydbar[1,2] + 19/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[mif1,mif2] * self.ydbar[1,2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.yd[mif1,mif2] * self.ydbar[1,2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[mif1,mif2] * self.ydbar[1,2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[mif1,mif2] * self.ydbar[1,2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[1,1] * self.yd[mif1,mif2] * self.ydbar[1,2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[mif1,mif2] * self.ydbar[1,2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[mif1,mif2] * self.ydbar[1,2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[1,2] * self.yd[mif1,mif2] * self.ydbar[1,2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[mif1,mif2] * self.ydbar[1,2] + 5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[2,0] * self.yd[mif1,0] * self.ydbar[2,0] + 3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[2,0] * self.yd[mif1,0] * self.ydbar[2,0] + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yd[mif1,0] * self.ydbar[2,0] + 5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[2,1] * self.yd[mif1,0] * self.ydbar[2,0] + 3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[2,1] * self.yd[mif1,0] * self.ydbar[2,0] + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.yd[mif1,0] * self.ydbar[2,0] + 5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[2,2] * self.yd[mif1,0] * self.ydbar[2,0] + 3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[2,2] * self.yd[mif1,0] * self.ydbar[2,0] + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.yd[mif1,0] * self.ydbar[2,0] + 19/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] + 19/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,0] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,0] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,0] + 19/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,0] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,0] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,0] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[2,0] * self.yd[mif1,mif2] * self.ydbar[2,0] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[2,0] * self.yd[mif1,mif2] * self.ydbar[2,0] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yd[mif1,mif2] * self.ydbar[2,0] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[2,1] * self.yd[mif1,mif2] * self.ydbar[2,0] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[2,1] * self.yd[mif1,mif2] * self.ydbar[2,0] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.yd[mif1,mif2] * self.ydbar[2,0] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[2,2] * self.yd[mif1,mif2] * self.ydbar[2,0] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[2,2] * self.yd[mif1,mif2] * self.ydbar[2,0] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.yd[mif1,mif2] * self.ydbar[2,0] + 19/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,1] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,1] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,1] + 5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[2,0] * self.yd[mif1,1] * self.ydbar[2,1] + 3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[2,0] * self.yd[mif1,1] * self.ydbar[2,1] + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yd[mif1,1] * self.ydbar[2,1] + 5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[2,1] * self.yd[mif1,1] * self.ydbar[2,1] + 3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[2,1] * self.yd[mif1,1] * self.ydbar[2,1] + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.yd[mif1,1] * self.ydbar[2,1] + 5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[2,2] * self.yd[mif1,1] * self.ydbar[2,1] + 3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[2,2] * self.yd[mif1,1] * self.ydbar[2,1] + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.yd[mif1,1] * self.ydbar[2,1] + 19/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] + 19/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,1] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,1] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,1] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[2,0] * self.yd[mif1,mif2] * self.ydbar[2,1] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[2,0] * self.yd[mif1,mif2] * self.ydbar[2,1] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yd[mif1,mif2] * self.ydbar[2,1] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[2,1] * self.yd[mif1,mif2] * self.ydbar[2,1] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[2,1] * self.yd[mif1,mif2] * self.ydbar[2,1] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.yd[mif1,mif2] * self.ydbar[2,1] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[2,2] * self.yd[mif1,mif2] * self.ydbar[2,1] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[2,2] * self.yd[mif1,mif2] * self.ydbar[2,1] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.yd[mif1,mif2] * self.ydbar[2,1] + 19/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,2] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,2] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,2] + 19/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,2] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,2] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,2] + 5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[2,0] * self.yd[mif1,2] * self.ydbar[2,2] + 3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * self.yd[2,0] * self.yd[mif1,2] * self.ydbar[2,2] + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yd[mif1,2] * self.ydbar[2,2] + 5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[2,1] * self.yd[mif1,2] * self.ydbar[2,2] + 3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * self.yd[2,1] * self.yd[mif1,2] * self.ydbar[2,2] + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.yd[mif1,2] * self.ydbar[2,2] + 5/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[2,2] * self.yd[mif1,2] * self.ydbar[2,2] + 3/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * self.yd[2,2] * self.yd[mif1,2] * self.ydbar[2,2] + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.yd[mif1,2] * self.ydbar[2,2] + 19/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[2,0] * self.yd[mif1,mif2] * self.ydbar[2,2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[2,0] * self.yd[mif1,mif2] * self.ydbar[2,2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yd[mif1,mif2] * self.ydbar[2,2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[2,1] * self.yd[mif1,mif2] * self.ydbar[2,2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[2,1] * self.yd[mif1,mif2] * self.ydbar[2,2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.yd[mif1,mif2] * self.ydbar[2,2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[2,2] * self.yd[mif1,mif2] * self.ydbar[2,2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[2,2] * self.yd[mif1,mif2] * self.ydbar[2,2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.yd[mif1,mif2] * self.ydbar[2,2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[0,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[0,0] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[0,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[0,0] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[0,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[0,0] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[0,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[0,1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[0,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[0,1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[0,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[0,1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[0,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[0,2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[0,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[0,2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[0,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[0,2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[1,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[1,0] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[1,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[1,0] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[1,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[1,0] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[1,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[1,1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[1,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[1,1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[1,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[1,1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[1,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[1,2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[1,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[1,2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[1,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[1,2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[2,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[2,0] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[2,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[2,0] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[2,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[2,0] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[2,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[2,1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[2,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[2,1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[2,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[2,1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[2,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[2,2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[2,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[2,2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[2,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[2,2])

    def alphaOeH(self, mif1,mif2):
        return (-3/32 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,mif2] + -1/16 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,mif2] + 17/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[0])**(2) * self.lambdaNbar[0] * self.lambdaNbar[mif1] * self.yl[0,mif2] + 3/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[0])**(2) * self.lambdaNbar[0] * self.lambdaNbar[mif1] * self.yl[0,mif2] + 17/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[1] * self.lambdaNbar[1] * self.lambdaNbar[mif1] * self.yl[0,mif2] + 3/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[1] * self.lambdaNbar[1] * self.lambdaNbar[mif1] * self.yl[0,mif2] + 17/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[2] * self.lambdaNbar[2] * self.lambdaNbar[mif1] * self.yl[0,mif2] + 3/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[2] * self.lambdaNbar[2] * self.lambdaNbar[mif1] * self.yl[0,mif2] + 1/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + -3/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[0])**(2) * self.lambdaNbar[0] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + -3/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[1] * self.lambdaNbar[1] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + -3/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[2] * self.lambdaNbar[2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + -3/32 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[1,mif2] + -1/16 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[1,mif2] + 17/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[1] * self.lambdaNbar[0] * self.lambdaNbar[mif1] * self.yl[1,mif2] + 3/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[1] * self.lambdaNbar[0] * self.lambdaNbar[mif1] * self.yl[1,mif2] + 17/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[1])**(2) * self.lambdaNbar[1] * self.lambdaNbar[mif1] * self.yl[1,mif2] + 3/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[1])**(2) * self.lambdaNbar[1] * self.lambdaNbar[mif1] * self.yl[1,mif2] + 17/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[2] * self.lambdaNbar[2] * self.lambdaNbar[mif1] * self.yl[1,mif2] + 3/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[2] * self.lambdaNbar[2] * self.lambdaNbar[mif1] * self.yl[1,mif2] + 1/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + -3/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[1] * self.lambdaNbar[0] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + -3/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[1])**(2) * self.lambdaNbar[1] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + -3/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[2] * self.lambdaNbar[2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + -3/32 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[2,mif2] + -1/16 * self.invepsilonbar * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[2,mif2] + 17/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[2] * self.lambdaNbar[0] * self.lambdaNbar[mif1] * self.yl[2,mif2] + 3/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[2] * self.lambdaNbar[0] * self.lambdaNbar[mif1] * self.yl[2,mif2] + 17/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[2] * self.lambdaNbar[1] * self.lambdaNbar[mif1] * self.yl[2,mif2] + 3/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[2] * self.lambdaNbar[1] * self.lambdaNbar[mif1] * self.yl[2,mif2] + 17/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[2])**(2) * self.lambdaNbar[2] * self.lambdaNbar[mif1] * self.yl[2,mif2] + 3/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[2])**(2) * self.lambdaNbar[2] * self.lambdaNbar[mif1] * self.yl[2,mif2] + 1/16 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + -3/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[2] * self.lambdaNbar[0] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + -3/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[2] * self.lambdaNbar[1] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + -3/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[2])**(2) * self.lambdaNbar[2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + -1/160 * (self.g2)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -5/576 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[mif1,mif2] + -1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[mif1,mif2] + 1/24 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[mif1,mif2] + -5/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[0])**(2) * (self.lambdaNbar[0])**(2) * self.yl[mif1,mif2] + -1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[0])**(2) * (self.lambdaNbar[0])**(2) * self.yl[mif1,mif2] + -5/576 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[mif1,mif2] + -1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[mif1,mif2] + 1/24 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[mif1,mif2] + -5/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[1] * self.lambdaNbar[0] * self.lambdaNbar[1] * self.yl[mif1,mif2] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[1] * self.lambdaNbar[0] * self.lambdaNbar[1] * self.yl[mif1,mif2] + -5/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[1])**(2) * (self.lambdaNbar[1])**(2) * self.yl[mif1,mif2] + -1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[1])**(2) * (self.lambdaNbar[1])**(2) * self.yl[mif1,mif2] + -5/576 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[mif1,mif2] + -1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[mif1,mif2] + 1/24 * self.lam * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[mif1,mif2] + -5/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[2] * self.lambdaNbar[0] * self.lambdaNbar[2] * self.yl[mif1,mif2] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[2] * self.lambdaNbar[0] * self.lambdaNbar[2] * self.yl[mif1,mif2] + -5/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[2] * self.lambdaNbar[1] * self.lambdaNbar[2] * self.yl[mif1,mif2] + -1/16 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[2] * self.lambdaNbar[1] * self.lambdaNbar[2] * self.yl[mif1,mif2] + -5/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[2])**(2) * (self.lambdaNbar[2])**(2) * self.yl[mif1,mif2] + -1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[2])**(2) * (self.lambdaNbar[2])**(2) * self.yl[mif1,mif2] + 1/48 * (self.g2)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yl[mif1,mif2] + 1/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yl[mif1,mif2] + -5/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[0])**(2) * (self.lambdaQ5bar[0])**(2) * self.yl[mif1,mif2] + 1/48 * (self.g2)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yl[mif1,mif2] + 1/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yl[mif1,mif2] + -5/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.lambdaQ5bar[1] * self.yl[mif1,mif2] + -5/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[1])**(2) * (self.lambdaQ5bar[1])**(2) * self.yl[mif1,mif2] + 1/48 * (self.g2)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yl[mif1,mif2] + 1/8 * self.lam * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yl[mif1,mif2] + -5/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.lambdaQ5bar[2] * self.yl[mif1,mif2] + -5/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.lambdaQ5bar[2] * self.yl[mif1,mif2] + -5/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaQ5[2])**(2) * (self.lambdaQ5bar[2])**(2) * self.yl[mif1,mif2] + 1/96 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[0])**(2) * (self.lambdaNbar[0])**(2) * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 1/96 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[1] * self.lambdaNbar[0] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[1])**(2) * (self.lambdaNbar[1])**(2) * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 1/96 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[2] * self.lambdaNbar[0] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 1/16 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[2] * self.lambdaNbar[1] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaN[2])**(2) * (self.lambdaNbar[2])**(2) * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,0] * self.ydbar[0,0] * self.yl[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[0,0] * self.ydbar[0,0] * self.yl[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] * self.yl[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,0] * self.yl[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,0] * self.yl[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,0] * self.yl[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,0] * self.yl[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,0] * self.yl[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,0] * self.yl[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,0] * self.ydbar[0,1] * self.yl[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[0,0] * self.ydbar[0,1] * self.yl[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,1] * self.yl[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,1] * self.yl[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,1] * self.yl[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] * self.yl[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,1] * self.yl[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,1] * self.yl[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,1] * self.yl[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.ydbar[0,2] * self.yl[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[0,0] * self.ydbar[0,2] * self.yl[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,2] * self.yl[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,2] * self.yl[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[0,1] * self.ydbar[0,2] * self.yl[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,2] * self.yl[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,2] * self.yl[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[0,2] * self.ydbar[0,2] * self.yl[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] * self.yl[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[1,0] * self.ydbar[1,0] * self.yl[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[1,0] * self.ydbar[1,0] * self.yl[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] * self.yl[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,0] * self.yl[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,0] * self.yl[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,0] * self.yl[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,0] * self.yl[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,0] * self.yl[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,0] * self.yl[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[1,0] * self.ydbar[1,1] * self.yl[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[1,0] * self.ydbar[1,1] * self.yl[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,1] * self.yl[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,1] * self.yl[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,1] * self.yl[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] * self.yl[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,1] * self.yl[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,1] * self.yl[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,1] * self.yl[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.ydbar[1,2] * self.yl[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[1,0] * self.ydbar[1,2] * self.yl[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,2] * self.yl[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,2] * self.yl[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[1,1] * self.ydbar[1,2] * self.yl[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,2] * self.yl[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,2] * self.yl[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[1,2] * self.ydbar[1,2] * self.yl[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,2] * self.yl[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[2,0] * self.ydbar[2,0] * self.yl[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[2,0] * self.ydbar[2,0] * self.yl[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] * self.yl[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,0] * self.yl[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,0] * self.yl[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,0] * self.yl[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,0] * self.yl[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,0] * self.yl[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,0] * self.yl[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[2,0] * self.ydbar[2,1] * self.yl[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * self.yd[2,0] * self.ydbar[2,1] * self.yl[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,1] * self.yl[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,1] * self.yl[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,1] * self.yl[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,1] * self.yl[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,1] * self.yl[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,1] * self.yl[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,1] * self.yl[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[2,0] * self.ydbar[2,2] * self.yl[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * self.yd[2,0] * self.ydbar[2,2] * self.yl[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,2] * self.yl[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,2] * self.yl[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * self.yd[2,1] * self.ydbar[2,2] * self.yl[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,2] * self.yl[mif1,mif2] + -9/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,2] * self.yl[mif1,mif2] + 3/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[2,2] * self.ydbar[2,2] * self.yl[mif1,mif2] + -3/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,2] * self.yl[mif1,mif2] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,0] * self.yl[0,mif2] * self.ylbar[0,0] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,0] * self.yl[0,mif2] * self.ylbar[0,0] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,mif2] * self.ylbar[0,0] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[0,mif2] * self.yl[1,0] * self.ylbar[0,0] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[0,mif2] * self.yl[1,0] * self.ylbar[0,0] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[1,0] * self.ylbar[0,0] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[0,mif2] * self.yl[2,0] * self.ylbar[0,0] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[0,mif2] * self.yl[2,0] * self.ylbar[0,0] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[2,0] * self.ylbar[0,0] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,0] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[0,0] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[0,0] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[0,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[0,0] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[0,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[0,0] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[0,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[0,0] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,1] * self.yl[0,mif2] * self.ylbar[0,1] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,1] * self.yl[0,mif2] * self.ylbar[0,1] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[0,mif2] * self.ylbar[0,1] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[0,mif2] * self.yl[1,1] * self.ylbar[0,1] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[0,mif2] * self.yl[1,1] * self.ylbar[0,1] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[1,1] * self.ylbar[0,1] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[0,mif2] * self.yl[2,1] * self.ylbar[0,1] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[0,mif2] * self.yl[2,1] * self.ylbar[0,1] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[2,1] * self.ylbar[0,1] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,1] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[0,1] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[0,1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[0,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[0,1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[0,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[0,1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[0,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[0,1] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,2] * self.yl[0,mif2] * self.ylbar[0,2] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,2] * self.yl[0,mif2] * self.ylbar[0,2] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[0,mif2] * self.ylbar[0,2] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[0,mif2] * self.yl[1,2] * self.ylbar[0,2] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[0,mif2] * self.yl[1,2] * self.ylbar[0,2] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[1,2] * self.ylbar[0,2] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[0,mif2] * self.yl[2,2] * self.ylbar[0,2] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[0,mif2] * self.yl[2,2] * self.ylbar[0,2] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[2,2] * self.ylbar[0,2] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,2] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[0,2] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[0,2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[0,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[0,2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[0,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[0,2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[0,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[0,2] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,0] * self.yl[1,mif2] * self.ylbar[1,0] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,0] * self.yl[1,mif2] * self.ylbar[1,0] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,mif2] * self.ylbar[1,0] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[1,0] * self.yl[1,mif2] * self.ylbar[1,0] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[1,0] * self.yl[1,mif2] * self.ylbar[1,0] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,mif2] * self.ylbar[1,0] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[1,mif2] * self.yl[2,0] * self.ylbar[1,0] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[1,mif2] * self.yl[2,0] * self.ylbar[1,0] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[2,0] * self.ylbar[1,0] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[1,0] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,0] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[1,0] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[1,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[1,0] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[1,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[1,0] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[1,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[1,0] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,1] * self.yl[1,mif2] * self.ylbar[1,1] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,1] * self.yl[1,mif2] * self.ylbar[1,1] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,mif2] * self.ylbar[1,1] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[1,1] * self.yl[1,mif2] * self.ylbar[1,1] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[1,1] * self.yl[1,mif2] * self.ylbar[1,1] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[1,mif2] * self.ylbar[1,1] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[1,mif2] * self.yl[2,1] * self.ylbar[1,1] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[1,mif2] * self.yl[2,1] * self.ylbar[1,1] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[2,1] * self.ylbar[1,1] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[1,1] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,1] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[1,1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[1,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[1,1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[1,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[1,1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[1,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[1,1] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,2] * self.yl[1,mif2] * self.ylbar[1,2] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,2] * self.yl[1,mif2] * self.ylbar[1,2] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,mif2] * self.ylbar[1,2] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[1,2] * self.yl[1,mif2] * self.ylbar[1,2] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[1,2] * self.yl[1,mif2] * self.ylbar[1,2] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[1,mif2] * self.ylbar[1,2] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[1,mif2] * self.yl[2,2] * self.ylbar[1,2] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[1,mif2] * self.yl[2,2] * self.ylbar[1,2] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[2,2] * self.ylbar[1,2] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[1,2] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,2] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[1,2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[1,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[1,2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[1,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[1,2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[1,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[1,2] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,0] * self.yl[2,mif2] * self.ylbar[2,0] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,0] * self.yl[2,mif2] * self.ylbar[2,0] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,mif2] * self.ylbar[2,0] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[1,0] * self.yl[2,mif2] * self.ylbar[2,0] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[1,0] * self.yl[2,mif2] * self.ylbar[2,0] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,mif2] * self.ylbar[2,0] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[2,0] * self.yl[2,mif2] * self.ylbar[2,0] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[2,0] * self.yl[2,mif2] * self.ylbar[2,0] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,mif2] * self.ylbar[2,0] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[2,0] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[2,0] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,0] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[2,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[2,0] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[2,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[2,0] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[2,0] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[2,0] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,1] * self.yl[2,mif2] * self.ylbar[2,1] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,1] * self.yl[2,mif2] * self.ylbar[2,1] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,mif2] * self.ylbar[2,1] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[1,1] * self.yl[2,mif2] * self.ylbar[2,1] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[1,1] * self.yl[2,mif2] * self.ylbar[2,1] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,mif2] * self.ylbar[2,1] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[2,1] * self.yl[2,mif2] * self.ylbar[2,1] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[2,1] * self.yl[2,mif2] * self.ylbar[2,1] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[2,mif2] * self.ylbar[2,1] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[2,1] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[2,1] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[2,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[2,1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[2,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[2,1] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[2,1] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[2,1] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,2] * self.yl[2,mif2] * self.ylbar[2,2] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,2] * self.yl[2,mif2] * self.ylbar[2,2] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,mif2] * self.ylbar[2,2] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[1,2] * self.yl[2,mif2] * self.ylbar[2,2] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[1,2] * self.yl[2,mif2] * self.ylbar[2,2] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,mif2] * self.ylbar[2,2] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[2,2] * self.yl[2,mif2] * self.ylbar[2,2] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[2,2] * self.yl[2,mif2] * self.ylbar[2,2] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.yl[2,mif2] * self.ylbar[2,2] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[2,2] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[2,2] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[2,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[2,2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[2,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[2,2] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[2,2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[2,2])

    def alphaOqq1(self, mif1,mif2,mif3,mif4):
        return (-1/480 * (self.g3)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -5/5184 * (self.g1)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/720 * (self.g3)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4))

    def alphaOqq3(self, mif1,mif2,mif3,mif4):
        return (-1/480 * (self.g3)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -1/320 * (self.g2)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4))

    def alphaOuu(self, mif1,mif2,mif3,mif4):
        return (-1/240 * (self.g3)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -5/324 * (self.g1)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/720 * (self.g3)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4))

    def alphaOdd(self, mif1,mif2,mif3,mif4):
        return (-1/240 * (self.g3)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -5/1296 * (self.g1)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/720 * (self.g3)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 113/10368 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif1] + -1/216 * (self.g3)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif1] + -5/1152 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif1] + 1/384 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif1] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif1] + 1/72 * (self.g3)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif1] + -1/128 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif1] + 1/72 * (self.g3)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif3] + -1/128 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif3] + 113/10368 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] + -1/216 * (self.g3)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] + -5/1152 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] + 1/384 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] + -1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif1] * self.lambdaQ5bar[mif3] + -1/576 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + -1/576 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yd[0,mif2] * self.ydbar[0,mif1] + -1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yd[0,mif2] * self.ydbar[0,mif1] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.ydbar[0,mif1] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif1] * self.yd[0,mif4] * self.ydbar[0,mif3] + -1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif1] * self.yd[0,mif4] * self.ydbar[0,mif3] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[0,mif3] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yd[1,mif2] * self.ydbar[1,mif1] + -1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yd[1,mif2] * self.ydbar[1,mif1] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.ydbar[1,mif1] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif1] * self.yd[1,mif4] * self.ydbar[1,mif3] + -1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif1] * self.yd[1,mif4] * self.ydbar[1,mif3] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[1,mif3] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yd[2,mif2] * self.ydbar[2,mif1] + -1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yd[2,mif2] * self.ydbar[2,mif1] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.ydbar[2,mif1] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif1] * self.yd[2,mif4] * self.ydbar[2,mif3] + -1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif1] * self.yd[2,mif4] * self.ydbar[2,mif3] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif2] * self.lambdaQ5bar[mif1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[2,mif3])

    def alphaOud1(self, mif1,mif2,mif3,mif4):
        return (5/324 * (self.g1)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -113/2592 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] + 5/288 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] + 1/144 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yu[0,mif2] * self.yubar[0,mif1] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yu[0,mif2] * self.yubar[0,mif1] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yu[0,mif2] * self.yubar[0,mif1] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yu[1,mif2] * self.yubar[1,mif1] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yu[1,mif2] * self.yubar[1,mif1] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yu[1,mif2] * self.yubar[1,mif1] + 3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yu[2,mif2] * self.yubar[2,mif1] + 1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yu[2,mif2] * self.yubar[2,mif1] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yu[2,mif2] * self.yubar[2,mif1])

    def alphaOud8(self, mif1,mif2,mif3,mif4):
        return (-1/60 * (self.g3)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/18 * (self.g3)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] + -1/32 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3])

    def alphaOqu1(self, mif1,mif2,mif3,mif4):
        return (-5/648 * (self.g1)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -1/288 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/288 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/288 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/96 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/96 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/96 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yu[mif1,mif4] * self.yubar[mif2,mif3])

    def alphaOqu8(self, mif1,mif2,mif3,mif4):
        return (-1/60 * (self.g3)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yu[mif1,mif4] * self.yubar[mif2,mif3])

    def alphaOqd1(self, mif1,mif2,mif3,mif4):
        return (5/1296 * (self.g1)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -113/10368 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] + 5/1152 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] + -1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] + 1/576 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + 3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yd[mif1,0] * self.ydbar[mif2,0] + 1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yd[mif1,0] * self.ydbar[mif2,0] + -1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[mif2,0] + -1/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[mif3] * self.yd[mif1,mif4] * self.ydbar[mif2,0] + 3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yd[mif1,1] * self.ydbar[mif2,1] + 1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yd[mif1,1] * self.ydbar[mif2,1] + -1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[mif2,1] + -1/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[mif3] * self.yd[mif1,mif4] * self.ydbar[mif2,1] + 3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yd[mif1,2] * self.ydbar[mif2,2] + 1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yd[mif1,2] * self.ydbar[mif2,2] + -1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[mif2,2] + -1/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[mif3] * self.yd[mif1,mif4] * self.ydbar[mif2,2] + -1/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[0] * self.yd[mif1,0] * self.ydbar[mif2,mif3] + -1/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[1] * self.yd[mif1,1] * self.ydbar[mif2,mif3] + -1/192 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[2] * self.yd[mif1,2] * self.ydbar[mif2,mif3] + -1/288 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/288 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/288 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/96 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/96 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/96 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yu[mif1,0] * self.yubar[mif2,0] + -1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yu[mif1,0] * self.yubar[mif2,0] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yu[mif1,0] * self.yubar[mif2,0] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yu[mif1,1] * self.yubar[mif2,1] + -1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yu[mif1,1] * self.yubar[mif2,1] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yu[mif1,1] * self.yubar[mif2,1] + -3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yu[mif1,2] * self.yubar[mif2,2] + -1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yu[mif1,2] * self.yubar[mif2,2] + 1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yu[mif1,2] * self.yubar[mif2,2])

    def alphaOqd8(self, mif1,mif2,mif3,mif4):
        return (-1/60 * (self.g3)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/18 * (self.g3)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] + -1/32 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[mif3] * self.yd[mif1,mif4] * self.ydbar[mif2,0] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[mif3] * self.yd[mif1,mif4] * self.ydbar[mif2,1] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[mif3] * self.yd[mif1,mif4] * self.ydbar[mif2,2] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[0] * self.yd[mif1,0] * self.ydbar[mif2,mif3] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[1] * self.yd[mif1,1] * self.ydbar[mif2,mif3] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[2] * self.yd[mif1,2] * self.ydbar[mif2,mif3] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3])

    def alphaOquqd1(self, mif1,mif2,mif3,mif4):
        return (1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[0] * self.yd[mif3,0] * self.yu[mif1,mif2] + 1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[1] * self.yd[mif3,1] * self.yu[mif1,mif2] + 1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[2] * self.yd[mif3,2] * self.yu[mif1,mif2] + 1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + 1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + 1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + 1/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + 1/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + 1/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yd[mif3,mif4] * self.yu[mif1,mif2])

    def alphaOquqd8(self, mif1,mif2,mif3,mif4):
        return 0

    def alphaOll(self, mif1,mif2,mif3,mif4):
        return (-1/160 * (self.g2)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -5/576 * (self.g1)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/320 * (self.g2)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -11/4608 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaN[mif2] * self.lambdaNbar[mif1] + 11/4608 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaN[mif2] * self.lambdaNbar[mif1] + -1/768 * (self.g1)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaN[mif2] * self.lambdaNbar[mif1] + 1/768 * (self.g2)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaN[mif2] * self.lambdaNbar[mif1] + -11/2304 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.lambdaN[mif4] * self.lambdaNbar[mif1] + -1/384 * (self.g2)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.lambdaN[mif4] * self.lambdaNbar[mif1] + -11/2304 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.lambdaN[mif2] * self.lambdaNbar[mif3] + -1/384 * (self.g2)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.lambdaN[mif2] * self.lambdaNbar[mif3] + -11/4608 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[mif4] * self.lambdaNbar[mif3] + 11/4608 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[mif4] * self.lambdaNbar[mif3] + -1/768 * (self.g1)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[mif4] * self.lambdaNbar[mif3] + 1/768 * (self.g2)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[mif4] * self.lambdaNbar[mif3] + -5/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaN[mif4] * self.lambdaNbar[mif1] * self.lambdaNbar[mif3] + -1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaN[mif4] * self.lambdaNbar[mif1] * self.lambdaNbar[mif3] + 1/768 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + -1/768 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/384 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.lambdaN[mif4] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/384 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.lambdaN[mif2] * self.lambdaNbar[mif3] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/768 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[mif4] * self.lambdaNbar[mif3] * np.log((self.MN)**(2) * (self.mu)**(-2)) + -1/768 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaN[mif4] * self.lambdaNbar[mif3] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaN[mif4] * self.lambdaNbar[mif1] * self.lambdaNbar[mif3] * np.log((self.MN)**(2) * (self.mu)**(-2)) + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif4] * self.lambdaNbar[mif3] * self.yl[mif1,0] * self.ylbar[mif2,0] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif4] * self.lambdaNbar[mif3] * self.yl[mif1,0] * self.ylbar[mif2,0] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif4] * self.lambdaNbar[mif3] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[mif2,0] + 3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif4] * self.lambdaNbar[mif1] * self.yl[mif3,0] * self.ylbar[mif2,0] + 1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif4] * self.lambdaNbar[mif1] * self.yl[mif3,0] * self.ylbar[mif2,0] + -1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif4] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif3,0] * self.ylbar[mif2,0] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif4] * self.lambdaNbar[mif3] * self.yl[mif1,1] * self.ylbar[mif2,1] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif4] * self.lambdaNbar[mif3] * self.yl[mif1,1] * self.ylbar[mif2,1] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif4] * self.lambdaNbar[mif3] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[mif2,1] + 3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif4] * self.lambdaNbar[mif1] * self.yl[mif3,1] * self.ylbar[mif2,1] + 1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif4] * self.lambdaNbar[mif1] * self.yl[mif3,1] * self.ylbar[mif2,1] + -1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif4] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif3,1] * self.ylbar[mif2,1] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif4] * self.lambdaNbar[mif3] * self.yl[mif1,2] * self.ylbar[mif2,2] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif4] * self.lambdaNbar[mif3] * self.yl[mif1,2] * self.ylbar[mif2,2] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif4] * self.lambdaNbar[mif3] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[mif2,2] + 3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif4] * self.lambdaNbar[mif1] * self.yl[mif3,2] * self.ylbar[mif2,2] + 1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif4] * self.lambdaNbar[mif1] * self.yl[mif3,2] * self.ylbar[mif2,2] + -1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif4] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif3,2] * self.ylbar[mif2,2] + 3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif3] * self.yl[mif1,0] * self.ylbar[mif4,0] + 1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif3] * self.yl[mif1,0] * self.ylbar[mif4,0] + -1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif3] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[mif4,0] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yl[mif3,0] * self.ylbar[mif4,0] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yl[mif3,0] * self.ylbar[mif4,0] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif3,0] * self.ylbar[mif4,0] + 3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif3] * self.yl[mif1,1] * self.ylbar[mif4,1] + 1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif3] * self.yl[mif1,1] * self.ylbar[mif4,1] + -1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif3] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[mif4,1] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yl[mif3,1] * self.ylbar[mif4,1] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yl[mif3,1] * self.ylbar[mif4,1] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif3,1] * self.ylbar[mif4,1] + 3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif3] * self.yl[mif1,2] * self.ylbar[mif4,2] + 1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif3] * self.yl[mif1,2] * self.ylbar[mif4,2] + -1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif3] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[mif4,2] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yl[mif3,2] * self.ylbar[mif4,2] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yl[mif3,2] * self.ylbar[mif4,2] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[mif3,2] * self.ylbar[mif4,2])

    def alphaOee(self, mif1,mif2,mif3,mif4):
        return -5/144 * (self.g1)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4)

    def alphaOle(self, mif1,mif2,mif3,mif4):
        return (-5/144 * (self.g1)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -11/1152 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaN[mif2] * self.lambdaNbar[mif1] + -1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaN[mif2] * self.lambdaNbar[mif1] + 1/192 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yl[0,mif4] * self.ylbar[0,mif3] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yl[0,mif4] * self.ylbar[0,mif3] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[0,mif4] * self.ylbar[0,mif3] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[0] * self.yl[mif1,mif4] * self.ylbar[0,mif3] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yl[1,mif4] * self.ylbar[1,mif3] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yl[1,mif4] * self.ylbar[1,mif3] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[1,mif4] * self.ylbar[1,mif3] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[1] * self.yl[mif1,mif4] * self.ylbar[1,mif3] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yl[2,mif4] * self.ylbar[2,mif3] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yl[2,mif4] * self.ylbar[2,mif3] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yl[2,mif4] * self.ylbar[2,mif3] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[2] * self.yl[mif1,mif4] * self.ylbar[2,mif3] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,mif4] * self.ylbar[mif2,mif3] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[1,mif4] * self.ylbar[mif2,mif3] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[2,mif4] * self.ylbar[mif2,mif3] + -1/96 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + -1/96 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + -1/96 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + -1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yl[mif1,mif4] * self.ylbar[mif2,mif3])

    def alphaOlq1(self, mif1,mif2,mif3,mif4):
        return (5/864 * (self.g1)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 11/6912 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaN[mif2] * self.lambdaNbar[mif1] + 1/1152 * (self.g1)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaN[mif2] * self.lambdaNbar[mif1] + -1/1152 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yd[mif3,0] * self.ydbar[mif4,0] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yd[mif3,0] * self.ydbar[mif4,0] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif3,0] * self.ydbar[mif4,0] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yd[mif3,1] * self.ydbar[mif4,1] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yd[mif3,1] * self.ydbar[mif4,1] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif3,1] * self.ydbar[mif4,1] + -3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yd[mif3,2] * self.ydbar[mif4,2] + -1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yd[mif3,2] * self.ydbar[mif4,2] + 1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif3,2] * self.ydbar[mif4,2] + 3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yu[mif3,0] * self.yubar[mif4,0] + 1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yu[mif3,0] * self.yubar[mif4,0] + -1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yu[mif3,0] * self.yubar[mif4,0] + 3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yu[mif3,1] * self.yubar[mif4,1] + 1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yu[mif3,1] * self.yubar[mif4,1] + -1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yu[mif3,1] * self.yubar[mif4,1] + 3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yu[mif3,2] * self.yubar[mif4,2] + 1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yu[mif3,2] * self.yubar[mif4,2] + -1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yu[mif3,2] * self.yubar[mif4,2])

    def alphaOlq3(self, mif1,mif2,mif3,mif4):
        return (-1/160 * (self.g2)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -11/2304 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaN[mif2] * self.lambdaNbar[mif1] + -1/384 * (self.g2)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaN[mif2] * self.lambdaNbar[mif1] + 1/384 * (self.g2)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yd[mif3,0] * self.ydbar[mif4,0] + 1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yd[mif3,0] * self.ydbar[mif4,0] + -1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif3,0] * self.ydbar[mif4,0] + 3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yd[mif3,1] * self.ydbar[mif4,1] + 1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yd[mif3,1] * self.ydbar[mif4,1] + -1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif3,1] * self.ydbar[mif4,1] + 3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yd[mif3,2] * self.ydbar[mif4,2] + 1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yd[mif3,2] * self.ydbar[mif4,2] + -1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[mif3,2] * self.ydbar[mif4,2] + 3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yu[mif3,0] * self.yubar[mif4,0] + 1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yu[mif3,0] * self.yubar[mif4,0] + -1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yu[mif3,0] * self.yubar[mif4,0] + 3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yu[mif3,1] * self.yubar[mif4,1] + 1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yu[mif3,1] * self.yubar[mif4,1] + -1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yu[mif3,1] * self.yubar[mif4,1] + 3/256 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yu[mif3,2] * self.yubar[mif4,2] + 1/128 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yu[mif3,2] * self.yubar[mif4,2] + -1/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yu[mif3,2] * self.yubar[mif4,2])

    def alphaOeu(self, mif1,mif2,mif3,mif4):
        return 5/108 * (self.g1)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4)

    def alphaOed(self, mif1,mif2,mif3,mif4):
        return (-5/216 * (self.g1)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 113/1728 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] + -5/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] + -1/96 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yl[0,mif2] * self.ylbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yl[0,mif2] * self.ylbar[0,mif1] + 1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,mif1] + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yl[1,mif2] * self.ylbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yl[1,mif2] * self.ylbar[1,mif1] + 1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,mif1] + -3/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yl[2,mif2] * self.ylbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yl[2,mif2] * self.ylbar[2,mif1] + 1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,mif1])

    def alphaOqe(self, mif1,mif2,mif3,mif4):
        return 5/432 * (self.g1)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4)

    def alphaOlu(self, mif1,mif2,mif3,mif4):
        return (5/216 * (self.g1)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 11/1728 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaN[mif2] * self.lambdaNbar[mif1] + 1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaN[mif2] * self.lambdaNbar[mif1] + -1/288 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + -3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yu[0,mif4] * self.yubar[0,mif3] + -1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yu[0,mif4] * self.yubar[0,mif3] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yu[0,mif4] * self.yubar[0,mif3] + -3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yu[1,mif4] * self.yubar[1,mif3] + -1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yu[1,mif4] * self.yubar[1,mif3] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yu[1,mif4] * self.yubar[1,mif3] + -3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yu[2,mif4] * self.yubar[2,mif3] + -1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yu[2,mif4] * self.yubar[2,mif3] + 1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yu[2,mif4] * self.yubar[2,mif3])

    def alphaOld(self, mif1,mif2,mif3,mif4):
        return (-5/432 * (self.g1)**(4) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -11/3456 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaN[mif2] * self.lambdaNbar[mif1] + -1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaN[mif2] * self.lambdaNbar[mif1] + 113/3456 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] + -5/384 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] + 1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] + -3/128 * (((self.MN)**(2) + -1 * (self.MQ5)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] + -1/64 * self.invepsilonbar * (((self.MN)**(2) + -1 * (self.MQ5)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] + 3/128 * (self.MN)**(-2) * (self.MQ5)**(2) * (((self.MN)**(2) + -1 * (self.MQ5)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * (self.MQ5)**(2) * (((self.MN)**(2) + -1 * (self.MQ5)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] + 1/576 * (self.g1)**(2) * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/64 * (((self.MN)**(2) + -1 * (self.MQ5)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * np.log((self.MN)**(2) * (self.mu)**(-2)) + -1/192 * (self.g1)**(2) * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + -1/64 * (self.MN)**(-2) * (self.MQ5)**(2) * (((self.MN)**(2) + -1 * (self.MQ5)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yd[0,mif4] * self.ydbar[0,mif3] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yd[0,mif4] * self.ydbar[0,mif3] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[0,mif3] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yd[1,mif4] * self.ydbar[1,mif3] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yd[1,mif4] * self.ydbar[1,mif3] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[1,mif3] + 3/128 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yd[2,mif4] * self.ydbar[2,mif3] + 1/64 * self.invepsilonbar * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * self.yd[2,mif4] * self.ydbar[2,mif3] + -1/64 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif2] * self.lambdaNbar[mif1] * np.log((self.MN)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[2,mif3] + 3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yl[mif1,0] * self.ylbar[mif2,0] + 1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yl[mif1,0] * self.ylbar[mif2,0] + -1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[mif2,0] + 3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yl[mif1,1] * self.ylbar[mif2,1] + 1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yl[mif1,1] * self.ylbar[mif2,1] + -1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[mif2,1] + 3/128 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yl[mif1,2] * self.ylbar[mif2,2] + 1/64 * self.invepsilonbar * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * self.yl[mif1,2] * self.ylbar[mif2,2] + -1/64 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[mif4] * self.lambdaQ5bar[mif3] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[mif2,2])

    def alphaOledq(self, mif1,mif2,mif3,mif4):
        return (-1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.ydbar[mif4,mif3] * self.yl[0,mif2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.ydbar[mif4,mif3] * self.yl[1,mif2] + -1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.ydbar[mif4,mif3] * self.yl[2,mif2] + 1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[mif3] * self.ydbar[mif4,0] * self.yl[mif1,mif2] + 1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[mif3] * self.ydbar[mif4,1] * self.yl[mif1,mif2] + 1/32 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[mif3] * self.ydbar[mif4,2] * self.yl[mif1,mif2] + 1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + 1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + 1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + 1/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + 1/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + 1/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2])

    def alphaOlequ1(self, mif1,mif2,mif3,mif4):
        return (1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[mif1] * self.yl[0,mif2] * self.yu[mif3,mif4] + 1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[mif1] * self.yl[1,mif2] * self.yu[mif3,mif4] + 1/32 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[mif1] * self.yl[2,mif2] * self.yu[mif3,mif4] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaNbar[0] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaNbar[1] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + -1/48 * (self.MN)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaNbar[2] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + -1/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[0] * self.lambdaQ5bar[0] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + -1/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[1] * self.lambdaQ5bar[1] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + -1/16 * (self.MQ5)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaQ5[2] * self.lambdaQ5bar[2] * self.yl[mif1,mif2] * self.yu[mif3,mif4])

    def alphaOlequ3(self, mif1,mif2,mif3,mif4):
        return 0

    def alphaWeinberg(self, mif1,mif2):
        return (1/2 * (self.MN)**(-1) * self.lambdaN[mif1] * self.lambdaN[mif2] + 1/128 * (self.g1)**(2) * (self.MN)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif1] * self.lambdaN[mif2] + 1/128 * (self.g2)**(2) * (self.MN)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif1] * self.lambdaN[mif2] + 3/128 * (self.g1)**(2) * self.invepsilonbar * (self.MN)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif1] * self.lambdaN[mif2] + 3/128 * (self.g2)**(2) * self.invepsilonbar * (self.MN)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif1] * self.lambdaN[mif2] + 1/16 * self.lam * (self.MN)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif1] * self.lambdaN[mif2] + 1/16 * self.invepsilonbar * self.lam * (self.MN)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif1] * self.lambdaN[mif2] + -5/128 * (self.MN)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[mif1] * self.lambdaN[mif2] * self.lambdaNbar[0] + -3/64 * self.invepsilonbar * (self.MN)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[mif1] * self.lambdaN[mif2] * self.lambdaNbar[0] + -3/64 * (self.MN)**(-3) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[mif1] * self.lambdaN[mif2] * self.lambdaNbar[0] + -1/32 * self.invepsilonbar * (self.MN)**(-3) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[mif1] * self.lambdaN[mif2] * self.lambdaNbar[0] + -5/128 * (self.MN)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[mif1] * self.lambdaN[mif2] * self.lambdaNbar[1] + -3/64 * self.invepsilonbar * (self.MN)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[mif1] * self.lambdaN[mif2] * self.lambdaNbar[1] + -3/64 * (self.MN)**(-3) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[mif1] * self.lambdaN[mif2] * self.lambdaNbar[1] + -1/32 * self.invepsilonbar * (self.MN)**(-3) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[mif1] * self.lambdaN[mif2] * self.lambdaNbar[1] + -5/128 * (self.MN)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaN[mif1] * self.lambdaN[mif2] * self.lambdaNbar[2] + -3/64 * self.invepsilonbar * (self.MN)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaN[mif1] * self.lambdaN[mif2] * self.lambdaNbar[2] + -3/64 * (self.MN)**(-3) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaN[mif1] * self.lambdaN[mif2] * self.lambdaNbar[2] + -1/32 * self.invepsilonbar * (self.MN)**(-3) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaN[mif1] * self.lambdaN[mif2] * self.lambdaNbar[2] + -3/64 * (self.MN)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif1] * self.lambdaN[mif2] * self.lambdaQ5[0] * self.lambdaQ5bar[0] + -3/32 * self.invepsilonbar * (self.MN)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif1] * self.lambdaN[mif2] * self.lambdaQ5[0] * self.lambdaQ5bar[0] + -3/64 * (self.MN)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif1] * self.lambdaN[mif2] * self.lambdaQ5[1] * self.lambdaQ5bar[1] + -3/32 * self.invepsilonbar * (self.MN)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif1] * self.lambdaN[mif2] * self.lambdaQ5[1] * self.lambdaQ5bar[1] + -3/64 * (self.MN)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif1] * self.lambdaN[mif2] * self.lambdaQ5[2] * self.lambdaQ5bar[2] + -3/32 * self.invepsilonbar * (self.MN)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif1] * self.lambdaN[mif2] * self.lambdaQ5[2] * self.lambdaQ5bar[2] + -3/128 * (self.g1)**(2) * (self.MN)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif1] * self.lambdaN[mif2] * np.log((self.MN)**(2) * (self.mu)**(-2)) + -3/128 * (self.g2)**(2) * (self.MN)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif1] * self.lambdaN[mif2] * np.log((self.MN)**(2) * (self.mu)**(-2)) + -1/16 * self.lam * (self.MN)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif1] * self.lambdaN[mif2] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 3/64 * (self.MN)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[mif1] * self.lambdaN[mif2] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/32 * (self.MN)**(-3) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[0] * self.lambdaN[mif1] * self.lambdaN[mif2] * self.lambdaNbar[0] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 3/64 * (self.MN)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[mif1] * self.lambdaN[mif2] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/32 * (self.MN)**(-3) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[1] * self.lambdaN[mif1] * self.lambdaN[mif2] * self.lambdaNbar[1] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 3/64 * (self.MN)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaN[mif1] * self.lambdaN[mif2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 1/32 * (self.MN)**(-3) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[2] * self.lambdaN[mif1] * self.lambdaN[mif2] * self.lambdaNbar[2] * np.log((self.MN)**(2) * (self.mu)**(-2)) + 3/32 * (self.MN)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif1] * self.lambdaN[mif2] * self.lambdaQ5[0] * self.lambdaQ5bar[0] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + 3/32 * (self.MN)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif1] * self.lambdaN[mif2] * self.lambdaQ5[1] * self.lambdaQ5bar[1] * np.log((self.MQ5)**(2) * (self.mu)**(-2)) + 3/32 * (self.MN)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaN[mif1] * self.lambdaN[mif2] * self.lambdaQ5[2] * self.lambdaQ5bar[2] * np.log((self.MQ5)**(2) * (self.mu)**(-2)))
