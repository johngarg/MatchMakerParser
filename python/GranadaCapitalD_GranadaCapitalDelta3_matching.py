## Symbols used:
# ydbar
# yd
# lambdaDbar
# iCPV
# yl
# ylbar
# g1
# MD
# muH
# g2
# invepsilonbar
# lambdaD
# lam
# mu
# lambdaDelta3bar
# g3
# yubar
# lambdaDelta3
# MDelta3
# onelooporder
# yu

import python.matchingresult
import numpy as np

class GranadaD_GranadaDelta3MatchingResult(python.matchingresult.GenericMatchingResult):
    def __init__(self, name='GranadaD_GranadaDelta3', scale=91.1876):
        super().__init__(name, scale)
        self.MGranadaDelta3 = 1
        self.MGranadaD = 1
        self.lambdaDelta3 = np.ones((3))
        self.lambdaDelta3bar = np.ones((3))
        self.lambdaD = np.ones((3))
        self.lambdaDbar = np.ones((3))
        self.nonvanishing = ['alphaO3G', 'alphaO3W', 'alphaOHG', 'alphaOHW', 'alphaOHB', 'alphaOHWB', 'alphaOHBox', 'alphaOHD', 'alphaOH', 'alphaOuG', 'alphaOuW', 'alphaOuB', 'alphaOdG', 'alphaOdW', 'alphaOdB', 'alphaOeW', 'alphaOeB', 'alphaOHq1', 'alphaOHq3', 'alphaOHu', 'alphaOHd', 'alphaOHud', 'alphaOHl1', 'alphaOHl3', 'alphaOHe', 'alphaOuH', 'alphaOdH', 'alphaOeH', 'alphaOqq1', 'alphaOqq3', 'alphaOuu', 'alphaOdd', 'alphaOud1', 'alphaOud8', 'alphaOqu1', 'alphaOqu8', 'alphaOqd1', 'alphaOqd8', 'alphaOquqd1', 'alphaOll', 'alphaOee', 'alphaOle', 'alphaOlq1', 'alphaOlq3', 'alphaOeu', 'alphaOed', 'alphaOqe', 'alphaOlu', 'alphaOld', 'alphaOledq', 'alphaOlequ1']

    def alphaO3G(self, ):
        return -1/2880 * (self.g3)**(3) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2)

    def alphaO3Gt(self, ):
        return 0

    def alphaO3W(self, ):
        return -1/2880 * (self.g2)**(3) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2)

    def alphaO3Wt(self, ):
        return 0

    def alphaOHG(self, ):
        return (1/96 * (self.g3)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] + 1/96 * (self.g3)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] + 1/96 * (self.g3)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2])

    def alphaOHGt(self, ):
        return 0

    def alphaOHW(self, ):
        return (1/128 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] + 1/128 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] + 1/128 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2])

    def alphaOHWt(self, ):
        return 0

    def alphaOHB(self, ):
        return (-1/1152 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] + -1/1152 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] + -1/1152 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] + 5/192 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] + 5/192 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] + 5/192 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2])

    def alphaOHBt(self, ):
        return 0

    def alphaOHWB(self, ):
        return (1/192 * self.g1 * self.g2 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] + 1/192 * self.g1 * self.g2 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] + 1/192 * self.g1 * self.g2 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2])

    def alphaOHWBt(self, ):
        return 0

    def alphaOHBox(self, ):
        return (-1/1440 * (self.g1)**(4) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) + -3/320 * (self.g1)**(4) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) + -1/320 * (self.g2)**(4) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) + 1/384 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] + -5/128 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] + -1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] + -3/64 * (self.g2)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] + -1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[0])**(2) * (self.lambdaDbar[0])**(2) + 1/384 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] + -5/128 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] + -1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] + -3/64 * (self.g2)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] + -1/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaDbar[0] * self.lambdaDbar[1] + -1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[1])**(2) * (self.lambdaDbar[1])**(2) + 1/384 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] + -5/128 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] + -1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] + -3/64 * (self.g2)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] + -1/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * self.lambdaDbar[0] * self.lambdaDbar[2] + -1/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[1] * self.lambdaDbar[2] + -1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[2])**(2) * (self.lambdaDbar[2])**(2) + 11/576 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] + 1/96 * (self.g2)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] + -1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[0])**(2) * (self.lambdaDelta3bar[0])**(2) + 11/576 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] + 1/96 * (self.g2)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] + -1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[1])**(2) * (self.lambdaDelta3bar[1])**(2) + 11/576 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] + 1/96 * (self.g2)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] + -1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[2])**(2) * (self.lambdaDelta3bar[2])**(2) + 1/192 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) + 3/64 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) + 1/192 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + 3/64 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + 1/192 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) + 3/64 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) + -1/96 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + -1/96 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + -1/96 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + 9/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,0] * self.ydbar[0,0] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,0] * self.ydbar[0,0] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] + 9/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,0] * self.ydbar[0,0] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,0] * self.ydbar[0,0] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[0,0] + 9/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,0] * self.ydbar[0,0] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,0] * self.ydbar[0,0] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[0,0] + 9/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,1] * self.ydbar[0,1] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,1] * self.ydbar[0,1] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] + 9/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,1] * self.ydbar[0,1] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,1] * self.ydbar[0,1] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[0,1] + 9/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,1] * self.ydbar[0,1] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,1] * self.ydbar[0,1] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[0,1] + 9/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,2] * self.ydbar[0,2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,2] * self.ydbar[0,2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] + 9/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,2] * self.ydbar[0,2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,2] * self.ydbar[0,2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[0,2] + 9/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,2] * self.ydbar[0,2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,2] * self.ydbar[0,2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[0,2] + 9/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,0] * self.ydbar[1,0] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,0] * self.ydbar[1,0] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[1,0] + 9/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,0] * self.ydbar[1,0] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,0] * self.ydbar[1,0] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] + 9/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,0] * self.ydbar[1,0] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,0] * self.ydbar[1,0] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[1,0] + 9/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,1] * self.ydbar[1,1] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,1] * self.ydbar[1,1] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[1,1] + 9/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,1] * self.ydbar[1,1] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,1] * self.ydbar[1,1] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] + 9/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,1] * self.ydbar[1,1] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,1] * self.ydbar[1,1] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[1,1] + 9/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,2] * self.ydbar[1,2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,2] * self.ydbar[1,2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[1,2] + 9/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,2] * self.ydbar[1,2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,2] * self.ydbar[1,2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,2] + 9/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,2] * self.ydbar[1,2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,2] * self.ydbar[1,2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[1,2] + 9/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,0] * self.ydbar[2,0] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,0] * self.ydbar[2,0] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[2,0] + 9/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,0] * self.ydbar[2,0] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,0] * self.ydbar[2,0] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[2,0] + 9/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,0] * self.ydbar[2,0] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,0] * self.ydbar[2,0] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] + 9/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,1] * self.ydbar[2,1] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,1] * self.ydbar[2,1] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[2,1] + 9/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,1] * self.ydbar[2,1] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,1] * self.ydbar[2,1] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[2,1] + 9/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,1] * self.ydbar[2,1] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,1] * self.ydbar[2,1] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,1] + 9/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,2] * self.ydbar[2,2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,2] * self.ydbar[2,2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[2,2] + 9/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,2] * self.ydbar[2,2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,2] * self.ydbar[2,2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[2,2] + 9/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,2] * self.ydbar[2,2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,2] * self.ydbar[2,2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,2] + -5/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.ylbar[0,0] + -1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.ylbar[0,0] + 1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] + -5/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.ylbar[0,0] + -1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.ylbar[0,0] + 1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,0] + -5/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.ylbar[0,0] + -1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.ylbar[0,0] + 1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,0] + -5/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.ylbar[0,1] + -1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.ylbar[0,1] + 1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,1] + -5/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.ylbar[0,1] + -1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.ylbar[0,1] + 1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] + -5/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.ylbar[0,1] + -1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.ylbar[0,1] + 1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,1] + -5/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.ylbar[0,2] + -1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.ylbar[0,2] + 1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,2] + -5/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.ylbar[0,2] + -1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.ylbar[0,2] + 1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,2] + -5/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.ylbar[0,2] + -1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.ylbar[0,2] + 1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] + -5/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.ylbar[1,0] + -1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.ylbar[1,0] + 1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] + -5/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.ylbar[1,0] + -1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.ylbar[1,0] + 1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,0] + -5/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.ylbar[1,0] + -1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.ylbar[1,0] + 1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,0] + -5/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.ylbar[1,1] + -1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.ylbar[1,1] + 1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,1] + -5/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.ylbar[1,1] + -1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.ylbar[1,1] + 1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] + -5/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.ylbar[1,1] + -1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.ylbar[1,1] + 1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,1] + -5/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.ylbar[1,2] + -1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.ylbar[1,2] + 1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,2] + -5/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.ylbar[1,2] + -1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.ylbar[1,2] + 1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,2] + -5/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.ylbar[1,2] + -1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.ylbar[1,2] + 1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,2] + -5/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.ylbar[2,0] + -1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.ylbar[2,0] + 1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] + -5/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.ylbar[2,0] + -1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.ylbar[2,0] + 1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,0] + -5/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.ylbar[2,0] + -1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.ylbar[2,0] + 1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,0] + -5/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.ylbar[2,1] + -1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.ylbar[2,1] + 1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,1] + -5/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.ylbar[2,1] + -1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.ylbar[2,1] + 1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,1] + -5/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.ylbar[2,1] + -1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.ylbar[2,1] + 1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,1] + -5/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.ylbar[2,2] + -1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.ylbar[2,2] + 1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,2] + -5/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.ylbar[2,2] + -1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.ylbar[2,2] + 1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,2] + -5/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.ylbar[2,2] + -1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.ylbar[2,2] + 1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[0,0] * self.yubar[0,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[0,0] * self.yubar[0,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[0,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yu[1,0] * self.yubar[0,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yu[1,0] * self.yubar[0,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[0,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yu[2,0] * self.yubar[0,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yu[2,0] * self.yubar[0,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[0,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[0,1] * self.yubar[0,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[0,1] * self.yubar[0,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[0,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yu[1,1] * self.yubar[0,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yu[1,1] * self.yubar[0,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[0,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yu[2,1] * self.yubar[0,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yu[2,1] * self.yubar[0,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[0,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[0,2] * self.yubar[0,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[0,2] * self.yubar[0,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[0,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yu[1,2] * self.yubar[0,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yu[1,2] * self.yubar[0,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[0,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yu[2,2] * self.yubar[0,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yu[2,2] * self.yubar[0,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[0,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yu[0,0] * self.yubar[1,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yu[0,0] * self.yubar[1,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[1,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[1,0] * self.yubar[1,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[1,0] * self.yubar[1,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[1,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yu[2,0] * self.yubar[1,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yu[2,0] * self.yubar[1,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[1,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yu[0,1] * self.yubar[1,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yu[0,1] * self.yubar[1,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[1,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[1,1] * self.yubar[1,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[1,1] * self.yubar[1,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[1,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yu[2,1] * self.yubar[1,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yu[2,1] * self.yubar[1,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[1,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yu[0,2] * self.yubar[1,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yu[0,2] * self.yubar[1,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[1,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[1,2] * self.yubar[1,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[1,2] * self.yubar[1,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[1,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yu[2,2] * self.yubar[1,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yu[2,2] * self.yubar[1,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[1,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yu[0,0] * self.yubar[2,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yu[0,0] * self.yubar[2,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[2,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yu[1,0] * self.yubar[2,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yu[1,0] * self.yubar[2,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[2,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[2,0] * self.yubar[2,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[2,0] * self.yubar[2,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[2,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yu[0,1] * self.yubar[2,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yu[0,1] * self.yubar[2,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[2,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yu[1,1] * self.yubar[2,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yu[1,1] * self.yubar[2,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[2,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[2,1] * self.yubar[2,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[2,1] * self.yubar[2,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[2,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yu[0,2] * self.yubar[2,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yu[0,2] * self.yubar[2,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[2,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yu[1,2] * self.yubar[2,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yu[1,2] * self.yubar[2,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[2,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[2,2] * self.yubar[2,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[2,2] * self.yubar[2,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[2,2])

    def alphaOHD(self, ):
        return (-1/360 * (self.g1)**(4) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) + -3/80 * (self.g1)**(4) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) + 1/96 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[0])**(2) * (self.lambdaDbar[0])**(2) + 1/96 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaDbar[0] * self.lambdaDbar[1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[1])**(2) * (self.lambdaDbar[1])**(2) + 1/96 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * self.lambdaDbar[0] * self.lambdaDbar[2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[1] * self.lambdaDbar[2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[2])**(2) * (self.lambdaDbar[2])**(2) + 11/144 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] + 1/24 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] + -1/24 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[0])**(2) * (self.lambdaDelta3bar[0])**(2) + 11/144 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] + 1/24 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] + -1/12 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] + -1/24 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[1])**(2) * (self.lambdaDelta3bar[1])**(2) + 11/144 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] + 1/24 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] + -1/12 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] + -1/12 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] + -1/24 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[2])**(2) * (self.lambdaDelta3bar[2])**(2) + 1/48 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) + 1/48 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + 1/48 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) + -1/24 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + -1/24 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + -1/24 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,0] * self.ydbar[0,0] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,0] * self.ydbar[0,0] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,0] * self.ydbar[0,0] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,0] * self.ydbar[0,0] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[0,0] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,0] * self.ydbar[0,0] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,0] * self.ydbar[0,0] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[0,0] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,1] * self.ydbar[0,1] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,1] * self.ydbar[0,1] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,1] * self.ydbar[0,1] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,1] * self.ydbar[0,1] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[0,1] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,1] * self.ydbar[0,1] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,1] * self.ydbar[0,1] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[0,1] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,2] * self.ydbar[0,2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,2] * self.ydbar[0,2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,2] * self.ydbar[0,2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,2] * self.ydbar[0,2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[0,2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,2] * self.ydbar[0,2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,2] * self.ydbar[0,2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[0,2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,0] * self.ydbar[1,0] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,0] * self.ydbar[1,0] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[1,0] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,0] * self.ydbar[1,0] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,0] * self.ydbar[1,0] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,0] * self.ydbar[1,0] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,0] * self.ydbar[1,0] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[1,0] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,1] * self.ydbar[1,1] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,1] * self.ydbar[1,1] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[1,1] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,1] * self.ydbar[1,1] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,1] * self.ydbar[1,1] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,1] * self.ydbar[1,1] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,1] * self.ydbar[1,1] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[1,1] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,2] * self.ydbar[1,2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,2] * self.ydbar[1,2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[1,2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,2] * self.ydbar[1,2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,2] * self.ydbar[1,2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,2] * self.ydbar[1,2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,2] * self.ydbar[1,2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[1,2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,0] * self.ydbar[2,0] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,0] * self.ydbar[2,0] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[2,0] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,0] * self.ydbar[2,0] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,0] * self.ydbar[2,0] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[2,0] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,0] * self.ydbar[2,0] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,0] * self.ydbar[2,0] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,1] * self.ydbar[2,1] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,1] * self.ydbar[2,1] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[2,1] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,1] * self.ydbar[2,1] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,1] * self.ydbar[2,1] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[2,1] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,1] * self.ydbar[2,1] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,1] * self.ydbar[2,1] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,1] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,2] * self.ydbar[2,2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,2] * self.ydbar[2,2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[2,2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,2] * self.ydbar[2,2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,2] * self.ydbar[2,2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[2,2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,2] * self.ydbar[2,2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,2] * self.ydbar[2,2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,2] + -3/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.ylbar[0,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.ylbar[0,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] + -3/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.ylbar[0,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.ylbar[0,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,0] + -3/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.ylbar[0,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.ylbar[0,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,0] + -3/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.ylbar[0,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.ylbar[0,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,1] + -3/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.ylbar[0,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.ylbar[0,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] + -3/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.ylbar[0,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.ylbar[0,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,1] + -3/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.ylbar[0,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.ylbar[0,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,2] + -3/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.ylbar[0,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.ylbar[0,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,2] + -3/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.ylbar[0,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.ylbar[0,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] + -3/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.ylbar[1,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] + -3/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.ylbar[1,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,0] + -3/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.ylbar[1,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,0] + -3/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,1] + -3/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] + -3/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,1] + -3/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,2] + -3/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,2] + -3/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,2] + -3/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] + -3/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,0] + -3/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,0] + -3/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,1] + -3/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,1] + -3/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,1] + -3/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,2] + -3/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,2] + -3/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[0,0] * self.yubar[0,0] + -3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[0,0] * self.yubar[0,0] + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[0,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yu[1,0] * self.yubar[0,0] + -3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yu[1,0] * self.yubar[0,0] + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[0,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yu[2,0] * self.yubar[0,0] + -3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yu[2,0] * self.yubar[0,0] + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[0,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[0,1] * self.yubar[0,1] + -3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[0,1] * self.yubar[0,1] + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[0,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yu[1,1] * self.yubar[0,1] + -3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yu[1,1] * self.yubar[0,1] + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[0,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yu[2,1] * self.yubar[0,1] + -3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yu[2,1] * self.yubar[0,1] + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[0,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[0,2] * self.yubar[0,2] + -3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[0,2] * self.yubar[0,2] + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[0,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yu[1,2] * self.yubar[0,2] + -3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yu[1,2] * self.yubar[0,2] + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[0,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yu[2,2] * self.yubar[0,2] + -3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yu[2,2] * self.yubar[0,2] + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[0,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yu[0,0] * self.yubar[1,0] + -3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yu[0,0] * self.yubar[1,0] + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[1,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[1,0] * self.yubar[1,0] + -3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[1,0] * self.yubar[1,0] + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[1,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yu[2,0] * self.yubar[1,0] + -3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yu[2,0] * self.yubar[1,0] + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[1,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yu[0,1] * self.yubar[1,1] + -3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yu[0,1] * self.yubar[1,1] + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[1,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[1,1] * self.yubar[1,1] + -3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[1,1] * self.yubar[1,1] + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[1,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yu[2,1] * self.yubar[1,1] + -3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yu[2,1] * self.yubar[1,1] + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[1,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yu[0,2] * self.yubar[1,2] + -3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yu[0,2] * self.yubar[1,2] + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[1,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[1,2] * self.yubar[1,2] + -3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[1,2] * self.yubar[1,2] + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[1,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yu[2,2] * self.yubar[1,2] + -3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yu[2,2] * self.yubar[1,2] + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[1,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yu[0,0] * self.yubar[2,0] + -3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yu[0,0] * self.yubar[2,0] + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[2,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yu[1,0] * self.yubar[2,0] + -3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yu[1,0] * self.yubar[2,0] + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[2,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[2,0] * self.yubar[2,0] + -3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[2,0] * self.yubar[2,0] + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[2,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yu[0,1] * self.yubar[2,1] + -3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yu[0,1] * self.yubar[2,1] + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[2,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yu[1,1] * self.yubar[2,1] + -3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yu[1,1] * self.yubar[2,1] + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[2,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[2,1] * self.yubar[2,1] + -3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[2,1] * self.yubar[2,1] + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[2,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yu[0,2] * self.yubar[2,2] + -3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yu[0,2] * self.yubar[2,2] + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[2,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yu[1,2] * self.yubar[2,2] + -3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yu[1,2] * self.yubar[2,2] + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[2,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[2,2] * self.yubar[2,2] + -3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[2,2] * self.yubar[2,2] + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[2,2])

    def alphaOH(self, ):
        return (-1/120 * (self.g2)**(4) * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) + -5/48 * (self.g2)**(2) * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] + -1/8 * (self.g2)**(2) * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] + 1/4 * (self.lam)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] + -3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[0])**(2) * (self.lambdaDbar[0])**(2) + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[0])**(3) * (self.lambdaDbar[0])**(3) + -5/48 * (self.g2)**(2) * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] + -1/8 * (self.g2)**(2) * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] + 1/4 * (self.lam)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] + -3/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaDbar[0] * self.lambdaDbar[1] + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[0])**(2) * self.lambdaD[1] * (self.lambdaDbar[0])**(2) * self.lambdaDbar[1] + -3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[1])**(2) * (self.lambdaDbar[1])**(2) + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * (self.lambdaD[1])**(2) * self.lambdaDbar[0] * (self.lambdaDbar[1])**(2) + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[1])**(3) * (self.lambdaDbar[1])**(3) + -5/48 * (self.g2)**(2) * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] + -1/8 * (self.g2)**(2) * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] + 1/4 * (self.lam)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] + -3/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * self.lambdaDbar[0] * self.lambdaDbar[2] + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[0])**(2) * self.lambdaD[2] * (self.lambdaDbar[0])**(2) * self.lambdaDbar[2] + -3/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[1] * self.lambdaDbar[2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[0] * self.lambdaDbar[1] * self.lambdaDbar[2] + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[1])**(2) * self.lambdaD[2] * (self.lambdaDbar[1])**(2) * self.lambdaDbar[2] + -3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[2])**(2) * (self.lambdaDbar[2])**(2) + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * (self.lambdaD[2])**(2) * self.lambdaDbar[0] * (self.lambdaDbar[2])**(2) + 3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * (self.lambdaD[2])**(2) * self.lambdaDbar[1] * (self.lambdaDbar[2])**(2) + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[2])**(3) * (self.lambdaDbar[2])**(3) + 1/36 * (self.g2)**(2) * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] + 1/12 * (self.lam)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] + -5/48 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[0])**(2) * (self.lambdaDelta3bar[0])**(2) + 1/48 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[0])**(3) * (self.lambdaDelta3bar[0])**(3) + 1/36 * (self.g2)**(2) * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] + 1/12 * (self.lam)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] + -5/24 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] + 1/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[0])**(2) * self.lambdaDelta3[1] * (self.lambdaDelta3bar[0])**(2) * self.lambdaDelta3bar[1] + -5/48 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[1])**(2) * (self.lambdaDelta3bar[1])**(2) + 1/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * (self.lambdaDelta3[1])**(2) * self.lambdaDelta3bar[0] * (self.lambdaDelta3bar[1])**(2) + 1/48 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[1])**(3) * (self.lambdaDelta3bar[1])**(3) + 1/36 * (self.g2)**(2) * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] + 1/12 * (self.lam)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] + -5/24 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] + 1/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[0])**(2) * self.lambdaDelta3[2] * (self.lambdaDelta3bar[0])**(2) * self.lambdaDelta3bar[2] + -5/24 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] + 1/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[1])**(2) * self.lambdaDelta3[2] * (self.lambdaDelta3bar[1])**(2) * self.lambdaDelta3bar[2] + -5/48 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[2])**(2) * (self.lambdaDelta3bar[2])**(2) + 1/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * (self.lambdaDelta3[2])**(2) * self.lambdaDelta3bar[0] * (self.lambdaDelta3bar[2])**(2) + 1/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * (self.lambdaDelta3[2])**(2) * self.lambdaDelta3bar[1] * (self.lambdaDelta3bar[2])**(2) + 1/48 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[2])**(3) * (self.lambdaDelta3bar[2])**(3) + 1/8 * (self.g2)**(2) * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) + 1/8 * (self.g2)**(2) * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + 1/8 * (self.g2)**(2) * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) + 3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,0] * self.ydbar[0,0] + 3/4 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,0] * self.ydbar[0,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[0])**(2) * (self.lambdaDbar[0])**(2) * self.yd[0,0] * self.ydbar[0,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaDbar[0] * self.lambdaDbar[1] * self.yd[0,0] * self.ydbar[0,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * self.lambdaDbar[0] * self.lambdaDbar[2] * self.yd[0,0] * self.ydbar[0,0] + -3/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] + 3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,0] * self.ydbar[0,0] + 3/4 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,0] * self.ydbar[0,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * (self.lambdaDbar[0])**(2) * self.yd[1,0] * self.ydbar[0,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[1])**(2) * self.lambdaDbar[0] * self.lambdaDbar[1] * self.yd[1,0] * self.ydbar[0,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[0] * self.lambdaDbar[2] * self.yd[1,0] * self.ydbar[0,0] + -3/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[0,0] + 3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,0] * self.ydbar[0,0] + 3/4 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,0] * self.ydbar[0,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * (self.lambdaDbar[0])**(2) * self.yd[2,0] * self.ydbar[0,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[0] * self.lambdaDbar[1] * self.yd[2,0] * self.ydbar[0,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[2])**(2) * self.lambdaDbar[0] * self.lambdaDbar[2] * self.yd[2,0] * self.ydbar[0,0] + -3/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[0,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * (self.yd[0,0])**(2) * (self.ydbar[0,0])**(2) + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * (self.yd[0,0])**(2) * (self.ydbar[0,0])**(2) + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * (self.yd[0,0])**(2) * (self.ydbar[0,0])**(2) + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[0,0] * self.yd[1,0] * (self.ydbar[0,0])**(2) + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[0,0] * self.yd[1,0] * (self.ydbar[0,0])**(2) + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,0] * (self.ydbar[0,0])**(2) + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[0,0] * self.yd[2,0] * (self.ydbar[0,0])**(2) + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[0,0] * self.yd[2,0] * (self.ydbar[0,0])**(2) + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,0] * (self.ydbar[0,0])**(2) + 3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,1] * self.ydbar[0,1] + 3/4 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,1] * self.ydbar[0,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[0])**(2) * (self.lambdaDbar[0])**(2) * self.yd[0,1] * self.ydbar[0,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaDbar[0] * self.lambdaDbar[1] * self.yd[0,1] * self.ydbar[0,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * self.lambdaDbar[0] * self.lambdaDbar[2] * self.yd[0,1] * self.ydbar[0,1] + -3/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] + 3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,1] * self.ydbar[0,1] + 3/4 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,1] * self.ydbar[0,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * (self.lambdaDbar[0])**(2) * self.yd[1,1] * self.ydbar[0,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[1])**(2) * self.lambdaDbar[0] * self.lambdaDbar[1] * self.yd[1,1] * self.ydbar[0,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[0] * self.lambdaDbar[2] * self.yd[1,1] * self.ydbar[0,1] + -3/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[0,1] + 3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,1] * self.ydbar[0,1] + 3/4 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,1] * self.ydbar[0,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * (self.lambdaDbar[0])**(2) * self.yd[2,1] * self.ydbar[0,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[0] * self.lambdaDbar[1] * self.yd[2,1] * self.ydbar[0,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[2])**(2) * self.lambdaDbar[0] * self.lambdaDbar[2] * self.yd[2,1] * self.ydbar[0,1] + -3/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[0,1] + -3/4 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,0] * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[0,1] + -3/4 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,0] * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[0,1] + 3/4 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[0,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[0,1] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[0,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[0,1] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[0,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[0,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[0,0] * self.yd[1,1] * self.ydbar[0,0] * self.ydbar[0,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[0,0] * self.yd[1,1] * self.ydbar[0,0] * self.ydbar[0,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,1] * self.ydbar[0,0] * self.ydbar[0,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[0,1] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[0,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[0,1] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[0,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[0,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[0,0] * self.yd[2,1] * self.ydbar[0,0] * self.ydbar[0,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[0,0] * self.yd[2,1] * self.ydbar[0,0] * self.ydbar[0,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,1] * self.ydbar[0,0] * self.ydbar[0,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * (self.yd[0,1])**(2) * (self.ydbar[0,1])**(2) + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * (self.yd[0,1])**(2) * (self.ydbar[0,1])**(2) + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * (self.yd[0,1])**(2) * (self.ydbar[0,1])**(2) + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[0,1] * self.yd[1,1] * (self.ydbar[0,1])**(2) + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[0,1] * self.yd[1,1] * (self.ydbar[0,1])**(2) + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,1] * (self.ydbar[0,1])**(2) + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[0,1] * self.yd[2,1] * (self.ydbar[0,1])**(2) + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[0,1] * self.yd[2,1] * (self.ydbar[0,1])**(2) + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,1] * (self.ydbar[0,1])**(2) + 3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,2] * self.ydbar[0,2] + 3/4 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,2] * self.ydbar[0,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[0])**(2) * (self.lambdaDbar[0])**(2) * self.yd[0,2] * self.ydbar[0,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaDbar[0] * self.lambdaDbar[1] * self.yd[0,2] * self.ydbar[0,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * self.lambdaDbar[0] * self.lambdaDbar[2] * self.yd[0,2] * self.ydbar[0,2] + -3/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] + 3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,2] * self.ydbar[0,2] + 3/4 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,2] * self.ydbar[0,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * (self.lambdaDbar[0])**(2) * self.yd[1,2] * self.ydbar[0,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[1])**(2) * self.lambdaDbar[0] * self.lambdaDbar[1] * self.yd[1,2] * self.ydbar[0,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[0] * self.lambdaDbar[2] * self.yd[1,2] * self.ydbar[0,2] + -3/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[0,2] + 3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,2] * self.ydbar[0,2] + 3/4 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,2] * self.ydbar[0,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * (self.lambdaDbar[0])**(2) * self.yd[2,2] * self.ydbar[0,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[0] * self.lambdaDbar[1] * self.yd[2,2] * self.ydbar[0,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[2])**(2) * self.lambdaDbar[0] * self.lambdaDbar[2] * self.yd[2,2] * self.ydbar[0,2] + -3/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[0,2] + -3/4 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,0] * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[0,2] + -3/4 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,0] * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[0,2] + 3/4 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[0,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[0,2] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[0,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[0,2] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[0,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[0,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[0,0] * self.yd[1,2] * self.ydbar[0,0] * self.ydbar[0,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[0,0] * self.yd[1,2] * self.ydbar[0,0] * self.ydbar[0,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,2] * self.ydbar[0,0] * self.ydbar[0,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[0,2] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[0,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[0,2] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[0,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[0,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[0,0] * self.yd[2,2] * self.ydbar[0,0] * self.ydbar[0,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[0,0] * self.yd[2,2] * self.ydbar[0,0] * self.ydbar[0,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,2] * self.ydbar[0,0] * self.ydbar[0,2] + -3/4 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,1] * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[0,2] + -3/4 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,1] * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[0,2] + 3/4 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[0,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[0,2] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[0,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[0,2] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[0,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[0,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[0,1] * self.yd[1,2] * self.ydbar[0,1] * self.ydbar[0,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[0,1] * self.yd[1,2] * self.ydbar[0,1] * self.ydbar[0,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,2] * self.ydbar[0,1] * self.ydbar[0,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[0,2] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[0,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[0,2] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[0,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[0,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[0,1] * self.yd[2,2] * self.ydbar[0,1] * self.ydbar[0,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[0,1] * self.yd[2,2] * self.ydbar[0,1] * self.ydbar[0,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,2] * self.ydbar[0,1] * self.ydbar[0,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * (self.yd[0,2])**(2) * (self.ydbar[0,2])**(2) + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * (self.yd[0,2])**(2) * (self.ydbar[0,2])**(2) + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * (self.yd[0,2])**(2) * (self.ydbar[0,2])**(2) + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[0,2] * self.yd[1,2] * (self.ydbar[0,2])**(2) + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[0,2] * self.yd[1,2] * (self.ydbar[0,2])**(2) + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,2] * (self.ydbar[0,2])**(2) + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[0,2] * self.yd[2,2] * (self.ydbar[0,2])**(2) + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[0,2] * self.yd[2,2] * (self.ydbar[0,2])**(2) + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,2] * (self.ydbar[0,2])**(2) + 3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,0] * self.ydbar[1,0] + 3/4 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,0] * self.ydbar[1,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[0])**(2) * self.lambdaDbar[0] * self.lambdaDbar[1] * self.yd[0,0] * self.ydbar[1,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * (self.lambdaDbar[1])**(2) * self.yd[0,0] * self.ydbar[1,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * self.lambdaDbar[1] * self.lambdaDbar[2] * self.yd[0,0] * self.ydbar[1,0] + -3/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[1,0] + 3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,0] * self.ydbar[1,0] + 3/4 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,0] * self.ydbar[1,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaDbar[0] * self.lambdaDbar[1] * self.yd[1,0] * self.ydbar[1,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[1])**(2) * (self.lambdaDbar[1])**(2) * self.yd[1,0] * self.ydbar[1,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[1] * self.lambdaDbar[2] * self.yd[1,0] * self.ydbar[1,0] + -3/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] + 3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,0] * self.ydbar[1,0] + 3/4 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,0] * self.ydbar[1,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * self.lambdaDbar[0] * self.lambdaDbar[1] * self.yd[2,0] * self.ydbar[1,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * (self.lambdaDbar[1])**(2) * self.yd[2,0] * self.ydbar[1,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[2])**(2) * self.lambdaDbar[1] * self.lambdaDbar[2] * self.yd[2,0] * self.ydbar[1,0] + -3/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[1,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * (self.yd[0,0])**(2) * self.ydbar[0,0] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * (self.yd[0,0])**(2) * self.ydbar[0,0] * self.ydbar[1,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * (self.yd[0,0])**(2) * self.ydbar[0,0] * self.ydbar[1,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,0] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,0] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * (self.yd[1,0])**(2) * self.ydbar[0,0] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * (self.yd[1,0])**(2) * self.ydbar[0,0] * self.ydbar[1,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * (self.yd[1,0])**(2) * self.ydbar[0,0] * self.ydbar[1,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[1,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[1,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[1,0] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[1,0] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[1,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[1,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[0,1] * self.ydbar[0,1] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[0,1] * self.ydbar[0,1] * self.ydbar[1,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[0,1] * self.ydbar[0,1] * self.ydbar[1,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,0] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,0] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,0] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,0] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[1,1] * self.yd[2,0] * self.ydbar[0,1] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[1,1] * self.yd[2,0] * self.ydbar[0,1] * self.ydbar[1,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,0] * self.ydbar[0,1] * self.ydbar[1,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[1,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[1,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[0,2] * self.ydbar[0,2] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[0,2] * self.ydbar[0,2] * self.ydbar[1,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[0,2] * self.ydbar[0,2] * self.ydbar[1,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,0] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,0] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,0] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,0] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[1,2] * self.yd[2,0] * self.ydbar[0,2] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[1,2] * self.yd[2,0] * self.ydbar[0,2] * self.ydbar[1,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,0] * self.ydbar[0,2] * self.ydbar[1,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[1,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[1,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[1,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[1,0] * (self.ydbar[1,0])**(2) + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[1,0] * (self.ydbar[1,0])**(2) + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,0] * (self.ydbar[1,0])**(2) + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * (self.yd[1,0])**(2) * (self.ydbar[1,0])**(2) + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * (self.yd[1,0])**(2) * (self.ydbar[1,0])**(2) + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * (self.yd[1,0])**(2) * (self.ydbar[1,0])**(2) + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[1,0] * self.yd[2,0] * (self.ydbar[1,0])**(2) + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[1,0] * self.yd[2,0] * (self.ydbar[1,0])**(2) + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,0] * (self.ydbar[1,0])**(2) + 3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,1] * self.ydbar[1,1] + 3/4 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,1] * self.ydbar[1,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[0])**(2) * self.lambdaDbar[0] * self.lambdaDbar[1] * self.yd[0,1] * self.ydbar[1,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * (self.lambdaDbar[1])**(2) * self.yd[0,1] * self.ydbar[1,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * self.lambdaDbar[1] * self.lambdaDbar[2] * self.yd[0,1] * self.ydbar[1,1] + -3/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[1,1] + 3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,1] * self.ydbar[1,1] + 3/4 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,1] * self.ydbar[1,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaDbar[0] * self.lambdaDbar[1] * self.yd[1,1] * self.ydbar[1,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[1])**(2) * (self.lambdaDbar[1])**(2) * self.yd[1,1] * self.ydbar[1,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[1] * self.lambdaDbar[2] * self.yd[1,1] * self.ydbar[1,1] + -3/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] + 3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,1] * self.ydbar[1,1] + 3/4 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,1] * self.ydbar[1,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * self.lambdaDbar[0] * self.lambdaDbar[1] * self.yd[2,1] * self.ydbar[1,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * (self.lambdaDbar[1])**(2) * self.yd[2,1] * self.ydbar[1,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[2])**(2) * self.lambdaDbar[1] * self.lambdaDbar[2] * self.yd[2,1] * self.ydbar[1,1] + -3/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[1,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[1,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[1,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,1] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,1] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[0,1] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[0,1] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,0] * self.yd[1,1] * self.ydbar[0,0] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,0] * self.yd[1,1] * self.ydbar[0,0] * self.ydbar[1,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[1,1] * self.ydbar[0,0] * self.ydbar[1,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[0,1] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[0,1] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[1,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[1,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[1,0] * self.yd[2,1] * self.ydbar[0,0] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[1,0] * self.yd[2,1] * self.ydbar[0,0] * self.ydbar[1,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,1] * self.ydbar[0,0] * self.ydbar[1,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * (self.yd[0,1])**(2) * self.ydbar[0,1] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * (self.yd[0,1])**(2) * self.ydbar[0,1] * self.ydbar[1,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * (self.yd[0,1])**(2) * self.ydbar[0,1] * self.ydbar[1,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,1] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,1] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[0,1] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[0,1] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * (self.yd[1,1])**(2) * self.ydbar[0,1] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * (self.yd[1,1])**(2) * self.ydbar[0,1] * self.ydbar[1,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * (self.yd[1,1])**(2) * self.ydbar[0,1] * self.ydbar[1,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[0,1] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[0,1] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[1,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[1,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[1,1] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[1,1] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[1,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[1,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,1] * self.yd[0,2] * self.ydbar[0,2] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,1] * self.yd[0,2] * self.ydbar[0,2] * self.ydbar[1,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[0,2] * self.ydbar[0,2] * self.ydbar[1,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,1] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,1] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[0,1] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[0,1] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,1] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,1] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[1,2] * self.yd[2,1] * self.ydbar[0,2] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[1,2] * self.yd[2,1] * self.ydbar[0,2] * self.ydbar[1,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,1] * self.ydbar[0,2] * self.ydbar[1,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[0,1] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[0,1] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[1,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[1,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,1] * self.yd[1,0] * self.ydbar[1,0] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,1] * self.yd[1,0] * self.ydbar[1,0] * self.ydbar[1,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,0] * self.ydbar[1,0] * self.ydbar[1,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[1,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[1,1] + -3/4 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,0] * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[1,1] + -3/4 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,0] * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[1,1] + 3/4 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[1,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[1,1] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[1,1] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[1,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[1,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[1,0] * self.yd[2,1] * self.ydbar[1,0] * self.ydbar[1,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[1,0] * self.yd[2,1] * self.ydbar[1,0] * self.ydbar[1,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,1] * self.ydbar[1,0] * self.ydbar[1,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,1] * self.yd[1,1] * (self.ydbar[1,1])**(2) + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,1] * self.yd[1,1] * (self.ydbar[1,1])**(2) + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,1] * (self.ydbar[1,1])**(2) + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * (self.yd[1,1])**(2) * (self.ydbar[1,1])**(2) + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * (self.yd[1,1])**(2) * (self.ydbar[1,1])**(2) + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * (self.yd[1,1])**(2) * (self.ydbar[1,1])**(2) + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[1,1] * self.yd[2,1] * (self.ydbar[1,1])**(2) + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[1,1] * self.yd[2,1] * (self.ydbar[1,1])**(2) + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,1] * (self.ydbar[1,1])**(2) + 3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,2] * self.ydbar[1,2] + 3/4 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,2] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[0])**(2) * self.lambdaDbar[0] * self.lambdaDbar[1] * self.yd[0,2] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * (self.lambdaDbar[1])**(2) * self.yd[0,2] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * self.lambdaDbar[1] * self.lambdaDbar[2] * self.yd[0,2] * self.ydbar[1,2] + -3/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[1,2] + 3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,2] * self.ydbar[1,2] + 3/4 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,2] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaDbar[0] * self.lambdaDbar[1] * self.yd[1,2] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[1])**(2) * (self.lambdaDbar[1])**(2) * self.yd[1,2] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[1] * self.lambdaDbar[2] * self.yd[1,2] * self.ydbar[1,2] + -3/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,2] + 3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,2] * self.ydbar[1,2] + 3/4 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,2] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * self.lambdaDbar[0] * self.lambdaDbar[1] * self.yd[2,2] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * (self.lambdaDbar[1])**(2) * self.yd[2,2] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[2])**(2) * self.lambdaDbar[1] * self.lambdaDbar[2] * self.yd[2,2] * self.ydbar[1,2] + -3/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[1,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[1,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,2] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,2] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[0,2] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[0,2] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,0] * self.yd[1,2] * self.ydbar[0,0] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,0] * self.yd[1,2] * self.ydbar[0,0] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[1,2] * self.ydbar[0,0] * self.ydbar[1,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[0,2] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[0,2] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[1,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[1,0] * self.yd[2,2] * self.ydbar[0,0] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[1,0] * self.yd[2,2] * self.ydbar[0,0] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,2] * self.ydbar[0,0] * self.ydbar[1,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,1] * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,1] * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[1,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,2] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,2] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[0,2] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[0,2] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,1] * self.yd[1,2] * self.ydbar[0,1] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,1] * self.yd[1,2] * self.ydbar[0,1] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[1,2] * self.ydbar[0,1] * self.ydbar[1,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[0,2] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[0,2] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[1,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[1,1] * self.yd[2,2] * self.ydbar[0,1] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[1,1] * self.yd[2,2] * self.ydbar[0,1] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,2] * self.ydbar[0,1] * self.ydbar[1,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * (self.yd[0,2])**(2) * self.ydbar[0,2] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * (self.yd[0,2])**(2) * self.ydbar[0,2] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * (self.yd[0,2])**(2) * self.ydbar[0,2] * self.ydbar[1,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,2] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,2] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[0,2] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[0,2] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * (self.yd[1,2])**(2) * self.ydbar[0,2] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * (self.yd[1,2])**(2) * self.ydbar[0,2] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * (self.yd[1,2])**(2) * self.ydbar[0,2] * self.ydbar[1,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[0,2] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[0,2] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[1,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[1,2] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[1,2] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[1,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,2] * self.yd[1,0] * self.ydbar[1,0] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,2] * self.yd[1,0] * self.ydbar[1,0] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,0] * self.ydbar[1,0] * self.ydbar[1,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[1,2] + -3/4 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,0] * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[1,2] + -3/4 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,0] * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[1,2] + 3/4 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[1,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[1,2] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[1,2] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[1,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[1,0] * self.yd[2,2] * self.ydbar[1,0] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[1,0] * self.yd[2,2] * self.ydbar[1,0] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,2] * self.ydbar[1,0] * self.ydbar[1,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,2] * self.yd[1,1] * self.ydbar[1,1] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,2] * self.yd[1,1] * self.ydbar[1,1] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,1] * self.ydbar[1,1] * self.ydbar[1,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,1] * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,1] * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[1,2] + -3/4 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,1] * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[1,2] + -3/4 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,1] * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[1,2] + 3/4 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[1,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[1,2] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[1,2] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[1,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[1,1] * self.yd[2,2] * self.ydbar[1,1] * self.ydbar[1,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[1,1] * self.yd[2,2] * self.ydbar[1,1] * self.ydbar[1,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,2] * self.ydbar[1,1] * self.ydbar[1,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,2] * self.yd[1,2] * (self.ydbar[1,2])**(2) + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,2] * self.yd[1,2] * (self.ydbar[1,2])**(2) + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,2] * (self.ydbar[1,2])**(2) + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * (self.yd[1,2])**(2) * (self.ydbar[1,2])**(2) + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * (self.yd[1,2])**(2) * (self.ydbar[1,2])**(2) + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * (self.yd[1,2])**(2) * (self.ydbar[1,2])**(2) + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[1,2] * self.yd[2,2] * (self.ydbar[1,2])**(2) + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[1,2] * self.yd[2,2] * (self.ydbar[1,2])**(2) + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,2] * (self.ydbar[1,2])**(2) + 3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,0] * self.ydbar[2,0] + 3/4 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,0] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[0])**(2) * self.lambdaDbar[0] * self.lambdaDbar[2] * self.yd[0,0] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaDbar[1] * self.lambdaDbar[2] * self.yd[0,0] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * (self.lambdaDbar[2])**(2) * self.yd[0,0] * self.ydbar[2,0] + -3/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[2,0] + 3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,0] * self.ydbar[2,0] + 3/4 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,0] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaDbar[0] * self.lambdaDbar[2] * self.yd[1,0] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[1])**(2) * self.lambdaDbar[1] * self.lambdaDbar[2] * self.yd[1,0] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * (self.lambdaDbar[2])**(2) * self.yd[1,0] * self.ydbar[2,0] + -3/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[2,0] + 3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,0] * self.ydbar[2,0] + 3/4 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,0] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * self.lambdaDbar[0] * self.lambdaDbar[2] * self.yd[2,0] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[1] * self.lambdaDbar[2] * self.yd[2,0] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[2])**(2) * (self.lambdaDbar[2])**(2) * self.yd[2,0] * self.ydbar[2,0] + -3/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * (self.yd[0,0])**(2) * self.ydbar[0,0] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * (self.yd[0,0])**(2) * self.ydbar[0,0] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * (self.yd[0,0])**(2) * self.ydbar[0,0] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,0] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,0] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,0] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,0] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * (self.yd[2,0])**(2) * self.ydbar[0,0] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * (self.yd[2,0])**(2) * self.ydbar[0,0] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * (self.yd[2,0])**(2) * self.ydbar[0,0] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[0,1] * self.ydbar[0,1] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[0,1] * self.ydbar[0,1] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[0,1] * self.ydbar[0,1] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,0] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,0] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,0] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,0] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,0] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,0] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[0,2] * self.ydbar[0,2] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[0,2] * self.ydbar[0,2] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[0,2] * self.ydbar[0,2] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,0] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,0] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,0] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,0] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,0] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,0] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[1,0] * self.ydbar[1,0] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[1,0] * self.ydbar[1,0] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,0] * self.ydbar[1,0] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * (self.yd[1,0])**(2) * self.ydbar[1,0] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * (self.yd[1,0])**(2) * self.ydbar[1,0] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * (self.yd[1,0])**(2) * self.ydbar[1,0] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,0] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,0] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[1,0] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[1,0] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * (self.yd[2,0])**(2) * self.ydbar[1,0] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * (self.yd[2,0])**(2) * self.ydbar[1,0] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * (self.yd[2,0])**(2) * self.ydbar[1,0] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,1] * self.yd[1,0] * self.ydbar[1,1] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,1] * self.yd[1,0] * self.ydbar[1,1] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,0] * self.ydbar[1,1] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,0] * self.yd[1,1] * self.ydbar[1,1] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,0] * self.yd[1,1] * self.ydbar[1,1] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[1,1] * self.ydbar[1,1] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,0] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,0] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[1,0] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[1,0] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,0] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,0] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,2] * self.yd[1,0] * self.ydbar[1,2] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,2] * self.yd[1,0] * self.ydbar[1,2] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,0] * self.ydbar[1,2] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,0] * self.yd[1,2] * self.ydbar[1,2] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,0] * self.yd[1,2] * self.ydbar[1,2] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[1,2] * self.ydbar[1,2] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,0] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,0] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[1,0] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[1,0] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,0] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,0] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,0] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,0] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,0] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[2,0] * (self.ydbar[2,0])**(2) + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[2,0] * (self.ydbar[2,0])**(2) + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,0] * (self.ydbar[2,0])**(2) + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,0] * self.yd[2,0] * (self.ydbar[2,0])**(2) + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,0] * self.yd[2,0] * (self.ydbar[2,0])**(2) + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,0] * (self.ydbar[2,0])**(2) + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * (self.yd[2,0])**(2) * (self.ydbar[2,0])**(2) + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * (self.yd[2,0])**(2) * (self.ydbar[2,0])**(2) + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * (self.yd[2,0])**(2) * (self.ydbar[2,0])**(2) + 3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,1] * self.ydbar[2,1] + 3/4 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,1] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[0])**(2) * self.lambdaDbar[0] * self.lambdaDbar[2] * self.yd[0,1] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaDbar[1] * self.lambdaDbar[2] * self.yd[0,1] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * (self.lambdaDbar[2])**(2) * self.yd[0,1] * self.ydbar[2,1] + -3/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[2,1] + 3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,1] * self.ydbar[2,1] + 3/4 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,1] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaDbar[0] * self.lambdaDbar[2] * self.yd[1,1] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[1])**(2) * self.lambdaDbar[1] * self.lambdaDbar[2] * self.yd[1,1] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * (self.lambdaDbar[2])**(2) * self.yd[1,1] * self.ydbar[2,1] + -3/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[2,1] + 3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,1] * self.ydbar[2,1] + 3/4 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,1] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * self.lambdaDbar[0] * self.lambdaDbar[2] * self.yd[2,1] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[1] * self.lambdaDbar[2] * self.yd[2,1] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[2])**(2) * (self.lambdaDbar[2])**(2) * self.yd[2,1] * self.ydbar[2,1] + -3/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[0,1] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[0,1] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,1] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,1] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[0,1] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[0,1] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,1] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,1] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,0] * self.yd[2,1] * self.ydbar[0,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,0] * self.yd[2,1] * self.ydbar[0,0] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yd[2,1] * self.ydbar[0,0] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * (self.yd[0,1])**(2) * self.ydbar[0,1] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * (self.yd[0,1])**(2) * self.ydbar[0,1] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * (self.yd[0,1])**(2) * self.ydbar[0,1] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[0,1] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[0,1] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,1] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,1] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[0,1] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[0,1] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,1] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,1] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * (self.yd[2,1])**(2) * self.ydbar[0,1] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * (self.yd[2,1])**(2) * self.ydbar[0,1] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * (self.yd[2,1])**(2) * self.ydbar[0,1] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,1] * self.yd[0,2] * self.ydbar[0,2] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,1] * self.yd[0,2] * self.ydbar[0,2] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[0,2] * self.ydbar[0,2] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[0,1] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[0,1] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,1] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,1] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[0,1] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[0,1] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,1] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,1] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,1] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,1] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,0] * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,0] * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,1] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,1] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,1] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,1] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[1,1] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[1,1] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,0] * self.yd[2,1] * self.ydbar[1,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,0] * self.yd[2,1] * self.ydbar[1,0] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yd[2,1] * self.ydbar[1,0] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,1] * self.yd[1,1] * self.ydbar[1,1] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,1] * self.yd[1,1] * self.ydbar[1,1] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,1] * self.ydbar[1,1] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * (self.yd[1,1])**(2) * self.ydbar[1,1] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * (self.yd[1,1])**(2) * self.ydbar[1,1] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * (self.yd[1,1])**(2) * self.ydbar[1,1] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,1] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,1] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,1] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,1] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[1,1] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[1,1] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * (self.yd[2,1])**(2) * self.ydbar[1,1] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * (self.yd[2,1])**(2) * self.ydbar[1,1] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * (self.yd[2,1])**(2) * self.ydbar[1,1] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,2] * self.yd[1,1] * self.ydbar[1,2] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,2] * self.yd[1,1] * self.ydbar[1,2] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,1] * self.ydbar[1,2] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,1] * self.yd[1,2] * self.ydbar[1,2] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,1] * self.yd[1,2] * self.ydbar[1,2] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[1,2] * self.ydbar[1,2] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,1] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,1] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,1] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,1] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[1,1] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[1,1] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,1] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,1] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,1] * self.yd[2,0] * self.ydbar[2,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,1] * self.yd[2,0] * self.ydbar[2,0] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,0] * self.ydbar[2,0] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,1] * self.yd[2,0] * self.ydbar[2,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,1] * self.yd[2,0] * self.ydbar[2,0] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,0] * self.ydbar[2,0] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[2,1] * self.ydbar[2,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[2,1] * self.ydbar[2,0] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,1] * self.ydbar[2,0] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,0] * self.yd[2,1] * self.ydbar[2,0] * self.ydbar[2,1] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,0] * self.yd[2,1] * self.ydbar[2,0] * self.ydbar[2,1] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,1] * self.ydbar[2,0] * self.ydbar[2,1] + -3/4 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,0] * self.yd[2,1] * self.ydbar[2,0] * self.ydbar[2,1] + -3/4 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,0] * self.yd[2,1] * self.ydbar[2,0] * self.ydbar[2,1] + 3/4 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yd[2,1] * self.ydbar[2,0] * self.ydbar[2,1] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,1] * self.yd[2,1] * (self.ydbar[2,1])**(2) + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,1] * self.yd[2,1] * (self.ydbar[2,1])**(2) + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,1] * (self.ydbar[2,1])**(2) + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,1] * self.yd[2,1] * (self.ydbar[2,1])**(2) + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,1] * self.yd[2,1] * (self.ydbar[2,1])**(2) + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,1] * (self.ydbar[2,1])**(2) + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * (self.yd[2,1])**(2) * (self.ydbar[2,1])**(2) + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * (self.yd[2,1])**(2) * (self.ydbar[2,1])**(2) + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * (self.yd[2,1])**(2) * (self.ydbar[2,1])**(2) + 3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,2] * self.ydbar[2,2] + 3/4 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,2] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[0])**(2) * self.lambdaDbar[0] * self.lambdaDbar[2] * self.yd[0,2] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaDbar[1] * self.lambdaDbar[2] * self.yd[0,2] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * (self.lambdaDbar[2])**(2) * self.yd[0,2] * self.ydbar[2,2] + -3/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[2,2] + 3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,2] * self.ydbar[2,2] + 3/4 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,2] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaDbar[0] * self.lambdaDbar[2] * self.yd[1,2] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[1])**(2) * self.lambdaDbar[1] * self.lambdaDbar[2] * self.yd[1,2] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * (self.lambdaDbar[2])**(2) * self.yd[1,2] * self.ydbar[2,2] + -3/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[2,2] + 3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,2] * self.ydbar[2,2] + 3/4 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,2] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * self.lambdaDbar[0] * self.lambdaDbar[2] * self.yd[2,2] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[1] * self.lambdaDbar[2] * self.yd[2,2] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[2])**(2) * (self.lambdaDbar[2])**(2) * self.yd[2,2] * self.ydbar[2,2] + -3/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[0,2] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[0,2] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,2] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,2] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[0,2] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[0,2] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,2] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,2] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,0] * self.yd[2,2] * self.ydbar[0,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,0] * self.yd[2,2] * self.ydbar[0,0] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yd[2,2] * self.ydbar[0,0] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,1] * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,1] * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[0,2] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[0,2] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,2] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,2] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[0,2] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[0,2] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,2] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,2] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,1] * self.yd[2,2] * self.ydbar[0,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,1] * self.yd[2,2] * self.ydbar[0,1] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.yd[2,2] * self.ydbar[0,1] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * (self.yd[0,2])**(2) * self.ydbar[0,2] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * (self.yd[0,2])**(2) * self.ydbar[0,2] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * (self.yd[0,2])**(2) * self.ydbar[0,2] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[0,2] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[0,2] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,2] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,2] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[0,2] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[0,2] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,2] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,2] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * (self.yd[2,2])**(2) * self.ydbar[0,2] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * (self.yd[2,2])**(2) * self.ydbar[0,2] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * (self.yd[2,2])**(2) * self.ydbar[0,2] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,0] * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,0] * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,2] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,2] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,2] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,2] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[1,2] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[1,2] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,0] * self.yd[2,2] * self.ydbar[1,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,0] * self.yd[2,2] * self.ydbar[1,0] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yd[2,2] * self.ydbar[1,0] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,1] * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,1] * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,1] * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,1] * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,2] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,2] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,2] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,2] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[1,2] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[1,2] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,1] * self.yd[2,2] * self.ydbar[1,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,1] * self.yd[2,2] * self.ydbar[1,1] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.yd[2,2] * self.ydbar[1,1] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,2] * self.yd[1,2] * self.ydbar[1,2] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,2] * self.yd[1,2] * self.ydbar[1,2] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[1,2] * self.ydbar[1,2] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * (self.yd[1,2])**(2) * self.ydbar[1,2] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * (self.yd[1,2])**(2) * self.ydbar[1,2] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * (self.yd[1,2])**(2) * self.ydbar[1,2] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,2] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,2] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,2] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,2] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[1,2] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[1,2] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * (self.yd[2,2])**(2) * self.ydbar[1,2] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * (self.yd[2,2])**(2) * self.ydbar[1,2] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * (self.yd[2,2])**(2) * self.ydbar[1,2] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,2] * self.yd[2,0] * self.ydbar[2,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,2] * self.yd[2,0] * self.ydbar[2,0] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,0] * self.ydbar[2,0] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,2] * self.yd[2,0] * self.ydbar[2,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,2] * self.yd[2,0] * self.ydbar[2,0] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,0] * self.ydbar[2,0] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[2,2] * self.ydbar[2,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[2,2] * self.ydbar[2,0] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[2,2] * self.ydbar[2,0] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,0] * self.yd[2,2] * self.ydbar[2,0] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,0] * self.yd[2,2] * self.ydbar[2,0] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[2,2] * self.ydbar[2,0] * self.ydbar[2,2] + -3/4 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,0] * self.yd[2,2] * self.ydbar[2,0] * self.ydbar[2,2] + -3/4 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,0] * self.yd[2,2] * self.ydbar[2,0] * self.ydbar[2,2] + 3/4 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yd[2,2] * self.ydbar[2,0] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,2] * self.yd[2,1] * self.ydbar[2,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,2] * self.yd[2,1] * self.ydbar[2,1] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,1] * self.ydbar[2,1] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,2] * self.yd[2,1] * self.ydbar[2,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,2] * self.yd[2,1] * self.ydbar[2,1] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,1] * self.ydbar[2,1] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,1] * self.yd[2,2] * self.ydbar[2,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,1] * self.yd[2,2] * self.ydbar[2,1] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[2,2] * self.ydbar[2,1] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,1] * self.yd[2,2] * self.ydbar[2,1] * self.ydbar[2,2] + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,1] * self.yd[2,2] * self.ydbar[2,1] * self.ydbar[2,2] + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[2,2] * self.ydbar[2,1] * self.ydbar[2,2] + -3/4 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,1] * self.yd[2,2] * self.ydbar[2,1] * self.ydbar[2,2] + -3/4 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,1] * self.yd[2,2] * self.ydbar[2,1] * self.ydbar[2,2] + 3/4 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.yd[2,2] * self.ydbar[2,1] * self.ydbar[2,2] + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,2] * self.yd[2,2] * (self.ydbar[2,2])**(2) + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,2] * self.yd[2,2] * (self.ydbar[2,2])**(2) + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[2,2] * (self.ydbar[2,2])**(2) + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,2] * self.yd[2,2] * (self.ydbar[2,2])**(2) + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,2] * self.yd[2,2] * (self.ydbar[2,2])**(2) + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[2,2] * (self.ydbar[2,2])**(2) + -3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * (self.yd[2,2])**(2) * (self.ydbar[2,2])**(2) + -3/8 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * (self.yd[2,2])**(2) * (self.ydbar[2,2])**(2) + 3/8 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * (self.yd[2,2])**(2) * (self.ydbar[2,2])**(2) + -3/16 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.ylbar[0,0] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.ylbar[0,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[0])**(2) * (self.lambdaDelta3bar[0])**(2) * self.yl[0,0] * self.ylbar[0,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * self.yl[0,0] * self.ylbar[0,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * self.yl[0,0] * self.ylbar[0,0] + -1/8 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] + -3/16 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.ylbar[0,0] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.ylbar[0,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[0])**(2) * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.ylbar[0,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[1] * (self.lambdaDelta3bar[1])**(2) * self.yl[0,1] * self.ylbar[0,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * self.yl[0,1] * self.ylbar[0,0] + -1/8 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,0] + -3/16 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.ylbar[0,0] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.ylbar[0,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[0])**(2) * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.ylbar[0,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.ylbar[0,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[2] * (self.lambdaDelta3bar[2])**(2) * self.yl[0,2] * self.ylbar[0,0] + -1/8 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * (self.yl[0,0])**(2) * (self.ylbar[0,0])**(2) + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * (self.yl[0,0])**(2) * (self.ylbar[0,0])**(2) + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * (self.yl[0,0])**(2) * (self.ylbar[0,0])**(2) + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,0] * self.yl[0,1] * (self.ylbar[0,0])**(2) + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,0] * self.yl[0,1] * (self.ylbar[0,0])**(2) + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,1] * (self.ylbar[0,0])**(2) + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,0] * self.yl[0,2] * (self.ylbar[0,0])**(2) + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,0] * self.yl[0,2] * (self.ylbar[0,0])**(2) + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,2] * (self.ylbar[0,0])**(2) + -3/16 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.ylbar[0,1] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.ylbar[0,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[1] * (self.lambdaDelta3bar[0])**(2) * self.yl[0,0] * self.ylbar[0,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[1])**(2) * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * self.yl[0,0] * self.ylbar[0,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * self.yl[0,0] * self.ylbar[0,1] + -1/8 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,1] + -3/16 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.ylbar[0,1] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.ylbar[0,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.ylbar[0,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[1])**(2) * (self.lambdaDelta3bar[1])**(2) * self.yl[0,1] * self.ylbar[0,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * self.yl[0,1] * self.ylbar[0,1] + -1/8 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] + -3/16 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.ylbar[0,1] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.ylbar[0,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.ylbar[0,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[1])**(2) * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.ylbar[0,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[2] * (self.lambdaDelta3bar[2])**(2) * self.yl[0,2] * self.ylbar[0,1] + -1/8 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * (self.yl[0,0])**(2) * self.ylbar[0,0] * self.ylbar[0,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * (self.yl[0,0])**(2) * self.ylbar[0,0] * self.ylbar[0,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * (self.yl[0,0])**(2) * self.ylbar[0,0] * self.ylbar[0,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * (self.yl[0,1])**(2) * self.ylbar[0,0] * self.ylbar[0,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * (self.yl[0,1])**(2) * self.ylbar[0,0] * self.ylbar[0,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * (self.yl[0,1])**(2) * self.ylbar[0,0] * self.ylbar[0,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[0,1] * (self.ylbar[0,1])**(2) + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[0,1] * (self.ylbar[0,1])**(2) + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,1] * (self.ylbar[0,1])**(2) + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * (self.yl[0,1])**(2) * (self.ylbar[0,1])**(2) + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * (self.yl[0,1])**(2) * (self.ylbar[0,1])**(2) + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * (self.yl[0,1])**(2) * (self.ylbar[0,1])**(2) + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,1] * self.yl[0,2] * (self.ylbar[0,1])**(2) + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,1] * self.yl[0,2] * (self.ylbar[0,1])**(2) + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[0,2] * (self.ylbar[0,1])**(2) + -3/16 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.ylbar[0,2] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.ylbar[0,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[2] * (self.lambdaDelta3bar[0])**(2) * self.yl[0,0] * self.ylbar[0,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * self.yl[0,0] * self.ylbar[0,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[2])**(2) * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * self.yl[0,0] * self.ylbar[0,2] + -1/8 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,2] + -3/16 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.ylbar[0,2] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.ylbar[0,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.ylbar[0,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[2] * (self.lambdaDelta3bar[1])**(2) * self.yl[0,1] * self.ylbar[0,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[2])**(2) * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * self.yl[0,1] * self.ylbar[0,2] + -1/8 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,2] + -3/16 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.ylbar[0,2] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.ylbar[0,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.ylbar[0,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.ylbar[0,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[2])**(2) * (self.lambdaDelta3bar[2])**(2) * self.yl[0,2] * self.ylbar[0,2] + -1/8 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * (self.yl[0,0])**(2) * self.ylbar[0,0] * self.ylbar[0,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * (self.yl[0,0])**(2) * self.ylbar[0,0] * self.ylbar[0,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * (self.yl[0,0])**(2) * self.ylbar[0,0] * self.ylbar[0,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * (self.yl[0,2])**(2) * self.ylbar[0,0] * self.ylbar[0,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * (self.yl[0,2])**(2) * self.ylbar[0,0] * self.ylbar[0,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * (self.yl[0,2])**(2) * self.ylbar[0,0] * self.ylbar[0,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[0,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[0,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[0,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * (self.yl[0,1])**(2) * self.ylbar[0,1] * self.ylbar[0,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * (self.yl[0,1])**(2) * self.ylbar[0,1] * self.ylbar[0,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * (self.yl[0,1])**(2) * self.ylbar[0,1] * self.ylbar[0,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * (self.yl[0,2])**(2) * self.ylbar[0,1] * self.ylbar[0,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * (self.yl[0,2])**(2) * self.ylbar[0,1] * self.ylbar[0,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * (self.yl[0,2])**(2) * self.ylbar[0,1] * self.ylbar[0,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[0,2] * (self.ylbar[0,2])**(2) + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[0,2] * (self.ylbar[0,2])**(2) + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,2] * (self.ylbar[0,2])**(2) + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[0,2] * (self.ylbar[0,2])**(2) + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[0,2] * (self.ylbar[0,2])**(2) + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[0,2] * (self.ylbar[0,2])**(2) + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * (self.yl[0,2])**(2) * (self.ylbar[0,2])**(2) + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * (self.yl[0,2])**(2) * (self.ylbar[0,2])**(2) + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * (self.yl[0,2])**(2) * (self.ylbar[0,2])**(2) + -3/16 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.ylbar[1,0] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.ylbar[1,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[0])**(2) * (self.lambdaDelta3bar[0])**(2) * self.yl[1,0] * self.ylbar[1,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * self.yl[1,0] * self.ylbar[1,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * self.yl[1,0] * self.ylbar[1,0] + -1/8 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] + -3/16 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.ylbar[1,0] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.ylbar[1,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[0])**(2) * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.ylbar[1,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[1] * (self.lambdaDelta3bar[1])**(2) * self.yl[1,1] * self.ylbar[1,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * self.yl[1,1] * self.ylbar[1,0] + -1/8 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,0] + -3/16 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.ylbar[1,0] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.ylbar[1,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[0])**(2) * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.ylbar[1,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.ylbar[1,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[2] * (self.lambdaDelta3bar[2])**(2) * self.yl[1,2] * self.ylbar[1,0] + -1/8 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,0] + -1/4 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + -1/4 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + 1/4 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,0] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,0] * self.ylbar[1,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,0] * self.ylbar[1,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,0] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,0] * self.ylbar[1,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,0] * self.ylbar[1,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,1] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,1] * self.ylbar[1,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,1] * self.ylbar[1,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,1] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,1] * self.ylbar[1,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,1] * self.ylbar[1,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,2] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,2] * self.ylbar[1,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,2] * self.ylbar[1,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,2] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,2] * self.ylbar[1,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,2] * self.ylbar[1,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * (self.yl[1,0])**(2) * (self.ylbar[1,0])**(2) + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * (self.yl[1,0])**(2) * (self.ylbar[1,0])**(2) + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * (self.yl[1,0])**(2) * (self.ylbar[1,0])**(2) + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[1,0] * self.yl[1,1] * (self.ylbar[1,0])**(2) + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[1,0] * self.yl[1,1] * (self.ylbar[1,0])**(2) + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,1] * (self.ylbar[1,0])**(2) + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[1,0] * self.yl[1,2] * (self.ylbar[1,0])**(2) + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[1,0] * self.yl[1,2] * (self.ylbar[1,0])**(2) + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,2] * (self.ylbar[1,0])**(2) + -3/16 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.ylbar[1,1] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[1] * (self.lambdaDelta3bar[0])**(2) * self.yl[1,0] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[1])**(2) * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * self.yl[1,0] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * self.yl[1,0] * self.ylbar[1,1] + -1/8 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,1] + -3/16 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.ylbar[1,1] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[1])**(2) * (self.lambdaDelta3bar[1])**(2) * self.yl[1,1] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * self.yl[1,1] * self.ylbar[1,1] + -1/8 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] + -3/16 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.ylbar[1,1] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[1])**(2) * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[2] * (self.lambdaDelta3bar[2])**(2) * self.yl[1,2] * self.ylbar[1,1] + -1/8 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,0] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,0] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,0] * self.ylbar[1,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,0] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,0] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,0] * self.ylbar[1,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,1] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,1] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,1] * self.ylbar[1,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + -1/4 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + -1/4 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + 1/4 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,1] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,1] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,1] * self.ylbar[1,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,2] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,2] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,2] * self.ylbar[1,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,2] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,2] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,2] * self.ylbar[1,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * (self.yl[1,0])**(2) * self.ylbar[1,0] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * (self.yl[1,0])**(2) * self.ylbar[1,0] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * (self.yl[1,0])**(2) * self.ylbar[1,0] * self.ylbar[1,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * (self.yl[1,1])**(2) * self.ylbar[1,0] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * (self.yl[1,1])**(2) * self.ylbar[1,0] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * (self.yl[1,1])**(2) * self.ylbar[1,0] * self.ylbar[1,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[1,1] * (self.ylbar[1,1])**(2) + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[1,1] * (self.ylbar[1,1])**(2) + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,1] * (self.ylbar[1,1])**(2) + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * (self.yl[1,1])**(2) * (self.ylbar[1,1])**(2) + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * (self.yl[1,1])**(2) * (self.ylbar[1,1])**(2) + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * (self.yl[1,1])**(2) * (self.ylbar[1,1])**(2) + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[1,1] * self.yl[1,2] * (self.ylbar[1,1])**(2) + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[1,1] * self.yl[1,2] * (self.ylbar[1,1])**(2) + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[1,2] * (self.ylbar[1,1])**(2) + -3/16 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.ylbar[1,2] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[2] * (self.lambdaDelta3bar[0])**(2) * self.yl[1,0] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * self.yl[1,0] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[2])**(2) * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * self.yl[1,0] * self.ylbar[1,2] + -1/8 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,2] + -3/16 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.ylbar[1,2] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[2] * (self.lambdaDelta3bar[1])**(2) * self.yl[1,1] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[2])**(2) * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * self.yl[1,1] * self.ylbar[1,2] + -1/8 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,2] + -3/16 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.ylbar[1,2] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[2])**(2) * (self.lambdaDelta3bar[2])**(2) * self.yl[1,2] * self.ylbar[1,2] + -1/8 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,0] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,0] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,0] * self.ylbar[1,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,0] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,0] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,0] * self.ylbar[1,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,1] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,1] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,1] * self.ylbar[1,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,1] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,1] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,1] * self.ylbar[1,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,2] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,2] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,2] * self.ylbar[1,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,2] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,2] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,2] * self.ylbar[1,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + -1/4 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + -1/4 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + 1/4 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * (self.yl[1,0])**(2) * self.ylbar[1,0] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * (self.yl[1,0])**(2) * self.ylbar[1,0] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * (self.yl[1,0])**(2) * self.ylbar[1,0] * self.ylbar[1,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * (self.yl[1,2])**(2) * self.ylbar[1,0] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * (self.yl[1,2])**(2) * self.ylbar[1,0] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * (self.yl[1,2])**(2) * self.ylbar[1,0] * self.ylbar[1,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[1,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * (self.yl[1,1])**(2) * self.ylbar[1,1] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * (self.yl[1,1])**(2) * self.ylbar[1,1] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * (self.yl[1,1])**(2) * self.ylbar[1,1] * self.ylbar[1,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * (self.yl[1,2])**(2) * self.ylbar[1,1] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * (self.yl[1,2])**(2) * self.ylbar[1,1] * self.ylbar[1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * (self.yl[1,2])**(2) * self.ylbar[1,1] * self.ylbar[1,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[1,2] * (self.ylbar[1,2])**(2) + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[1,2] * (self.ylbar[1,2])**(2) + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,2] * (self.ylbar[1,2])**(2) + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[1,2] * (self.ylbar[1,2])**(2) + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[1,2] * (self.ylbar[1,2])**(2) + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[1,2] * (self.ylbar[1,2])**(2) + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * (self.yl[1,2])**(2) * (self.ylbar[1,2])**(2) + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * (self.yl[1,2])**(2) * (self.ylbar[1,2])**(2) + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * (self.yl[1,2])**(2) * (self.ylbar[1,2])**(2) + -3/16 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.ylbar[2,0] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[0])**(2) * (self.lambdaDelta3bar[0])**(2) * self.yl[2,0] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * self.yl[2,0] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * self.yl[2,0] * self.ylbar[2,0] + -1/8 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] + -3/16 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.ylbar[2,0] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[0])**(2) * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[1] * (self.lambdaDelta3bar[1])**(2) * self.yl[2,1] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * self.yl[2,1] * self.ylbar[2,0] + -1/8 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,0] + -3/16 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.ylbar[2,0] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[0])**(2) * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[2] * (self.lambdaDelta3bar[2])**(2) * self.yl[2,2] * self.ylbar[2,0] + -1/8 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,0] + -1/4 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + -1/4 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + 1/4 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,0] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,0] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,0] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,0] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,0] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,0] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,1] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,1] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,1] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,1] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,1] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,1] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,2] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,2] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,2] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,2] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,2] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,2] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/4 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + -1/4 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + 1/4 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,0] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,0] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,0] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,0] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,0] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,0] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,1] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,1] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,1] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,1] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,1] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,1] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,2] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,2] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,2] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,2] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,2] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,2] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * (self.yl[2,0])**(2) * (self.ylbar[2,0])**(2) + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * (self.yl[2,0])**(2) * (self.ylbar[2,0])**(2) + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * (self.yl[2,0])**(2) * (self.ylbar[2,0])**(2) + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[2,0] * self.yl[2,1] * (self.ylbar[2,0])**(2) + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[2,0] * self.yl[2,1] * (self.ylbar[2,0])**(2) + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,1] * (self.ylbar[2,0])**(2) + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[2,0] * self.yl[2,2] * (self.ylbar[2,0])**(2) + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[2,0] * self.yl[2,2] * (self.ylbar[2,0])**(2) + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,2] * (self.ylbar[2,0])**(2) + -3/16 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.ylbar[2,1] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[1] * (self.lambdaDelta3bar[0])**(2) * self.yl[2,0] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[1])**(2) * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * self.yl[2,0] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * self.yl[2,0] * self.ylbar[2,1] + -1/8 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,1] + -3/16 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.ylbar[2,1] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[1])**(2) * (self.lambdaDelta3bar[1])**(2) * self.yl[2,1] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * self.yl[2,1] * self.ylbar[2,1] + -1/8 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,1] + -3/16 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.ylbar[2,1] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[1])**(2) * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[2] * (self.lambdaDelta3bar[2])**(2) * self.yl[2,2] * self.ylbar[2,1] + -1/8 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,0] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,0] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,0] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,0] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,1] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,1] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,1] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + -1/4 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + -1/4 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + 1/4 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,1] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,1] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,1] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,2] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,2] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,2] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,2] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,2] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,2] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,0] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,0] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,0] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,0] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,1] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,1] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,1] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + -1/4 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + -1/4 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + 1/4 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,1] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,1] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,1] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,2] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,2] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,2] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,2] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,2] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,2] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * (self.yl[2,0])**(2) * self.ylbar[2,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * (self.yl[2,0])**(2) * self.ylbar[2,0] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * (self.yl[2,0])**(2) * self.ylbar[2,0] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * (self.yl[2,1])**(2) * self.ylbar[2,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * (self.yl[2,1])**(2) * self.ylbar[2,0] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * (self.yl[2,1])**(2) * self.ylbar[2,0] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,1] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.yl[2,1] * (self.ylbar[2,1])**(2) + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.yl[2,1] * (self.ylbar[2,1])**(2) + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,1] * (self.ylbar[2,1])**(2) + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * (self.yl[2,1])**(2) * (self.ylbar[2,1])**(2) + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * (self.yl[2,1])**(2) * (self.ylbar[2,1])**(2) + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * (self.yl[2,1])**(2) * (self.ylbar[2,1])**(2) + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[2,1] * self.yl[2,2] * (self.ylbar[2,1])**(2) + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[2,1] * self.yl[2,2] * (self.ylbar[2,1])**(2) + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[2,2] * (self.ylbar[2,1])**(2) + -3/16 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.ylbar[2,2] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[2] * (self.lambdaDelta3bar[0])**(2) * self.yl[2,0] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * self.yl[2,0] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[2])**(2) * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * self.yl[2,0] * self.ylbar[2,2] + -1/8 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,2] + -3/16 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.ylbar[2,2] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[2] * (self.lambdaDelta3bar[1])**(2) * self.yl[2,1] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[2])**(2) * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * self.yl[2,1] * self.ylbar[2,2] + -1/8 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,2] + -3/16 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.ylbar[2,2] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[2])**(2) * (self.lambdaDelta3bar[2])**(2) * self.yl[2,2] * self.ylbar[2,2] + -1/8 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,0] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,0] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,0] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,0] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,1] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,1] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,1] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,1] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,2] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,2] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,2] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,2] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,2] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,2] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + -1/4 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + -1/4 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + 1/4 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,0] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,0] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,0] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,0] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,1] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,1] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,1] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,1] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,2] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,2] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,2] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,2] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,2] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,2] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + -1/4 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + -1/4 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + 1/4 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * (self.yl[2,0])**(2) * self.ylbar[2,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * (self.yl[2,0])**(2) * self.ylbar[2,0] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * (self.yl[2,0])**(2) * self.ylbar[2,0] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * (self.yl[2,2])**(2) * self.ylbar[2,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * (self.yl[2,2])**(2) * self.ylbar[2,0] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * (self.yl[2,2])**(2) * self.ylbar[2,0] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,1] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,1] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * (self.yl[2,1])**(2) * self.ylbar[2,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * (self.yl[2,1])**(2) * self.ylbar[2,1] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * (self.yl[2,1])**(2) * self.ylbar[2,1] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * (self.yl[2,2])**(2) * self.ylbar[2,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * (self.yl[2,2])**(2) * self.ylbar[2,1] * self.ylbar[2,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * (self.yl[2,2])**(2) * self.ylbar[2,1] * self.ylbar[2,2] + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.yl[2,2] * (self.ylbar[2,2])**(2) + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.yl[2,2] * (self.ylbar[2,2])**(2) + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,2] * (self.ylbar[2,2])**(2) + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.yl[2,2] * (self.ylbar[2,2])**(2) + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.yl[2,2] * (self.ylbar[2,2])**(2) + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[2,2] * (self.ylbar[2,2])**(2) + -1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * (self.yl[2,2])**(2) * (self.ylbar[2,2])**(2) + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * (self.yl[2,2])**(2) * (self.ylbar[2,2])**(2) + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * (self.yl[2,2])**(2) * (self.ylbar[2,2])**(2) + 3/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[0,0] * self.yubar[0,0] + 3/8 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[0,0] * self.yubar[0,0] + -3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[0,0] + 3/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yu[1,0] * self.yubar[0,0] + 3/8 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yu[1,0] * self.yubar[0,0] + -3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[0,0] + 3/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yu[2,0] * self.yubar[0,0] + 3/8 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yu[2,0] * self.yubar[0,0] + -3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[0,0] + 3/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[0,1] * self.yubar[0,1] + 3/8 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[0,1] * self.yubar[0,1] + -3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[0,1] + 3/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yu[1,1] * self.yubar[0,1] + 3/8 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yu[1,1] * self.yubar[0,1] + -3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[0,1] + 3/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yu[2,1] * self.yubar[0,1] + 3/8 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yu[2,1] * self.yubar[0,1] + -3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[0,1] + 3/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[0,2] * self.yubar[0,2] + 3/8 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[0,2] * self.yubar[0,2] + -3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[0,2] + 3/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yu[1,2] * self.yubar[0,2] + 3/8 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yu[1,2] * self.yubar[0,2] + -3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[0,2] + 3/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yu[2,2] * self.yubar[0,2] + 3/8 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yu[2,2] * self.yubar[0,2] + -3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[0,2] + 3/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yu[0,0] * self.yubar[1,0] + 3/8 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yu[0,0] * self.yubar[1,0] + -3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[1,0] + 3/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[1,0] * self.yubar[1,0] + 3/8 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[1,0] * self.yubar[1,0] + -3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[1,0] + 3/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yu[2,0] * self.yubar[1,0] + 3/8 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yu[2,0] * self.yubar[1,0] + -3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[1,0] + 3/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yu[0,1] * self.yubar[1,1] + 3/8 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yu[0,1] * self.yubar[1,1] + -3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[1,1] + 3/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[1,1] * self.yubar[1,1] + 3/8 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[1,1] * self.yubar[1,1] + -3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[1,1] + 3/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yu[2,1] * self.yubar[1,1] + 3/8 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yu[2,1] * self.yubar[1,1] + -3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[1,1] + 3/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yu[0,2] * self.yubar[1,2] + 3/8 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yu[0,2] * self.yubar[1,2] + -3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[1,2] + 3/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[1,2] * self.yubar[1,2] + 3/8 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[1,2] * self.yubar[1,2] + -3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[1,2] + 3/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yu[2,2] * self.yubar[1,2] + 3/8 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yu[2,2] * self.yubar[1,2] + -3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[1,2] + 3/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yu[0,0] * self.yubar[2,0] + 3/8 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yu[0,0] * self.yubar[2,0] + -3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[2,0] + 3/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yu[1,0] * self.yubar[2,0] + 3/8 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yu[1,0] * self.yubar[2,0] + -3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[2,0] + 3/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[2,0] * self.yubar[2,0] + 3/8 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[2,0] * self.yubar[2,0] + -3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[2,0] + 3/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yu[0,1] * self.yubar[2,1] + 3/8 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yu[0,1] * self.yubar[2,1] + -3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[2,1] + 3/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yu[1,1] * self.yubar[2,1] + 3/8 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yu[1,1] * self.yubar[2,1] + -3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[2,1] + 3/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[2,1] * self.yubar[2,1] + 3/8 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[2,1] * self.yubar[2,1] + -3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[2,1] + 3/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yu[0,2] * self.yubar[2,2] + 3/8 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yu[0,2] * self.yubar[2,2] + -3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[2,2] + 3/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yu[1,2] * self.yubar[2,2] + 3/8 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yu[1,2] * self.yubar[2,2] + -3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[2,2] + 3/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[2,2] * self.yubar[2,2] + 3/8 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[2,2] * self.yubar[2,2] + -3/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[2,2])

    def alphaOuG(self, mif1,mif2):
        return (-1/48 * self.g3 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,mif2] + 1/128 * self.g3 * (self.iCPV)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,mif2] + -1/48 * self.g3 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,mif2] + 1/128 * self.g3 * (self.iCPV)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,mif2] + -1/48 * self.g3 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[2,mif2] + 1/128 * self.g3 * (self.iCPV)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[2,mif2])

    def alphaOuW(self, mif1,mif2):
        return (5/384 * self.g2 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,mif2] + 5/384 * self.g2 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,mif2] + 5/384 * self.g2 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[2,mif2])

    def alphaOuB(self, mif1,mif2):
        return (5/1152 * self.g1 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,mif2] + -1/384 * self.g1 * (self.iCPV)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,mif2] + 5/1152 * self.g1 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,mif2] + -1/384 * self.g1 * (self.iCPV)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,mif2] + 5/1152 * self.g1 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[2,mif2] + -1/384 * self.g1 * (self.iCPV)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[2,mif2])

    def alphaOdG(self, mif1,mif2):
        return (-1/192 * self.g3 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,mif2] + 1/128 * self.g3 * (self.iCPV)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,mif2] + -1/192 * self.g3 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,mif2] + 1/128 * self.g3 * (self.iCPV)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,mif2] + -1/192 * self.g3 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,mif2] + 1/128 * self.g3 * (self.iCPV)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,mif2])

    def alphaOdW(self, mif1,mif2):
        return (-1/384 * self.g2 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,mif2] + -1/384 * self.g2 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,mif2] + -1/384 * self.g2 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,mif2])

    def alphaOdB(self, mif1,mif2):
        return (-1/1152 * self.g1 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,mif2] + -1/384 * self.g1 * (self.iCPV)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,mif2] + -1/1152 * self.g1 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,mif2] + -1/384 * self.g1 * (self.iCPV)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,mif2] + -1/1152 * self.g1 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,mif2] + -1/384 * self.g1 * (self.iCPV)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,mif2])

    def alphaOeW(self, mif1,mif2):
        return (-1/128 * self.g2 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[mif1,0] + -1/128 * self.g2 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[mif1,1] + -1/128 * self.g2 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[mif1,2])

    def alphaOeB(self, mif1,mif2):
        return (-5/384 * self.g1 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[mif1,0] + -3/128 * self.g1 * (self.iCPV)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[mif1,0] + -5/384 * self.g1 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[mif1,1] + -3/128 * self.g1 * (self.iCPV)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[mif1,1] + -5/384 * self.g1 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[mif1,2] + -3/128 * self.g1 * (self.iCPV)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[mif1,2])

    def alphaOHq1(self, mif1,mif2):
        return (-1/2160 * (self.g1)**(4) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/160 * (self.g1)**(4) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/1152 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[0] * self.lambdaDbar[0] + -1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[0] * self.lambdaDbar[0] + 1/1152 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[1] * self.lambdaDbar[1] + -1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[1] * self.lambdaDbar[1] + 1/1152 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[2] * self.lambdaDbar[2] + -1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[2] * self.lambdaDbar[2] + -1/4 * (self.MD)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] + -247/13824 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] + -33/512 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] + 1/384 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] + 1/768 * (self.g1)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] + -9/256 * (self.g2)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] + 17/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[mif2] * self.lambdaDbar[0] * self.lambdaDbar[mif1] + 7/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[mif2] * self.lambdaDbar[0] * self.lambdaDbar[mif1] + 3/128 * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[mif2] * self.lambdaDbar[0] * self.lambdaDbar[mif1] + 1/64 * self.invepsilonbar * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[mif2] * self.lambdaDbar[0] * self.lambdaDbar[mif1] + 17/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[mif2] * self.lambdaDbar[1] * self.lambdaDbar[mif1] + 7/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[mif2] * self.lambdaDbar[1] * self.lambdaDbar[mif1] + 3/128 * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[mif2] * self.lambdaDbar[1] * self.lambdaDbar[mif1] + 1/64 * self.invepsilonbar * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[mif2] * self.lambdaDbar[1] * self.lambdaDbar[mif1] + 17/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaD[mif2] * self.lambdaDbar[2] * self.lambdaDbar[mif1] + 7/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaD[mif2] * self.lambdaDbar[2] * self.lambdaDbar[mif1] + 3/128 * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaD[mif2] * self.lambdaDbar[2] * self.lambdaDbar[mif1] + 1/64 * self.invepsilonbar * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaD[mif2] * self.lambdaDbar[2] * self.lambdaDbar[mif1] + 11/1728 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] + 1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] + 1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] + 11/1728 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] + 1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] + 1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] + 11/1728 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] + 1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] + 1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] + 1/576 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) + 1/576 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + 1/576 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) + -1/768 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + 9/256 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + -7/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[mif2] * self.lambdaDbar[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + -1/64 * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[mif2] * self.lambdaDbar[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + -7/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[mif2] * self.lambdaDbar[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + -1/64 * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[mif2] * self.lambdaDbar[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + -7/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaD[mif2] * self.lambdaDbar[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + -1/64 * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaD[mif2] * self.lambdaDbar[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + -1/288 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + -1/288 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + -1/288 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + -1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[0] * self.yd[mif1,0] * self.ydbar[0,0] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[0] * self.yd[mif1,0] * self.ydbar[0,0] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[0,0] + -1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[0] * self.yd[mif1,1] * self.ydbar[0,1] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[0] * self.yd[mif1,1] * self.ydbar[0,1] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[0,1] + -1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[0] * self.yd[mif1,2] * self.ydbar[0,2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[0] * self.yd[mif1,2] * self.ydbar[0,2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[0,2] + -1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[1] * self.yd[mif1,0] * self.ydbar[1,0] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[1] * self.yd[mif1,0] * self.ydbar[1,0] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[1,0] + -1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[1] * self.yd[mif1,1] * self.ydbar[1,1] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[1] * self.yd[mif1,1] * self.ydbar[1,1] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[1,1] + -1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[1] * self.yd[mif1,2] * self.ydbar[1,2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[1] * self.yd[mif1,2] * self.ydbar[1,2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[1,2] + -1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[2] * self.yd[mif1,0] * self.ydbar[2,0] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[2] * self.yd[mif1,0] * self.ydbar[2,0] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[2,0] + -1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[2] * self.yd[mif1,1] * self.ydbar[2,1] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[2] * self.yd[mif1,1] * self.ydbar[2,1] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[2,1] + -1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[2] * self.yd[mif1,2] * self.ydbar[2,2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[2] * self.yd[mif1,2] * self.ydbar[2,2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[2,2] + -1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,0] * self.ydbar[mif2,0] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,0] * self.ydbar[mif2,0] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[mif2,0] + -1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,0] * self.ydbar[mif2,0] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,0] * self.ydbar[mif2,0] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[mif2,0] + -1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,0] * self.ydbar[mif2,0] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,0] * self.ydbar[mif2,0] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[mif2,0] + -1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,1] * self.ydbar[mif2,1] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,1] * self.ydbar[mif2,1] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[mif2,1] + -1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,1] * self.ydbar[mif2,1] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,1] * self.ydbar[mif2,1] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[mif2,1] + -1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,1] * self.ydbar[mif2,1] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,1] * self.ydbar[mif2,1] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[mif2,1] + -1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,2] * self.ydbar[mif2,2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,2] * self.ydbar[mif2,2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[mif2,2] + -1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,2] * self.ydbar[mif2,2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,2] * self.ydbar[mif2,2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[mif2,2] + -1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,2] * self.ydbar[mif2,2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,2] * self.ydbar[mif2,2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[mif2,2] + 3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[0] * self.yu[mif1,0] * self.yubar[0,0] + 1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[0] * self.yu[mif1,0] * self.yubar[0,0] + -1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif1,0] * self.yubar[0,0] + 3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[0] * self.yu[mif1,1] * self.yubar[0,1] + 1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[0] * self.yu[mif1,1] * self.yubar[0,1] + -1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif1,1] * self.yubar[0,1] + 3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[0] * self.yu[mif1,2] * self.yubar[0,2] + 1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[0] * self.yu[mif1,2] * self.yubar[0,2] + -1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif1,2] * self.yubar[0,2] + 3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[1] * self.yu[mif1,0] * self.yubar[1,0] + 1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[1] * self.yu[mif1,0] * self.yubar[1,0] + -1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif1,0] * self.yubar[1,0] + 3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[1] * self.yu[mif1,1] * self.yubar[1,1] + 1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[1] * self.yu[mif1,1] * self.yubar[1,1] + -1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif1,1] * self.yubar[1,1] + 3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[1] * self.yu[mif1,2] * self.yubar[1,2] + 1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[1] * self.yu[mif1,2] * self.yubar[1,2] + -1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif1,2] * self.yubar[1,2] + 3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[2] * self.yu[mif1,0] * self.yubar[2,0] + 1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[2] * self.yu[mif1,0] * self.yubar[2,0] + -1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif1,0] * self.yubar[2,0] + 3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[2] * self.yu[mif1,1] * self.yubar[2,1] + 1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[2] * self.yu[mif1,1] * self.yubar[2,1] + -1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif1,1] * self.yubar[2,1] + 3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[2] * self.yu[mif1,2] * self.yubar[2,2] + 1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[2] * self.yu[mif1,2] * self.yubar[2,2] + -1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif1,2] * self.yubar[2,2] + 3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,0] * self.yubar[mif2,0] + 1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,0] * self.yubar[mif2,0] + -1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[mif2,0] + 3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,0] * self.yubar[mif2,0] + 1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,0] * self.yubar[mif2,0] + -1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[mif2,0] + 3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[2,0] * self.yubar[mif2,0] + 1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[2,0] * self.yubar[mif2,0] + -1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[mif2,0] + 3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,1] * self.yubar[mif2,1] + 1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,1] * self.yubar[mif2,1] + -1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[mif2,1] + 3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,1] * self.yubar[mif2,1] + 1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,1] * self.yubar[mif2,1] + -1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[mif2,1] + 3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[2,1] * self.yubar[mif2,1] + 1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[2,1] * self.yubar[mif2,1] + -1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[mif2,1] + 3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,2] * self.yubar[mif2,2] + 1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,2] * self.yubar[mif2,2] + -1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[mif2,2] + 3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,2] * self.yubar[mif2,2] + 1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,2] * self.yubar[mif2,2] + -1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[mif2,2] + 3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[2,2] * self.yubar[mif2,2] + 1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[2,2] * self.yubar[mif2,2] + -1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[mif2,2])

    def alphaOHq3(self, mif1,mif2):
        return (-1/480 * (self.g2)**(4) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -5/384 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[0] * self.lambdaDbar[0] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[0] * self.lambdaDbar[0] + -5/384 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[1] * self.lambdaDbar[1] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[1] * self.lambdaDbar[1] + -5/384 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[2] * self.lambdaDbar[2] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[2] * self.lambdaDbar[2] + -1/4 * (self.MD)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] + -13/1536 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] + 77/4608 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] + 1/256 * (self.g1)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] + 7/768 * (self.g2)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] + 9/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[mif2] * self.lambdaDbar[0] * self.lambdaDbar[mif1] + 7/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[mif2] * self.lambdaDbar[0] * self.lambdaDbar[mif1] + 3/128 * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[mif2] * self.lambdaDbar[0] * self.lambdaDbar[mif1] + 1/64 * self.invepsilonbar * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[mif2] * self.lambdaDbar[0] * self.lambdaDbar[mif1] + 9/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[mif2] * self.lambdaDbar[1] * self.lambdaDbar[mif1] + 7/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[mif2] * self.lambdaDbar[1] * self.lambdaDbar[mif1] + 3/128 * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[mif2] * self.lambdaDbar[1] * self.lambdaDbar[mif1] + 1/64 * self.invepsilonbar * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[mif2] * self.lambdaDbar[1] * self.lambdaDbar[mif1] + 9/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaD[mif2] * self.lambdaDbar[2] * self.lambdaDbar[mif1] + 7/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaD[mif2] * self.lambdaDbar[2] * self.lambdaDbar[mif1] + 3/128 * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaD[mif2] * self.lambdaDbar[2] * self.lambdaDbar[mif1] + 1/64 * self.invepsilonbar * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaD[mif2] * self.lambdaDbar[2] * self.lambdaDbar[mif1] + 1/288 * (self.g2)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] + 1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] + 1/288 * (self.g2)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] + 1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] + 1/288 * (self.g2)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] + 1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] + 1/64 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) + 1/64 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + 1/64 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) + -1/256 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + -7/768 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + -7/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[mif2] * self.lambdaDbar[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + -1/64 * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[mif2] * self.lambdaDbar[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + -7/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[mif2] * self.lambdaDbar[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + -1/64 * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[mif2] * self.lambdaDbar[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + -7/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaD[mif2] * self.lambdaDbar[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + -1/64 * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaD[mif2] * self.lambdaDbar[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + -3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[0] * self.yu[mif1,0] * self.yubar[0,0] + -1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[0] * self.yu[mif1,0] * self.yubar[0,0] + 1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif1,0] * self.yubar[0,0] + -3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[0] * self.yu[mif1,1] * self.yubar[0,1] + -1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[0] * self.yu[mif1,1] * self.yubar[0,1] + 1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif1,1] * self.yubar[0,1] + -3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[0] * self.yu[mif1,2] * self.yubar[0,2] + -1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[0] * self.yu[mif1,2] * self.yubar[0,2] + 1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif1,2] * self.yubar[0,2] + -3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[1] * self.yu[mif1,0] * self.yubar[1,0] + -1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[1] * self.yu[mif1,0] * self.yubar[1,0] + 1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif1,0] * self.yubar[1,0] + -3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[1] * self.yu[mif1,1] * self.yubar[1,1] + -1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[1] * self.yu[mif1,1] * self.yubar[1,1] + 1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif1,1] * self.yubar[1,1] + -3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[1] * self.yu[mif1,2] * self.yubar[1,2] + -1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[1] * self.yu[mif1,2] * self.yubar[1,2] + 1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif1,2] * self.yubar[1,2] + -3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[2] * self.yu[mif1,0] * self.yubar[2,0] + -1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[2] * self.yu[mif1,0] * self.yubar[2,0] + 1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif1,0] * self.yubar[2,0] + -3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[2] * self.yu[mif1,1] * self.yubar[2,1] + -1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[2] * self.yu[mif1,1] * self.yubar[2,1] + 1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif1,1] * self.yubar[2,1] + -3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[2] * self.yu[mif1,2] * self.yubar[2,2] + -1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[2] * self.yu[mif1,2] * self.yubar[2,2] + 1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif1,2] * self.yubar[2,2] + -3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,0] * self.yubar[mif2,0] + -1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,0] * self.yubar[mif2,0] + 1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[mif2,0] + -3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,0] * self.yubar[mif2,0] + -1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,0] * self.yubar[mif2,0] + 1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[mif2,0] + -3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[2,0] * self.yubar[mif2,0] + -1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[2,0] * self.yubar[mif2,0] + 1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[mif2,0] + -3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,1] * self.yubar[mif2,1] + -1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,1] * self.yubar[mif2,1] + 1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[mif2,1] + -3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,1] * self.yubar[mif2,1] + -1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,1] * self.yubar[mif2,1] + 1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[mif2,1] + -3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[2,1] * self.yubar[mif2,1] + -1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[2,1] * self.yubar[mif2,1] + 1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[mif2,1] + -3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,2] * self.yubar[mif2,2] + -1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,2] * self.yubar[mif2,2] + 1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[mif2,2] + -3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,2] * self.yubar[mif2,2] + -1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,2] * self.yubar[mif2,2] + 1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[mif2,2] + -3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[2,2] * self.yubar[mif2,2] + -1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[2,2] * self.yubar[mif2,2] + 1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[mif2,2])

    def alphaOHu(self, mif1,mif2):
        return (-1/540 * (self.g1)**(4) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/40 * (self.g1)**(4) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/288 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[0] * self.lambdaDbar[0] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[0] * self.lambdaDbar[0] + 1/288 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[1] * self.lambdaDbar[1] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[1] * self.lambdaDbar[1] + 1/288 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[2] * self.lambdaDbar[2] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[2] * self.lambdaDbar[2] + 11/432 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] + 1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] + 11/432 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] + 1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] + 11/432 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] + 1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] + 1/144 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) + 1/144 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + 1/144 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) + -1/72 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + -1/72 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + -1/72 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + 5/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[0,mif2] * self.yubar[0,mif1] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[0,mif2] * self.yubar[0,mif1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,mif2] * self.yubar[0,mif1] + 5/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yu[1,mif2] * self.yubar[0,mif1] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yu[1,mif2] * self.yubar[0,mif1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,mif2] * self.yubar[0,mif1] + 5/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yu[2,mif2] * self.yubar[0,mif1] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yu[2,mif2] * self.yubar[0,mif1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,mif2] * self.yubar[0,mif1] + 5/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yu[0,mif2] * self.yubar[1,mif1] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yu[0,mif2] * self.yubar[1,mif1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,mif2] * self.yubar[1,mif1] + 5/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[1,mif2] * self.yubar[1,mif1] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[1,mif2] * self.yubar[1,mif1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,mif2] * self.yubar[1,mif1] + 5/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yu[2,mif2] * self.yubar[1,mif1] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yu[2,mif2] * self.yubar[1,mif1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,mif2] * self.yubar[1,mif1] + 5/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yu[0,mif2] * self.yubar[2,mif1] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yu[0,mif2] * self.yubar[2,mif1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,mif2] * self.yubar[2,mif1] + 5/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yu[1,mif2] * self.yubar[2,mif1] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yu[1,mif2] * self.yubar[2,mif1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,mif2] * self.yubar[2,mif1] + 5/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[2,mif2] * self.yubar[2,mif1] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[2,mif2] * self.yubar[2,mif1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,mif2] * self.yubar[2,mif1])

    def alphaOHd(self, mif1,mif2):
        return (1/1080 * (self.g1)**(4) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/80 * (self.g1)**(4) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/576 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[0] * self.lambdaDbar[0] + 1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[0] * self.lambdaDbar[0] + -1/576 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[1] * self.lambdaDbar[1] + 1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[1] * self.lambdaDbar[1] + -1/576 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[2] * self.lambdaDbar[2] + 1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[2] * self.lambdaDbar[2] + -11/864 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] + -11/864 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] + -11/864 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] + -1/288 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) + -1/288 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + -1/288 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) + 1/144 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + 1/144 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + 1/144 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + 1/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,mif2] * self.ydbar[0,mif1] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,mif2] * self.ydbar[0,mif1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.ydbar[0,mif1] + 1/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,mif2] * self.ydbar[0,mif1] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,mif2] * self.ydbar[0,mif1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.ydbar[0,mif1] + 1/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,mif2] * self.ydbar[0,mif1] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,mif2] * self.ydbar[0,mif1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.ydbar[0,mif1] + 1/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,mif2] * self.ydbar[1,mif1] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,mif2] * self.ydbar[1,mif1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.ydbar[1,mif1] + 1/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,mif2] * self.ydbar[1,mif1] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,mif2] * self.ydbar[1,mif1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.ydbar[1,mif1] + 1/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,mif2] * self.ydbar[1,mif1] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,mif2] * self.ydbar[1,mif1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.ydbar[1,mif1] + 1/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,mif2] * self.ydbar[2,mif1] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,mif2] * self.ydbar[2,mif1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.ydbar[2,mif1] + 1/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,mif2] * self.ydbar[2,mif1] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,mif2] * self.ydbar[2,mif1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.ydbar[2,mif1] + 1/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,mif2] * self.ydbar[2,mif1] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,mif2] * self.ydbar[2,mif1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.ydbar[2,mif1])

    def alphaOHud(self, mif1,mif2):
        return (-1/96 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,mif2] * self.yubar[0,mif1] + -1/96 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,mif2] * self.yubar[0,mif1] + -1/96 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,mif2] * self.yubar[0,mif1] + -1/96 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,mif2] * self.yubar[1,mif1] + -1/96 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,mif2] * self.yubar[1,mif1] + -1/96 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,mif2] * self.yubar[1,mif1] + -1/96 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,mif2] * self.yubar[2,mif1] + -1/96 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,mif2] * self.yubar[2,mif1] + -1/96 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,mif2] * self.yubar[2,mif1])

    def alphaOHl1(self, mif1,mif2):
        return (1/720 * (self.g1)**(4) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 3/160 * (self.g1)**(4) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/384 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[0] * self.lambdaDbar[0] + 1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[0] * self.lambdaDbar[0] + -1/384 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[1] * self.lambdaDbar[1] + 1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[1] * self.lambdaDbar[1] + -1/384 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[2] * self.lambdaDbar[2] + 1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[2] * self.lambdaDbar[2] + -11/576 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] + -11/576 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] + -11/576 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] + -1/192 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) + -1/192 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + -1/192 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) + 1/96 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + 1/96 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + 1/96 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + -13/384 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[mif1,0] * self.ylbar[mif2,0] + 1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[mif1,0] * self.ylbar[mif2,0] + -1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[mif2,0] + -13/384 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[mif1,1] * self.ylbar[mif2,0] + 1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[mif1,1] * self.ylbar[mif2,0] + -1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[mif2,0] + -13/384 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[mif1,2] * self.ylbar[mif2,0] + 1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[mif1,2] * self.ylbar[mif2,0] + -1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[mif2,0] + -13/384 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[mif1,0] * self.ylbar[mif2,1] + 1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[mif1,0] * self.ylbar[mif2,1] + -1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[mif2,1] + -13/384 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[mif1,1] * self.ylbar[mif2,1] + 1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[mif1,1] * self.ylbar[mif2,1] + -1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[mif2,1] + -13/384 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[mif1,2] * self.ylbar[mif2,1] + 1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[mif1,2] * self.ylbar[mif2,1] + -1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[mif2,1] + -13/384 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[mif1,0] * self.ylbar[mif2,2] + 1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[mif1,0] * self.ylbar[mif2,2] + -1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[mif2,2] + -13/384 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[mif1,1] * self.ylbar[mif2,2] + 1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[mif1,1] * self.ylbar[mif2,2] + -1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[mif2,2] + -13/384 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[mif1,2] * self.ylbar[mif2,2] + 1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[mif1,2] * self.ylbar[mif2,2] + -1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[mif2,2])

    def alphaOHl3(self, mif1,mif2):
        return (-1/480 * (self.g2)**(4) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -5/384 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[0] * self.lambdaDbar[0] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[0] * self.lambdaDbar[0] + -5/384 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[1] * self.lambdaDbar[1] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[1] * self.lambdaDbar[1] + -5/384 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[2] * self.lambdaDbar[2] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[2] * self.lambdaDbar[2] + 1/288 * (self.g2)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] + 1/288 * (self.g2)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] + 1/288 * (self.g2)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] + 1/64 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) + 1/64 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + 1/64 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) + -5/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[mif1,0] * self.ylbar[mif2,0] + -5/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[mif1,1] * self.ylbar[mif2,0] + -5/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[mif1,2] * self.ylbar[mif2,0] + -5/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[mif1,0] * self.ylbar[mif2,1] + -5/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[mif1,1] * self.ylbar[mif2,1] + -5/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[mif1,2] * self.ylbar[mif2,1] + -5/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[mif1,0] * self.ylbar[mif2,2] + -5/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[mif1,1] * self.ylbar[mif2,2] + -5/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[mif1,2] * self.ylbar[mif2,2])

    def alphaOHe(self, mif1,mif2):
        return (1/360 * (self.g1)**(4) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 3/80 * (self.g1)**(4) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/192 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[0] * self.lambdaDbar[0] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[0] * self.lambdaDbar[0] + -1/192 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[1] * self.lambdaDbar[1] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[1] * self.lambdaDbar[1] + -1/192 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[2] * self.lambdaDbar[2] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[2] * self.lambdaDbar[2] + -11/288 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] + -11/288 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] + -11/288 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] + -1/2 * (self.MDelta3)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] + 53/2304 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] + -3/256 * (self.g2)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] + 3/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] + 43/384 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] + 9/128 * (self.g2)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] + 3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] + 3/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] + 3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] + 3/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] + 3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] + 3/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] + 3/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[mif1] + 1/16 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[mif1] + 3/32 * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[mif1] + 1/16 * self.invepsilonbar * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[mif1] + 3/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[mif1] + 1/16 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[mif1] + 3/32 * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[mif1] + 1/16 * self.invepsilonbar * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[mif1] + 3/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.lambdaDelta3bar[mif1] + 1/16 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.lambdaDelta3bar[mif1] + 3/32 * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.lambdaDelta3bar[mif1] + 1/16 * self.invepsilonbar * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.lambdaDelta3bar[mif1] + -1/96 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) + -1/96 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + -1/96 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) + -3/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + -3/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + -3/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + 1/48 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + 1/48 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + 1/48 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + -43/384 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + -9/128 * (self.g2)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + -1/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[mif1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + -1/16 * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[mif1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + -1/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[mif1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + -1/16 * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[mif1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + -1/16 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.lambdaDelta3bar[mif1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + -1/16 * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.lambdaDelta3bar[mif1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + -3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[mif1] * self.yl[0,mif2] * self.ylbar[0,0] + -1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[mif1] * self.yl[0,mif2] * self.ylbar[0,0] + 1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[mif1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,0] + -3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[mif1] * self.yl[0,mif2] * self.ylbar[0,1] + -1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[mif1] * self.yl[0,mif2] * self.ylbar[0,1] + 1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[mif1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,1] + -3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[mif1] * self.yl[0,mif2] * self.ylbar[0,2] + -1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[mif1] * self.yl[0,mif2] * self.ylbar[0,2] + 1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[mif1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,2] + -3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.ylbar[0,mif1] + -1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.ylbar[0,mif1] + 1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,mif1] + -3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.ylbar[0,mif1] + -1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.ylbar[0,mif1] + 1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,mif1] + -3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.ylbar[0,mif1] + -1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.ylbar[0,mif1] + 1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,mif1] + -3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[mif1] * self.yl[1,mif2] * self.ylbar[1,0] + -1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[mif1] * self.yl[1,mif2] * self.ylbar[1,0] + 1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[mif1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,0] + -3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[mif1] * self.yl[1,mif2] * self.ylbar[1,1] + -1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[mif1] * self.yl[1,mif2] * self.ylbar[1,1] + 1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[mif1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,1] + -3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[mif1] * self.yl[1,mif2] * self.ylbar[1,2] + -1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[mif1] * self.yl[1,mif2] * self.ylbar[1,2] + 1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[mif1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,2] + -3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.ylbar[1,mif1] + -1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.ylbar[1,mif1] + 1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,mif1] + -3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.ylbar[1,mif1] + -1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.ylbar[1,mif1] + 1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,mif1] + -3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.ylbar[1,mif1] + -1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.ylbar[1,mif1] + 1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,mif1] + -3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[mif1] * self.yl[2,mif2] * self.ylbar[2,0] + -1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[mif1] * self.yl[2,mif2] * self.ylbar[2,0] + 1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[mif1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,0] + -3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[mif1] * self.yl[2,mif2] * self.ylbar[2,1] + -1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[mif1] * self.yl[2,mif2] * self.ylbar[2,1] + 1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[mif1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,1] + -3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[mif1] * self.yl[2,mif2] * self.ylbar[2,2] + -1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[mif1] * self.yl[2,mif2] * self.ylbar[2,2] + 1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[mif1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,2] + -3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.ylbar[2,mif1] + -1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.ylbar[2,mif1] + 1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,mif1] + -3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.ylbar[2,mif1] + -1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.ylbar[2,mif1] + 1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,mif1] + -3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.ylbar[2,mif1] + -1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.ylbar[2,mif1] + 1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,mif1])

    def alphaOuH(self, mif1,mif2):
        return (-3/32 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,mif2] + -1/16 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,mif2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[0])**(2) * self.lambdaDbar[0] * self.lambdaDbar[mif1] * self.yu[0,mif2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaDbar[1] * self.lambdaDbar[mif1] * self.yu[0,mif2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * self.lambdaDbar[2] * self.lambdaDbar[mif1] * self.yu[0,mif2] + 1/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,mif2] + -5/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,0] * self.ydbar[0,0] * self.yu[0,mif2] + -1/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,0] * self.ydbar[0,0] * self.yu[0,mif2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] * self.yu[0,mif2] + -5/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,0] * self.ydbar[0,0] * self.yu[0,mif2] + -1/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,0] * self.ydbar[0,0] * self.yu[0,mif2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[0,0] * self.yu[0,mif2] + -5/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,0] * self.ydbar[0,0] * self.yu[0,mif2] + -1/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,0] * self.ydbar[0,0] * self.yu[0,mif2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[0,0] * self.yu[0,mif2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[mif1,0] * self.ydbar[0,0] * self.yu[0,mif2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[0,0] * self.yu[0,mif2] + -5/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,1] * self.ydbar[0,1] * self.yu[0,mif2] + -1/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,1] * self.ydbar[0,1] * self.yu[0,mif2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] * self.yu[0,mif2] + -5/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,1] * self.ydbar[0,1] * self.yu[0,mif2] + -1/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,1] * self.ydbar[0,1] * self.yu[0,mif2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[0,1] * self.yu[0,mif2] + -5/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,1] * self.ydbar[0,1] * self.yu[0,mif2] + -1/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,1] * self.ydbar[0,1] * self.yu[0,mif2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[0,1] * self.yu[0,mif2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[mif1,1] * self.ydbar[0,1] * self.yu[0,mif2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[0,1] * self.yu[0,mif2] + -5/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,2] * self.ydbar[0,2] * self.yu[0,mif2] + -1/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,2] * self.ydbar[0,2] * self.yu[0,mif2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] * self.yu[0,mif2] + -5/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,2] * self.ydbar[0,2] * self.yu[0,mif2] + -1/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,2] * self.ydbar[0,2] * self.yu[0,mif2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[0,2] * self.yu[0,mif2] + -5/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,2] * self.ydbar[0,2] * self.yu[0,mif2] + -1/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,2] * self.ydbar[0,2] * self.yu[0,mif2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[0,2] * self.yu[0,mif2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[mif1,2] * self.ydbar[0,2] * self.yu[0,mif2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[0,2] * self.yu[0,mif2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[mif1,0] * self.ydbar[1,0] * self.yu[0,mif2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[1,0] * self.yu[0,mif2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[mif1,1] * self.ydbar[1,1] * self.yu[0,mif2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[1,1] * self.yu[0,mif2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[mif1,2] * self.ydbar[1,2] * self.yu[0,mif2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[1,2] * self.yu[0,mif2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yu[0,mif2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[2,0] * self.yu[0,mif2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yu[0,mif2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[2,1] * self.yu[0,mif2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yu[0,mif2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[2,2] * self.yu[0,mif2] + -3/32 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,mif2] + -1/16 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,mif2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaDbar[0] * self.lambdaDbar[mif1] * self.yu[1,mif2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[1])**(2) * self.lambdaDbar[1] * self.lambdaDbar[mif1] * self.yu[1,mif2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[2] * self.lambdaDbar[mif1] * self.yu[1,mif2] + 1/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,mif2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[mif1,0] * self.ydbar[0,0] * self.yu[1,mif2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[0,0] * self.yu[1,mif2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[mif1,1] * self.ydbar[0,1] * self.yu[1,mif2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[0,1] * self.yu[1,mif2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[mif1,2] * self.ydbar[0,2] * self.yu[1,mif2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[0,2] * self.yu[1,mif2] + -5/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,0] * self.ydbar[1,0] * self.yu[1,mif2] + -1/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,0] * self.ydbar[1,0] * self.yu[1,mif2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[1,0] * self.yu[1,mif2] + -5/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,0] * self.ydbar[1,0] * self.yu[1,mif2] + -1/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,0] * self.ydbar[1,0] * self.yu[1,mif2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] * self.yu[1,mif2] + -5/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,0] * self.ydbar[1,0] * self.yu[1,mif2] + -1/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,0] * self.ydbar[1,0] * self.yu[1,mif2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[1,0] * self.yu[1,mif2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[mif1,0] * self.ydbar[1,0] * self.yu[1,mif2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[1,0] * self.yu[1,mif2] + -5/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,1] * self.ydbar[1,1] * self.yu[1,mif2] + -1/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,1] * self.ydbar[1,1] * self.yu[1,mif2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[1,1] * self.yu[1,mif2] + -5/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,1] * self.ydbar[1,1] * self.yu[1,mif2] + -1/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,1] * self.ydbar[1,1] * self.yu[1,mif2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] * self.yu[1,mif2] + -5/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,1] * self.ydbar[1,1] * self.yu[1,mif2] + -1/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,1] * self.ydbar[1,1] * self.yu[1,mif2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[1,1] * self.yu[1,mif2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[mif1,1] * self.ydbar[1,1] * self.yu[1,mif2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[1,1] * self.yu[1,mif2] + -5/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,2] * self.ydbar[1,2] * self.yu[1,mif2] + -1/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,2] * self.ydbar[1,2] * self.yu[1,mif2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[1,2] * self.yu[1,mif2] + -5/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,2] * self.ydbar[1,2] * self.yu[1,mif2] + -1/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,2] * self.ydbar[1,2] * self.yu[1,mif2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,2] * self.yu[1,mif2] + -5/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,2] * self.ydbar[1,2] * self.yu[1,mif2] + -1/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,2] * self.ydbar[1,2] * self.yu[1,mif2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[1,2] * self.yu[1,mif2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[mif1,2] * self.ydbar[1,2] * self.yu[1,mif2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[1,2] * self.yu[1,mif2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yu[1,mif2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[2,0] * self.yu[1,mif2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yu[1,mif2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[2,1] * self.yu[1,mif2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yu[1,mif2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[2,2] * self.yu[1,mif2] + -3/32 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[2,mif2] + -1/16 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[2,mif2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * self.lambdaDbar[0] * self.lambdaDbar[mif1] * self.yu[2,mif2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[1] * self.lambdaDbar[mif1] * self.yu[2,mif2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[2])**(2) * self.lambdaDbar[2] * self.lambdaDbar[mif1] * self.yu[2,mif2] + 1/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,mif2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[mif1,0] * self.ydbar[0,0] * self.yu[2,mif2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[0,0] * self.yu[2,mif2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[mif1,1] * self.ydbar[0,1] * self.yu[2,mif2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[0,1] * self.yu[2,mif2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[mif1,2] * self.ydbar[0,2] * self.yu[2,mif2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[0,2] * self.yu[2,mif2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[mif1,0] * self.ydbar[1,0] * self.yu[2,mif2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[1,0] * self.yu[2,mif2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[mif1,1] * self.ydbar[1,1] * self.yu[2,mif2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[1,1] * self.yu[2,mif2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[mif1,2] * self.ydbar[1,2] * self.yu[2,mif2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[1,2] * self.yu[2,mif2] + -5/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,0] * self.ydbar[2,0] * self.yu[2,mif2] + -1/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,0] * self.ydbar[2,0] * self.yu[2,mif2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[2,0] * self.yu[2,mif2] + -5/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,0] * self.ydbar[2,0] * self.yu[2,mif2] + -1/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,0] * self.ydbar[2,0] * self.yu[2,mif2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[2,0] * self.yu[2,mif2] + -5/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,0] * self.ydbar[2,0] * self.yu[2,mif2] + -1/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,0] * self.ydbar[2,0] * self.yu[2,mif2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] * self.yu[2,mif2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yu[2,mif2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[2,0] * self.yu[2,mif2] + -5/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,1] * self.ydbar[2,1] * self.yu[2,mif2] + -1/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,1] * self.ydbar[2,1] * self.yu[2,mif2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[2,1] * self.yu[2,mif2] + -5/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,1] * self.ydbar[2,1] * self.yu[2,mif2] + -1/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,1] * self.ydbar[2,1] * self.yu[2,mif2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[2,1] * self.yu[2,mif2] + -5/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,1] * self.ydbar[2,1] * self.yu[2,mif2] + -1/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,1] * self.ydbar[2,1] * self.yu[2,mif2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,1] * self.yu[2,mif2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yu[2,mif2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[2,1] * self.yu[2,mif2] + -5/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,2] * self.ydbar[2,2] * self.yu[2,mif2] + -1/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,2] * self.ydbar[2,2] * self.yu[2,mif2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[2,2] * self.yu[2,mif2] + -5/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,2] * self.ydbar[2,2] * self.yu[2,mif2] + -1/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,2] * self.ydbar[2,2] * self.yu[2,mif2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[2,2] * self.yu[2,mif2] + -5/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,2] * self.ydbar[2,2] * self.yu[2,mif2] + -1/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,2] * self.ydbar[2,2] * self.yu[2,mif2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,2] * self.yu[2,mif2] + -1/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yu[2,mif2] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[2,2] * self.yu[2,mif2] + -1/480 * (self.g2)**(4) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -5/192 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[mif1,mif2] + -1/32 * (self.g2)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[mif1,mif2] + 1/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[mif1,mif2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[0])**(2) * (self.lambdaDbar[0])**(2) * self.yu[mif1,mif2] + -5/192 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[mif1,mif2] + -1/32 * (self.g2)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[mif1,mif2] + 1/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaDbar[0] * self.lambdaDbar[1] * self.yu[mif1,mif2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[1])**(2) * (self.lambdaDbar[1])**(2) * self.yu[mif1,mif2] + -5/192 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[mif1,mif2] + -1/32 * (self.g2)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[mif1,mif2] + 1/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * self.lambdaDbar[0] * self.lambdaDbar[2] * self.yu[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[1] * self.lambdaDbar[2] * self.yu[mif1,mif2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[2])**(2) * (self.lambdaDbar[2])**(2) * self.yu[mif1,mif2] + 1/144 * (self.g2)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yu[mif1,mif2] + 1/24 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yu[mif1,mif2] + -5/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[0])**(2) * (self.lambdaDelta3bar[0])**(2) * self.yu[mif1,mif2] + 1/144 * (self.g2)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yu[mif1,mif2] + 1/24 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yu[mif1,mif2] + -5/96 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * self.yu[mif1,mif2] + -5/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[1])**(2) * (self.lambdaDelta3bar[1])**(2) * self.yu[mif1,mif2] + 1/144 * (self.g2)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yu[mif1,mif2] + 1/24 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yu[mif1,mif2] + -5/96 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * self.yu[mif1,mif2] + -5/96 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * self.yu[mif1,mif2] + -5/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[2])**(2) * (self.lambdaDelta3bar[2])**(2) * self.yu[mif1,mif2] + 1/32 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 1/32 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 1/32 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,0] * self.ydbar[0,0] * self.yu[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,0] * self.ydbar[0,0] * self.yu[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] * self.yu[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,0] * self.ydbar[0,0] * self.yu[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,0] * self.ydbar[0,0] * self.yu[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[0,0] * self.yu[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,0] * self.ydbar[0,0] * self.yu[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,0] * self.ydbar[0,0] * self.yu[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[0,0] * self.yu[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,1] * self.ydbar[0,1] * self.yu[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,1] * self.ydbar[0,1] * self.yu[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] * self.yu[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,1] * self.ydbar[0,1] * self.yu[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,1] * self.ydbar[0,1] * self.yu[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[0,1] * self.yu[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,1] * self.ydbar[0,1] * self.yu[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,1] * self.ydbar[0,1] * self.yu[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[0,1] * self.yu[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,2] * self.ydbar[0,2] * self.yu[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,2] * self.ydbar[0,2] * self.yu[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] * self.yu[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,2] * self.ydbar[0,2] * self.yu[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,2] * self.ydbar[0,2] * self.yu[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[0,2] * self.yu[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,2] * self.ydbar[0,2] * self.yu[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,2] * self.ydbar[0,2] * self.yu[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[0,2] * self.yu[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,0] * self.ydbar[1,0] * self.yu[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,0] * self.ydbar[1,0] * self.yu[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[1,0] * self.yu[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,0] * self.ydbar[1,0] * self.yu[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,0] * self.ydbar[1,0] * self.yu[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] * self.yu[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,0] * self.ydbar[1,0] * self.yu[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,0] * self.ydbar[1,0] * self.yu[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[1,0] * self.yu[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,1] * self.ydbar[1,1] * self.yu[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,1] * self.ydbar[1,1] * self.yu[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[1,1] * self.yu[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,1] * self.ydbar[1,1] * self.yu[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,1] * self.ydbar[1,1] * self.yu[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] * self.yu[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,1] * self.ydbar[1,1] * self.yu[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,1] * self.ydbar[1,1] * self.yu[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[1,1] * self.yu[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,2] * self.ydbar[1,2] * self.yu[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,2] * self.ydbar[1,2] * self.yu[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[1,2] * self.yu[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,2] * self.ydbar[1,2] * self.yu[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,2] * self.ydbar[1,2] * self.yu[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,2] * self.yu[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,2] * self.ydbar[1,2] * self.yu[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,2] * self.ydbar[1,2] * self.yu[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[1,2] * self.yu[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,0] * self.ydbar[2,0] * self.yu[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,0] * self.ydbar[2,0] * self.yu[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[2,0] * self.yu[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,0] * self.ydbar[2,0] * self.yu[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,0] * self.ydbar[2,0] * self.yu[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[2,0] * self.yu[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,0] * self.ydbar[2,0] * self.yu[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,0] * self.ydbar[2,0] * self.yu[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] * self.yu[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,1] * self.ydbar[2,1] * self.yu[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,1] * self.ydbar[2,1] * self.yu[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[2,1] * self.yu[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,1] * self.ydbar[2,1] * self.yu[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,1] * self.ydbar[2,1] * self.yu[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[2,1] * self.yu[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,1] * self.ydbar[2,1] * self.yu[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,1] * self.ydbar[2,1] * self.yu[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,1] * self.yu[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,2] * self.ydbar[2,2] * self.yu[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,2] * self.ydbar[2,2] * self.yu[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[2,2] * self.yu[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,2] * self.ydbar[2,2] * self.yu[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,2] * self.ydbar[2,2] * self.yu[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[2,2] * self.yu[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,2] * self.ydbar[2,2] * self.yu[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,2] * self.ydbar[2,2] * self.yu[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,2] * self.yu[mif1,mif2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.ylbar[0,0] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.ylbar[0,0] * self.yu[mif1,mif2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] * self.yu[mif1,mif2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.ylbar[0,0] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.ylbar[0,0] * self.yu[mif1,mif2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,0] * self.yu[mif1,mif2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.ylbar[0,0] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.ylbar[0,0] * self.yu[mif1,mif2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,0] * self.yu[mif1,mif2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.ylbar[0,1] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.ylbar[0,1] * self.yu[mif1,mif2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,1] * self.yu[mif1,mif2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.ylbar[0,1] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.ylbar[0,1] * self.yu[mif1,mif2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] * self.yu[mif1,mif2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.ylbar[0,1] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.ylbar[0,1] * self.yu[mif1,mif2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,1] * self.yu[mif1,mif2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.ylbar[0,2] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.ylbar[0,2] * self.yu[mif1,mif2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,2] * self.yu[mif1,mif2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.ylbar[0,2] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.ylbar[0,2] * self.yu[mif1,mif2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,2] * self.yu[mif1,mif2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.ylbar[0,2] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.ylbar[0,2] * self.yu[mif1,mif2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] * self.yu[mif1,mif2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.ylbar[1,0] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.ylbar[1,0] * self.yu[mif1,mif2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] * self.yu[mif1,mif2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.ylbar[1,0] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.ylbar[1,0] * self.yu[mif1,mif2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,0] * self.yu[mif1,mif2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.ylbar[1,0] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.ylbar[1,0] * self.yu[mif1,mif2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,0] * self.yu[mif1,mif2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.ylbar[1,1] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.ylbar[1,1] * self.yu[mif1,mif2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,1] * self.yu[mif1,mif2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.ylbar[1,1] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.ylbar[1,1] * self.yu[mif1,mif2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] * self.yu[mif1,mif2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.ylbar[1,1] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.ylbar[1,1] * self.yu[mif1,mif2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,1] * self.yu[mif1,mif2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.ylbar[1,2] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.ylbar[1,2] * self.yu[mif1,mif2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,2] * self.yu[mif1,mif2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.ylbar[1,2] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.ylbar[1,2] * self.yu[mif1,mif2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,2] * self.yu[mif1,mif2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.ylbar[1,2] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.ylbar[1,2] * self.yu[mif1,mif2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,2] * self.yu[mif1,mif2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.ylbar[2,0] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.ylbar[2,0] * self.yu[mif1,mif2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] * self.yu[mif1,mif2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.ylbar[2,0] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.ylbar[2,0] * self.yu[mif1,mif2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,0] * self.yu[mif1,mif2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.ylbar[2,0] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.ylbar[2,0] * self.yu[mif1,mif2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,0] * self.yu[mif1,mif2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.ylbar[2,1] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.ylbar[2,1] * self.yu[mif1,mif2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,1] * self.yu[mif1,mif2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.ylbar[2,1] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.ylbar[2,1] * self.yu[mif1,mif2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,1] * self.yu[mif1,mif2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.ylbar[2,1] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.ylbar[2,1] * self.yu[mif1,mif2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,1] * self.yu[mif1,mif2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.ylbar[2,2] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.ylbar[2,2] * self.yu[mif1,mif2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,2] * self.yu[mif1,mif2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.ylbar[2,2] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.ylbar[2,2] * self.yu[mif1,mif2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,2] * self.yu[mif1,mif2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.ylbar[2,2] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.ylbar[2,2] * self.yu[mif1,mif2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,2] * self.yu[mif1,mif2] + 3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,0] * self.yu[0,mif2] * self.yubar[0,0] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,0] * self.yu[0,mif2] * self.yubar[0,0] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yu[0,mif2] * self.yubar[0,0] + 3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[0,mif2] * self.yu[1,0] * self.yubar[0,0] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[0,mif2] * self.yu[1,0] * self.yubar[0,0] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,mif2] * self.yu[1,0] * self.yubar[0,0] + 3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[0,mif2] * self.yu[2,0] * self.yubar[0,0] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[0,mif2] * self.yu[2,0] * self.yubar[0,0] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,mif2] * self.yu[2,0] * self.yubar[0,0] + -1/48 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] + -1/48 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[0,0] + -1/48 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[0,0] * self.yu[mif1,mif2] * self.yubar[0,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[0,0] * self.yu[mif1,mif2] * self.yubar[0,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yu[mif1,mif2] * self.yubar[0,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yu[1,0] * self.yu[mif1,mif2] * self.yubar[0,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yu[1,0] * self.yu[mif1,mif2] * self.yubar[0,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yu[mif1,mif2] * self.yubar[0,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yu[2,0] * self.yu[mif1,mif2] * self.yubar[0,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yu[2,0] * self.yu[mif1,mif2] * self.yubar[0,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yu[mif1,mif2] * self.yubar[0,0] + 3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,1] * self.yu[0,mif2] * self.yubar[0,1] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,1] * self.yu[0,mif2] * self.yubar[0,1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yu[0,mif2] * self.yubar[0,1] + 3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[0,mif2] * self.yu[1,1] * self.yubar[0,1] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[0,mif2] * self.yu[1,1] * self.yubar[0,1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,mif2] * self.yu[1,1] * self.yubar[0,1] + 3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[0,mif2] * self.yu[2,1] * self.yubar[0,1] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[0,mif2] * self.yu[2,1] * self.yubar[0,1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,mif2] * self.yu[2,1] * self.yubar[0,1] + -1/48 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] + -1/48 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[0,1] + -1/48 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[0,1] * self.yu[mif1,mif2] * self.yubar[0,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[0,1] * self.yu[mif1,mif2] * self.yubar[0,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yu[mif1,mif2] * self.yubar[0,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yu[1,1] * self.yu[mif1,mif2] * self.yubar[0,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yu[1,1] * self.yu[mif1,mif2] * self.yubar[0,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yu[mif1,mif2] * self.yubar[0,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yu[2,1] * self.yu[mif1,mif2] * self.yubar[0,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yu[2,1] * self.yu[mif1,mif2] * self.yubar[0,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yu[mif1,mif2] * self.yubar[0,1] + 3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,2] * self.yu[0,mif2] * self.yubar[0,2] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,2] * self.yu[0,mif2] * self.yubar[0,2] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yu[0,mif2] * self.yubar[0,2] + 3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[0,mif2] * self.yu[1,2] * self.yubar[0,2] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[0,mif2] * self.yu[1,2] * self.yubar[0,2] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,mif2] * self.yu[1,2] * self.yubar[0,2] + 3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[0,mif2] * self.yu[2,2] * self.yubar[0,2] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[0,mif2] * self.yu[2,2] * self.yubar[0,2] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,mif2] * self.yu[2,2] * self.yubar[0,2] + -1/48 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] + -1/48 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[0,2] + -1/48 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[0,2] * self.yu[mif1,mif2] * self.yubar[0,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[0,2] * self.yu[mif1,mif2] * self.yubar[0,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yu[mif1,mif2] * self.yubar[0,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yu[1,2] * self.yu[mif1,mif2] * self.yubar[0,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yu[1,2] * self.yu[mif1,mif2] * self.yubar[0,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yu[mif1,mif2] * self.yubar[0,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yu[2,2] * self.yu[mif1,mif2] * self.yubar[0,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yu[2,2] * self.yu[mif1,mif2] * self.yubar[0,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yu[mif1,mif2] * self.yubar[0,2] + 3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,0] * self.yu[1,mif2] * self.yubar[1,0] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,0] * self.yu[1,mif2] * self.yubar[1,0] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yu[1,mif2] * self.yubar[1,0] + 3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,0] * self.yu[1,mif2] * self.yubar[1,0] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,0] * self.yu[1,mif2] * self.yubar[1,0] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yu[1,mif2] * self.yubar[1,0] + 3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[1,mif2] * self.yu[2,0] * self.yubar[1,0] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[1,mif2] * self.yu[2,0] * self.yubar[1,0] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,mif2] * self.yu[2,0] * self.yubar[1,0] + -1/48 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[1,0] + -1/48 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] + -1/48 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yu[0,0] * self.yu[mif1,mif2] * self.yubar[1,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yu[0,0] * self.yu[mif1,mif2] * self.yubar[1,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yu[mif1,mif2] * self.yubar[1,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[1,0] * self.yu[mif1,mif2] * self.yubar[1,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[1,0] * self.yu[mif1,mif2] * self.yubar[1,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yu[mif1,mif2] * self.yubar[1,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yu[2,0] * self.yu[mif1,mif2] * self.yubar[1,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yu[2,0] * self.yu[mif1,mif2] * self.yubar[1,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yu[mif1,mif2] * self.yubar[1,0] + 3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,1] * self.yu[1,mif2] * self.yubar[1,1] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,1] * self.yu[1,mif2] * self.yubar[1,1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yu[1,mif2] * self.yubar[1,1] + 3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,1] * self.yu[1,mif2] * self.yubar[1,1] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,1] * self.yu[1,mif2] * self.yubar[1,1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yu[1,mif2] * self.yubar[1,1] + 3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[1,mif2] * self.yu[2,1] * self.yubar[1,1] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[1,mif2] * self.yu[2,1] * self.yubar[1,1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,mif2] * self.yu[2,1] * self.yubar[1,1] + -1/48 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[1,1] + -1/48 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] + -1/48 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yu[0,1] * self.yu[mif1,mif2] * self.yubar[1,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yu[0,1] * self.yu[mif1,mif2] * self.yubar[1,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yu[mif1,mif2] * self.yubar[1,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[1,1] * self.yu[mif1,mif2] * self.yubar[1,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[1,1] * self.yu[mif1,mif2] * self.yubar[1,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yu[mif1,mif2] * self.yubar[1,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yu[2,1] * self.yu[mif1,mif2] * self.yubar[1,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yu[2,1] * self.yu[mif1,mif2] * self.yubar[1,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yu[mif1,mif2] * self.yubar[1,1] + 3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,2] * self.yu[1,mif2] * self.yubar[1,2] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,2] * self.yu[1,mif2] * self.yubar[1,2] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yu[1,mif2] * self.yubar[1,2] + 3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,2] * self.yu[1,mif2] * self.yubar[1,2] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,2] * self.yu[1,mif2] * self.yubar[1,2] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yu[1,mif2] * self.yubar[1,2] + 3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[1,mif2] * self.yu[2,2] * self.yubar[1,2] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[1,mif2] * self.yu[2,2] * self.yubar[1,2] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,mif2] * self.yu[2,2] * self.yubar[1,2] + -1/48 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[1,2] + -1/48 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] + -1/48 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yu[0,2] * self.yu[mif1,mif2] * self.yubar[1,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yu[0,2] * self.yu[mif1,mif2] * self.yubar[1,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yu[mif1,mif2] * self.yubar[1,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[1,2] * self.yu[mif1,mif2] * self.yubar[1,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[1,2] * self.yu[mif1,mif2] * self.yubar[1,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yu[mif1,mif2] * self.yubar[1,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yu[2,2] * self.yu[mif1,mif2] * self.yubar[1,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yu[2,2] * self.yu[mif1,mif2] * self.yubar[1,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yu[mif1,mif2] * self.yubar[1,2] + 3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,0] * self.yu[2,mif2] * self.yubar[2,0] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,0] * self.yu[2,mif2] * self.yubar[2,0] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yu[2,mif2] * self.yubar[2,0] + 3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,0] * self.yu[2,mif2] * self.yubar[2,0] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,0] * self.yu[2,mif2] * self.yubar[2,0] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yu[2,mif2] * self.yubar[2,0] + 3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[2,0] * self.yu[2,mif2] * self.yubar[2,0] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[2,0] * self.yu[2,mif2] * self.yubar[2,0] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yu[2,mif2] * self.yubar[2,0] + -1/48 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[2,0] + -1/48 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[2,0] + -1/48 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yu[0,0] * self.yu[mif1,mif2] * self.yubar[2,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yu[0,0] * self.yu[mif1,mif2] * self.yubar[2,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yu[mif1,mif2] * self.yubar[2,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yu[1,0] * self.yu[mif1,mif2] * self.yubar[2,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yu[1,0] * self.yu[mif1,mif2] * self.yubar[2,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yu[mif1,mif2] * self.yubar[2,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[2,0] * self.yu[mif1,mif2] * self.yubar[2,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[2,0] * self.yu[mif1,mif2] * self.yubar[2,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yu[mif1,mif2] * self.yubar[2,0] + 3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,1] * self.yu[2,mif2] * self.yubar[2,1] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,1] * self.yu[2,mif2] * self.yubar[2,1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yu[2,mif2] * self.yubar[2,1] + 3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,1] * self.yu[2,mif2] * self.yubar[2,1] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,1] * self.yu[2,mif2] * self.yubar[2,1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yu[2,mif2] * self.yubar[2,1] + 3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[2,1] * self.yu[2,mif2] * self.yubar[2,1] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[2,1] * self.yu[2,mif2] * self.yubar[2,1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yu[2,mif2] * self.yubar[2,1] + -1/48 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[2,1] + -1/48 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[2,1] + -1/48 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yu[0,1] * self.yu[mif1,mif2] * self.yubar[2,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yu[0,1] * self.yu[mif1,mif2] * self.yubar[2,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yu[mif1,mif2] * self.yubar[2,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yu[1,1] * self.yu[mif1,mif2] * self.yubar[2,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yu[1,1] * self.yu[mif1,mif2] * self.yubar[2,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yu[mif1,mif2] * self.yubar[2,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[2,1] * self.yu[mif1,mif2] * self.yubar[2,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[2,1] * self.yu[mif1,mif2] * self.yubar[2,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yu[mif1,mif2] * self.yubar[2,1] + 3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,2] * self.yu[2,mif2] * self.yubar[2,2] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,2] * self.yu[2,mif2] * self.yubar[2,2] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yu[2,mif2] * self.yubar[2,2] + 3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,2] * self.yu[2,mif2] * self.yubar[2,2] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,2] * self.yu[2,mif2] * self.yubar[2,2] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yu[2,mif2] * self.yubar[2,2] + 3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[2,2] * self.yu[2,mif2] * self.yubar[2,2] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[2,2] * self.yu[2,mif2] * self.yubar[2,2] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yu[2,mif2] * self.yubar[2,2] + -1/48 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[2,2] + -1/48 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[2,2] + -1/48 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yu[0,2] * self.yu[mif1,mif2] * self.yubar[2,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yu[0,2] * self.yu[mif1,mif2] * self.yubar[2,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yu[mif1,mif2] * self.yubar[2,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yu[1,2] * self.yu[mif1,mif2] * self.yubar[2,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yu[1,2] * self.yu[mif1,mif2] * self.yubar[2,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yu[mif1,mif2] * self.yubar[2,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[2,2] * self.yu[mif1,mif2] * self.yubar[2,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[2,2] * self.yu[mif1,mif2] * self.yubar[2,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yu[mif1,mif2] * self.yubar[2,2])

    def alphaOdH(self, mif1,mif2):
        return (1/2 * (self.MD)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,mif2] + 5/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,mif2] + 1/4 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,mif2] + -31/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[0])**(2) * self.lambdaDbar[0] * self.lambdaDbar[mif1] * self.yd[0,mif2] + -21/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[0])**(2) * self.lambdaDbar[0] * self.lambdaDbar[mif1] * self.yd[0,mif2] + -9/128 * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[0])**(2) * self.lambdaDbar[0] * self.lambdaDbar[mif1] * self.yd[0,mif2] + -3/64 * self.invepsilonbar * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[0])**(2) * self.lambdaDbar[0] * self.lambdaDbar[mif1] * self.yd[0,mif2] + -31/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaDbar[1] * self.lambdaDbar[mif1] * self.yd[0,mif2] + -21/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaDbar[1] * self.lambdaDbar[mif1] * self.yd[0,mif2] + -9/128 * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaDbar[1] * self.lambdaDbar[mif1] * self.yd[0,mif2] + -3/64 * self.invepsilonbar * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaDbar[1] * self.lambdaDbar[mif1] * self.yd[0,mif2] + -31/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * self.lambdaDbar[2] * self.lambdaDbar[mif1] * self.yd[0,mif2] + -21/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * self.lambdaDbar[2] * self.lambdaDbar[mif1] * self.yd[0,mif2] + -9/128 * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * self.lambdaDbar[2] * self.lambdaDbar[mif1] * self.yd[0,mif2] + -3/64 * self.invepsilonbar * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * self.lambdaDbar[2] * self.lambdaDbar[mif1] * self.yd[0,mif2] + -3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yd[0,mif2] + -3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yd[0,mif2] + -3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yd[0,mif2] + -3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yd[0,mif2] + -3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yd[0,mif2] + -3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yd[0,mif2] + -1/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] + 21/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[0])**(2) * self.lambdaDbar[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] + 3/64 * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[0])**(2) * self.lambdaDbar[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] + 21/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaDbar[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] + 3/64 * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaDbar[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] + 21/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * self.lambdaDbar[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] + 3/64 * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * self.lambdaDbar[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] + 1/2 * (self.MD)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,mif2] + 5/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,mif2] + 1/4 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,mif2] + -31/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaDbar[0] * self.lambdaDbar[mif1] * self.yd[1,mif2] + -21/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaDbar[0] * self.lambdaDbar[mif1] * self.yd[1,mif2] + -9/128 * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaDbar[0] * self.lambdaDbar[mif1] * self.yd[1,mif2] + -3/64 * self.invepsilonbar * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaDbar[0] * self.lambdaDbar[mif1] * self.yd[1,mif2] + -31/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[1])**(2) * self.lambdaDbar[1] * self.lambdaDbar[mif1] * self.yd[1,mif2] + -21/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[1])**(2) * self.lambdaDbar[1] * self.lambdaDbar[mif1] * self.yd[1,mif2] + -9/128 * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[1])**(2) * self.lambdaDbar[1] * self.lambdaDbar[mif1] * self.yd[1,mif2] + -3/64 * self.invepsilonbar * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[1])**(2) * self.lambdaDbar[1] * self.lambdaDbar[mif1] * self.yd[1,mif2] + -31/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[2] * self.lambdaDbar[mif1] * self.yd[1,mif2] + -21/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[2] * self.lambdaDbar[mif1] * self.yd[1,mif2] + -9/128 * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[2] * self.lambdaDbar[mif1] * self.yd[1,mif2] + -3/64 * self.invepsilonbar * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[2] * self.lambdaDbar[mif1] * self.yd[1,mif2] + -3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yd[1,mif2] + -3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yd[1,mif2] + -3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yd[1,mif2] + -3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yd[1,mif2] + -3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yd[1,mif2] + -3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yd[1,mif2] + -1/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] + 21/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaDbar[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] + 3/64 * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaDbar[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] + 21/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[1])**(2) * self.lambdaDbar[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] + 3/64 * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[1])**(2) * self.lambdaDbar[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] + 21/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] + 3/64 * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] + 1/2 * (self.MD)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,mif2] + 5/16 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,mif2] + 1/4 * self.invepsilonbar * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,mif2] + -31/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * self.lambdaDbar[0] * self.lambdaDbar[mif1] * self.yd[2,mif2] + -21/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * self.lambdaDbar[0] * self.lambdaDbar[mif1] * self.yd[2,mif2] + -9/128 * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * self.lambdaDbar[0] * self.lambdaDbar[mif1] * self.yd[2,mif2] + -3/64 * self.invepsilonbar * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * self.lambdaDbar[0] * self.lambdaDbar[mif1] * self.yd[2,mif2] + -31/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[1] * self.lambdaDbar[mif1] * self.yd[2,mif2] + -21/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[1] * self.lambdaDbar[mif1] * self.yd[2,mif2] + -9/128 * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[1] * self.lambdaDbar[mif1] * self.yd[2,mif2] + -3/64 * self.invepsilonbar * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[1] * self.lambdaDbar[mif1] * self.yd[2,mif2] + -31/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[2])**(2) * self.lambdaDbar[2] * self.lambdaDbar[mif1] * self.yd[2,mif2] + -21/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[2])**(2) * self.lambdaDbar[2] * self.lambdaDbar[mif1] * self.yd[2,mif2] + -9/128 * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[2])**(2) * self.lambdaDbar[2] * self.lambdaDbar[mif1] * self.yd[2,mif2] + -3/64 * self.invepsilonbar * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[2])**(2) * self.lambdaDbar[2] * self.lambdaDbar[mif1] * self.yd[2,mif2] + -3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yd[2,mif2] + -3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yd[2,mif2] + -3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yd[2,mif2] + -3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yd[2,mif2] + -3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yd[2,mif2] + -3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yd[2,mif2] + -1/4 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] + 21/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * self.lambdaDbar[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] + 3/64 * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * self.lambdaDbar[0] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] + 21/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] + 3/64 * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[1] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] + 21/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[2])**(2) * self.lambdaDbar[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] + 3/64 * (self.MD)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[2])**(2) * self.lambdaDbar[2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] + -1/480 * (self.g2)**(4) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -5/192 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[mif1,mif2] + -1/32 * (self.g2)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[mif1,mif2] + 1/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[mif1,mif2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[0])**(2) * (self.lambdaDbar[0])**(2) * self.yd[mif1,mif2] + -5/192 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[mif1,mif2] + -1/32 * (self.g2)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[mif1,mif2] + 1/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaDbar[0] * self.lambdaDbar[1] * self.yd[mif1,mif2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[1])**(2) * (self.lambdaDbar[1])**(2) * self.yd[mif1,mif2] + -5/192 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[mif1,mif2] + -1/32 * (self.g2)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[mif1,mif2] + 1/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * self.lambdaDbar[0] * self.lambdaDbar[2] * self.yd[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[1] * self.lambdaDbar[2] * self.yd[mif1,mif2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[2])**(2) * (self.lambdaDbar[2])**(2) * self.yd[mif1,mif2] + 1/144 * (self.g2)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yd[mif1,mif2] + 1/24 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yd[mif1,mif2] + -5/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[0])**(2) * (self.lambdaDelta3bar[0])**(2) * self.yd[mif1,mif2] + 1/144 * (self.g2)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yd[mif1,mif2] + 1/24 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yd[mif1,mif2] + -5/96 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * self.yd[mif1,mif2] + -5/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[1])**(2) * (self.lambdaDelta3bar[1])**(2) * self.yd[mif1,mif2] + 1/144 * (self.g2)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yd[mif1,mif2] + 1/24 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yd[mif1,mif2] + -5/96 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * self.yd[mif1,mif2] + -5/96 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * self.yd[mif1,mif2] + -5/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[2])**(2) * (self.lambdaDelta3bar[2])**(2) * self.yd[mif1,mif2] + 1/32 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 1/32 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 1/32 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,0] * self.yd[0,mif2] * self.ydbar[0,0] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[0,mif2] * self.yd[1,0] * self.ydbar[0,0] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[0,mif2] * self.yd[2,0] * self.ydbar[0,0] + 37/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] + 3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] + -3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] + 37/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[0,0] + 3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[0,0] + -3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[0,0] + 37/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[0,0] + 3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[0,0] + -3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[0,0] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,0] * self.yd[mif1,mif2] * self.ydbar[0,0] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,0] * self.yd[mif1,mif2] * self.ydbar[0,0] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[mif1,mif2] * self.ydbar[0,0] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,0] * self.yd[mif1,mif2] * self.ydbar[0,0] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,0] * self.yd[mif1,mif2] * self.ydbar[0,0] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[mif1,mif2] * self.ydbar[0,0] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,0] * self.yd[mif1,mif2] * self.ydbar[0,0] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,0] * self.yd[mif1,mif2] * self.ydbar[0,0] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yd[mif1,mif2] * self.ydbar[0,0] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,1] * self.yd[0,mif2] * self.ydbar[0,1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[0,mif2] * self.yd[1,1] * self.ydbar[0,1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[0,mif2] * self.yd[2,1] * self.ydbar[0,1] + 37/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] + 3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] + -3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] + 37/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[0,1] + 3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[0,1] + -3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[0,1] + 37/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[0,1] + 3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[0,1] + -3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[0,1] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,1] * self.yd[mif1,mif2] * self.ydbar[0,1] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,1] * self.yd[mif1,mif2] * self.ydbar[0,1] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[mif1,mif2] * self.ydbar[0,1] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,1] * self.yd[mif1,mif2] * self.ydbar[0,1] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,1] * self.yd[mif1,mif2] * self.ydbar[0,1] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[mif1,mif2] * self.ydbar[0,1] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,1] * self.yd[mif1,mif2] * self.ydbar[0,1] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,1] * self.yd[mif1,mif2] * self.ydbar[0,1] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.yd[mif1,mif2] * self.ydbar[0,1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,2] * self.yd[0,mif2] * self.ydbar[0,2] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[0,mif2] * self.yd[1,2] * self.ydbar[0,2] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[0,mif2] * self.yd[2,2] * self.ydbar[0,2] + 37/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] + 3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] + -3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] + 37/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[0,2] + 3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[0,2] + -3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[0,2] + 37/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[0,2] + 3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[0,2] + -3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[0,2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,2] * self.yd[mif1,mif2] * self.ydbar[0,2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,2] * self.yd[mif1,mif2] * self.ydbar[0,2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[mif1,mif2] * self.ydbar[0,2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,2] * self.yd[mif1,mif2] * self.ydbar[0,2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,2] * self.yd[mif1,mif2] * self.ydbar[0,2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[mif1,mif2] * self.ydbar[0,2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,2] * self.yd[mif1,mif2] * self.ydbar[0,2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,2] * self.yd[mif1,mif2] * self.ydbar[0,2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.yd[mif1,mif2] * self.ydbar[0,2] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,0] * self.yd[1,mif2] * self.ydbar[1,0] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,0] * self.yd[1,mif2] * self.ydbar[1,0] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[1,mif2] * self.yd[2,0] * self.ydbar[1,0] + 37/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[1,0] + 3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[1,0] + -3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[1,0] + 37/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] + 3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] + -3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] + 37/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[1,0] + 3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[1,0] + -3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[1,0] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[mif1,mif2] * self.ydbar[1,0] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,0] * self.yd[mif1,mif2] * self.ydbar[1,0] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[mif1,mif2] * self.ydbar[1,0] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,0] * self.yd[mif1,mif2] * self.ydbar[1,0] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,0] * self.yd[mif1,mif2] * self.ydbar[1,0] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[mif1,mif2] * self.ydbar[1,0] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,0] * self.yd[mif1,mif2] * self.ydbar[1,0] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,0] * self.yd[mif1,mif2] * self.ydbar[1,0] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yd[mif1,mif2] * self.ydbar[1,0] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,1] * self.yd[1,mif2] * self.ydbar[1,1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,1] * self.yd[1,mif2] * self.ydbar[1,1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[1,mif2] * self.yd[2,1] * self.ydbar[1,1] + 37/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[1,1] + 3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[1,1] + -3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[1,1] + 37/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] + 3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] + -3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] + 37/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[1,1] + 3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[1,1] + -3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[1,1] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,1] * self.yd[mif1,mif2] * self.ydbar[1,1] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,1] * self.yd[mif1,mif2] * self.ydbar[1,1] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[mif1,mif2] * self.ydbar[1,1] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,1] * self.yd[mif1,mif2] * self.ydbar[1,1] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,1] * self.yd[mif1,mif2] * self.ydbar[1,1] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[mif1,mif2] * self.ydbar[1,1] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,1] * self.yd[mif1,mif2] * self.ydbar[1,1] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,1] * self.yd[mif1,mif2] * self.ydbar[1,1] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.yd[mif1,mif2] * self.ydbar[1,1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,2] * self.yd[1,mif2] * self.ydbar[1,2] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,2] * self.yd[1,mif2] * self.ydbar[1,2] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[1,mif2] * self.yd[2,2] * self.ydbar[1,2] + 37/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[1,2] + 3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[1,2] + -3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[1,2] + 37/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] + 3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] + -3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] + 37/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[1,2] + 3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[1,2] + -3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[1,2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,2] * self.yd[mif1,mif2] * self.ydbar[1,2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,2] * self.yd[mif1,mif2] * self.ydbar[1,2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[mif1,mif2] * self.ydbar[1,2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,2] * self.yd[mif1,mif2] * self.ydbar[1,2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,2] * self.yd[mif1,mif2] * self.ydbar[1,2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[mif1,mif2] * self.ydbar[1,2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,2] * self.yd[mif1,mif2] * self.ydbar[1,2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,2] * self.yd[mif1,mif2] * self.ydbar[1,2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.yd[mif1,mif2] * self.ydbar[1,2] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,0] * self.yd[2,mif2] * self.ydbar[2,0] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,0] * self.yd[2,mif2] * self.ydbar[2,0] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,0] * self.yd[2,mif2] * self.ydbar[2,0] + 37/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[2,0] + 3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[2,0] + -3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[2,0] + 37/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[2,0] + 3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[2,0] + -3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[2,0] + 37/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] + 3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] + -3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[mif1,mif2] * self.ydbar[2,0] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,0] * self.yd[mif1,mif2] * self.ydbar[2,0] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yd[mif1,mif2] * self.ydbar[2,0] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,0] * self.yd[mif1,mif2] * self.ydbar[2,0] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,0] * self.yd[mif1,mif2] * self.ydbar[2,0] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yd[mif1,mif2] * self.ydbar[2,0] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,0] * self.yd[mif1,mif2] * self.ydbar[2,0] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,0] * self.yd[mif1,mif2] * self.ydbar[2,0] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yd[mif1,mif2] * self.ydbar[2,0] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,1] * self.yd[2,mif2] * self.ydbar[2,1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,1] * self.yd[2,mif2] * self.ydbar[2,1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,1] * self.yd[2,mif2] * self.ydbar[2,1] + 37/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[2,1] + 3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[2,1] + -3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[2,1] + 37/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[2,1] + 3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[2,1] + -3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[2,1] + 37/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] + 3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] + -3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,1] * self.yd[mif1,mif2] * self.ydbar[2,1] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,1] * self.yd[mif1,mif2] * self.ydbar[2,1] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yd[mif1,mif2] * self.ydbar[2,1] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,1] * self.yd[mif1,mif2] * self.ydbar[2,1] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,1] * self.yd[mif1,mif2] * self.ydbar[2,1] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yd[mif1,mif2] * self.ydbar[2,1] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,1] * self.yd[mif1,mif2] * self.ydbar[2,1] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,1] * self.yd[mif1,mif2] * self.ydbar[2,1] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.yd[mif1,mif2] * self.ydbar[2,1] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[0,2] * self.yd[2,mif2] * self.ydbar[2,2] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[1,2] * self.yd[2,mif2] * self.ydbar[2,2] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[2,2] * self.yd[2,mif2] * self.ydbar[2,2] + 37/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[2,2] + 3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[2,2] + -3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[2,2] + 37/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[2,2] + 3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[2,2] + -3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[2,2] + 37/384 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] + 3/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] + -3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,2] * self.yd[mif1,mif2] * self.ydbar[2,2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,2] * self.yd[mif1,mif2] * self.ydbar[2,2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yd[mif1,mif2] * self.ydbar[2,2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,2] * self.yd[mif1,mif2] * self.ydbar[2,2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,2] * self.yd[mif1,mif2] * self.ydbar[2,2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yd[mif1,mif2] * self.ydbar[2,2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,2] * self.yd[mif1,mif2] * self.ydbar[2,2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,2] * self.yd[mif1,mif2] * self.ydbar[2,2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.yd[mif1,mif2] * self.ydbar[2,2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[0,0] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[0,0] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[0,0] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[0,0] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[0,0] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[0,0] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[0,1] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[0,1] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[0,1] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[0,1] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[0,1] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[0,1] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[0,2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[0,2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[0,2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[0,2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[0,2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[0,2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[1,0] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[1,0] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[1,0] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[1,0] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[1,0] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[1,0] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[1,1] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[1,1] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[1,1] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[1,1] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[1,1] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[1,1] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[1,2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[1,2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[1,2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[1,2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[1,2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[1,2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[2,0] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[2,0] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[2,0] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[2,0] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[2,0] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[2,0] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[2,1] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[2,1] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[2,1] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[2,1] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[2,1] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[2,1] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[2,2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[2,2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[2,2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[2,2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[2,2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[2,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[mif1,mif2] * self.yu[0,0] * self.yubar[0,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[mif1,mif2] * self.yu[0,0] * self.yubar[0,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yu[0,0] * self.yubar[0,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[mif1,mif2] * self.yu[1,0] * self.yubar[0,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[mif1,mif2] * self.yu[1,0] * self.yubar[0,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yu[1,0] * self.yubar[0,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[mif1,mif2] * self.yu[2,0] * self.yubar[0,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[mif1,mif2] * self.yu[2,0] * self.yubar[0,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yu[2,0] * self.yubar[0,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[mif1,mif2] * self.yu[0,1] * self.yubar[0,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[mif1,mif2] * self.yu[0,1] * self.yubar[0,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yu[0,1] * self.yubar[0,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[mif1,mif2] * self.yu[1,1] * self.yubar[0,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[mif1,mif2] * self.yu[1,1] * self.yubar[0,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yu[1,1] * self.yubar[0,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[mif1,mif2] * self.yu[2,1] * self.yubar[0,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[mif1,mif2] * self.yu[2,1] * self.yubar[0,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yu[2,1] * self.yubar[0,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[mif1,mif2] * self.yu[0,2] * self.yubar[0,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[mif1,mif2] * self.yu[0,2] * self.yubar[0,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yu[0,2] * self.yubar[0,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[mif1,mif2] * self.yu[1,2] * self.yubar[0,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[mif1,mif2] * self.yu[1,2] * self.yubar[0,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yu[1,2] * self.yubar[0,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[mif1,mif2] * self.yu[2,2] * self.yubar[0,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[mif1,mif2] * self.yu[2,2] * self.yubar[0,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yu[2,2] * self.yubar[0,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[mif1,mif2] * self.yu[0,0] * self.yubar[1,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[mif1,mif2] * self.yu[0,0] * self.yubar[1,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yu[0,0] * self.yubar[1,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[mif1,mif2] * self.yu[1,0] * self.yubar[1,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[mif1,mif2] * self.yu[1,0] * self.yubar[1,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yu[1,0] * self.yubar[1,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[mif1,mif2] * self.yu[2,0] * self.yubar[1,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[mif1,mif2] * self.yu[2,0] * self.yubar[1,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yu[2,0] * self.yubar[1,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[mif1,mif2] * self.yu[0,1] * self.yubar[1,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[mif1,mif2] * self.yu[0,1] * self.yubar[1,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yu[0,1] * self.yubar[1,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[mif1,mif2] * self.yu[1,1] * self.yubar[1,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[mif1,mif2] * self.yu[1,1] * self.yubar[1,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yu[1,1] * self.yubar[1,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[mif1,mif2] * self.yu[2,1] * self.yubar[1,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[mif1,mif2] * self.yu[2,1] * self.yubar[1,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yu[2,1] * self.yubar[1,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[mif1,mif2] * self.yu[0,2] * self.yubar[1,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[mif1,mif2] * self.yu[0,2] * self.yubar[1,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yu[0,2] * self.yubar[1,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[mif1,mif2] * self.yu[1,2] * self.yubar[1,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[mif1,mif2] * self.yu[1,2] * self.yubar[1,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yu[1,2] * self.yubar[1,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[mif1,mif2] * self.yu[2,2] * self.yubar[1,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[mif1,mif2] * self.yu[2,2] * self.yubar[1,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yu[2,2] * self.yubar[1,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[mif1,mif2] * self.yu[0,0] * self.yubar[2,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[mif1,mif2] * self.yu[0,0] * self.yubar[2,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yu[0,0] * self.yubar[2,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[mif1,mif2] * self.yu[1,0] * self.yubar[2,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[mif1,mif2] * self.yu[1,0] * self.yubar[2,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yu[1,0] * self.yubar[2,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[mif1,mif2] * self.yu[2,0] * self.yubar[2,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[mif1,mif2] * self.yu[2,0] * self.yubar[2,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yu[2,0] * self.yubar[2,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[mif1,mif2] * self.yu[0,1] * self.yubar[2,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[mif1,mif2] * self.yu[0,1] * self.yubar[2,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yu[0,1] * self.yubar[2,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[mif1,mif2] * self.yu[1,1] * self.yubar[2,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[mif1,mif2] * self.yu[1,1] * self.yubar[2,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yu[1,1] * self.yubar[2,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[mif1,mif2] * self.yu[2,1] * self.yubar[2,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[mif1,mif2] * self.yu[2,1] * self.yubar[2,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yu[2,1] * self.yubar[2,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[mif1,mif2] * self.yu[0,2] * self.yubar[2,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[mif1,mif2] * self.yu[0,2] * self.yubar[2,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yu[0,2] * self.yubar[2,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[mif1,mif2] * self.yu[1,2] * self.yubar[2,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[mif1,mif2] * self.yu[1,2] * self.yubar[2,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yu[1,2] * self.yubar[2,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[mif1,mif2] * self.yu[2,2] * self.yubar[2,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[mif1,mif2] * self.yu[2,2] * self.yubar[2,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yu[2,2] * self.yubar[2,2])

    def alphaOeH(self, mif1,mif2):
        return (1/2 * (self.MDelta3)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[mif1,0] + -1/32 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[mif1,0] + -1/16 * (self.g2)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[mif1,0] + -3/32 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[mif1,0] + -3/16 * (self.g2)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[mif1,0] + 19/32 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[mif1,0] + 7/16 * self.invepsilonbar * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[mif1,0] + -9/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[mif1,0] + -9/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[mif1,0] + -9/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[mif1,0] + -9/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[mif1,0] + -9/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[mif1,0] + -9/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[mif1,0] + -13/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[mif2] * (self.lambdaDelta3bar[0])**(2) * self.yl[mif1,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[mif2] * (self.lambdaDelta3bar[0])**(2) * self.yl[mif1,0] + -11/64 * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[mif2] * (self.lambdaDelta3bar[0])**(2) * self.yl[mif1,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[mif2] * (self.lambdaDelta3bar[0])**(2) * self.yl[mif1,0] + -13/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * self.yl[mif1,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * self.yl[mif1,0] + -11/64 * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * self.yl[mif1,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * self.yl[mif1,0] + -13/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * self.yl[mif1,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * self.yl[mif1,0] + -11/64 * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * self.yl[mif1,0] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * self.yl[mif1,0] + 9/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 9/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 9/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 3/32 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 3/16 * (self.g2)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + -7/16 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[mif2] * (self.lambdaDelta3bar[0])**(2) * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 1/8 * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[mif2] * (self.lambdaDelta3bar[0])**(2) * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 1/8 * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 1/8 * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 1/2 * (self.MDelta3)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[mif1,1] + -1/32 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[mif1,1] + -1/16 * (self.g2)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[mif1,1] + -3/32 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[mif1,1] + -3/16 * (self.g2)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[mif1,1] + 19/32 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[mif1,1] + 7/16 * self.invepsilonbar * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[mif1,1] + -9/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[mif1,1] + -9/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[mif1,1] + -9/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[mif1,1] + -9/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[mif1,1] + -9/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[mif1,1] + -9/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[mif1,1] + -13/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * self.yl[mif1,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * self.yl[mif1,1] + -11/64 * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * self.yl[mif1,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * self.yl[mif1,1] + -13/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[mif2] * (self.lambdaDelta3bar[1])**(2) * self.yl[mif1,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[mif2] * (self.lambdaDelta3bar[1])**(2) * self.yl[mif1,1] + -11/64 * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[mif2] * (self.lambdaDelta3bar[1])**(2) * self.yl[mif1,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[mif2] * (self.lambdaDelta3bar[1])**(2) * self.yl[mif1,1] + -13/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * self.yl[mif1,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * self.yl[mif1,1] + -11/64 * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * self.yl[mif1,1] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * self.yl[mif1,1] + 9/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 9/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 9/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 3/32 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 3/16 * (self.g2)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + -7/16 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 1/8 * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[mif2] * (self.lambdaDelta3bar[1])**(2) * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 1/8 * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[mif2] * (self.lambdaDelta3bar[1])**(2) * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 1/8 * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 1/2 * (self.MDelta3)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[mif1,2] + -1/32 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[mif1,2] + -1/16 * (self.g2)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[mif1,2] + -3/32 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[mif1,2] + -3/16 * (self.g2)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[mif1,2] + 19/32 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[mif1,2] + 7/16 * self.invepsilonbar * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[mif1,2] + -9/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[mif1,2] + -9/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[mif1,2] + -9/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[mif1,2] + -9/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[mif1,2] + -9/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[mif1,2] + -9/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[mif1,2] + -13/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * self.yl[mif1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * self.yl[mif1,2] + -11/64 * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * self.yl[mif1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * self.yl[mif1,2] + -13/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * self.yl[mif1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * self.yl[mif1,2] + -11/64 * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * self.yl[mif1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * self.yl[mif1,2] + -13/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3[mif2] * (self.lambdaDelta3bar[2])**(2) * self.yl[mif1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3[mif2] * (self.lambdaDelta3bar[2])**(2) * self.yl[mif1,2] + -11/64 * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3[mif2] * (self.lambdaDelta3bar[2])**(2) * self.yl[mif1,2] + -1/8 * self.invepsilonbar * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3[mif2] * (self.lambdaDelta3bar[2])**(2) * self.yl[mif1,2] + 9/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 9/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 9/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 3/32 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 3/16 * (self.g2)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + -7/16 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 1/8 * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 1/8 * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 1/8 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3[mif2] * (self.lambdaDelta3bar[2])**(2) * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 1/8 * (self.MDelta3)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3[mif2] * (self.lambdaDelta3bar[2])**(2) * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + -1/480 * (self.g2)**(4) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -5/192 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yl[mif1,mif2] + -1/32 * (self.g2)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yl[mif1,mif2] + 1/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yl[mif1,mif2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[0])**(2) * (self.lambdaDbar[0])**(2) * self.yl[mif1,mif2] + -5/192 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yl[mif1,mif2] + -1/32 * (self.g2)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yl[mif1,mif2] + 1/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yl[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[1] * self.lambdaDbar[0] * self.lambdaDbar[1] * self.yl[mif1,mif2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[1])**(2) * (self.lambdaDbar[1])**(2) * self.yl[mif1,mif2] + -5/192 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yl[mif1,mif2] + -1/32 * (self.g2)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yl[mif1,mif2] + 1/8 * self.lam * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yl[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaD[2] * self.lambdaDbar[0] * self.lambdaDbar[2] * self.yl[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaD[2] * self.lambdaDbar[1] * self.lambdaDbar[2] * self.yl[mif1,mif2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaD[2])**(2) * (self.lambdaDbar[2])**(2) * self.yl[mif1,mif2] + 1/144 * (self.g2)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[mif1,mif2] + 1/24 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[mif1,mif2] + -5/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[0])**(2) * (self.lambdaDelta3bar[0])**(2) * self.yl[mif1,mif2] + 1/144 * (self.g2)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[mif1,mif2] + 1/24 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[mif1,mif2] + -5/96 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[1] * self.yl[mif1,mif2] + -5/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[1])**(2) * (self.lambdaDelta3bar[1])**(2) * self.yl[mif1,mif2] + 1/144 * (self.g2)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[mif1,mif2] + 1/24 * self.lam * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[mif1,mif2] + -5/96 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.lambdaDelta3bar[2] * self.yl[mif1,mif2] + -5/96 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.lambdaDelta3bar[2] * self.yl[mif1,mif2] + -5/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta3[2])**(2) * (self.lambdaDelta3bar[2])**(2) * self.yl[mif1,mif2] + 1/32 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 1/32 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 1/32 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,0] * self.ydbar[0,0] * self.yl[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,0] * self.ydbar[0,0] * self.yl[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] * self.yl[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,0] * self.ydbar[0,0] * self.yl[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,0] * self.ydbar[0,0] * self.yl[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[0,0] * self.yl[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,0] * self.ydbar[0,0] * self.yl[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,0] * self.ydbar[0,0] * self.yl[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[0,0] * self.yl[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,1] * self.ydbar[0,1] * self.yl[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,1] * self.ydbar[0,1] * self.yl[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] * self.yl[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,1] * self.ydbar[0,1] * self.yl[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,1] * self.ydbar[0,1] * self.yl[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[0,1] * self.yl[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,1] * self.ydbar[0,1] * self.yl[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,1] * self.ydbar[0,1] * self.yl[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[0,1] * self.yl[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,2] * self.ydbar[0,2] * self.yl[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[0,2] * self.ydbar[0,2] * self.yl[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] * self.yl[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,2] * self.ydbar[0,2] * self.yl[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yd[1,2] * self.ydbar[0,2] * self.yl[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[0,2] * self.yl[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,2] * self.ydbar[0,2] * self.yl[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yd[2,2] * self.ydbar[0,2] * self.yl[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[0,2] * self.yl[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,0] * self.ydbar[1,0] * self.yl[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,0] * self.ydbar[1,0] * self.yl[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[1,0] * self.yl[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,0] * self.ydbar[1,0] * self.yl[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,0] * self.ydbar[1,0] * self.yl[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] * self.yl[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,0] * self.ydbar[1,0] * self.yl[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,0] * self.ydbar[1,0] * self.yl[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[1,0] * self.yl[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,1] * self.ydbar[1,1] * self.yl[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,1] * self.ydbar[1,1] * self.yl[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[1,1] * self.yl[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,1] * self.ydbar[1,1] * self.yl[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,1] * self.ydbar[1,1] * self.yl[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] * self.yl[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,1] * self.ydbar[1,1] * self.yl[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,1] * self.ydbar[1,1] * self.yl[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[1,1] * self.yl[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,2] * self.ydbar[1,2] * self.yl[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yd[0,2] * self.ydbar[1,2] * self.yl[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[1,2] * self.yl[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,2] * self.ydbar[1,2] * self.yl[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[1,2] * self.ydbar[1,2] * self.yl[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,2] * self.yl[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,2] * self.ydbar[1,2] * self.yl[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yd[2,2] * self.ydbar[1,2] * self.yl[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[1,2] * self.yl[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,0] * self.ydbar[2,0] * self.yl[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,0] * self.ydbar[2,0] * self.yl[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[2,0] * self.yl[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,0] * self.ydbar[2,0] * self.yl[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,0] * self.ydbar[2,0] * self.yl[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[2,0] * self.yl[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,0] * self.ydbar[2,0] * self.yl[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,0] * self.ydbar[2,0] * self.yl[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] * self.yl[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,1] * self.ydbar[2,1] * self.yl[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,1] * self.ydbar[2,1] * self.yl[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[2,1] * self.yl[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,1] * self.ydbar[2,1] * self.yl[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,1] * self.ydbar[2,1] * self.yl[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[2,1] * self.yl[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,1] * self.ydbar[2,1] * self.yl[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,1] * self.ydbar[2,1] * self.yl[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,1] * self.yl[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,2] * self.ydbar[2,2] * self.yl[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yd[0,2] * self.ydbar[2,2] * self.yl[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[2,2] * self.yl[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,2] * self.ydbar[2,2] * self.yl[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yd[1,2] * self.ydbar[2,2] * self.yl[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[2,2] * self.yl[mif1,mif2] + 3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,2] * self.ydbar[2,2] * self.yl[mif1,mif2] + 3/16 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[2,2] * self.ydbar[2,2] * self.yl[mif1,mif2] + -3/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,2] * self.yl[mif1,mif2] + 5/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[mif1,0] * self.ylbar[0,0] + 3/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[mif1,0] * self.ylbar[0,0] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[mif1,0] * self.ylbar[0,0] + 5/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[mif1,0] * self.ylbar[0,0] + 3/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[mif1,0] * self.ylbar[0,0] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[mif1,0] * self.ylbar[0,0] + 5/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[mif1,0] * self.ylbar[0,0] + 3/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[mif1,0] * self.ylbar[0,0] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[mif1,0] * self.ylbar[0,0] + 19/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,0] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,0] + 19/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,0] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,0] + 19/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,0] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,0] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[0,0] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[0,0] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[0,0] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[0,0] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[0,0] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[0,0] + 19/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,1] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,1] + 5/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[mif1,1] * self.ylbar[0,1] + 3/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[mif1,1] * self.ylbar[0,1] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[mif1,1] * self.ylbar[0,1] + 5/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[mif1,1] * self.ylbar[0,1] + 3/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[mif1,1] * self.ylbar[0,1] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[mif1,1] * self.ylbar[0,1] + 5/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[mif1,1] * self.ylbar[0,1] + 3/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[mif1,1] * self.ylbar[0,1] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[mif1,1] * self.ylbar[0,1] + 19/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,1] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,1] + 19/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,1] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,1] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[0,1] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[0,1] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[0,1] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[0,1] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[0,1] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[0,1] + 19/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,2] + 19/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,2] + 5/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[mif1,2] * self.ylbar[0,2] + 3/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[mif1,2] * self.ylbar[0,2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[mif1,2] * self.ylbar[0,2] + 5/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[mif1,2] * self.ylbar[0,2] + 3/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[mif1,2] * self.ylbar[0,2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[mif1,2] * self.ylbar[0,2] + 5/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[mif1,2] * self.ylbar[0,2] + 3/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[mif1,2] * self.ylbar[0,2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[mif1,2] * self.ylbar[0,2] + 19/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[0,2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[0,2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[0,2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[0,2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[0,2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[0,2] + 5/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[mif1,0] * self.ylbar[1,0] + 3/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[mif1,0] * self.ylbar[1,0] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[mif1,0] * self.ylbar[1,0] + 5/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[mif1,0] * self.ylbar[1,0] + 3/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[mif1,0] * self.ylbar[1,0] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[mif1,0] * self.ylbar[1,0] + 5/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[mif1,0] * self.ylbar[1,0] + 3/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[mif1,0] * self.ylbar[1,0] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[mif1,0] * self.ylbar[1,0] + 19/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,0] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,0] + 19/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,0] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,0] + 19/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,0] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,0] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[1,0] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[1,0] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[1,0] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[1,0] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[1,0] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[1,0] + 19/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,1] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,1] + 5/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[mif1,1] * self.ylbar[1,1] + 3/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[mif1,1] * self.ylbar[1,1] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[mif1,1] * self.ylbar[1,1] + 5/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[mif1,1] * self.ylbar[1,1] + 3/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[mif1,1] * self.ylbar[1,1] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[mif1,1] * self.ylbar[1,1] + 5/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[mif1,1] * self.ylbar[1,1] + 3/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[mif1,1] * self.ylbar[1,1] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[mif1,1] * self.ylbar[1,1] + 19/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,1] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,1] + 19/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,1] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,1] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[1,1] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[1,1] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[1,1] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[1,1] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[1,1] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[1,1] + 19/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,2] + 19/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,2] + 5/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[mif1,2] * self.ylbar[1,2] + 3/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[mif1,2] * self.ylbar[1,2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[mif1,2] * self.ylbar[1,2] + 5/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[mif1,2] * self.ylbar[1,2] + 3/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[mif1,2] * self.ylbar[1,2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[mif1,2] * self.ylbar[1,2] + 5/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[mif1,2] * self.ylbar[1,2] + 3/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[mif1,2] * self.ylbar[1,2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[mif1,2] * self.ylbar[1,2] + 19/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[1,2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[1,2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[1,2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[1,2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[1,2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[1,2] + 5/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.yl[mif1,0] * self.ylbar[2,0] + 3/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.yl[mif1,0] * self.ylbar[2,0] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[mif1,0] * self.ylbar[2,0] + 5/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.yl[mif1,0] * self.ylbar[2,0] + 3/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.yl[mif1,0] * self.ylbar[2,0] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[mif1,0] * self.ylbar[2,0] + 5/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.yl[mif1,0] * self.ylbar[2,0] + 3/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.yl[mif1,0] * self.ylbar[2,0] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.yl[mif1,0] * self.ylbar[2,0] + 19/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,0] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,0] + 19/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,0] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,0] + 19/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,0] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,0] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[2,0] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[2,0] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[2,0] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[2,0] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[2,0] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[2,0] + 19/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,1] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,1] + 5/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.yl[mif1,1] * self.ylbar[2,1] + 3/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.yl[mif1,1] * self.ylbar[2,1] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[mif1,1] * self.ylbar[2,1] + 5/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.yl[mif1,1] * self.ylbar[2,1] + 3/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.yl[mif1,1] * self.ylbar[2,1] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[mif1,1] * self.ylbar[2,1] + 5/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.yl[mif1,1] * self.ylbar[2,1] + 3/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.yl[mif1,1] * self.ylbar[2,1] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.yl[mif1,1] * self.ylbar[2,1] + 19/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,1] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,1] + 19/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,1] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,1] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[2,1] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[2,1] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[2,1] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[2,1] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[2,1] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[2,1] + 19/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,2] + 19/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,2] + 5/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.yl[mif1,2] * self.ylbar[2,2] + 3/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.yl[mif1,2] * self.ylbar[2,2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[mif1,2] * self.ylbar[2,2] + 5/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.yl[mif1,2] * self.ylbar[2,2] + 3/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.yl[mif1,2] * self.ylbar[2,2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[mif1,2] * self.ylbar[2,2] + 5/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.yl[mif1,2] * self.ylbar[2,2] + 3/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.yl[mif1,2] * self.ylbar[2,2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.yl[mif1,2] * self.ylbar[2,2] + 19/192 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[2,2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[0] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[2,2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[2,2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[2,2] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[2,2] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[2,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yl[mif1,mif2] * self.yu[0,0] * self.yubar[0,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yl[mif1,mif2] * self.yu[0,0] * self.yubar[0,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yu[0,0] * self.yubar[0,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yl[mif1,mif2] * self.yu[1,0] * self.yubar[0,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yl[mif1,mif2] * self.yu[1,0] * self.yubar[0,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yu[1,0] * self.yubar[0,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yl[mif1,mif2] * self.yu[2,0] * self.yubar[0,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yl[mif1,mif2] * self.yu[2,0] * self.yubar[0,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yu[2,0] * self.yubar[0,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yl[mif1,mif2] * self.yu[0,1] * self.yubar[0,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yl[mif1,mif2] * self.yu[0,1] * self.yubar[0,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yu[0,1] * self.yubar[0,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yl[mif1,mif2] * self.yu[1,1] * self.yubar[0,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yl[mif1,mif2] * self.yu[1,1] * self.yubar[0,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yu[1,1] * self.yubar[0,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yl[mif1,mif2] * self.yu[2,1] * self.yubar[0,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yl[mif1,mif2] * self.yu[2,1] * self.yubar[0,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yu[2,1] * self.yubar[0,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yl[mif1,mif2] * self.yu[0,2] * self.yubar[0,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yl[mif1,mif2] * self.yu[0,2] * self.yubar[0,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yu[0,2] * self.yubar[0,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yl[mif1,mif2] * self.yu[1,2] * self.yubar[0,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * self.yl[mif1,mif2] * self.yu[1,2] * self.yubar[0,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yu[1,2] * self.yubar[0,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yl[mif1,mif2] * self.yu[2,2] * self.yubar[0,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * self.yl[mif1,mif2] * self.yu[2,2] * self.yubar[0,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[0] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yu[2,2] * self.yubar[0,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yl[mif1,mif2] * self.yu[0,0] * self.yubar[1,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yl[mif1,mif2] * self.yu[0,0] * self.yubar[1,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yu[0,0] * self.yubar[1,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yl[mif1,mif2] * self.yu[1,0] * self.yubar[1,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yl[mif1,mif2] * self.yu[1,0] * self.yubar[1,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yu[1,0] * self.yubar[1,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yl[mif1,mif2] * self.yu[2,0] * self.yubar[1,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yl[mif1,mif2] * self.yu[2,0] * self.yubar[1,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yu[2,0] * self.yubar[1,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yl[mif1,mif2] * self.yu[0,1] * self.yubar[1,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yl[mif1,mif2] * self.yu[0,1] * self.yubar[1,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yu[0,1] * self.yubar[1,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yl[mif1,mif2] * self.yu[1,1] * self.yubar[1,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yl[mif1,mif2] * self.yu[1,1] * self.yubar[1,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yu[1,1] * self.yubar[1,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yl[mif1,mif2] * self.yu[2,1] * self.yubar[1,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yl[mif1,mif2] * self.yu[2,1] * self.yubar[1,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yu[2,1] * self.yubar[1,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yl[mif1,mif2] * self.yu[0,2] * self.yubar[1,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * self.yl[mif1,mif2] * self.yu[0,2] * self.yubar[1,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yu[0,2] * self.yubar[1,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yl[mif1,mif2] * self.yu[1,2] * self.yubar[1,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yl[mif1,mif2] * self.yu[1,2] * self.yubar[1,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yu[1,2] * self.yubar[1,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yl[mif1,mif2] * self.yu[2,2] * self.yubar[1,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * self.yl[mif1,mif2] * self.yu[2,2] * self.yubar[1,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yu[2,2] * self.yubar[1,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yl[mif1,mif2] * self.yu[0,0] * self.yubar[2,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yl[mif1,mif2] * self.yu[0,0] * self.yubar[2,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yu[0,0] * self.yubar[2,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yl[mif1,mif2] * self.yu[1,0] * self.yubar[2,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yl[mif1,mif2] * self.yu[1,0] * self.yubar[2,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yu[1,0] * self.yubar[2,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yl[mif1,mif2] * self.yu[2,0] * self.yubar[2,0] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yl[mif1,mif2] * self.yu[2,0] * self.yubar[2,0] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yu[2,0] * self.yubar[2,0] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yl[mif1,mif2] * self.yu[0,1] * self.yubar[2,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yl[mif1,mif2] * self.yu[0,1] * self.yubar[2,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yu[0,1] * self.yubar[2,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yl[mif1,mif2] * self.yu[1,1] * self.yubar[2,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yl[mif1,mif2] * self.yu[1,1] * self.yubar[2,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yu[1,1] * self.yubar[2,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yl[mif1,mif2] * self.yu[2,1] * self.yubar[2,1] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yl[mif1,mif2] * self.yu[2,1] * self.yubar[2,1] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yu[2,1] * self.yubar[2,1] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yl[mif1,mif2] * self.yu[0,2] * self.yubar[2,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * self.yl[mif1,mif2] * self.yu[0,2] * self.yubar[2,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yu[0,2] * self.yubar[2,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yl[mif1,mif2] * self.yu[1,2] * self.yubar[2,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * self.yl[mif1,mif2] * self.yu[1,2] * self.yubar[2,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yu[1,2] * self.yubar[2,2] + 3/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yl[mif1,mif2] * self.yu[2,2] * self.yubar[2,2] + 3/32 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yl[mif1,mif2] * self.yu[2,2] * self.yubar[2,2] + -3/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yu[2,2] * self.yubar[2,2])

    def alphaOqq1(self, mif1,mif2,mif3,mif4):
        return (-1/960 * (self.g3)**(4) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -1/12960 * (self.g1)**(4) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/1440 * (self.g3)**(4) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -1/960 * (self.g1)**(4) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -65/41472 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaD[mif2] * self.lambdaDbar[mif1] + -1/432 * (self.g3)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaD[mif2] * self.lambdaDbar[mif1] + 1/2304 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaD[mif2] * self.lambdaDbar[mif1] + 1/768 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaD[mif2] * self.lambdaDbar[mif1] + -1/2304 * (self.g1)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaD[mif2] * self.lambdaDbar[mif1] + 1/288 * (self.g3)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.lambdaD[mif4] * self.lambdaDbar[mif1] + -1/512 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.lambdaD[mif4] * self.lambdaDbar[mif1] + 1/288 * (self.g3)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.lambdaD[mif2] * self.lambdaDbar[mif3] + -1/512 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.lambdaD[mif2] * self.lambdaDbar[mif3] + -65/41472 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] + -1/432 * (self.g3)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] + 1/2304 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] + 1/768 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] + -1/2304 * (self.g1)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] + -1/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaD[mif4] * self.lambdaDbar[mif1] * self.lambdaDbar[mif3] + 1/2304 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + 1/2304 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * np.log((self.MD)**(2) * (self.mu)**(-2)) + 3/512 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yd[mif1,0] * self.ydbar[mif2,0] + 1/256 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yd[mif1,0] * self.ydbar[mif2,0] + -1/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[mif2,0] + 3/512 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yd[mif1,1] * self.ydbar[mif2,1] + 1/256 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yd[mif1,1] * self.ydbar[mif2,1] + -1/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[mif2,1] + 3/512 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yd[mif1,2] * self.ydbar[mif2,2] + 1/256 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yd[mif1,2] * self.ydbar[mif2,2] + -1/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[mif2,2] + 3/512 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yd[mif3,0] * self.ydbar[mif4,0] + 1/256 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yd[mif3,0] * self.ydbar[mif4,0] + -1/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif3,0] * self.ydbar[mif4,0] + 3/512 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yd[mif3,1] * self.ydbar[mif4,1] + 1/256 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yd[mif3,1] * self.ydbar[mif4,1] + -1/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif3,1] * self.ydbar[mif4,1] + 3/512 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yd[mif3,2] * self.ydbar[mif4,2] + 1/256 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yd[mif3,2] * self.ydbar[mif4,2] + -1/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif3,2] * self.ydbar[mif4,2] + -3/512 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yu[mif1,0] * self.yubar[mif2,0] + -1/256 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yu[mif1,0] * self.yubar[mif2,0] + 1/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif1,0] * self.yubar[mif2,0] + -3/512 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yu[mif1,1] * self.yubar[mif2,1] + -1/256 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yu[mif1,1] * self.yubar[mif2,1] + 1/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif1,1] * self.yubar[mif2,1] + -3/512 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yu[mif1,2] * self.yubar[mif2,2] + -1/256 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yu[mif1,2] * self.yubar[mif2,2] + 1/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif1,2] * self.yubar[mif2,2] + -3/512 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yu[mif3,0] * self.yubar[mif4,0] + -1/256 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yu[mif3,0] * self.yubar[mif4,0] + 1/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif3,0] * self.yubar[mif4,0] + -3/512 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yu[mif3,1] * self.yubar[mif4,1] + -1/256 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yu[mif3,1] * self.yubar[mif4,1] + 1/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif3,1] * self.yubar[mif4,1] + -3/512 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yu[mif3,2] * self.yubar[mif4,2] + -1/256 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yu[mif3,2] * self.yubar[mif4,2] + 1/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif3,2] * self.yubar[mif4,2])

    def alphaOqq3(self, mif1,mif2,mif3,mif4):
        return (-1/960 * (self.g3)**(4) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -1/960 * (self.g2)**(4) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -11/4608 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaD[mif2] * self.lambdaDbar[mif1] + -1/768 * (self.g2)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaD[mif2] * self.lambdaDbar[mif1] + 1/288 * (self.g3)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.lambdaD[mif4] * self.lambdaDbar[mif1] + -1/512 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.lambdaD[mif4] * self.lambdaDbar[mif1] + 1/288 * (self.g3)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.lambdaD[mif2] * self.lambdaDbar[mif3] + -1/512 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.lambdaD[mif2] * self.lambdaDbar[mif3] + -11/4608 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] + -1/768 * (self.g2)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] + -1/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaD[mif4] * self.lambdaDbar[mif1] * self.lambdaDbar[mif3] + 1/768 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + 1/768 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * np.log((self.MD)**(2) * (self.mu)**(-2)) + 3/512 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yd[mif1,0] * self.ydbar[mif2,0] + 1/256 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yd[mif1,0] * self.ydbar[mif2,0] + -1/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[mif2,0] + 3/512 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yd[mif1,1] * self.ydbar[mif2,1] + 1/256 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yd[mif1,1] * self.ydbar[mif2,1] + -1/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[mif2,1] + 3/512 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yd[mif1,2] * self.ydbar[mif2,2] + 1/256 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yd[mif1,2] * self.ydbar[mif2,2] + -1/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[mif2,2] + 3/512 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yd[mif3,0] * self.ydbar[mif4,0] + 1/256 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yd[mif3,0] * self.ydbar[mif4,0] + -1/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif3,0] * self.ydbar[mif4,0] + 3/512 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yd[mif3,1] * self.ydbar[mif4,1] + 1/256 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yd[mif3,1] * self.ydbar[mif4,1] + -1/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif3,1] * self.ydbar[mif4,1] + 3/512 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yd[mif3,2] * self.ydbar[mif4,2] + 1/256 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yd[mif3,2] * self.ydbar[mif4,2] + -1/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[mif3,2] * self.ydbar[mif4,2] + 3/512 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yu[mif1,0] * self.yubar[mif2,0] + 1/256 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yu[mif1,0] * self.yubar[mif2,0] + -1/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif1,0] * self.yubar[mif2,0] + 3/512 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yu[mif1,1] * self.yubar[mif2,1] + 1/256 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yu[mif1,1] * self.yubar[mif2,1] + -1/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif1,1] * self.yubar[mif2,1] + 3/512 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yu[mif1,2] * self.yubar[mif2,2] + 1/256 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yu[mif1,2] * self.yubar[mif2,2] + -1/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif1,2] * self.yubar[mif2,2] + 3/512 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yu[mif3,0] * self.yubar[mif4,0] + 1/256 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yu[mif3,0] * self.yubar[mif4,0] + -1/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif3,0] * self.yubar[mif4,0] + 3/512 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yu[mif3,1] * self.yubar[mif4,1] + 1/256 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yu[mif3,1] * self.yubar[mif4,1] + -1/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif3,1] * self.yubar[mif4,1] + 3/512 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yu[mif3,2] * self.yubar[mif4,2] + 1/256 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yu[mif3,2] * self.yubar[mif4,2] + -1/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[mif3,2] * self.yubar[mif4,2])

    def alphaOuu(self, mif1,mif2,mif3,mif4):
        return (-1/480 * (self.g3)**(4) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -1/810 * (self.g1)**(4) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/1440 * (self.g3)**(4) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -1/60 * (self.g1)**(4) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4))

    def alphaOdd(self, mif1,mif2,mif3,mif4):
        return (-1/480 * (self.g3)**(4) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -1/3240 * (self.g1)**(4) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/1440 * (self.g3)**(4) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -1/240 * (self.g1)**(4) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4))

    def alphaOud1(self, mif1,mif2,mif3,mif4):
        return (1/810 * (self.g1)**(4) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/60 * (self.g1)**(4) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4))

    def alphaOud8(self, mif1,mif2,mif3,mif4):
        return -1/120 * (self.g3)**(4) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4)

    def alphaOqu1(self, mif1,mif2,mif3,mif4):
        return (-1/1620 * (self.g1)**(4) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -1/120 * (self.g1)**(4) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -65/5184 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaD[mif2] * self.lambdaDbar[mif1] + 1/288 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaD[mif2] * self.lambdaDbar[mif1] + -1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaD[mif2] * self.lambdaDbar[mif1] + 1/288 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + 3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yu[0,mif4] * self.yubar[0,mif3] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yu[0,mif4] * self.yubar[0,mif3] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[0,mif4] * self.yubar[0,mif3] + 1/192 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[0] * self.yu[mif1,mif4] * self.yubar[0,mif3] + 3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yu[1,mif4] * self.yubar[1,mif3] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yu[1,mif4] * self.yubar[1,mif3] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[1,mif4] * self.yubar[1,mif3] + 1/192 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[1] * self.yu[mif1,mif4] * self.yubar[1,mif3] + 3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yu[2,mif4] * self.yubar[2,mif3] + 1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yu[2,mif4] * self.yubar[2,mif3] + -1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yu[2,mif4] * self.yubar[2,mif3] + 1/192 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[2] * self.yu[mif1,mif4] * self.yubar[2,mif3] + 1/192 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,mif4] * self.yubar[mif2,mif3] + 1/192 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,mif4] * self.yubar[mif2,mif3] + 1/192 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[2,mif4] * self.yubar[mif2,mif3] + -1/96 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/96 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/96 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/288 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/288 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/288 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yu[mif1,mif4] * self.yubar[mif2,mif3])

    def alphaOqu8(self, mif1,mif2,mif3,mif4):
        return (-1/120 * (self.g3)**(4) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/36 * (self.g3)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaD[mif2] * self.lambdaDbar[mif1] + -1/64 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaD[mif2] * self.lambdaDbar[mif1] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[0] * self.yu[mif1,mif4] * self.yubar[0,mif3] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[1] * self.yu[mif1,mif4] * self.yubar[1,mif3] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[2] * self.yu[mif1,mif4] * self.yubar[2,mif3] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yu[0,mif4] * self.yubar[mif2,mif3] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yu[1,mif4] * self.yubar[mif2,mif3] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yu[2,mif4] * self.yubar[mif2,mif3] + -1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/48 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/48 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/48 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yu[mif1,mif4] * self.yubar[mif2,mif3])

    def alphaOqd1(self, mif1,mif2,mif3,mif4):
        return (1/3240 * (self.g1)**(4) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/240 * (self.g1)**(4) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 65/10368 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaD[mif2] * self.lambdaDbar[mif1] + -1/576 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaD[mif2] * self.lambdaDbar[mif1] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaD[mif2] * self.lambdaDbar[mif1] + -1/576 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + -3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yd[0,mif4] * self.ydbar[0,mif3] + -1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yd[0,mif4] * self.ydbar[0,mif3] + 1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[0,mif3] + -3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yd[1,mif4] * self.ydbar[1,mif3] + -1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yd[1,mif4] * self.ydbar[1,mif3] + 1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[1,mif3] + -3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yd[2,mif4] * self.ydbar[2,mif3] + -1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yd[2,mif4] * self.ydbar[2,mif3] + 1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[2,mif3] + -1/96 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/96 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/96 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/288 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/288 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/288 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3])

    def alphaOqd8(self, mif1,mif2,mif3,mif4):
        return (-1/120 * (self.g3)**(4) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/36 * (self.g3)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaD[mif2] * self.lambdaDbar[mif1] + -1/64 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaD[mif2] * self.lambdaDbar[mif1] + -1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/48 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/48 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/48 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3])

    def alphaOquqd1(self, mif1,mif2,mif3,mif4):
        return (-1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif1] * self.yd[mif3,mif4] * self.yu[0,mif2] + -1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif1] * self.yd[mif3,mif4] * self.yu[1,mif2] + -1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif1] * self.yd[mif3,mif4] * self.yu[2,mif2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + 1/48 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + 1/48 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + 1/48 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yd[mif3,mif4] * self.yu[mif1,mif2])

    def alphaOquqd8(self, mif1,mif2,mif3,mif4):
        return 0

    def alphaOll(self, mif1,mif2,mif3,mif4):
        return (-1/480 * (self.g2)**(4) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -1/1440 * (self.g1)**(4) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -3/320 * (self.g1)**(4) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/960 * (self.g2)**(4) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4))

    def alphaOee(self, mif1,mif2,mif3,mif4):
        return (-1/360 * (self.g1)**(4) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -3/80 * (self.g1)**(4) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 59/1152 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] + -3/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] + 1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] + 59/1152 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] + -3/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] + 1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] + -1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif1] * self.lambdaDelta3bar[mif3] + -1/192 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + -1/192 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + -3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * self.yl[0,mif2] * self.ylbar[0,mif1] + -1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * self.yl[0,mif2] * self.ylbar[0,mif1] + 1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,mif1] + -3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * self.yl[0,mif4] * self.ylbar[0,mif3] + -1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * self.yl[0,mif4] * self.ylbar[0,mif3] + 1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[0,mif4] * self.ylbar[0,mif3] + -3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * self.yl[1,mif2] * self.ylbar[1,mif1] + -1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * self.yl[1,mif2] * self.ylbar[1,mif1] + 1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,mif1] + -3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * self.yl[1,mif4] * self.ylbar[1,mif3] + -1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * self.yl[1,mif4] * self.ylbar[1,mif3] + 1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[1,mif4] * self.ylbar[1,mif3] + -3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * self.yl[2,mif2] * self.ylbar[2,mif1] + -1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * self.yl[2,mif2] * self.ylbar[2,mif1] + 1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,mif1] + -3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * self.yl[2,mif4] * self.ylbar[2,mif3] + -1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * self.yl[2,mif4] * self.ylbar[2,mif3] + 1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[2,mif4] * self.ylbar[2,mif3])

    def alphaOle(self, mif1,mif2,mif3,mif4):
        return (-1/360 * (self.g1)**(4) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -3/80 * (self.g1)**(4) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 59/1152 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] + -3/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] + 1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] + -1/192 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + 3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * self.yl[mif1,0] * self.ylbar[mif2,0] + 1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * self.yl[mif1,0] * self.ylbar[mif2,0] + -1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[mif2,0] + -1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[mif3] * self.yl[mif1,mif4] * self.ylbar[mif2,0] + 3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * self.yl[mif1,1] * self.ylbar[mif2,1] + 1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * self.yl[mif1,1] * self.ylbar[mif2,1] + -1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[mif2,1] + -1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[mif3] * self.yl[mif1,mif4] * self.ylbar[mif2,1] + 3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * self.yl[mif1,2] * self.ylbar[mif2,2] + 1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * self.yl[mif1,2] * self.ylbar[mif2,2] + -1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[mif2,2] + -1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[mif3] * self.yl[mif1,mif4] * self.ylbar[mif2,2] + -1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[0] * self.yl[mif1,0] * self.ylbar[mif2,mif3] + -1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[1] * self.yl[mif1,1] * self.ylbar[mif2,mif3] + -1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[2] * self.yl[mif1,2] * self.ylbar[mif2,mif3] + -1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + -1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + -1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + -1/96 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + -1/96 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + -1/96 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[mif1,mif4] * self.ylbar[mif2,mif3])

    def alphaOlq1(self, mif1,mif2,mif3,mif4):
        return (1/2160 * (self.g1)**(4) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/160 * (self.g1)**(4) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 65/6912 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] + -1/384 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] + 1/384 * (self.g1)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] + -1/384 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * np.log((self.MD)**(2) * (self.mu)**(-2)) + 3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yl[mif1,0] * self.ylbar[mif2,0] + 1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yl[mif1,0] * self.ylbar[mif2,0] + -1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[mif2,0] + 3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yl[mif1,1] * self.ylbar[mif2,1] + 1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yl[mif1,1] * self.ylbar[mif2,1] + -1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[mif2,1] + 3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yl[mif1,2] * self.ylbar[mif2,2] + 1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yl[mif1,2] * self.ylbar[mif2,2] + -1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[mif2,2])

    def alphaOlq3(self, mif1,mif2,mif3,mif4):
        return (-1/480 * (self.g2)**(4) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -11/2304 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] + -1/384 * (self.g2)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] + 1/384 * (self.g2)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * np.log((self.MD)**(2) * (self.mu)**(-2)) + 3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yl[mif1,0] * self.ylbar[mif2,0] + 1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yl[mif1,0] * self.ylbar[mif2,0] + -1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[mif2,0] + 3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yl[mif1,1] * self.ylbar[mif2,1] + 1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yl[mif1,1] * self.ylbar[mif2,1] + -1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[mif2,1] + 3/256 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yl[mif1,2] * self.ylbar[mif2,2] + 1/128 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * self.yl[mif1,2] * self.ylbar[mif2,2] + -1/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif4] * self.lambdaDbar[mif3] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[mif2,2])

    def alphaOeu(self, mif1,mif2,mif3,mif4):
        return (1/270 * (self.g1)**(4) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/20 * (self.g1)**(4) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -59/864 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] + 1/32 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] + 1/144 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + 3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * self.yu[0,mif4] * self.yubar[0,mif3] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * self.yu[0,mif4] * self.yubar[0,mif3] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yu[0,mif4] * self.yubar[0,mif3] + 3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * self.yu[1,mif4] * self.yubar[1,mif3] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * self.yu[1,mif4] * self.yubar[1,mif3] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yu[1,mif4] * self.yubar[1,mif3] + 3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * self.yu[2,mif4] * self.yubar[2,mif3] + 1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * self.yu[2,mif4] * self.yubar[2,mif3] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yu[2,mif4] * self.yubar[2,mif3])

    def alphaOed(self, mif1,mif2,mif3,mif4):
        return (-1/540 * (self.g1)**(4) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -1/40 * (self.g1)**(4) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 59/1728 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] + -1/64 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] + 1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] + -1/288 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * self.yd[0,mif4] * self.ydbar[0,mif3] + -1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * self.yd[0,mif4] * self.ydbar[0,mif3] + 1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[0,mif3] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * self.yd[1,mif4] * self.ydbar[1,mif3] + -1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * self.yd[1,mif4] * self.ydbar[1,mif3] + 1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[1,mif3] + -3/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * self.yd[2,mif4] * self.ydbar[2,mif3] + -1/32 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * self.yd[2,mif4] * self.ydbar[2,mif3] + 1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[mif1] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[2,mif3])

    def alphaOqe(self, mif1,mif2,mif3,mif4):
        return (1/1080 * (self.g1)**(4) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/80 * (self.g1)**(4) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 65/3456 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaD[mif2] * self.lambdaDbar[mif1] + -1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaD[mif2] * self.lambdaDbar[mif1] + 1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaD[mif2] * self.lambdaDbar[mif1] + -59/3456 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] + 1/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] + -1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] + -3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] + -1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] + 3/128 * (((self.MD)**(2) + -1 * (self.MDelta3)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] + 1/64 * self.invepsilonbar * (((self.MD)**(2) + -1 * (self.MDelta3)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] + -3/128 * (self.MD)**(-2) * (self.MDelta3)**(2) * (((self.MD)**(2) + -1 * (self.MDelta3)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] + -1/64 * self.invepsilonbar * (self.MD)**(-2) * (self.MDelta3)**(2) * (((self.MD)**(2) + -1 * (self.MDelta3)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] + -1/192 * (self.g1)**(2) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) + -1/64 * (((self.MD)**(2) + -1 * (self.MDelta3)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * np.log((self.MD)**(2) * (self.mu)**(-2)) + 1/576 * (self.g1)**(2) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + 1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + 1/64 * (self.MD)**(-2) * (self.MDelta3)**(2) * (((self.MD)**(2) + -1 * (self.MDelta3)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) + 3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * self.yd[mif1,0] * self.ydbar[mif2,0] + 1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * self.yd[mif1,0] * self.ydbar[mif2,0] + -1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[mif2,0] + 3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * self.yd[mif1,1] * self.ydbar[mif2,1] + 1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * self.yd[mif1,1] * self.ydbar[mif2,1] + -1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[mif2,1] + 3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * self.yd[mif1,2] * self.ydbar[mif2,2] + 1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * self.yd[mif1,2] * self.ydbar[mif2,2] + -1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[mif2,2] + -3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yl[0,mif4] * self.ylbar[0,mif3] + -1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yl[0,mif4] * self.ylbar[0,mif3] + 1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[0,mif4] * self.ylbar[0,mif3] + -3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yl[1,mif4] * self.ylbar[1,mif3] + -1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yl[1,mif4] * self.ylbar[1,mif3] + 1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[1,mif4] * self.ylbar[1,mif3] + -3/128 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yl[2,mif4] * self.ylbar[2,mif3] + -1/64 * self.invepsilonbar * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * self.yl[2,mif4] * self.ylbar[2,mif3] + 1/64 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[mif2] * self.lambdaDbar[mif1] * np.log((self.MD)**(2) * (self.mu)**(-2)) * self.yl[2,mif4] * self.ylbar[2,mif3] + -3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * self.yu[mif1,0] * self.yubar[mif2,0] + -1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * self.yu[mif1,0] * self.yubar[mif2,0] + 1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yu[mif1,0] * self.yubar[mif2,0] + -3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * self.yu[mif1,1] * self.yubar[mif2,1] + -1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * self.yu[mif1,1] * self.yubar[mif2,1] + 1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yu[mif1,1] * self.yubar[mif2,1] + -3/128 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * self.yu[mif1,2] * self.yubar[mif2,2] + -1/64 * self.invepsilonbar * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * self.yu[mif1,2] * self.yubar[mif2,2] + 1/64 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif4] * self.lambdaDelta3bar[mif3] * np.log((self.MDelta3)**(2) * (self.mu)**(-2)) * self.yu[mif1,2] * self.yubar[mif2,2])

    def alphaOlu(self, mif1,mif2,mif3,mif4):
        return (1/540 * (self.g1)**(4) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/40 * (self.g1)**(4) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4))

    def alphaOld(self, mif1,mif2,mif3,mif4):
        return (-1/1080 * (self.g1)**(4) * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -1/80 * (self.g1)**(4) * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4))

    def alphaOledq(self, mif1,mif2,mif3,mif4):
        return (1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.ydbar[mif4,mif3] * self.yl[mif1,0] + 1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.ydbar[mif4,mif3] * self.yl[mif1,1] + 1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.ydbar[mif4,mif3] * self.yl[mif1,2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + 1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + 1/48 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + 1/48 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + 1/48 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2])

    def alphaOlequ1(self, mif1,mif2,mif3,mif4):
        return (1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[mif3] * self.yl[mif1,mif2] * self.yu[0,mif4] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[mif3] * self.yl[mif1,mif2] * self.yu[1,mif4] + 1/32 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[mif3] * self.yl[mif1,mif2] * self.yu[2,mif4] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[0] * self.yl[mif1,0] * self.yu[mif3,mif4] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[1] * self.yl[mif1,1] * self.yu[mif3,mif4] + -1/32 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[mif2] * self.lambdaDelta3bar[2] * self.yl[mif1,2] * self.yu[mif3,mif4] + -1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[0] * self.lambdaDbar[0] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + -1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[1] * self.lambdaDbar[1] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + -1/16 * (self.MD)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaD[2] * self.lambdaDbar[2] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + -1/48 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[0] * self.lambdaDelta3bar[0] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + -1/48 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[1] * self.lambdaDelta3bar[1] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + -1/48 * (self.MDelta3)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta3[2] * self.lambdaDelta3bar[2] * self.yl[mif1,mif2] * self.yu[mif3,mif4])

    def alphaOlequ3(self, mif1,mif2,mif3,mif4):
        return 0

    def alphaWeinberg(self, mif1,mif2):
        return 0
