## Symbols used:
# ydbar
# yd
# aEV
# YeuS
# iCPV
# yl
# ylbar
# MS1
# g1
# muH
# g2
# YeuSbar
# epsilonbar
# invepsilonbar
# YLQS
# mu
# lam
# g3
# yubar
# onelooporder
# YLQSbar
# yu

import matchingresult
import numpy as np

class S1MatchingResult(matchingresult.GenericMatchingResult):
    def __init__(self, name='S1', scale=91.1876):
        super().__init__(name, scale)
        self.YLQS = np.zeros((3, 3))
        self.YeuS = np.zeros((3, 3))
        self.YLQSbar = np.zeros((3, 3))
        self.YeuSbar = np.zeros((3, 3))
        self.MS1 = 1

    def alphaKB(self, ):
        return 1

    def alphaKW(self, ):
        return 1

    def alphaKG(self, ):
        return 1

    def alphaKq(self, mif1,mif2):
        return self.kronecker_delta(mif1,mif2)

    def alphaKl(self, mif1,mif2):
        return self.kronecker_delta(mif1,mif2)

    def alphaKu(self, mif1,mif2):
        return self.kronecker_delta(mif1,mif2)

    def alphaKd(self, mif1,mif2):
        return self.kronecker_delta(mif1,mif2)

    def alphaKe(self, mif1,mif2):
        return self.kronecker_delta(mif1,mif2)

    def alphaOmuH2(self, ):
        return (self.muH)**(2)

    def alphaKH(self, ):
        return 1

    def alphaOlambda(self, ):
        return self.lam

    def alphaOlambdad(self, mif1,mif2):
        return (self.yd[mif1,mif2] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YLQS[0,0] * self.YLQSbar[0,mif1] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YLQS[0,0] * self.YLQSbar[0,mif1] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.YLQS[0,0] * self.YLQSbar[0,mif1] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YLQS[0,1] * self.YLQSbar[0,mif1] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YLQS[0,1] * self.YLQSbar[0,mif1] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.YLQS[0,1] * self.YLQSbar[0,mif1] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YLQS[0,2] * self.YLQSbar[0,mif1] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YLQS[0,2] * self.YLQSbar[0,mif1] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.YLQS[0,2] * self.YLQSbar[0,mif1] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YLQS[1,0] * self.YLQSbar[1,mif1] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YLQS[1,0] * self.YLQSbar[1,mif1] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.YLQS[1,0] * self.YLQSbar[1,mif1] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YLQS[1,1] * self.YLQSbar[1,mif1] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YLQS[1,1] * self.YLQSbar[1,mif1] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.YLQS[1,1] * self.YLQSbar[1,mif1] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YLQS[1,2] * self.YLQSbar[1,mif1] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YLQS[1,2] * self.YLQSbar[1,mif1] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.YLQS[1,2] * self.YLQSbar[1,mif1] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YLQS[2,0] * self.YLQSbar[2,mif1] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YLQS[2,0] * self.YLQSbar[2,mif1] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.YLQS[2,0] * self.YLQSbar[2,mif1] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YLQS[2,1] * self.YLQSbar[2,mif1] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YLQS[2,1] * self.YLQSbar[2,mif1] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.YLQS[2,1] * self.YLQSbar[2,mif1] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YLQS[2,2] * self.YLQSbar[2,mif1] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YLQS[2,2] * self.YLQSbar[2,mif1] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.YLQS[2,2] * self.YLQSbar[2,mif1])

    def alphaOlambdae(self, mif1,mif2):
        return (-3/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[mif2,0] * self.yl[mif1,0] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[mif2,0] * self.yl[mif1,0] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,0] * self.YeuSbar[mif2,0] * self.yl[mif1,0] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[mif2,1] * self.yl[mif1,0] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[mif2,1] * self.yl[mif1,0] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,1] * self.YeuSbar[mif2,1] * self.yl[mif1,0] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[mif2,2] * self.yl[mif1,0] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[mif2,2] * self.yl[mif1,0] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,2] * self.YeuSbar[mif2,2] * self.yl[mif1,0] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[mif2,0] * self.yl[mif1,1] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[mif2,0] * self.yl[mif1,1] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,0] * self.YeuSbar[mif2,0] * self.yl[mif1,1] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[mif2,1] * self.yl[mif1,1] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[mif2,1] * self.yl[mif1,1] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,1] * self.YeuSbar[mif2,1] * self.yl[mif1,1] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[mif2,2] * self.yl[mif1,1] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[mif2,2] * self.yl[mif1,1] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,2] * self.YeuSbar[mif2,2] * self.yl[mif1,1] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[mif2,0] * self.yl[mif1,2] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[mif2,0] * self.yl[mif1,2] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,0] * self.YeuSbar[mif2,0] * self.yl[mif1,2] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[mif2,1] * self.yl[mif1,2] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[mif2,1] * self.yl[mif1,2] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,1] * self.YeuSbar[mif2,1] * self.yl[mif1,2] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[mif2,2] * self.yl[mif1,2] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[mif2,2] * self.yl[mif1,2] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,2] * self.YeuSbar[mif2,2] * self.yl[mif1,2] + self.yl[mif1,mif2] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,0] * self.YLQSbar[mif1,0] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,0] * self.YLQSbar[mif1,0] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.YLQS[0,0] * self.YLQSbar[mif1,0] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,0] * self.YLQSbar[mif1,0] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,0] * self.YLQSbar[mif1,0] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.YLQS[1,0] * self.YLQSbar[mif1,0] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,0] * self.YLQSbar[mif1,0] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,0] * self.YLQSbar[mif1,0] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.YLQS[2,0] * self.YLQSbar[mif1,0] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,1] * self.YLQSbar[mif1,1] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,1] * self.YLQSbar[mif1,1] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.YLQS[0,1] * self.YLQSbar[mif1,1] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,1] * self.YLQSbar[mif1,1] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,1] * self.YLQSbar[mif1,1] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.YLQS[1,1] * self.YLQSbar[mif1,1] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,1] * self.YLQSbar[mif1,1] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,1] * self.YLQSbar[mif1,1] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.YLQS[2,1] * self.YLQSbar[mif1,1] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,2] * self.YLQSbar[mif1,2] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,2] * self.YLQSbar[mif1,2] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.YLQS[0,2] * self.YLQSbar[mif1,2] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,2] * self.YLQSbar[mif1,2] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,2] * self.YLQSbar[mif1,2] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.YLQS[1,2] * self.YLQSbar[mif1,2] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,2] * self.YLQSbar[mif1,2] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,2] * self.YLQSbar[mif1,2] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.YLQS[2,2] * self.YLQSbar[mif1,2] + 3/16 * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yubar[0,0] + 3/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yubar[0,0] + -9/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yubar[0,0] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yubar[0,0] + -3/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yubar[0,0] + 3/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yubar[0,0] + 3/16 * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yubar[0,1] + 3/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yubar[0,1] + -9/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yubar[0,1] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yubar[0,1] + -3/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yubar[0,1] + 3/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yubar[0,1] + 3/16 * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yubar[0,2] + 3/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yubar[0,2] + -9/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yubar[0,2] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yubar[0,2] + -3/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yubar[0,2] + 3/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yubar[0,2] + 3/16 * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yubar[1,0] + 3/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yubar[1,0] + -9/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yubar[1,0] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yubar[1,0] + -3/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yubar[1,0] + 3/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yubar[1,0] + 3/16 * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yubar[1,1] + 3/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yubar[1,1] + -9/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yubar[1,1] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yubar[1,1] + -3/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yubar[1,1] + 3/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yubar[1,1] + 3/16 * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yubar[1,2] + 3/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yubar[1,2] + -9/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yubar[1,2] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yubar[1,2] + -3/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yubar[1,2] + 3/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yubar[1,2] + 3/16 * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yubar[2,0] + 3/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yubar[2,0] + -9/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yubar[2,0] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yubar[2,0] + -3/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yubar[2,0] + 3/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yubar[2,0] + 3/16 * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yubar[2,1] + 3/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yubar[2,1] + -9/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yubar[2,1] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yubar[2,1] + -3/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yubar[2,1] + 3/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yubar[2,1] + 3/16 * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yubar[2,2] + 3/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yubar[2,2] + -9/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yubar[2,2] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yubar[2,2] + -3/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yubar[2,2] + 3/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yubar[2,2])

    def alphaOlambdau(self, mif1,mif2):
        return (1/16 * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[0,0] * self.YLQSbar[0,mif1] + 1/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[0,0] * self.YLQSbar[0,mif1] + -3/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[0,0] * self.YLQSbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[0,0] * self.YLQSbar[0,mif1] + -1/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.ylbar[0,0] * self.YLQSbar[0,mif1] + 1/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.ylbar[0,0] * self.YLQSbar[0,mif1] + 1/16 * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,mif1] + 1/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,mif1] + -3/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,mif1] + -1/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,mif1] + 1/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,mif1] + 1/16 * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[0,2] * self.YLQSbar[0,mif1] + 1/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[0,2] * self.YLQSbar[0,mif1] + -3/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[0,2] * self.YLQSbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[0,2] * self.YLQSbar[0,mif1] + -1/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.ylbar[0,2] * self.YLQSbar[0,mif1] + 1/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.ylbar[0,2] * self.YLQSbar[0,mif1] + 1/16 * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[1,0] * self.YLQSbar[1,mif1] + 1/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[1,0] * self.YLQSbar[1,mif1] + -3/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[1,0] * self.YLQSbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[1,0] * self.YLQSbar[1,mif1] + -1/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.ylbar[1,0] * self.YLQSbar[1,mif1] + 1/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.ylbar[1,0] * self.YLQSbar[1,mif1] + 1/16 * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + 1/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + -3/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + -1/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + 1/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + 1/16 * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + 1/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + -3/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + -1/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + 1/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + 1/16 * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + 1/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + -3/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + -1/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + 1/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + 1/16 * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + 1/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + -3/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + -1/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + 1/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + 1/16 * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + 1/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + -3/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + -1/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + 1/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,mif1] * self.yu[0,mif2] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,mif1] * self.yu[0,mif2] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,0] * self.YLQSbar[0,mif1] * self.yu[0,mif2] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,mif1] * self.yu[0,mif2] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,mif1] * self.yu[0,mif2] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,0] * self.YLQSbar[1,mif1] * self.yu[0,mif2] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,mif1] * self.yu[0,mif2] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,mif1] * self.yu[0,mif2] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,0] * self.YLQSbar[2,mif1] * self.yu[0,mif2] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,mif1] * self.yu[1,mif2] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,mif1] * self.yu[1,mif2] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,1] * self.YLQSbar[0,mif1] * self.yu[1,mif2] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,mif1] * self.yu[1,mif2] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,mif1] * self.yu[1,mif2] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,1] * self.YLQSbar[1,mif1] * self.yu[1,mif2] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,mif1] * self.yu[1,mif2] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,mif1] * self.yu[1,mif2] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,1] * self.YLQSbar[2,mif1] * self.yu[1,mif2] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,mif1] * self.yu[2,mif2] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,mif1] * self.yu[2,mif2] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,2] * self.YLQSbar[0,mif1] * self.yu[2,mif2] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,mif1] * self.yu[2,mif2] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,mif1] * self.yu[2,mif2] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,2] * self.YLQSbar[1,mif1] * self.yu[2,mif2] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,mif1] * self.yu[2,mif2] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,mif1] * self.yu[2,mif2] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,2] * self.YLQSbar[2,mif1] * self.yu[2,mif2] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,mif2] * self.yu[mif1,0] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,mif2] * self.yu[mif1,0] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,0] * self.YeuSbar[0,mif2] * self.yu[mif1,0] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,mif2] * self.yu[mif1,0] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,mif2] * self.yu[mif1,0] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,0] * self.YeuSbar[1,mif2] * self.yu[mif1,0] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,mif2] * self.yu[mif1,0] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,mif2] * self.yu[mif1,0] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,0] * self.YeuSbar[2,mif2] * self.yu[mif1,0] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,mif2] * self.yu[mif1,1] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,mif2] * self.yu[mif1,1] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,1] * self.YeuSbar[0,mif2] * self.yu[mif1,1] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,mif2] * self.yu[mif1,1] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,mif2] * self.yu[mif1,1] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,1] * self.YeuSbar[1,mif2] * self.yu[mif1,1] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,mif2] * self.yu[mif1,1] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,mif2] * self.yu[mif1,1] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,1] * self.YeuSbar[2,mif2] * self.yu[mif1,1] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,mif2] * self.yu[mif1,2] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,mif2] * self.yu[mif1,2] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,2] * self.YeuSbar[0,mif2] * self.yu[mif1,2] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,mif2] * self.yu[mif1,2] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,mif2] * self.yu[mif1,2] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,2] * self.YeuSbar[1,mif2] * self.yu[mif1,2] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,mif2] * self.yu[mif1,2] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,mif2] * self.yu[mif1,2] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,2] * self.YeuSbar[2,mif2] * self.yu[mif1,2] + self.yu[mif1,mif2])

    def alphaKqbar(self, mif1,mif2):
        return self.kronecker_delta(mif1,mif2)

    def alphaKlbar(self, mif1,mif2):
        return self.kronecker_delta(mif1,mif2)

    def alphaKubar(self, mif1,mif2):
        return self.kronecker_delta(mif1,mif2)

    def alphaKdbar(self, mif1,mif2):
        return self.kronecker_delta(mif1,mif2)

    def alphaKebar(self, mif1,mif2):
        return self.kronecker_delta(mif1,mif2)

    def alphaOlambdadbar(self, mif1,mif2):
        return (self.ydbar[mif1,mif2] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YLQS[0,mif1] * self.YLQSbar[0,0] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YLQS[0,mif1] * self.YLQSbar[0,0] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[0,mif2] * self.YLQS[0,mif1] * self.YLQSbar[0,0] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YLQS[0,mif1] * self.YLQSbar[0,1] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YLQS[0,mif1] * self.YLQSbar[0,1] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[1,mif2] * self.YLQS[0,mif1] * self.YLQSbar[0,1] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YLQS[0,mif1] * self.YLQSbar[0,2] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YLQS[0,mif1] * self.YLQSbar[0,2] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[2,mif2] * self.YLQS[0,mif1] * self.YLQSbar[0,2] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YLQS[1,mif1] * self.YLQSbar[1,0] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YLQS[1,mif1] * self.YLQSbar[1,0] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[0,mif2] * self.YLQS[1,mif1] * self.YLQSbar[1,0] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YLQS[1,mif1] * self.YLQSbar[1,1] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YLQS[1,mif1] * self.YLQSbar[1,1] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[1,mif2] * self.YLQS[1,mif1] * self.YLQSbar[1,1] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YLQS[1,mif1] * self.YLQSbar[1,2] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YLQS[1,mif1] * self.YLQSbar[1,2] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[2,mif2] * self.YLQS[1,mif1] * self.YLQSbar[1,2] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YLQS[2,mif1] * self.YLQSbar[2,0] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YLQS[2,mif1] * self.YLQSbar[2,0] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[0,mif2] * self.YLQS[2,mif1] * self.YLQSbar[2,0] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YLQS[2,mif1] * self.YLQSbar[2,1] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YLQS[2,mif1] * self.YLQSbar[2,1] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[1,mif2] * self.YLQS[2,mif1] * self.YLQSbar[2,1] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YLQS[2,mif1] * self.YLQSbar[2,2] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YLQS[2,mif1] * self.YLQSbar[2,2] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[2,mif2] * self.YLQS[2,mif1] * self.YLQSbar[2,2])

    def alphaOlambdaebar(self, mif1,mif2):
        return (-3/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[0,0] * self.ylbar[mif1,0] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[0,0] * self.ylbar[mif1,0] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YeuSbar[0,0] * self.ylbar[mif1,0] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[0,1] * self.ylbar[mif1,0] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[0,1] * self.ylbar[mif1,0] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YeuSbar[0,1] * self.ylbar[mif1,0] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[0,2] * self.ylbar[mif1,0] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[0,2] * self.ylbar[mif1,0] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YeuSbar[0,2] * self.ylbar[mif1,0] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[1,0] * self.ylbar[mif1,1] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[1,0] * self.ylbar[mif1,1] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YeuSbar[1,0] * self.ylbar[mif1,1] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[1,1] * self.ylbar[mif1,1] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[1,1] * self.ylbar[mif1,1] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YeuSbar[1,1] * self.ylbar[mif1,1] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[1,2] * self.ylbar[mif1,1] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[1,2] * self.ylbar[mif1,1] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YeuSbar[1,2] * self.ylbar[mif1,1] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[2,0] * self.ylbar[mif1,2] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[2,0] * self.ylbar[mif1,2] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YeuSbar[2,0] * self.ylbar[mif1,2] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[2,1] * self.ylbar[mif1,2] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[2,1] * self.ylbar[mif1,2] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YeuSbar[2,1] * self.ylbar[mif1,2] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[2,2] * self.ylbar[mif1,2] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[2,2] * self.ylbar[mif1,2] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YeuSbar[2,2] * self.ylbar[mif1,2] + self.ylbar[mif1,mif2] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,0] * self.YLQSbar[0,0] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,0] * self.YLQSbar[0,0] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ylbar[0,mif2] * self.YLQS[mif1,0] * self.YLQSbar[0,0] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,1] * self.YLQSbar[0,1] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,1] * self.YLQSbar[0,1] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ylbar[0,mif2] * self.YLQS[mif1,1] * self.YLQSbar[0,1] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,2] * self.YLQSbar[0,2] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,2] * self.YLQSbar[0,2] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ylbar[0,mif2] * self.YLQS[mif1,2] * self.YLQSbar[0,2] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,0] * self.YLQSbar[1,0] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,0] * self.YLQSbar[1,0] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ylbar[1,mif2] * self.YLQS[mif1,0] * self.YLQSbar[1,0] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,1] * self.YLQSbar[1,1] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,1] * self.YLQSbar[1,1] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ylbar[1,mif2] * self.YLQS[mif1,1] * self.YLQSbar[1,1] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,2] * self.YLQSbar[1,2] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,2] * self.YLQSbar[1,2] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ylbar[1,mif2] * self.YLQS[mif1,2] * self.YLQSbar[1,2] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,0] * self.YLQSbar[2,0] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,0] * self.YLQSbar[2,0] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ylbar[2,mif2] * self.YLQS[mif1,0] * self.YLQSbar[2,0] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,1] * self.YLQSbar[2,1] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,1] * self.YLQSbar[2,1] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ylbar[2,mif2] * self.YLQS[mif1,1] * self.YLQSbar[2,1] + -3/128 * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,2] * self.YLQSbar[2,2] + -3/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,2] * self.YLQSbar[2,2] + 3/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ylbar[2,mif2] * self.YLQS[mif1,2] * self.YLQSbar[2,2] + 3/16 * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] + 3/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] + -9/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] + -3/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] + 3/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] + 3/16 * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,1] + 3/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,1] + -9/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,1] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,1] + -3/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,1] + 3/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,1] + 3/16 * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,2] + 3/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,2] + -9/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,2] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,2] + -3/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,2] + 3/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,2] + 3/16 * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,0] + 3/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,0] + -9/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,0] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,0] + -3/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,0] + 3/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,0] + 3/16 * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,1] + 3/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,1] + -9/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,1] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,1] + -3/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,1] + 3/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,1] + 3/16 * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,2] + 3/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,2] + -9/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,2] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,2] + -3/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,2] + 3/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,2] + 3/16 * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[2,0] + 3/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[2,0] + -9/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[2,0] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[2,0] + -3/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[2,0] + 3/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[2,0] + 3/16 * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[2,1] + 3/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[2,1] + -9/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[2,1] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[2,1] + -3/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[2,1] + 3/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[2,1] + 3/16 * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[2,2] + 3/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[2,2] + -9/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[2,2] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[2,2] + -3/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[2,2] + 3/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[2,2])

    def alphaOlambdaubar(self, mif1,mif2):
        return (1/16 * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.YLQS[0,mif1] + 1/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.YLQS[0,mif1] + -3/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.YLQS[0,mif1] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.YLQS[0,mif1] + -1/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[0,0] * self.YLQS[0,mif1] + 1/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[0,0] * self.YLQS[0,mif1] + 1/16 * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.YLQS[0,mif1] + 1/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.YLQS[0,mif1] + -3/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.YLQS[0,mif1] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.YLQS[0,mif1] + -1/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[0,1] * self.YLQS[0,mif1] + 1/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[0,1] * self.YLQS[0,mif1] + 1/16 * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.YLQS[0,mif1] + 1/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.YLQS[0,mif1] + -3/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.YLQS[0,mif1] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.YLQS[0,mif1] + -1/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[0,2] * self.YLQS[0,mif1] + 1/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[0,2] * self.YLQS[0,mif1] + 1/16 * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,0] * self.YLQS[1,mif1] + 1/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,0] * self.YLQS[1,mif1] + -3/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,0] * self.YLQS[1,mif1] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,0] * self.YLQS[1,mif1] + -1/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[1,0] * self.YLQS[1,mif1] + 1/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[1,0] * self.YLQS[1,mif1] + 1/16 * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,1] * self.YLQS[1,mif1] + 1/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,1] * self.YLQS[1,mif1] + -3/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,1] * self.YLQS[1,mif1] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,1] * self.YLQS[1,mif1] + -1/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[1,1] * self.YLQS[1,mif1] + 1/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[1,1] * self.YLQS[1,mif1] + 1/16 * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,2] * self.YLQS[1,mif1] + 1/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,2] * self.YLQS[1,mif1] + -3/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,2] * self.YLQS[1,mif1] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,2] * self.YLQS[1,mif1] + -1/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[1,2] * self.YLQS[1,mif1] + 1/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[1,2] * self.YLQS[1,mif1] + 1/16 * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[2,0] * self.YLQS[2,mif1] + 1/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[2,0] * self.YLQS[2,mif1] + -3/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[2,0] * self.YLQS[2,mif1] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[2,0] * self.YLQS[2,mif1] + -1/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[2,0] * self.YLQS[2,mif1] + 1/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[2,0] * self.YLQS[2,mif1] + 1/16 * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[2,1] * self.YLQS[2,mif1] + 1/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[2,1] * self.YLQS[2,mif1] + -3/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[2,1] * self.YLQS[2,mif1] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[2,1] * self.YLQS[2,mif1] + -1/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[2,1] * self.YLQS[2,mif1] + 1/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[2,1] * self.YLQS[2,mif1] + 1/16 * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[2,2] * self.YLQS[2,mif1] + 1/16 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[2,2] * self.YLQS[2,mif1] + -3/64 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[2,2] * self.YLQS[2,mif1] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[2,2] * self.YLQS[2,mif1] + -1/16 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[2,2] * self.YLQS[2,mif1] + 1/32 * (self.MS1)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[2,2] * self.YLQS[2,mif1] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,0] * self.yubar[0,mif2] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,0] * self.yubar[0,mif2] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif1] * self.YLQSbar[0,0] * self.yubar[0,mif2] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,0] * self.yubar[0,mif2] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,0] * self.yubar[0,mif2] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif1] * self.YLQSbar[1,0] * self.yubar[0,mif2] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,0] * self.yubar[0,mif2] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,0] * self.yubar[0,mif2] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif1] * self.YLQSbar[2,0] * self.yubar[0,mif2] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,1] * self.yubar[1,mif2] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,1] * self.yubar[1,mif2] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif1] * self.YLQSbar[0,1] * self.yubar[1,mif2] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,1] * self.yubar[1,mif2] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,1] * self.yubar[1,mif2] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif1] * self.YLQSbar[1,1] * self.yubar[1,mif2] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,1] * self.yubar[1,mif2] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,1] * self.yubar[1,mif2] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif1] * self.YLQSbar[2,1] * self.yubar[1,mif2] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,2] * self.yubar[2,mif2] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,2] * self.yubar[2,mif2] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif1] * self.YLQSbar[0,2] * self.yubar[2,mif2] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,2] * self.yubar[2,mif2] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,2] * self.yubar[2,mif2] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif1] * self.YLQSbar[1,2] * self.yubar[2,mif2] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,2] * self.yubar[2,mif2] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,2] * self.yubar[2,mif2] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif1] * self.YLQSbar[2,2] * self.yubar[2,mif2] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,0] * self.yubar[mif1,0] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,0] * self.yubar[mif1,0] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.YeuSbar[0,0] * self.yubar[mif1,0] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,0] * self.yubar[mif1,0] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,0] * self.yubar[mif1,0] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.YeuSbar[1,0] * self.yubar[mif1,0] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,0] * self.yubar[mif1,0] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,0] * self.yubar[mif1,0] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.YeuSbar[2,0] * self.yubar[mif1,0] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,1] * self.yubar[mif1,1] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,1] * self.yubar[mif1,1] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.YeuSbar[0,1] * self.yubar[mif1,1] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,1] * self.yubar[mif1,1] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,1] * self.yubar[mif1,1] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.YeuSbar[1,1] * self.yubar[mif1,1] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,1] * self.yubar[mif1,1] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,1] * self.yubar[mif1,1] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.YeuSbar[2,1] * self.yubar[mif1,1] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,2] * self.yubar[mif1,2] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,2] * self.yubar[mif1,2] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.YeuSbar[0,2] * self.yubar[mif1,2] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,2] * self.yubar[mif1,2] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,2] * self.yubar[mif1,2] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.YeuSbar[1,2] * self.yubar[mif1,2] + -1/128 * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,2] * self.yubar[mif1,2] + -1/64 * self.invepsilonbar * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,2] * self.yubar[mif1,2] + 1/64 * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.YeuSbar[2,2] * self.yubar[mif1,2] + self.yubar[mif1,mif2])

    def alphaO3G(self, ):
        return 1/5760 * (self.g3)**(3) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2)

    def alphaO3Gt(self, ):
        return 0

    def alphaO3W(self, ):
        return 0

    def alphaO3Wt(self, ):
        return 0

    def alphaOHG(self, ):
        return 0

    def alphaOHGt(self, ):
        return 0

    def alphaOHW(self, ):
        return 0

    def alphaOHWt(self, ):
        return 0

    def alphaOHB(self, ):
        return 0

    def alphaOHBt(self, ):
        return 0

    def alphaOHWB(self, ):
        return 0

    def alphaOHWBt(self, ):
        return 0

    def alphaOHBox(self, ):
        return -1/11520 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2)

    def alphaOHD(self, ):
        return -1/2880 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2)

    def alphaOH(self, ):
        return 0

    def alphaOuG(self, mif1,mif2):
        return (1/64 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[0,0] * self.YLQSbar[0,mif1] + 1/64 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,mif1] + 1/64 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[0,2] * self.YLQSbar[0,mif1] + 1/64 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[1,0] * self.YLQSbar[1,mif1] + 1/64 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + 1/64 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + 1/64 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + 1/64 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + 1/64 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,mif1] * self.yu[0,mif2] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,mif1] * self.yu[0,mif2] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,mif1] * self.yu[0,mif2] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,mif1] * self.yu[1,mif2] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,mif1] * self.yu[1,mif2] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,mif1] * self.yu[1,mif2] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,mif1] * self.yu[2,mif2] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,mif1] * self.yu[2,mif2] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,mif1] * self.yu[2,mif2] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,mif2] * self.yu[mif1,0] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,mif2] * self.yu[mif1,0] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,mif2] * self.yu[mif1,0] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,mif2] * self.yu[mif1,1] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,mif2] * self.yu[mif1,1] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,mif2] * self.yu[mif1,1] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,mif2] * self.yu[mif1,2] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,mif2] * self.yu[mif1,2] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,mif2] * self.yu[mif1,2])

    def alphaOuW(self, mif1,mif2):
        return (3/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[0,0] * self.YLQSbar[0,mif1] + 1/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[0,0] * self.YLQSbar[0,mif1] + -1/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.ylbar[0,0] * self.YLQSbar[0,mif1] + 3/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,mif1] + 1/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,mif1] + -1/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,mif1] + 3/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[0,2] * self.YLQSbar[0,mif1] + 1/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[0,2] * self.YLQSbar[0,mif1] + -1/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.ylbar[0,2] * self.YLQSbar[0,mif1] + 3/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[1,0] * self.YLQSbar[1,mif1] + 1/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[1,0] * self.YLQSbar[1,mif1] + -1/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.ylbar[1,0] * self.YLQSbar[1,mif1] + 3/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + 1/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + -1/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + 3/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + 1/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + -1/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + 3/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + 1/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + -1/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + 3/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + 1/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + -1/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + 3/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + 1/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + -1/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,mif1] * self.yu[0,mif2] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,mif1] * self.yu[0,mif2] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,mif1] * self.yu[0,mif2] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,mif1] * self.yu[0,mif2] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,mif1] * self.yu[0,mif2] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,mif1] * self.yu[0,mif2] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,mif1] * self.yu[1,mif2] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,mif1] * self.yu[1,mif2] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,mif1] * self.yu[1,mif2] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,mif1] * self.yu[1,mif2] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,mif1] * self.yu[1,mif2] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,mif1] * self.yu[1,mif2] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,mif1] * self.yu[2,mif2] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,mif1] * self.yu[2,mif2] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,mif1] * self.yu[2,mif2] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,mif1] * self.yu[2,mif2] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,mif1] * self.yu[2,mif2] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,mif1] * self.yu[2,mif2])

    def alphaOuB(self, mif1,mif2):
        return (23/768 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[0,0] * self.YLQSbar[0,mif1] + 3/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[0,0] * self.YLQSbar[0,mif1] + -3/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.ylbar[0,0] * self.YLQSbar[0,mif1] + 23/768 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,mif1] + 3/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,mif1] + -3/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,mif1] + 23/768 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[0,2] * self.YLQSbar[0,mif1] + 3/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[0,2] * self.YLQSbar[0,mif1] + -3/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.ylbar[0,2] * self.YLQSbar[0,mif1] + 23/768 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[1,0] * self.YLQSbar[1,mif1] + 3/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[1,0] * self.YLQSbar[1,mif1] + -3/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.ylbar[1,0] * self.YLQSbar[1,mif1] + 23/768 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + 3/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + -3/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + 23/768 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + 3/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + -3/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + 23/768 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + 3/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + -3/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + 23/768 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + 3/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + -3/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + 23/768 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + 3/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + -3/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,mif1] * self.yu[0,mif2] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,mif1] * self.yu[0,mif2] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,mif1] * self.yu[0,mif2] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,mif1] * self.yu[0,mif2] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,mif1] * self.yu[0,mif2] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,mif1] * self.yu[0,mif2] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,mif1] * self.yu[1,mif2] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,mif1] * self.yu[1,mif2] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,mif1] * self.yu[1,mif2] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,mif1] * self.yu[1,mif2] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,mif1] * self.yu[1,mif2] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,mif1] * self.yu[1,mif2] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,mif1] * self.yu[2,mif2] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,mif1] * self.yu[2,mif2] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,mif1] * self.yu[2,mif2] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,mif1] * self.yu[2,mif2] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,mif1] * self.yu[2,mif2] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,mif1] * self.yu[2,mif2] + -1/576 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,mif2] * self.yu[mif1,0] + 1/128 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,mif2] * self.yu[mif1,0] + -1/576 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,mif2] * self.yu[mif1,0] + 1/128 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,mif2] * self.yu[mif1,0] + -1/576 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,mif2] * self.yu[mif1,0] + 1/128 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,mif2] * self.yu[mif1,0] + -1/576 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,mif2] * self.yu[mif1,1] + 1/128 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,mif2] * self.yu[mif1,1] + -1/576 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,mif2] * self.yu[mif1,1] + 1/128 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,mif2] * self.yu[mif1,1] + -1/576 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,mif2] * self.yu[mif1,1] + 1/128 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,mif2] * self.yu[mif1,1] + -1/576 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,mif2] * self.yu[mif1,2] + 1/128 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,mif2] * self.yu[mif1,2] + -1/576 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,mif2] * self.yu[mif1,2] + 1/128 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,mif2] * self.yu[mif1,2] + -1/576 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,mif2] * self.yu[mif1,2] + 1/128 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,mif2] * self.yu[mif1,2])

    def alphaOdG(self, mif1,mif2):
        return (-1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YLQS[0,0] * self.YLQSbar[0,mif1] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YLQS[0,1] * self.YLQSbar[0,mif1] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YLQS[0,2] * self.YLQSbar[0,mif1] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YLQS[1,0] * self.YLQSbar[1,mif1] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YLQS[1,1] * self.YLQSbar[1,mif1] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YLQS[1,2] * self.YLQSbar[1,mif1] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YLQS[2,0] * self.YLQSbar[2,mif1] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YLQS[2,1] * self.YLQSbar[2,mif1] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YLQS[2,2] * self.YLQSbar[2,mif1])

    def alphaOdW(self, mif1,mif2):
        return (-1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YLQS[0,0] * self.YLQSbar[0,mif1] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YLQS[0,0] * self.YLQSbar[0,mif1] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YLQS[0,1] * self.YLQSbar[0,mif1] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YLQS[0,1] * self.YLQSbar[0,mif1] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YLQS[0,2] * self.YLQSbar[0,mif1] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YLQS[0,2] * self.YLQSbar[0,mif1] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YLQS[1,0] * self.YLQSbar[1,mif1] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YLQS[1,0] * self.YLQSbar[1,mif1] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YLQS[1,1] * self.YLQSbar[1,mif1] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YLQS[1,1] * self.YLQSbar[1,mif1] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YLQS[1,2] * self.YLQSbar[1,mif1] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YLQS[1,2] * self.YLQSbar[1,mif1] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YLQS[2,0] * self.YLQSbar[2,mif1] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YLQS[2,0] * self.YLQSbar[2,mif1] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YLQS[2,1] * self.YLQSbar[2,mif1] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YLQS[2,1] * self.YLQSbar[2,mif1] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YLQS[2,2] * self.YLQSbar[2,mif1] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YLQS[2,2] * self.YLQSbar[2,mif1])

    def alphaOdB(self, mif1,mif2):
        return (-1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YLQS[0,0] * self.YLQSbar[0,mif1] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YLQS[0,0] * self.YLQSbar[0,mif1] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YLQS[0,1] * self.YLQSbar[0,mif1] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YLQS[0,1] * self.YLQSbar[0,mif1] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YLQS[0,2] * self.YLQSbar[0,mif1] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YLQS[0,2] * self.YLQSbar[0,mif1] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YLQS[1,0] * self.YLQSbar[1,mif1] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YLQS[1,0] * self.YLQSbar[1,mif1] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YLQS[1,1] * self.YLQSbar[1,mif1] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YLQS[1,1] * self.YLQSbar[1,mif1] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YLQS[1,2] * self.YLQSbar[1,mif1] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YLQS[1,2] * self.YLQSbar[1,mif1] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YLQS[2,0] * self.YLQSbar[2,mif1] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YLQS[2,0] * self.YLQSbar[2,mif1] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YLQS[2,1] * self.YLQSbar[2,mif1] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YLQS[2,1] * self.YLQSbar[2,mif1] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YLQS[2,2] * self.YLQSbar[2,mif1] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YLQS[2,2] * self.YLQSbar[2,mif1])

    def alphaOeW(self, mif1,mif2):
        return (-1/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,0] * self.YLQSbar[mif1,0] + 3/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,0] * self.YLQSbar[mif1,0] + -1/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,0] * self.YLQSbar[mif1,0] + 3/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,0] * self.YLQSbar[mif1,0] + -1/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,0] * self.YLQSbar[mif1,0] + 3/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,0] * self.YLQSbar[mif1,0] + -1/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,1] * self.YLQSbar[mif1,1] + 3/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,1] * self.YLQSbar[mif1,1] + -1/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,1] * self.YLQSbar[mif1,1] + 3/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,1] * self.YLQSbar[mif1,1] + -1/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,1] * self.YLQSbar[mif1,1] + 3/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,1] * self.YLQSbar[mif1,1] + -1/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,2] * self.YLQSbar[mif1,2] + 3/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,2] * self.YLQSbar[mif1,2] + -1/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,2] * self.YLQSbar[mif1,2] + 3/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,2] * self.YLQSbar[mif1,2] + -1/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,2] * self.YLQSbar[mif1,2] + 3/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,2] * self.YLQSbar[mif1,2] + 9/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yubar[0,0] + 3/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yubar[0,0] + -3/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yubar[0,0] + 9/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yubar[0,1] + 3/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yubar[0,1] + -3/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yubar[0,1] + 9/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yubar[0,2] + 3/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yubar[0,2] + -3/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yubar[0,2] + 9/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yubar[1,0] + 3/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yubar[1,0] + -3/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yubar[1,0] + 9/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yubar[1,1] + 3/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yubar[1,1] + -3/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yubar[1,1] + 9/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yubar[1,2] + 3/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yubar[1,2] + -3/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yubar[1,2] + 9/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yubar[2,0] + 3/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yubar[2,0] + -3/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yubar[2,0] + 9/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yubar[2,1] + 3/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yubar[2,1] + -3/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yubar[2,1] + 9/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yubar[2,2] + 3/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yubar[2,2] + -3/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yubar[2,2])

    def alphaOeB(self, mif1,mif2):
        return (1/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[mif2,0] * self.yl[mif1,0] + -1/64 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[mif2,0] * self.yl[mif1,0] + 1/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[mif2,1] * self.yl[mif1,0] + -1/64 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[mif2,1] * self.yl[mif1,0] + 1/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[mif2,2] * self.yl[mif1,0] + -1/64 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[mif2,2] * self.yl[mif1,0] + 1/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[mif2,0] * self.yl[mif1,1] + -1/64 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[mif2,0] * self.yl[mif1,1] + 1/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[mif2,1] * self.yl[mif1,1] + -1/64 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[mif2,1] * self.yl[mif1,1] + 1/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[mif2,2] * self.yl[mif1,1] + -1/64 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[mif2,2] * self.yl[mif1,1] + 1/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[mif2,0] * self.yl[mif1,2] + -1/64 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[mif2,0] * self.yl[mif1,2] + 1/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[mif2,1] * self.yl[mif1,2] + -1/64 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[mif2,1] * self.yl[mif1,2] + 1/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[mif2,2] * self.yl[mif1,2] + -1/64 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[mif2,2] * self.yl[mif1,2] + 1/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,0] * self.YLQSbar[mif1,0] + -1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,0] * self.YLQSbar[mif1,0] + 1/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,0] * self.YLQSbar[mif1,0] + -1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,0] * self.YLQSbar[mif1,0] + 1/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,0] * self.YLQSbar[mif1,0] + -1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,0] * self.YLQSbar[mif1,0] + 1/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,1] * self.YLQSbar[mif1,1] + -1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,1] * self.YLQSbar[mif1,1] + 1/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,1] * self.YLQSbar[mif1,1] + -1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,1] * self.YLQSbar[mif1,1] + 1/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,1] * self.YLQSbar[mif1,1] + -1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,1] * self.YLQSbar[mif1,1] + 1/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,2] * self.YLQSbar[mif1,2] + -1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,2] * self.YLQSbar[mif1,2] + 1/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,2] * self.YLQSbar[mif1,2] + -1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,2] * self.YLQSbar[mif1,2] + 1/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,2] * self.YLQSbar[mif1,2] + -1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,2] * self.YLQSbar[mif1,2] + -19/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yubar[0,0] + -5/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yubar[0,0] + 5/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yubar[0,0] + -19/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yubar[0,1] + -5/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yubar[0,1] + 5/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yubar[0,1] + -19/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yubar[0,2] + -5/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yubar[0,2] + 5/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yubar[0,2] + -19/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yubar[1,0] + -5/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yubar[1,0] + 5/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yubar[1,0] + -19/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yubar[1,1] + -5/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yubar[1,1] + 5/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yubar[1,1] + -19/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yubar[1,2] + -5/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yubar[1,2] + 5/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yubar[1,2] + -19/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yubar[2,0] + -5/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yubar[2,0] + 5/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yubar[2,0] + -19/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yubar[2,1] + -5/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yubar[2,1] + 5/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yubar[2,1] + -19/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yubar[2,2] + -5/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yubar[2,2] + 5/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yubar[2,2])

    def alphaOHq1(self, mif1,mif2):
        return (-1/17280 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -25/6912 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/256 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + 1/192 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[0,0] * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[0,0] * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[0,1] * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[0,1] * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[0,2] * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[0,2] * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[0,0] * self.YLQS[1,mif2] * self.YLQSbar[0,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[0,0] * self.YLQS[1,mif2] * self.YLQSbar[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,0] * self.YLQS[1,mif2] * self.YLQSbar[0,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[0,1] * self.YLQS[1,mif2] * self.YLQSbar[0,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[0,1] * self.YLQS[1,mif2] * self.YLQSbar[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,1] * self.YLQS[1,mif2] * self.YLQSbar[0,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[0,2] * self.YLQS[1,mif2] * self.YLQSbar[0,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[0,2] * self.YLQS[1,mif2] * self.YLQSbar[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,2] * self.YLQS[1,mif2] * self.YLQSbar[0,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[0,0] * self.YLQS[2,mif2] * self.YLQSbar[0,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[0,0] * self.YLQS[2,mif2] * self.YLQSbar[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,0] * self.YLQS[2,mif2] * self.YLQSbar[0,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[0,1] * self.YLQS[2,mif2] * self.YLQSbar[0,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[0,1] * self.YLQS[2,mif2] * self.YLQSbar[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,1] * self.YLQS[2,mif2] * self.YLQSbar[0,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[0,2] * self.YLQS[2,mif2] * self.YLQSbar[0,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[0,2] * self.YLQS[2,mif2] * self.YLQSbar[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,2] * self.YLQS[2,mif2] * self.YLQSbar[0,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[1,0] * self.YLQS[0,mif2] * self.YLQSbar[1,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[1,0] * self.YLQS[0,mif2] * self.YLQSbar[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[1,0] * self.YLQS[0,mif2] * self.YLQSbar[1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[1,1] * self.YLQS[0,mif2] * self.YLQSbar[1,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[1,1] * self.YLQS[0,mif2] * self.YLQSbar[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[1,1] * self.YLQS[0,mif2] * self.YLQSbar[1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[1,2] * self.YLQS[0,mif2] * self.YLQSbar[1,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[1,2] * self.YLQS[0,mif2] * self.YLQSbar[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[1,2] * self.YLQS[0,mif2] * self.YLQSbar[1,mif1] + -25/6912 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/256 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + 1/192 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[1,0] * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[1,0] * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[1,1] * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[1,1] * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[1,2] * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[1,2] * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,2] * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[1,0] * self.YLQS[2,mif2] * self.YLQSbar[1,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[1,0] * self.YLQS[2,mif2] * self.YLQSbar[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,0] * self.YLQS[2,mif2] * self.YLQSbar[1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[1,1] * self.YLQS[2,mif2] * self.YLQSbar[1,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[1,1] * self.YLQS[2,mif2] * self.YLQSbar[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,1] * self.YLQS[2,mif2] * self.YLQSbar[1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[1,2] * self.YLQS[2,mif2] * self.YLQSbar[1,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[1,2] * self.YLQS[2,mif2] * self.YLQSbar[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,2] * self.YLQS[2,mif2] * self.YLQSbar[1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[2,0] * self.YLQS[0,mif2] * self.YLQSbar[2,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[2,0] * self.YLQS[0,mif2] * self.YLQSbar[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[2,0] * self.YLQS[0,mif2] * self.YLQSbar[2,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[2,1] * self.YLQS[0,mif2] * self.YLQSbar[2,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[2,1] * self.YLQS[0,mif2] * self.YLQSbar[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[2,1] * self.YLQS[0,mif2] * self.YLQSbar[2,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[2,2] * self.YLQS[0,mif2] * self.YLQSbar[2,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[2,2] * self.YLQS[0,mif2] * self.YLQSbar[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[2,2] * self.YLQS[0,mif2] * self.YLQSbar[2,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[2,0] * self.YLQS[1,mif2] * self.YLQSbar[2,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[2,0] * self.YLQS[1,mif2] * self.YLQSbar[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[2,0] * self.YLQS[1,mif2] * self.YLQSbar[2,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[2,1] * self.YLQS[1,mif2] * self.YLQSbar[2,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[2,1] * self.YLQS[1,mif2] * self.YLQSbar[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[2,1] * self.YLQS[1,mif2] * self.YLQSbar[2,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[2,2] * self.YLQS[1,mif2] * self.YLQSbar[2,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[2,2] * self.YLQS[1,mif2] * self.YLQSbar[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[2,2] * self.YLQS[1,mif2] * self.YLQSbar[2,mif1] + -25/6912 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/256 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + 1/192 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[2,0] * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[2,0] * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[2,1] * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[2,1] * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,1] * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[2,2] * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[2,2] * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,2] * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[0,0] * self.YLQS[0,mif2] * self.yu[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[0,1] * self.YLQS[0,mif2] * self.yu[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[0,2] * self.YLQS[0,mif2] * self.yu[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[1,0] * self.YLQS[1,mif2] * self.yu[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[1,1] * self.YLQS[1,mif2] * self.yu[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[1,2] * self.YLQS[1,mif2] * self.yu[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[2,0] * self.YLQS[2,mif2] * self.yu[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[2,1] * self.YLQS[2,mif2] * self.yu[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[2,2] * self.YLQS[2,mif2] * self.yu[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[0,0] * self.YLQS[0,mif2] * self.yu[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[0,1] * self.YLQS[0,mif2] * self.yu[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[0,2] * self.YLQS[0,mif2] * self.yu[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[1,0] * self.YLQS[1,mif2] * self.yu[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[1,1] * self.YLQS[1,mif2] * self.yu[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[1,2] * self.YLQS[1,mif2] * self.yu[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[2,0] * self.YLQS[2,mif2] * self.yu[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[2,1] * self.YLQS[2,mif2] * self.yu[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[2,2] * self.YLQS[2,mif2] * self.yu[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[0,0] * self.YLQS[0,mif2] * self.yu[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[0,1] * self.YLQS[0,mif2] * self.yu[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[0,2] * self.YLQS[0,mif2] * self.yu[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[1,0] * self.YLQS[1,mif2] * self.yu[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[1,1] * self.YLQS[1,mif2] * self.yu[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[1,2] * self.YLQS[1,mif2] * self.yu[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[2,0] * self.YLQS[2,mif2] * self.yu[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[2,1] * self.YLQS[2,mif2] * self.yu[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[2,2] * self.YLQS[2,mif2] * self.yu[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[0,0] * self.YLQSbar[0,mif1] * self.yubar[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[0,1] * self.YLQSbar[0,mif1] * self.yubar[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[0,2] * self.YLQSbar[0,mif1] * self.yubar[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[1,0] * self.YLQSbar[1,mif1] * self.yubar[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[1,1] * self.YLQSbar[1,mif1] * self.yubar[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[1,2] * self.YLQSbar[1,mif1] * self.yubar[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[2,0] * self.YLQSbar[2,mif1] * self.yubar[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[2,1] * self.YLQSbar[2,mif1] * self.yubar[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[2,2] * self.YLQSbar[2,mif1] * self.yubar[mif2,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,0] * self.yu[mif1,0] * self.yubar[mif2,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,0] * self.yu[mif1,0] * self.yubar[mif2,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,0] * self.yu[mif1,0] * self.yubar[mif2,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,0] * self.yu[mif1,1] * self.yubar[mif2,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,0] * self.yu[mif1,1] * self.yubar[mif2,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,0] * self.yu[mif1,1] * self.yubar[mif2,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,0] * self.yu[mif1,2] * self.yubar[mif2,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,0] * self.yu[mif1,2] * self.yubar[mif2,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,0] * self.yu[mif1,2] * self.yubar[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[0,0] * self.YLQSbar[0,mif1] * self.yubar[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[0,1] * self.YLQSbar[0,mif1] * self.yubar[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[0,2] * self.YLQSbar[0,mif1] * self.yubar[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[1,0] * self.YLQSbar[1,mif1] * self.yubar[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[1,1] * self.YLQSbar[1,mif1] * self.yubar[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[1,2] * self.YLQSbar[1,mif1] * self.yubar[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[2,0] * self.YLQSbar[2,mif1] * self.yubar[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[2,1] * self.YLQSbar[2,mif1] * self.yubar[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[2,2] * self.YLQSbar[2,mif1] * self.yubar[mif2,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,1] * self.yu[mif1,0] * self.yubar[mif2,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,1] * self.yu[mif1,0] * self.yubar[mif2,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,1] * self.yu[mif1,0] * self.yubar[mif2,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,1] * self.yu[mif1,1] * self.yubar[mif2,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,1] * self.yu[mif1,1] * self.yubar[mif2,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,1] * self.yu[mif1,1] * self.yubar[mif2,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,1] * self.yu[mif1,2] * self.yubar[mif2,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,1] * self.yu[mif1,2] * self.yubar[mif2,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,1] * self.yu[mif1,2] * self.yubar[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[0,0] * self.YLQSbar[0,mif1] * self.yubar[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[0,1] * self.YLQSbar[0,mif1] * self.yubar[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[0,2] * self.YLQSbar[0,mif1] * self.yubar[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[1,0] * self.YLQSbar[1,mif1] * self.yubar[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[1,1] * self.YLQSbar[1,mif1] * self.yubar[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[1,2] * self.YLQSbar[1,mif1] * self.yubar[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[2,0] * self.YLQSbar[2,mif1] * self.yubar[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[2,1] * self.YLQSbar[2,mif1] * self.yubar[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[2,2] * self.YLQSbar[2,mif1] * self.yubar[mif2,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,2] * self.yu[mif1,0] * self.yubar[mif2,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,2] * self.yu[mif1,0] * self.yubar[mif2,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,2] * self.yu[mif1,0] * self.yubar[mif2,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,2] * self.yu[mif1,1] * self.yubar[mif2,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,2] * self.yu[mif1,1] * self.yubar[mif2,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,2] * self.yu[mif1,1] * self.yubar[mif2,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,2] * self.yu[mif1,2] * self.yubar[mif2,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,2] * self.yu[mif1,2] * self.yubar[mif2,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,2] * self.yu[mif1,2] * self.yubar[mif2,2])

    def alphaOHq3(self, mif1,mif2):
        return (-7/2304 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + 1/192 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[0,0] * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[0,0] * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[0,1] * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[0,1] * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[0,2] * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[0,2] * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[0,0] * self.YLQS[1,mif2] * self.YLQSbar[0,mif1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[0,0] * self.YLQS[1,mif2] * self.YLQSbar[0,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,0] * self.YLQS[1,mif2] * self.YLQSbar[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[0,1] * self.YLQS[1,mif2] * self.YLQSbar[0,mif1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[0,1] * self.YLQS[1,mif2] * self.YLQSbar[0,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,1] * self.YLQS[1,mif2] * self.YLQSbar[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[0,2] * self.YLQS[1,mif2] * self.YLQSbar[0,mif1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[0,2] * self.YLQS[1,mif2] * self.YLQSbar[0,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,2] * self.YLQS[1,mif2] * self.YLQSbar[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[0,0] * self.YLQS[2,mif2] * self.YLQSbar[0,mif1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[0,0] * self.YLQS[2,mif2] * self.YLQSbar[0,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,0] * self.YLQS[2,mif2] * self.YLQSbar[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[0,1] * self.YLQS[2,mif2] * self.YLQSbar[0,mif1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[0,1] * self.YLQS[2,mif2] * self.YLQSbar[0,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,1] * self.YLQS[2,mif2] * self.YLQSbar[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[0,2] * self.YLQS[2,mif2] * self.YLQSbar[0,mif1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[0,2] * self.YLQS[2,mif2] * self.YLQSbar[0,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,2] * self.YLQS[2,mif2] * self.YLQSbar[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[1,0] * self.YLQS[0,mif2] * self.YLQSbar[1,mif1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[1,0] * self.YLQS[0,mif2] * self.YLQSbar[1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[1,0] * self.YLQS[0,mif2] * self.YLQSbar[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[1,1] * self.YLQS[0,mif2] * self.YLQSbar[1,mif1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[1,1] * self.YLQS[0,mif2] * self.YLQSbar[1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[1,1] * self.YLQS[0,mif2] * self.YLQSbar[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[1,2] * self.YLQS[0,mif2] * self.YLQSbar[1,mif1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[1,2] * self.YLQS[0,mif2] * self.YLQSbar[1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[1,2] * self.YLQS[0,mif2] * self.YLQSbar[1,mif1] + -7/2304 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + 1/192 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[1,0] * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[1,0] * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[1,1] * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[1,1] * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[1,2] * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[1,2] * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,2] * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[1,0] * self.YLQS[2,mif2] * self.YLQSbar[1,mif1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[1,0] * self.YLQS[2,mif2] * self.YLQSbar[1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,0] * self.YLQS[2,mif2] * self.YLQSbar[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[1,1] * self.YLQS[2,mif2] * self.YLQSbar[1,mif1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[1,1] * self.YLQS[2,mif2] * self.YLQSbar[1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,1] * self.YLQS[2,mif2] * self.YLQSbar[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[1,2] * self.YLQS[2,mif2] * self.YLQSbar[1,mif1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[1,2] * self.YLQS[2,mif2] * self.YLQSbar[1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,2] * self.YLQS[2,mif2] * self.YLQSbar[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[2,0] * self.YLQS[0,mif2] * self.YLQSbar[2,mif1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[2,0] * self.YLQS[0,mif2] * self.YLQSbar[2,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[2,0] * self.YLQS[0,mif2] * self.YLQSbar[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[2,1] * self.YLQS[0,mif2] * self.YLQSbar[2,mif1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[2,1] * self.YLQS[0,mif2] * self.YLQSbar[2,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[2,1] * self.YLQS[0,mif2] * self.YLQSbar[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[2,2] * self.YLQS[0,mif2] * self.YLQSbar[2,mif1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[2,2] * self.YLQS[0,mif2] * self.YLQSbar[2,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[2,2] * self.YLQS[0,mif2] * self.YLQSbar[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[2,0] * self.YLQS[1,mif2] * self.YLQSbar[2,mif1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[2,0] * self.YLQS[1,mif2] * self.YLQSbar[2,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[2,0] * self.YLQS[1,mif2] * self.YLQSbar[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[2,1] * self.YLQS[1,mif2] * self.YLQSbar[2,mif1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[2,1] * self.YLQS[1,mif2] * self.YLQSbar[2,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[2,1] * self.YLQS[1,mif2] * self.YLQSbar[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[2,2] * self.YLQS[1,mif2] * self.YLQSbar[2,mif1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[2,2] * self.YLQS[1,mif2] * self.YLQSbar[2,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[2,2] * self.YLQS[1,mif2] * self.YLQSbar[2,mif1] + -7/2304 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + 1/192 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[2,0] * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[2,0] * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[2,1] * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[2,1] * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,1] * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[2,2] * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[2,2] * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,2] * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[0,0] * self.YLQS[0,mif2] * self.yu[mif1,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[0,1] * self.YLQS[0,mif2] * self.yu[mif1,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[0,2] * self.YLQS[0,mif2] * self.yu[mif1,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[1,0] * self.YLQS[1,mif2] * self.yu[mif1,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[1,1] * self.YLQS[1,mif2] * self.yu[mif1,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[1,2] * self.YLQS[1,mif2] * self.yu[mif1,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[2,0] * self.YLQS[2,mif2] * self.yu[mif1,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[2,1] * self.YLQS[2,mif2] * self.yu[mif1,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[2,2] * self.YLQS[2,mif2] * self.yu[mif1,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[0,0] * self.YLQS[0,mif2] * self.yu[mif1,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[0,1] * self.YLQS[0,mif2] * self.yu[mif1,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[0,2] * self.YLQS[0,mif2] * self.yu[mif1,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[1,0] * self.YLQS[1,mif2] * self.yu[mif1,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[1,1] * self.YLQS[1,mif2] * self.yu[mif1,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[1,2] * self.YLQS[1,mif2] * self.yu[mif1,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[2,0] * self.YLQS[2,mif2] * self.yu[mif1,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[2,1] * self.YLQS[2,mif2] * self.yu[mif1,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[2,2] * self.YLQS[2,mif2] * self.yu[mif1,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[0,0] * self.YLQS[0,mif2] * self.yu[mif1,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[0,1] * self.YLQS[0,mif2] * self.yu[mif1,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[0,2] * self.YLQS[0,mif2] * self.yu[mif1,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[1,0] * self.YLQS[1,mif2] * self.yu[mif1,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[1,1] * self.YLQS[1,mif2] * self.yu[mif1,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[1,2] * self.YLQS[1,mif2] * self.yu[mif1,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[2,0] * self.YLQS[2,mif2] * self.yu[mif1,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[2,1] * self.YLQS[2,mif2] * self.yu[mif1,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[2,2] * self.YLQS[2,mif2] * self.yu[mif1,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[0,0] * self.YLQSbar[0,mif1] * self.yubar[mif2,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[0,1] * self.YLQSbar[0,mif1] * self.yubar[mif2,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[0,2] * self.YLQSbar[0,mif1] * self.yubar[mif2,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[1,0] * self.YLQSbar[1,mif1] * self.yubar[mif2,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[1,1] * self.YLQSbar[1,mif1] * self.yubar[mif2,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[1,2] * self.YLQSbar[1,mif1] * self.yubar[mif2,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[2,0] * self.YLQSbar[2,mif1] * self.yubar[mif2,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[2,1] * self.YLQSbar[2,mif1] * self.yubar[mif2,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[2,2] * self.YLQSbar[2,mif1] * self.yubar[mif2,0] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,0] * self.yu[mif1,0] * self.yubar[mif2,0] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,0] * self.yu[mif1,0] * self.yubar[mif2,0] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,0] * self.yu[mif1,0] * self.yubar[mif2,0] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,0] * self.yu[mif1,1] * self.yubar[mif2,0] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,0] * self.yu[mif1,1] * self.yubar[mif2,0] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,0] * self.yu[mif1,1] * self.yubar[mif2,0] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,0] * self.yu[mif1,2] * self.yubar[mif2,0] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,0] * self.yu[mif1,2] * self.yubar[mif2,0] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,0] * self.yu[mif1,2] * self.yubar[mif2,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[0,0] * self.YLQSbar[0,mif1] * self.yubar[mif2,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[0,1] * self.YLQSbar[0,mif1] * self.yubar[mif2,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[0,2] * self.YLQSbar[0,mif1] * self.yubar[mif2,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[1,0] * self.YLQSbar[1,mif1] * self.yubar[mif2,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[1,1] * self.YLQSbar[1,mif1] * self.yubar[mif2,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[1,2] * self.YLQSbar[1,mif1] * self.yubar[mif2,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[2,0] * self.YLQSbar[2,mif1] * self.yubar[mif2,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[2,1] * self.YLQSbar[2,mif1] * self.yubar[mif2,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[2,2] * self.YLQSbar[2,mif1] * self.yubar[mif2,1] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,1] * self.yu[mif1,0] * self.yubar[mif2,1] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,1] * self.yu[mif1,0] * self.yubar[mif2,1] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,1] * self.yu[mif1,0] * self.yubar[mif2,1] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,1] * self.yu[mif1,1] * self.yubar[mif2,1] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,1] * self.yu[mif1,1] * self.yubar[mif2,1] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,1] * self.yu[mif1,1] * self.yubar[mif2,1] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,1] * self.yu[mif1,2] * self.yubar[mif2,1] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,1] * self.yu[mif1,2] * self.yubar[mif2,1] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,1] * self.yu[mif1,2] * self.yubar[mif2,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[0,0] * self.YLQSbar[0,mif1] * self.yubar[mif2,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[0,1] * self.YLQSbar[0,mif1] * self.yubar[mif2,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[0,2] * self.YLQSbar[0,mif1] * self.yubar[mif2,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[1,0] * self.YLQSbar[1,mif1] * self.yubar[mif2,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[1,1] * self.YLQSbar[1,mif1] * self.yubar[mif2,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[1,2] * self.YLQSbar[1,mif1] * self.yubar[mif2,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[2,0] * self.YLQSbar[2,mif1] * self.yubar[mif2,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[2,1] * self.YLQSbar[2,mif1] * self.yubar[mif2,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[2,2] * self.YLQSbar[2,mif1] * self.yubar[mif2,2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,2] * self.yu[mif1,0] * self.yubar[mif2,2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,2] * self.yu[mif1,0] * self.yubar[mif2,2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,2] * self.yu[mif1,0] * self.yubar[mif2,2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,2] * self.yu[mif1,1] * self.yubar[mif2,2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,2] * self.yu[mif1,1] * self.yubar[mif2,2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,2] * self.yu[mif1,1] * self.yubar[mif2,2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,2] * self.yu[mif1,2] * self.yubar[mif2,2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,2] * self.yu[mif1,2] * self.yubar[mif2,2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,2] * self.yu[mif1,2] * self.yubar[mif2,2])

    def alphaOHu(self, mif1,mif2):
        return (-1/4320 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -23/3456 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuSbar[0,mif2] + -1/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuSbar[0,mif2] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuSbar[0,mif2] + 1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif1] * self.YeuSbar[0,mif2] + -23/3456 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuSbar[1,mif2] + -1/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuSbar[1,mif2] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuSbar[1,mif2] + 1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif1] * self.YeuSbar[1,mif2] + -23/3456 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuSbar[2,mif2] + -1/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuSbar[2,mif2] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuSbar[2,mif2] + 1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif1] * self.YeuSbar[2,mif2] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuSbar[0,mif2] * self.yl[0,0] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuSbar[0,mif2] * self.yl[0,0] * self.ylbar[0,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif1] * self.YeuSbar[0,mif2] * self.yl[0,0] * self.ylbar[0,0] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuSbar[0,mif2] * self.yl[0,1] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuSbar[0,mif2] * self.yl[0,1] * self.ylbar[0,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif1] * self.YeuSbar[0,mif2] * self.yl[0,1] * self.ylbar[0,0] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuSbar[0,mif2] * self.yl[0,2] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuSbar[0,mif2] * self.yl[0,2] * self.ylbar[0,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif1] * self.YeuSbar[0,mif2] * self.yl[0,2] * self.ylbar[0,0] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuSbar[1,mif2] * self.yl[0,0] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuSbar[1,mif2] * self.yl[0,0] * self.ylbar[0,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif1] * self.YeuSbar[1,mif2] * self.yl[0,0] * self.ylbar[0,1] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuSbar[1,mif2] * self.yl[0,1] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuSbar[1,mif2] * self.yl[0,1] * self.ylbar[0,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif1] * self.YeuSbar[1,mif2] * self.yl[0,1] * self.ylbar[0,1] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuSbar[1,mif2] * self.yl[0,2] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuSbar[1,mif2] * self.yl[0,2] * self.ylbar[0,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif1] * self.YeuSbar[1,mif2] * self.yl[0,2] * self.ylbar[0,1] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuSbar[2,mif2] * self.yl[0,0] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuSbar[2,mif2] * self.yl[0,0] * self.ylbar[0,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif1] * self.YeuSbar[2,mif2] * self.yl[0,0] * self.ylbar[0,2] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuSbar[2,mif2] * self.yl[0,1] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuSbar[2,mif2] * self.yl[0,1] * self.ylbar[0,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif1] * self.YeuSbar[2,mif2] * self.yl[0,1] * self.ylbar[0,2] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuSbar[2,mif2] * self.yl[0,2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuSbar[2,mif2] * self.yl[0,2] * self.ylbar[0,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif1] * self.YeuSbar[2,mif2] * self.yl[0,2] * self.ylbar[0,2] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuSbar[0,mif2] * self.yl[1,0] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuSbar[0,mif2] * self.yl[1,0] * self.ylbar[1,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif1] * self.YeuSbar[0,mif2] * self.yl[1,0] * self.ylbar[1,0] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuSbar[0,mif2] * self.yl[1,1] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuSbar[0,mif2] * self.yl[1,1] * self.ylbar[1,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif1] * self.YeuSbar[0,mif2] * self.yl[1,1] * self.ylbar[1,0] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuSbar[0,mif2] * self.yl[1,2] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuSbar[0,mif2] * self.yl[1,2] * self.ylbar[1,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif1] * self.YeuSbar[0,mif2] * self.yl[1,2] * self.ylbar[1,0] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuSbar[1,mif2] * self.yl[1,0] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuSbar[1,mif2] * self.yl[1,0] * self.ylbar[1,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif1] * self.YeuSbar[1,mif2] * self.yl[1,0] * self.ylbar[1,1] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuSbar[1,mif2] * self.yl[1,1] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuSbar[1,mif2] * self.yl[1,1] * self.ylbar[1,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif1] * self.YeuSbar[1,mif2] * self.yl[1,1] * self.ylbar[1,1] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuSbar[1,mif2] * self.yl[1,2] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuSbar[1,mif2] * self.yl[1,2] * self.ylbar[1,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif1] * self.YeuSbar[1,mif2] * self.yl[1,2] * self.ylbar[1,1] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuSbar[2,mif2] * self.yl[1,0] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuSbar[2,mif2] * self.yl[1,0] * self.ylbar[1,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif1] * self.YeuSbar[2,mif2] * self.yl[1,0] * self.ylbar[1,2] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuSbar[2,mif2] * self.yl[1,1] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuSbar[2,mif2] * self.yl[1,1] * self.ylbar[1,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif1] * self.YeuSbar[2,mif2] * self.yl[1,1] * self.ylbar[1,2] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuSbar[2,mif2] * self.yl[1,2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuSbar[2,mif2] * self.yl[1,2] * self.ylbar[1,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif1] * self.YeuSbar[2,mif2] * self.yl[1,2] * self.ylbar[1,2] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuSbar[0,mif2] * self.yl[2,0] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuSbar[0,mif2] * self.yl[2,0] * self.ylbar[2,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif1] * self.YeuSbar[0,mif2] * self.yl[2,0] * self.ylbar[2,0] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuSbar[0,mif2] * self.yl[2,1] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuSbar[0,mif2] * self.yl[2,1] * self.ylbar[2,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif1] * self.YeuSbar[0,mif2] * self.yl[2,1] * self.ylbar[2,0] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuSbar[0,mif2] * self.yl[2,2] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuSbar[0,mif2] * self.yl[2,2] * self.ylbar[2,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif1] * self.YeuSbar[0,mif2] * self.yl[2,2] * self.ylbar[2,0] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuSbar[1,mif2] * self.yl[2,0] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuSbar[1,mif2] * self.yl[2,0] * self.ylbar[2,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif1] * self.YeuSbar[1,mif2] * self.yl[2,0] * self.ylbar[2,1] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuSbar[1,mif2] * self.yl[2,1] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuSbar[1,mif2] * self.yl[2,1] * self.ylbar[2,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif1] * self.YeuSbar[1,mif2] * self.yl[2,1] * self.ylbar[2,1] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuSbar[1,mif2] * self.yl[2,2] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuSbar[1,mif2] * self.yl[2,2] * self.ylbar[2,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif1] * self.YeuSbar[1,mif2] * self.yl[2,2] * self.ylbar[2,1] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuSbar[2,mif2] * self.yl[2,0] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuSbar[2,mif2] * self.yl[2,0] * self.ylbar[2,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif1] * self.YeuSbar[2,mif2] * self.yl[2,0] * self.ylbar[2,2] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuSbar[2,mif2] * self.yl[2,1] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuSbar[2,mif2] * self.yl[2,1] * self.ylbar[2,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif1] * self.YeuSbar[2,mif2] * self.yl[2,1] * self.ylbar[2,2] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuSbar[2,mif2] * self.yl[2,2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuSbar[2,mif2] * self.yl[2,2] * self.ylbar[2,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif1] * self.YeuSbar[2,mif2] * self.yl[2,2] * self.ylbar[2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.yl[0,0] * self.YLQS[0,0] * self.yu[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.yl[0,1] * self.YLQS[0,0] * self.yu[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.yl[0,2] * self.YLQS[0,0] * self.yu[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.yl[1,0] * self.YLQS[1,0] * self.yu[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.yl[1,1] * self.YLQS[1,0] * self.yu[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.yl[1,2] * self.YLQS[1,0] * self.yu[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.yl[2,0] * self.YLQS[2,0] * self.yu[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.yl[2,1] * self.YLQS[2,0] * self.yu[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.yl[2,2] * self.YLQS[2,0] * self.yu[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.yl[0,0] * self.YLQS[0,1] * self.yu[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.yl[0,1] * self.YLQS[0,1] * self.yu[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.yl[0,2] * self.YLQS[0,1] * self.yu[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.yl[1,0] * self.YLQS[1,1] * self.yu[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.yl[1,1] * self.YLQS[1,1] * self.yu[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.yl[1,2] * self.YLQS[1,1] * self.yu[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.yl[2,0] * self.YLQS[2,1] * self.yu[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.yl[2,1] * self.YLQS[2,1] * self.yu[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.yl[2,2] * self.YLQS[2,1] * self.yu[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.yl[0,0] * self.YLQS[0,2] * self.yu[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.yl[0,1] * self.YLQS[0,2] * self.yu[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.yl[0,2] * self.YLQS[0,2] * self.yu[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.yl[1,0] * self.YLQS[1,2] * self.yu[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.yl[1,1] * self.YLQS[1,2] * self.yu[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.yl[1,2] * self.YLQS[1,2] * self.yu[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.yl[2,0] * self.YLQS[2,2] * self.yu[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.yl[2,1] * self.YLQS[2,2] * self.yu[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.yl[2,2] * self.YLQS[2,2] * self.yu[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[0,0] * self.YLQSbar[0,0] * self.yubar[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,0] * self.yubar[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[0,2] * self.YLQSbar[0,0] * self.yubar[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[1,0] * self.YLQSbar[1,0] * self.yubar[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,0] * self.yubar[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[1,2] * self.YLQSbar[1,0] * self.yubar[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[2,0] * self.YLQSbar[2,0] * self.yubar[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,0] * self.yubar[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[2,2] * self.YLQSbar[2,0] * self.yubar[0,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,0] * self.yu[0,mif2] * self.yubar[0,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,0] * self.yu[0,mif2] * self.yubar[0,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,0] * self.yu[0,mif2] * self.yubar[0,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,0] * self.yu[1,mif2] * self.yubar[0,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,0] * self.yu[1,mif2] * self.yubar[0,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,0] * self.yu[1,mif2] * self.yubar[0,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,0] * self.yu[2,mif2] * self.yubar[0,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,0] * self.yu[2,mif2] * self.yubar[0,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,0] * self.yu[2,mif2] * self.yubar[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[0,0] * self.YLQSbar[0,1] * self.yubar[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,1] * self.yubar[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[0,2] * self.YLQSbar[0,1] * self.yubar[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[1,0] * self.YLQSbar[1,1] * self.yubar[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,1] * self.yubar[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[1,2] * self.YLQSbar[1,1] * self.yubar[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[2,0] * self.YLQSbar[2,1] * self.yubar[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,1] * self.yubar[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[2,2] * self.YLQSbar[2,1] * self.yubar[1,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,1] * self.yu[0,mif2] * self.yubar[1,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,1] * self.yu[0,mif2] * self.yubar[1,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,1] * self.yu[0,mif2] * self.yubar[1,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,1] * self.yu[1,mif2] * self.yubar[1,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,1] * self.yu[1,mif2] * self.yubar[1,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,1] * self.yu[1,mif2] * self.yubar[1,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,1] * self.yu[2,mif2] * self.yubar[1,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,1] * self.yu[2,mif2] * self.yubar[1,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,1] * self.yu[2,mif2] * self.yubar[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[0,0] * self.YLQSbar[0,2] * self.yubar[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,2] * self.yubar[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[0,2] * self.YLQSbar[0,2] * self.yubar[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[1,0] * self.YLQSbar[1,2] * self.yubar[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,2] * self.yubar[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[1,2] * self.YLQSbar[1,2] * self.yubar[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[2,0] * self.YLQSbar[2,2] * self.yubar[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,2] * self.yubar[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[2,2] * self.YLQSbar[2,2] * self.yubar[2,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,2] * self.yu[0,mif2] * self.yubar[2,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,2] * self.yu[0,mif2] * self.yubar[2,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,2] * self.yu[0,mif2] * self.yubar[2,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,2] * self.yu[1,mif2] * self.yubar[2,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,2] * self.yu[1,mif2] * self.yubar[2,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,2] * self.yu[1,mif2] * self.yubar[2,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,2] * self.yu[2,mif2] * self.yubar[2,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,2] * self.yu[2,mif2] * self.yubar[2,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,2] * self.yu[2,mif2] * self.yubar[2,mif1])

    def alphaOHd(self, mif1,mif2):
        return (1/8640 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,mif1] * self.YLQS[0,0] * self.YLQSbar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[0,mif1] * self.YLQS[0,1] * self.YLQSbar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[0,mif1] * self.YLQS[0,2] * self.YLQSbar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[1,mif1] * self.YLQS[0,0] * self.YLQSbar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,mif1] * self.YLQS[0,1] * self.YLQSbar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[1,mif1] * self.YLQS[0,2] * self.YLQSbar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[2,mif1] * self.YLQS[0,0] * self.YLQSbar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[2,mif1] * self.YLQS[0,1] * self.YLQSbar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,mif1] * self.YLQS[0,2] * self.YLQSbar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,mif1] * self.YLQS[1,0] * self.YLQSbar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[0,mif1] * self.YLQS[1,1] * self.YLQSbar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[0,mif1] * self.YLQS[1,2] * self.YLQSbar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[1,mif1] * self.YLQS[1,0] * self.YLQSbar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,mif1] * self.YLQS[1,1] * self.YLQSbar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[1,mif1] * self.YLQS[1,2] * self.YLQSbar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[2,mif1] * self.YLQS[1,0] * self.YLQSbar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[2,mif1] * self.YLQS[1,1] * self.YLQSbar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,mif1] * self.YLQS[1,2] * self.YLQSbar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,mif1] * self.YLQS[2,0] * self.YLQSbar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[0,mif1] * self.YLQS[2,1] * self.YLQSbar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[0,mif1] * self.YLQS[2,2] * self.YLQSbar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[1,mif1] * self.YLQS[2,0] * self.YLQSbar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,mif1] * self.YLQS[2,1] * self.YLQSbar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[1,mif1] * self.YLQS[2,2] * self.YLQSbar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[2,mif1] * self.YLQS[2,0] * self.YLQSbar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[2,mif1] * self.YLQS[2,1] * self.YLQSbar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,mif1] * self.YLQS[2,2] * self.YLQSbar[2,2])

    def alphaOHud(self, mif1,mif2):
        return (-1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YeuS[0,mif1] * self.yl[0,0] * self.YLQS[0,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YeuS[1,mif1] * self.yl[0,1] * self.YLQS[0,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YeuS[2,mif1] * self.yl[0,2] * self.YLQS[0,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YeuS[0,mif1] * self.yl[0,0] * self.YLQS[0,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YeuS[1,mif1] * self.yl[0,1] * self.YLQS[0,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YeuS[2,mif1] * self.yl[0,2] * self.YLQS[0,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YeuS[0,mif1] * self.yl[0,0] * self.YLQS[0,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YeuS[1,mif1] * self.yl[0,1] * self.YLQS[0,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YeuS[2,mif1] * self.yl[0,2] * self.YLQS[0,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YeuS[0,mif1] * self.yl[1,0] * self.YLQS[1,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YeuS[1,mif1] * self.yl[1,1] * self.YLQS[1,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YeuS[2,mif1] * self.yl[1,2] * self.YLQS[1,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YeuS[0,mif1] * self.yl[1,0] * self.YLQS[1,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YeuS[1,mif1] * self.yl[1,1] * self.YLQS[1,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YeuS[2,mif1] * self.yl[1,2] * self.YLQS[1,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YeuS[0,mif1] * self.yl[1,0] * self.YLQS[1,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YeuS[1,mif1] * self.yl[1,1] * self.YLQS[1,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YeuS[2,mif1] * self.yl[1,2] * self.YLQS[1,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YeuS[0,mif1] * self.yl[2,0] * self.YLQS[2,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YeuS[1,mif1] * self.yl[2,1] * self.YLQS[2,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YeuS[2,mif1] * self.yl[2,2] * self.YLQS[2,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YeuS[0,mif1] * self.yl[2,0] * self.YLQS[2,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YeuS[1,mif1] * self.yl[2,1] * self.YLQS[2,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YeuS[2,mif1] * self.yl[2,2] * self.YLQS[2,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YeuS[0,mif1] * self.yl[2,0] * self.YLQS[2,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YeuS[1,mif1] * self.yl[2,1] * self.YLQS[2,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YeuS[2,mif1] * self.yl[2,2] * self.YLQS[2,2] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YLQS[0,0] * self.YLQSbar[0,0] * self.yubar[0,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YLQS[0,1] * self.YLQSbar[0,0] * self.yubar[0,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YLQS[0,2] * self.YLQSbar[0,0] * self.yubar[0,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YLQS[1,0] * self.YLQSbar[1,0] * self.yubar[0,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YLQS[1,1] * self.YLQSbar[1,0] * self.yubar[0,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YLQS[1,2] * self.YLQSbar[1,0] * self.yubar[0,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YLQS[2,0] * self.YLQSbar[2,0] * self.yubar[0,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YLQS[2,1] * self.YLQSbar[2,0] * self.yubar[0,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YLQS[2,2] * self.YLQSbar[2,0] * self.yubar[0,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YLQS[0,0] * self.YLQSbar[0,1] * self.yubar[1,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YLQS[0,1] * self.YLQSbar[0,1] * self.yubar[1,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YLQS[0,2] * self.YLQSbar[0,1] * self.yubar[1,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YLQS[1,0] * self.YLQSbar[1,1] * self.yubar[1,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YLQS[1,1] * self.YLQSbar[1,1] * self.yubar[1,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YLQS[1,2] * self.YLQSbar[1,1] * self.yubar[1,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YLQS[2,0] * self.YLQSbar[2,1] * self.yubar[1,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YLQS[2,1] * self.YLQSbar[2,1] * self.yubar[1,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YLQS[2,2] * self.YLQSbar[2,1] * self.yubar[1,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YLQS[0,0] * self.YLQSbar[0,2] * self.yubar[2,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YLQS[0,1] * self.YLQSbar[0,2] * self.yubar[2,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YLQS[0,2] * self.YLQSbar[0,2] * self.yubar[2,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YLQS[1,0] * self.YLQSbar[1,2] * self.yubar[2,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YLQS[1,1] * self.YLQSbar[1,2] * self.yubar[2,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YLQS[1,2] * self.YLQSbar[1,2] * self.yubar[2,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.YLQS[2,0] * self.YLQSbar[2,2] * self.yubar[2,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.YLQS[2,1] * self.YLQSbar[2,2] * self.yubar[2,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.YLQS[2,2] * self.YLQSbar[2,2] * self.yubar[2,mif1])

    def alphaOHl1(self, mif1,mif2):
        return (1/5760 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,0] * self.yl[mif1,0] * self.ylbar[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,1] * self.yl[mif1,0] * self.ylbar[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,2] * self.yl[mif1,0] * self.ylbar[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[0,0] * self.yl[mif1,1] * self.ylbar[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[0,1] * self.yl[mif1,1] * self.ylbar[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[0,2] * self.yl[mif1,1] * self.ylbar[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[0,0] * self.yl[mif1,2] * self.ylbar[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[0,1] * self.yl[mif1,2] * self.ylbar[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[0,2] * self.yl[mif1,2] * self.ylbar[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[1,0] * self.yl[mif1,0] * self.ylbar[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[1,1] * self.yl[mif1,0] * self.ylbar[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[1,2] * self.yl[mif1,0] * self.ylbar[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,0] * self.yl[mif1,1] * self.ylbar[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,1] * self.yl[mif1,1] * self.ylbar[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,2] * self.yl[mif1,1] * self.ylbar[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[1,0] * self.yl[mif1,2] * self.ylbar[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[1,1] * self.yl[mif1,2] * self.ylbar[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[1,2] * self.yl[mif1,2] * self.ylbar[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[2,0] * self.yl[mif1,0] * self.ylbar[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[2,1] * self.yl[mif1,0] * self.ylbar[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[2,2] * self.yl[mif1,0] * self.ylbar[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[2,0] * self.yl[mif1,1] * self.ylbar[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[2,1] * self.yl[mif1,1] * self.ylbar[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[2,2] * self.yl[mif1,1] * self.ylbar[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,0] * self.yl[mif1,2] * self.ylbar[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,1] * self.yl[mif1,2] * self.ylbar[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,2] * self.yl[mif1,2] * self.ylbar[mif2,2] + 1/768 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + 1/256 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + 1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -1/192 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[0,0] * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[0,1] * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[0,2] * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[0,0] * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[0,1] * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[0,2] * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[1,0] * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[1,1] * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[1,2] * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] + 1/768 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + 1/256 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + 1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -1/192 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,2] * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[1,0] * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[1,1] * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[1,2] * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[2,0] * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[2,1] * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[2,2] * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[2,0] * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[2,1] * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[2,2] * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] + 1/768 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + 1/256 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + 1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -1/192 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,1] * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,2] * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[mif1,0] * self.YLQS[mif2,0] * self.yu[0,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[mif1,1] * self.YLQS[mif2,0] * self.yu[0,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[mif1,2] * self.YLQS[mif2,0] * self.yu[0,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[mif1,0] * self.YLQS[mif2,0] * self.yu[0,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[mif1,1] * self.YLQS[mif2,0] * self.yu[0,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[mif1,2] * self.YLQS[mif2,0] * self.yu[0,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[mif1,0] * self.YLQS[mif2,0] * self.yu[0,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[mif1,1] * self.YLQS[mif2,0] * self.yu[0,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[mif1,2] * self.YLQS[mif2,0] * self.yu[0,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[mif1,0] * self.YLQS[mif2,1] * self.yu[1,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[mif1,1] * self.YLQS[mif2,1] * self.yu[1,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[mif1,2] * self.YLQS[mif2,1] * self.yu[1,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[mif1,0] * self.YLQS[mif2,1] * self.yu[1,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[mif1,1] * self.YLQS[mif2,1] * self.yu[1,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[mif1,2] * self.YLQS[mif2,1] * self.yu[1,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[mif1,0] * self.YLQS[mif2,1] * self.yu[1,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[mif1,1] * self.YLQS[mif2,1] * self.yu[1,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[mif1,2] * self.YLQS[mif2,1] * self.yu[1,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[mif1,0] * self.YLQS[mif2,2] * self.yu[2,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[mif1,1] * self.YLQS[mif2,2] * self.yu[2,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[mif1,2] * self.YLQS[mif2,2] * self.yu[2,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[mif1,0] * self.YLQS[mif2,2] * self.yu[2,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[mif1,1] * self.YLQS[mif2,2] * self.yu[2,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[mif1,2] * self.YLQS[mif2,2] * self.yu[2,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[mif1,0] * self.YLQS[mif2,2] * self.yu[2,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[mif1,1] * self.YLQS[mif2,2] * self.yu[2,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[mif1,2] * self.YLQS[mif2,2] * self.yu[2,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[mif2,0] * self.YLQSbar[mif1,0] * self.yubar[0,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[mif2,1] * self.YLQSbar[mif1,0] * self.yubar[0,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[mif2,2] * self.YLQSbar[mif1,0] * self.yubar[0,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] * self.yu[0,0] * self.yubar[0,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] * self.yu[0,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] * self.yu[0,0] * self.yubar[0,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] * self.yu[1,0] * self.yubar[0,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] * self.yu[1,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] * self.yu[1,0] * self.yubar[0,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] * self.yu[2,0] * self.yubar[0,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] * self.yu[2,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] * self.yu[2,0] * self.yubar[0,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[mif2,0] * self.YLQSbar[mif1,0] * self.yubar[0,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[mif2,1] * self.YLQSbar[mif1,0] * self.yubar[0,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[mif2,2] * self.YLQSbar[mif1,0] * self.yubar[0,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] * self.yu[0,1] * self.yubar[0,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] * self.yu[0,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] * self.yu[0,1] * self.yubar[0,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] * self.yu[1,1] * self.yubar[0,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] * self.yu[1,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] * self.yu[1,1] * self.yubar[0,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] * self.yu[2,1] * self.yubar[0,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] * self.yu[2,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] * self.yu[2,1] * self.yubar[0,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[mif2,0] * self.YLQSbar[mif1,0] * self.yubar[0,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[mif2,1] * self.YLQSbar[mif1,0] * self.yubar[0,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[mif2,2] * self.YLQSbar[mif1,0] * self.yubar[0,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] * self.yu[0,2] * self.yubar[0,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] * self.yu[0,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] * self.yu[0,2] * self.yubar[0,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] * self.yu[1,2] * self.yubar[0,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] * self.yu[1,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] * self.yu[1,2] * self.yubar[0,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] * self.yu[2,2] * self.yubar[0,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] * self.yu[2,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] * self.yu[2,2] * self.yubar[0,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[mif2,0] * self.YLQSbar[mif1,1] * self.yubar[1,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[mif2,1] * self.YLQSbar[mif1,1] * self.yubar[1,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[mif2,2] * self.YLQSbar[mif1,1] * self.yubar[1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] * self.yu[0,0] * self.yubar[1,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] * self.yu[0,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] * self.yu[0,0] * self.yubar[1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] * self.yu[1,0] * self.yubar[1,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] * self.yu[1,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] * self.yu[1,0] * self.yubar[1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] * self.yu[2,0] * self.yubar[1,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] * self.yu[2,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] * self.yu[2,0] * self.yubar[1,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[mif2,0] * self.YLQSbar[mif1,1] * self.yubar[1,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[mif2,1] * self.YLQSbar[mif1,1] * self.yubar[1,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[mif2,2] * self.YLQSbar[mif1,1] * self.yubar[1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] * self.yu[0,1] * self.yubar[1,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] * self.yu[0,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] * self.yu[0,1] * self.yubar[1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] * self.yu[1,1] * self.yubar[1,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] * self.yu[1,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] * self.yu[1,1] * self.yubar[1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] * self.yu[2,1] * self.yubar[1,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] * self.yu[2,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] * self.yu[2,1] * self.yubar[1,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[mif2,0] * self.YLQSbar[mif1,1] * self.yubar[1,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[mif2,1] * self.YLQSbar[mif1,1] * self.yubar[1,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[mif2,2] * self.YLQSbar[mif1,1] * self.yubar[1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] * self.yu[0,2] * self.yubar[1,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] * self.yu[0,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] * self.yu[0,2] * self.yubar[1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] * self.yu[1,2] * self.yubar[1,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] * self.yu[1,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] * self.yu[1,2] * self.yubar[1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] * self.yu[2,2] * self.yubar[1,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] * self.yu[2,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] * self.yu[2,2] * self.yubar[1,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[mif2,0] * self.YLQSbar[mif1,2] * self.yubar[2,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[mif2,1] * self.YLQSbar[mif1,2] * self.yubar[2,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[mif2,2] * self.YLQSbar[mif1,2] * self.yubar[2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] * self.yu[0,0] * self.yubar[2,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] * self.yu[0,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] * self.yu[0,0] * self.yubar[2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] * self.yu[1,0] * self.yubar[2,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] * self.yu[1,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] * self.yu[1,0] * self.yubar[2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] * self.yu[2,0] * self.yubar[2,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] * self.yu[2,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] * self.yu[2,0] * self.yubar[2,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[mif2,0] * self.YLQSbar[mif1,2] * self.yubar[2,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[mif2,1] * self.YLQSbar[mif1,2] * self.yubar[2,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[mif2,2] * self.YLQSbar[mif1,2] * self.yubar[2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] * self.yu[0,1] * self.yubar[2,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] * self.yu[0,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] * self.yu[0,1] * self.yubar[2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] * self.yu[1,1] * self.yubar[2,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] * self.yu[1,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] * self.yu[1,1] * self.yubar[2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] * self.yu[2,1] * self.yubar[2,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] * self.yu[2,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] * self.yu[2,1] * self.yubar[2,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[mif2,0] * self.YLQSbar[mif1,2] * self.yubar[2,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[mif2,1] * self.YLQSbar[mif1,2] * self.yubar[2,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[mif2,2] * self.YLQSbar[mif1,2] * self.yubar[2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] * self.yu[0,2] * self.yubar[2,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] * self.yu[0,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] * self.yu[0,2] * self.yubar[2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] * self.yu[1,2] * self.yubar[2,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] * self.yu[1,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] * self.yu[1,2] * self.yubar[2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] * self.yu[2,2] * self.yubar[2,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] * self.yu[2,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] * self.yu[2,2] * self.yubar[2,2])

    def alphaOHl3(self, mif1,mif2):
        return (-1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,0] * self.yl[mif1,0] * self.ylbar[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,1] * self.yl[mif1,0] * self.ylbar[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,2] * self.yl[mif1,0] * self.ylbar[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[0,0] * self.yl[mif1,1] * self.ylbar[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[0,1] * self.yl[mif1,1] * self.ylbar[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[0,2] * self.yl[mif1,1] * self.ylbar[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[0,0] * self.yl[mif1,2] * self.ylbar[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[0,1] * self.yl[mif1,2] * self.ylbar[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[0,2] * self.yl[mif1,2] * self.ylbar[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[1,0] * self.yl[mif1,0] * self.ylbar[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[1,1] * self.yl[mif1,0] * self.ylbar[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[1,2] * self.yl[mif1,0] * self.ylbar[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,0] * self.yl[mif1,1] * self.ylbar[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,1] * self.yl[mif1,1] * self.ylbar[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,2] * self.yl[mif1,1] * self.ylbar[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[1,0] * self.yl[mif1,2] * self.ylbar[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[1,1] * self.yl[mif1,2] * self.ylbar[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[1,2] * self.yl[mif1,2] * self.ylbar[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[2,0] * self.yl[mif1,0] * self.ylbar[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[2,1] * self.yl[mif1,0] * self.ylbar[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[2,2] * self.yl[mif1,0] * self.ylbar[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[2,0] * self.yl[mif1,1] * self.ylbar[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[2,1] * self.yl[mif1,1] * self.ylbar[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[2,2] * self.yl[mif1,1] * self.ylbar[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,0] * self.yl[mif1,2] * self.ylbar[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,1] * self.yl[mif1,2] * self.ylbar[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,2] * self.yl[mif1,2] * self.ylbar[mif2,2] + -7/768 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -3/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + 1/64 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[0,0] * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[0,1] * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[0,2] * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[0,0] * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[0,1] * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[0,2] * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[1,0] * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[1,1] * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[1,2] * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] + -7/768 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -3/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + 1/64 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,2] * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[1,0] * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[1,1] * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[1,2] * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[2,0] * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[2,1] * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[2,2] * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[2,0] * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[2,1] * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[2,2] * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] + -7/768 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -3/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + 1/64 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,1] * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,2] * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[mif1,0] * self.YLQS[mif2,0] * self.yu[0,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[mif1,1] * self.YLQS[mif2,0] * self.yu[0,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[mif1,2] * self.YLQS[mif2,0] * self.yu[0,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[mif1,0] * self.YLQS[mif2,0] * self.yu[0,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[mif1,1] * self.YLQS[mif2,0] * self.yu[0,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[mif1,2] * self.YLQS[mif2,0] * self.yu[0,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[mif1,0] * self.YLQS[mif2,0] * self.yu[0,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[mif1,1] * self.YLQS[mif2,0] * self.yu[0,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[mif1,2] * self.YLQS[mif2,0] * self.yu[0,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[mif1,0] * self.YLQS[mif2,1] * self.yu[1,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[mif1,1] * self.YLQS[mif2,1] * self.yu[1,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[mif1,2] * self.YLQS[mif2,1] * self.yu[1,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[mif1,0] * self.YLQS[mif2,1] * self.yu[1,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[mif1,1] * self.YLQS[mif2,1] * self.yu[1,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[mif1,2] * self.YLQS[mif2,1] * self.yu[1,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[mif1,0] * self.YLQS[mif2,1] * self.yu[1,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[mif1,1] * self.YLQS[mif2,1] * self.yu[1,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[mif1,2] * self.YLQS[mif2,1] * self.yu[1,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[mif1,0] * self.YLQS[mif2,2] * self.yu[2,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[mif1,1] * self.YLQS[mif2,2] * self.yu[2,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[mif1,2] * self.YLQS[mif2,2] * self.yu[2,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[mif1,0] * self.YLQS[mif2,2] * self.yu[2,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[mif1,1] * self.YLQS[mif2,2] * self.yu[2,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[mif1,2] * self.YLQS[mif2,2] * self.yu[2,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[mif1,0] * self.YLQS[mif2,2] * self.yu[2,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[mif1,1] * self.YLQS[mif2,2] * self.yu[2,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[mif1,2] * self.YLQS[mif2,2] * self.yu[2,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[mif2,0] * self.YLQSbar[mif1,0] * self.yubar[0,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[mif2,1] * self.YLQSbar[mif1,0] * self.yubar[0,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[mif2,2] * self.YLQSbar[mif1,0] * self.yubar[0,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] * self.yu[0,0] * self.yubar[0,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] * self.yu[0,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] * self.yu[0,0] * self.yubar[0,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] * self.yu[1,0] * self.yubar[0,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] * self.yu[1,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] * self.yu[1,0] * self.yubar[0,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] * self.yu[2,0] * self.yubar[0,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] * self.yu[2,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] * self.yu[2,0] * self.yubar[0,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[mif2,0] * self.YLQSbar[mif1,0] * self.yubar[0,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[mif2,1] * self.YLQSbar[mif1,0] * self.yubar[0,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[mif2,2] * self.YLQSbar[mif1,0] * self.yubar[0,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] * self.yu[0,1] * self.yubar[0,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] * self.yu[0,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] * self.yu[0,1] * self.yubar[0,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] * self.yu[1,1] * self.yubar[0,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] * self.yu[1,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] * self.yu[1,1] * self.yubar[0,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] * self.yu[2,1] * self.yubar[0,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] * self.yu[2,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] * self.yu[2,1] * self.yubar[0,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[mif2,0] * self.YLQSbar[mif1,0] * self.yubar[0,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[mif2,1] * self.YLQSbar[mif1,0] * self.yubar[0,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[mif2,2] * self.YLQSbar[mif1,0] * self.yubar[0,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] * self.yu[0,2] * self.yubar[0,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] * self.yu[0,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] * self.yu[0,2] * self.yubar[0,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] * self.yu[1,2] * self.yubar[0,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] * self.yu[1,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] * self.yu[1,2] * self.yubar[0,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] * self.yu[2,2] * self.yubar[0,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] * self.yu[2,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] * self.yu[2,2] * self.yubar[0,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[mif2,0] * self.YLQSbar[mif1,1] * self.yubar[1,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[mif2,1] * self.YLQSbar[mif1,1] * self.yubar[1,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[mif2,2] * self.YLQSbar[mif1,1] * self.yubar[1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] * self.yu[0,0] * self.yubar[1,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] * self.yu[0,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] * self.yu[0,0] * self.yubar[1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] * self.yu[1,0] * self.yubar[1,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] * self.yu[1,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] * self.yu[1,0] * self.yubar[1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] * self.yu[2,0] * self.yubar[1,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] * self.yu[2,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] * self.yu[2,0] * self.yubar[1,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[mif2,0] * self.YLQSbar[mif1,1] * self.yubar[1,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[mif2,1] * self.YLQSbar[mif1,1] * self.yubar[1,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[mif2,2] * self.YLQSbar[mif1,1] * self.yubar[1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] * self.yu[0,1] * self.yubar[1,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] * self.yu[0,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] * self.yu[0,1] * self.yubar[1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] * self.yu[1,1] * self.yubar[1,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] * self.yu[1,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] * self.yu[1,1] * self.yubar[1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] * self.yu[2,1] * self.yubar[1,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] * self.yu[2,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] * self.yu[2,1] * self.yubar[1,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[mif2,0] * self.YLQSbar[mif1,1] * self.yubar[1,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[mif2,1] * self.YLQSbar[mif1,1] * self.yubar[1,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[mif2,2] * self.YLQSbar[mif1,1] * self.yubar[1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] * self.yu[0,2] * self.yubar[1,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] * self.yu[0,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] * self.yu[0,2] * self.yubar[1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] * self.yu[1,2] * self.yubar[1,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] * self.yu[1,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] * self.yu[1,2] * self.yubar[1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] * self.yu[2,2] * self.yubar[1,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] * self.yu[2,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] * self.yu[2,2] * self.yubar[1,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[mif2,0] * self.YLQSbar[mif1,2] * self.yubar[2,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[mif2,1] * self.YLQSbar[mif1,2] * self.yubar[2,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[mif2,2] * self.YLQSbar[mif1,2] * self.yubar[2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] * self.yu[0,0] * self.yubar[2,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] * self.yu[0,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] * self.yu[0,0] * self.yubar[2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] * self.yu[1,0] * self.yubar[2,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] * self.yu[1,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] * self.yu[1,0] * self.yubar[2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] * self.yu[2,0] * self.yubar[2,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] * self.yu[2,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] * self.yu[2,0] * self.yubar[2,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[mif2,0] * self.YLQSbar[mif1,2] * self.yubar[2,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[mif2,1] * self.YLQSbar[mif1,2] * self.yubar[2,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[mif2,2] * self.YLQSbar[mif1,2] * self.yubar[2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] * self.yu[0,1] * self.yubar[2,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] * self.yu[0,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] * self.yu[0,1] * self.yubar[2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] * self.yu[1,1] * self.yubar[2,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] * self.yu[1,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] * self.yu[1,1] * self.yubar[2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] * self.yu[2,1] * self.yubar[2,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] * self.yu[2,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] * self.yu[2,1] * self.yubar[2,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[mif2,0] * self.YLQSbar[mif1,2] * self.yubar[2,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[mif2,1] * self.YLQSbar[mif1,2] * self.yubar[2,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[mif2,2] * self.YLQSbar[mif1,2] * self.yubar[2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] * self.yu[0,2] * self.yubar[2,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] * self.yu[0,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] * self.yu[0,2] * self.yubar[2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] * self.yu[1,2] * self.yubar[2,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] * self.yu[1,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] * self.yu[1,2] * self.yubar[2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] * self.yu[2,2] * self.yubar[2,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] * self.yu[2,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] * self.yu[2,2] * self.yubar[2,2])

    def alphaOHe(self, mif1,mif2):
        return (1/2880 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.YeuSbar[mif2,0] + 1/64 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.YeuSbar[mif2,0] + 1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.YeuSbar[mif2,0] + -1/48 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,0] * self.YeuSbar[mif2,0] + 1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.YeuSbar[mif2,1] + 1/64 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.YeuSbar[mif2,1] + 1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.YeuSbar[mif2,1] + -1/48 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,1] * self.YeuSbar[mif2,1] + 1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.YeuSbar[mif2,2] + 1/64 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.YeuSbar[mif2,2] + 1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.YeuSbar[mif2,2] + -1/48 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,2] * self.YeuSbar[mif2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.ylbar[0,mif1] * self.YLQS[0,0] * self.YLQSbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.ylbar[0,mif1] * self.YLQS[1,0] * self.YLQSbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.ylbar[0,mif1] * self.YLQS[2,0] * self.YLQSbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.ylbar[0,mif1] * self.YLQS[0,1] * self.YLQSbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.ylbar[0,mif1] * self.YLQS[1,1] * self.YLQSbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.ylbar[0,mif1] * self.YLQS[2,1] * self.YLQSbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.ylbar[0,mif1] * self.YLQS[0,2] * self.YLQSbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.ylbar[0,mif1] * self.YLQS[1,2] * self.YLQSbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.ylbar[0,mif1] * self.YLQS[2,2] * self.YLQSbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.ylbar[1,mif1] * self.YLQS[0,0] * self.YLQSbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.ylbar[1,mif1] * self.YLQS[1,0] * self.YLQSbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.ylbar[1,mif1] * self.YLQS[2,0] * self.YLQSbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.ylbar[1,mif1] * self.YLQS[0,1] * self.YLQSbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.ylbar[1,mif1] * self.YLQS[1,1] * self.YLQSbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.ylbar[1,mif1] * self.YLQS[2,1] * self.YLQSbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.ylbar[1,mif1] * self.YLQS[0,2] * self.YLQSbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.ylbar[1,mif1] * self.YLQS[1,2] * self.YLQSbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.ylbar[1,mif1] * self.YLQS[2,2] * self.YLQSbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.ylbar[2,mif1] * self.YLQS[0,0] * self.YLQSbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.ylbar[2,mif1] * self.YLQS[1,0] * self.YLQSbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.ylbar[2,mif1] * self.YLQS[2,0] * self.YLQSbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.ylbar[2,mif1] * self.YLQS[0,1] * self.YLQSbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.ylbar[2,mif1] * self.YLQS[1,1] * self.YLQSbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.ylbar[2,mif1] * self.YLQS[2,1] * self.YLQSbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.ylbar[2,mif1] * self.YLQS[0,2] * self.YLQSbar[2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.ylbar[2,mif1] * self.YLQS[1,2] * self.YLQSbar[2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.ylbar[2,mif1] * self.YLQS[2,2] * self.YLQSbar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.yl[0,mif2] * self.YLQS[0,0] * self.yu[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.yl[1,mif2] * self.YLQS[1,0] * self.yu[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.yl[2,mif2] * self.YLQS[2,0] * self.yu[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.yl[0,mif2] * self.YLQS[0,0] * self.yu[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.yl[1,mif2] * self.YLQS[1,0] * self.yu[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.yl[2,mif2] * self.YLQS[2,0] * self.yu[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.yl[0,mif2] * self.YLQS[0,0] * self.yu[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.yl[1,mif2] * self.YLQS[1,0] * self.yu[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.yl[2,mif2] * self.YLQS[2,0] * self.yu[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.yl[0,mif2] * self.YLQS[0,1] * self.yu[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.yl[1,mif2] * self.YLQS[1,1] * self.yu[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.yl[2,mif2] * self.YLQS[2,1] * self.yu[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.yl[0,mif2] * self.YLQS[0,1] * self.yu[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.yl[1,mif2] * self.YLQS[1,1] * self.yu[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.yl[2,mif2] * self.YLQS[2,1] * self.yu[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.yl[0,mif2] * self.YLQS[0,1] * self.yu[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.yl[1,mif2] * self.YLQS[1,1] * self.yu[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.yl[2,mif2] * self.YLQS[2,1] * self.yu[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.yl[0,mif2] * self.YLQS[0,2] * self.yu[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.yl[1,mif2] * self.YLQS[1,2] * self.yu[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.yl[2,mif2] * self.YLQS[2,2] * self.yu[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.yl[0,mif2] * self.YLQS[0,2] * self.yu[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.yl[1,mif2] * self.YLQS[1,2] * self.yu[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.yl[2,mif2] * self.YLQS[2,2] * self.yu[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.yl[0,mif2] * self.YLQS[0,2] * self.yu[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.yl[1,mif2] * self.YLQS[1,2] * self.yu[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.yl[2,mif2] * self.YLQS[2,2] * self.yu[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.ylbar[0,mif1] * self.YLQSbar[0,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.ylbar[1,mif1] * self.YLQSbar[1,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.ylbar[2,mif1] * self.YLQSbar[2,0] * self.yubar[0,0] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.YeuSbar[mif2,0] * self.yu[0,0] * self.yubar[0,0] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.YeuSbar[mif2,0] * self.yu[0,0] * self.yubar[0,0] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,0] * self.YeuSbar[mif2,0] * self.yu[0,0] * self.yubar[0,0] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.YeuSbar[mif2,0] * self.yu[0,1] * self.yubar[0,0] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.YeuSbar[mif2,0] * self.yu[0,1] * self.yubar[0,0] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,1] * self.YeuSbar[mif2,0] * self.yu[0,1] * self.yubar[0,0] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.YeuSbar[mif2,0] * self.yu[0,2] * self.yubar[0,0] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.YeuSbar[mif2,0] * self.yu[0,2] * self.yubar[0,0] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,2] * self.YeuSbar[mif2,0] * self.yu[0,2] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.ylbar[0,mif1] * self.YLQSbar[0,0] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.ylbar[1,mif1] * self.YLQSbar[1,0] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.ylbar[2,mif1] * self.YLQSbar[2,0] * self.yubar[0,1] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.YeuSbar[mif2,1] * self.yu[0,0] * self.yubar[0,1] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.YeuSbar[mif2,1] * self.yu[0,0] * self.yubar[0,1] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,0] * self.YeuSbar[mif2,1] * self.yu[0,0] * self.yubar[0,1] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.YeuSbar[mif2,1] * self.yu[0,1] * self.yubar[0,1] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.YeuSbar[mif2,1] * self.yu[0,1] * self.yubar[0,1] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,1] * self.YeuSbar[mif2,1] * self.yu[0,1] * self.yubar[0,1] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.YeuSbar[mif2,1] * self.yu[0,2] * self.yubar[0,1] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.YeuSbar[mif2,1] * self.yu[0,2] * self.yubar[0,1] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,2] * self.YeuSbar[mif2,1] * self.yu[0,2] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.ylbar[0,mif1] * self.YLQSbar[0,0] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.ylbar[1,mif1] * self.YLQSbar[1,0] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.ylbar[2,mif1] * self.YLQSbar[2,0] * self.yubar[0,2] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.YeuSbar[mif2,2] * self.yu[0,0] * self.yubar[0,2] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.YeuSbar[mif2,2] * self.yu[0,0] * self.yubar[0,2] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,0] * self.YeuSbar[mif2,2] * self.yu[0,0] * self.yubar[0,2] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.YeuSbar[mif2,2] * self.yu[0,1] * self.yubar[0,2] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.YeuSbar[mif2,2] * self.yu[0,1] * self.yubar[0,2] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,1] * self.YeuSbar[mif2,2] * self.yu[0,1] * self.yubar[0,2] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.YeuSbar[mif2,2] * self.yu[0,2] * self.yubar[0,2] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.YeuSbar[mif2,2] * self.yu[0,2] * self.yubar[0,2] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,2] * self.YeuSbar[mif2,2] * self.yu[0,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.ylbar[0,mif1] * self.YLQSbar[0,1] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.ylbar[1,mif1] * self.YLQSbar[1,1] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.ylbar[2,mif1] * self.YLQSbar[2,1] * self.yubar[1,0] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.YeuSbar[mif2,0] * self.yu[1,0] * self.yubar[1,0] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.YeuSbar[mif2,0] * self.yu[1,0] * self.yubar[1,0] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,0] * self.YeuSbar[mif2,0] * self.yu[1,0] * self.yubar[1,0] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.YeuSbar[mif2,0] * self.yu[1,1] * self.yubar[1,0] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.YeuSbar[mif2,0] * self.yu[1,1] * self.yubar[1,0] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,1] * self.YeuSbar[mif2,0] * self.yu[1,1] * self.yubar[1,0] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.YeuSbar[mif2,0] * self.yu[1,2] * self.yubar[1,0] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.YeuSbar[mif2,0] * self.yu[1,2] * self.yubar[1,0] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,2] * self.YeuSbar[mif2,0] * self.yu[1,2] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.ylbar[0,mif1] * self.YLQSbar[0,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.ylbar[1,mif1] * self.YLQSbar[1,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.ylbar[2,mif1] * self.YLQSbar[2,1] * self.yubar[1,1] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.YeuSbar[mif2,1] * self.yu[1,0] * self.yubar[1,1] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.YeuSbar[mif2,1] * self.yu[1,0] * self.yubar[1,1] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,0] * self.YeuSbar[mif2,1] * self.yu[1,0] * self.yubar[1,1] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.YeuSbar[mif2,1] * self.yu[1,1] * self.yubar[1,1] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.YeuSbar[mif2,1] * self.yu[1,1] * self.yubar[1,1] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,1] * self.YeuSbar[mif2,1] * self.yu[1,1] * self.yubar[1,1] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.YeuSbar[mif2,1] * self.yu[1,2] * self.yubar[1,1] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.YeuSbar[mif2,1] * self.yu[1,2] * self.yubar[1,1] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,2] * self.YeuSbar[mif2,1] * self.yu[1,2] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.ylbar[0,mif1] * self.YLQSbar[0,1] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.ylbar[1,mif1] * self.YLQSbar[1,1] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.ylbar[2,mif1] * self.YLQSbar[2,1] * self.yubar[1,2] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.YeuSbar[mif2,2] * self.yu[1,0] * self.yubar[1,2] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.YeuSbar[mif2,2] * self.yu[1,0] * self.yubar[1,2] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,0] * self.YeuSbar[mif2,2] * self.yu[1,0] * self.yubar[1,2] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.YeuSbar[mif2,2] * self.yu[1,1] * self.yubar[1,2] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.YeuSbar[mif2,2] * self.yu[1,1] * self.yubar[1,2] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,1] * self.YeuSbar[mif2,2] * self.yu[1,1] * self.yubar[1,2] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.YeuSbar[mif2,2] * self.yu[1,2] * self.yubar[1,2] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.YeuSbar[mif2,2] * self.yu[1,2] * self.yubar[1,2] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,2] * self.YeuSbar[mif2,2] * self.yu[1,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.ylbar[0,mif1] * self.YLQSbar[0,2] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.ylbar[1,mif1] * self.YLQSbar[1,2] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.ylbar[2,mif1] * self.YLQSbar[2,2] * self.yubar[2,0] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.YeuSbar[mif2,0] * self.yu[2,0] * self.yubar[2,0] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.YeuSbar[mif2,0] * self.yu[2,0] * self.yubar[2,0] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,0] * self.YeuSbar[mif2,0] * self.yu[2,0] * self.yubar[2,0] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.YeuSbar[mif2,0] * self.yu[2,1] * self.yubar[2,0] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.YeuSbar[mif2,0] * self.yu[2,1] * self.yubar[2,0] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,1] * self.YeuSbar[mif2,0] * self.yu[2,1] * self.yubar[2,0] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.YeuSbar[mif2,0] * self.yu[2,2] * self.yubar[2,0] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.YeuSbar[mif2,0] * self.yu[2,2] * self.yubar[2,0] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,2] * self.YeuSbar[mif2,0] * self.yu[2,2] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.ylbar[0,mif1] * self.YLQSbar[0,2] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.ylbar[1,mif1] * self.YLQSbar[1,2] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.ylbar[2,mif1] * self.YLQSbar[2,2] * self.yubar[2,1] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.YeuSbar[mif2,1] * self.yu[2,0] * self.yubar[2,1] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.YeuSbar[mif2,1] * self.yu[2,0] * self.yubar[2,1] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,0] * self.YeuSbar[mif2,1] * self.yu[2,0] * self.yubar[2,1] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.YeuSbar[mif2,1] * self.yu[2,1] * self.yubar[2,1] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.YeuSbar[mif2,1] * self.yu[2,1] * self.yubar[2,1] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,1] * self.YeuSbar[mif2,1] * self.yu[2,1] * self.yubar[2,1] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.YeuSbar[mif2,1] * self.yu[2,2] * self.yubar[2,1] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.YeuSbar[mif2,1] * self.yu[2,2] * self.yubar[2,1] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,2] * self.YeuSbar[mif2,1] * self.yu[2,2] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.ylbar[0,mif1] * self.YLQSbar[0,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.ylbar[1,mif1] * self.YLQSbar[1,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.ylbar[2,mif1] * self.YLQSbar[2,2] * self.yubar[2,2] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.YeuSbar[mif2,2] * self.yu[2,0] * self.yubar[2,2] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.YeuSbar[mif2,2] * self.yu[2,0] * self.yubar[2,2] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,0] * self.YeuSbar[mif2,2] * self.yu[2,0] * self.yubar[2,2] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.YeuSbar[mif2,2] * self.yu[2,1] * self.yubar[2,2] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.YeuSbar[mif2,2] * self.yu[2,1] * self.yubar[2,2] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,1] * self.YeuSbar[mif2,2] * self.yu[2,1] * self.yubar[2,2] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.YeuSbar[mif2,2] * self.yu[2,2] * self.yubar[2,2] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.YeuSbar[mif2,2] * self.yu[2,2] * self.yubar[2,2] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,2] * self.YeuSbar[mif2,2] * self.yu[2,2] * self.yubar[2,2])

    def alphaOuH(self, mif1,mif2):
        return (3/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[0,0] * self.YLQSbar[0,mif1] + 1/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[0,0] * self.YLQSbar[0,mif1] + -1/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.ylbar[0,0] * self.YLQSbar[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[0,0] * (self.ylbar[0,0])**(2) * self.YLQSbar[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[0,0] * (self.ylbar[0,0])**(2) * self.YLQSbar[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.yl[0,0] * (self.ylbar[0,0])**(2) * self.YLQSbar[0,mif1] + 3/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,mif1] + 1/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,mif1] + -1/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[0,1] * self.YLQSbar[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[0,1] * self.YLQSbar[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[0,1] * self.YLQSbar[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,1] * self.YLQSbar[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,1] * self.YLQSbar[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,1] * self.YLQSbar[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[0,1] * (self.ylbar[0,1])**(2) * self.YLQSbar[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[0,1] * (self.ylbar[0,1])**(2) * self.YLQSbar[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.yl[0,1] * (self.ylbar[0,1])**(2) * self.YLQSbar[0,mif1] + 3/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[0,2] * self.YLQSbar[0,mif1] + 1/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[0,2] * self.YLQSbar[0,mif1] + -1/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.ylbar[0,2] * self.YLQSbar[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[0,2] * self.YLQSbar[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[0,2] * self.YLQSbar[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[0,2] * self.YLQSbar[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] * self.YLQSbar[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] * self.YLQSbar[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] * self.YLQSbar[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[0,2] * self.YLQSbar[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[0,2] * self.YLQSbar[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[0,2] * self.YLQSbar[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] * self.YLQSbar[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] * self.YLQSbar[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] * self.YLQSbar[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[0,2] * (self.ylbar[0,2])**(2) * self.YLQSbar[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[0,2] * (self.ylbar[0,2])**(2) * self.YLQSbar[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.yl[0,2] * (self.ylbar[0,2])**(2) * self.YLQSbar[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] * self.YLQSbar[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] * self.YLQSbar[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] * self.YLQSbar[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] * self.YLQSbar[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] * self.YLQSbar[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] * self.YLQSbar[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] * self.YLQSbar[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] * self.YLQSbar[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] * self.YLQSbar[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] * self.YLQSbar[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] * self.YLQSbar[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] * self.YLQSbar[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] * self.YLQSbar[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] * self.YLQSbar[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] * self.YLQSbar[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] * self.YLQSbar[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] * self.YLQSbar[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] * self.YLQSbar[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] * self.YLQSbar[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] * self.YLQSbar[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] * self.YLQSbar[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] * self.YLQSbar[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] * self.YLQSbar[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] * self.YLQSbar[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] * self.YLQSbar[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] * self.YLQSbar[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] * self.YLQSbar[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] * self.YLQSbar[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] * self.YLQSbar[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] * self.YLQSbar[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] * self.YLQSbar[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] * self.YLQSbar[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] * self.YLQSbar[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] * self.YLQSbar[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] * self.YLQSbar[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] * self.YLQSbar[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] * self.YLQSbar[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] * self.YLQSbar[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] * self.YLQSbar[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] * self.YLQSbar[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] * self.YLQSbar[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] * self.YLQSbar[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] * self.YLQSbar[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] * self.YLQSbar[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] * self.YLQSbar[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] * self.YLQSbar[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] * self.YLQSbar[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] * self.YLQSbar[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] * self.YLQSbar[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] * self.YLQSbar[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] * self.YLQSbar[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] * self.YLQSbar[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] * self.YLQSbar[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] * self.YLQSbar[0,mif1] + 3/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[1,0] * self.YLQSbar[1,mif1] + 1/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[1,0] * self.YLQSbar[1,mif1] + -1/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.ylbar[1,0] * self.YLQSbar[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[1,0] * self.YLQSbar[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[1,0] * self.YLQSbar[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[1,0] * self.YLQSbar[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[0,0] * self.ylbar[0,1] * self.ylbar[1,0] * self.YLQSbar[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[0,0] * self.ylbar[0,1] * self.ylbar[1,0] * self.YLQSbar[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.yl[0,0] * self.ylbar[0,1] * self.ylbar[1,0] * self.YLQSbar[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[0,0] * self.ylbar[0,2] * self.ylbar[1,0] * self.YLQSbar[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[0,0] * self.ylbar[0,2] * self.ylbar[1,0] * self.YLQSbar[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.yl[0,0] * self.ylbar[0,2] * self.ylbar[1,0] * self.YLQSbar[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[1,0] * (self.ylbar[1,0])**(2) * self.YLQSbar[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[1,0] * (self.ylbar[1,0])**(2) * self.YLQSbar[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.yl[1,0] * (self.ylbar[1,0])**(2) * self.YLQSbar[1,mif1] + 3/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + 1/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + -1/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[0,1] * self.ylbar[0,2] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[0,1] * self.ylbar[0,2] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.yl[0,1] * self.ylbar[0,2] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[1,1] * (self.ylbar[1,1])**(2) * self.YLQSbar[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[1,1] * (self.ylbar[1,1])**(2) * self.YLQSbar[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.yl[1,1] * (self.ylbar[1,1])**(2) * self.YLQSbar[1,mif1] + 3/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + 1/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + -1/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[1,2] * (self.ylbar[1,2])**(2) * self.YLQSbar[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[1,2] * (self.ylbar[1,2])**(2) * self.YLQSbar[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.yl[1,2] * (self.ylbar[1,2])**(2) * self.YLQSbar[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] * self.YLQSbar[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] * self.YLQSbar[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] * self.YLQSbar[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] * self.YLQSbar[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] * self.YLQSbar[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] * self.YLQSbar[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] * self.YLQSbar[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] * self.YLQSbar[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] * self.YLQSbar[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] * self.YLQSbar[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] * self.YLQSbar[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] * self.YLQSbar[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] * self.YLQSbar[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] * self.YLQSbar[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] * self.YLQSbar[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] * self.YLQSbar[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] * self.YLQSbar[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] * self.YLQSbar[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] * self.YLQSbar[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] * self.YLQSbar[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] * self.YLQSbar[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] * self.YLQSbar[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] * self.YLQSbar[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] * self.YLQSbar[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] * self.YLQSbar[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] * self.YLQSbar[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] * self.YLQSbar[1,mif1] + 3/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + 1/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + -1/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[0,0] * self.ylbar[0,1] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[0,0] * self.ylbar[0,1] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.yl[0,0] * self.ylbar[0,1] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[0,0] * self.ylbar[0,2] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[0,0] * self.ylbar[0,2] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.yl[0,0] * self.ylbar[0,2] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[1,0] * self.ylbar[1,1] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[1,0] * self.ylbar[1,1] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.yl[1,0] * self.ylbar[1,1] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[1,0] * self.ylbar[1,2] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[1,0] * self.ylbar[1,2] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.yl[1,0] * self.ylbar[1,2] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[2,0] * (self.ylbar[2,0])**(2) * self.YLQSbar[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[2,0] * (self.ylbar[2,0])**(2) * self.YLQSbar[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.yl[2,0] * (self.ylbar[2,0])**(2) * self.YLQSbar[2,mif1] + 3/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + 1/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + -1/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[0,1] * self.ylbar[0,2] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[0,1] * self.ylbar[0,2] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.yl[0,1] * self.ylbar[0,2] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[1,1] * self.ylbar[1,2] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[1,1] * self.ylbar[1,2] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.yl[1,1] * self.ylbar[1,2] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[2,1] * (self.ylbar[2,1])**(2) * self.YLQSbar[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[2,1] * (self.ylbar[2,1])**(2) * self.YLQSbar[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.yl[2,1] * (self.ylbar[2,1])**(2) * self.YLQSbar[2,mif1] + 3/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + 1/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + -1/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[1,2] * self.ylbar[1,2] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[1,2] * self.ylbar[1,2] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.yl[1,2] * self.ylbar[1,2] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif2] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[2,1] * self.ylbar[2,1] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[2,1] * self.ylbar[2,1] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.yl[2,1] * self.ylbar[2,1] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif2] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[2,2] * (self.ylbar[2,2])**(2) * self.YLQSbar[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.yl[2,2] * (self.ylbar[2,2])**(2) * self.YLQSbar[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif2] * self.yl[2,2] * (self.ylbar[2,2])**(2) * self.YLQSbar[2,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[0,0] * self.YLQS[0,0] * self.YLQSbar[0,mif1] * self.yu[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[0,1] * self.YLQS[0,0] * self.YLQSbar[0,mif1] * self.yu[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[0,2] * self.YLQS[0,0] * self.YLQSbar[0,mif1] * self.yu[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[0,0] * self.YLQS[1,0] * self.YLQSbar[0,mif1] * self.yu[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[0,1] * self.YLQS[1,0] * self.YLQSbar[0,mif1] * self.yu[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[0,2] * self.YLQS[1,0] * self.YLQSbar[0,mif1] * self.yu[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[0,0] * self.YLQS[2,0] * self.YLQSbar[0,mif1] * self.yu[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[0,1] * self.YLQS[2,0] * self.YLQSbar[0,mif1] * self.yu[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[0,2] * self.YLQS[2,0] * self.YLQSbar[0,mif1] * self.yu[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[1,0] * self.YLQS[0,0] * self.YLQSbar[1,mif1] * self.yu[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[1,1] * self.YLQS[0,0] * self.YLQSbar[1,mif1] * self.yu[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[1,2] * self.YLQS[0,0] * self.YLQSbar[1,mif1] * self.yu[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[1,0] * self.YLQS[1,0] * self.YLQSbar[1,mif1] * self.yu[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[1,1] * self.YLQS[1,0] * self.YLQSbar[1,mif1] * self.yu[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[1,2] * self.YLQS[1,0] * self.YLQSbar[1,mif1] * self.yu[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[1,0] * self.YLQS[2,0] * self.YLQSbar[1,mif1] * self.yu[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[1,1] * self.YLQS[2,0] * self.YLQSbar[1,mif1] * self.yu[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[1,2] * self.YLQS[2,0] * self.YLQSbar[1,mif1] * self.yu[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[2,0] * self.YLQS[0,0] * self.YLQSbar[2,mif1] * self.yu[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[2,1] * self.YLQS[0,0] * self.YLQSbar[2,mif1] * self.yu[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[2,2] * self.YLQS[0,0] * self.YLQSbar[2,mif1] * self.yu[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[2,0] * self.YLQS[1,0] * self.YLQSbar[2,mif1] * self.yu[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[2,1] * self.YLQS[1,0] * self.YLQSbar[2,mif1] * self.yu[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[2,2] * self.YLQS[1,0] * self.YLQSbar[2,mif1] * self.yu[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[2,0] * self.YLQS[2,0] * self.YLQSbar[2,mif1] * self.yu[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[2,1] * self.YLQS[2,0] * self.YLQSbar[2,mif1] * self.yu[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[2,2] * self.YLQS[2,0] * self.YLQSbar[2,mif1] * self.yu[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[0,0] * self.YLQS[0,1] * self.YLQSbar[0,mif1] * self.yu[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[0,1] * self.YLQS[0,1] * self.YLQSbar[0,mif1] * self.yu[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[0,2] * self.YLQS[0,1] * self.YLQSbar[0,mif1] * self.yu[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[0,0] * self.YLQS[1,1] * self.YLQSbar[0,mif1] * self.yu[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[0,1] * self.YLQS[1,1] * self.YLQSbar[0,mif1] * self.yu[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[0,2] * self.YLQS[1,1] * self.YLQSbar[0,mif1] * self.yu[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[0,0] * self.YLQS[2,1] * self.YLQSbar[0,mif1] * self.yu[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[0,1] * self.YLQS[2,1] * self.YLQSbar[0,mif1] * self.yu[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[0,2] * self.YLQS[2,1] * self.YLQSbar[0,mif1] * self.yu[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[1,0] * self.YLQS[0,1] * self.YLQSbar[1,mif1] * self.yu[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[1,1] * self.YLQS[0,1] * self.YLQSbar[1,mif1] * self.yu[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[1,2] * self.YLQS[0,1] * self.YLQSbar[1,mif1] * self.yu[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[1,0] * self.YLQS[1,1] * self.YLQSbar[1,mif1] * self.yu[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[1,1] * self.YLQS[1,1] * self.YLQSbar[1,mif1] * self.yu[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[1,2] * self.YLQS[1,1] * self.YLQSbar[1,mif1] * self.yu[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[1,0] * self.YLQS[2,1] * self.YLQSbar[1,mif1] * self.yu[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[1,1] * self.YLQS[2,1] * self.YLQSbar[1,mif1] * self.yu[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[1,2] * self.YLQS[2,1] * self.YLQSbar[1,mif1] * self.yu[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[2,0] * self.YLQS[0,1] * self.YLQSbar[2,mif1] * self.yu[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[2,1] * self.YLQS[0,1] * self.YLQSbar[2,mif1] * self.yu[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[2,2] * self.YLQS[0,1] * self.YLQSbar[2,mif1] * self.yu[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[2,0] * self.YLQS[1,1] * self.YLQSbar[2,mif1] * self.yu[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[2,1] * self.YLQS[1,1] * self.YLQSbar[2,mif1] * self.yu[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[2,2] * self.YLQS[1,1] * self.YLQSbar[2,mif1] * self.yu[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[2,0] * self.YLQS[2,1] * self.YLQSbar[2,mif1] * self.yu[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[2,1] * self.YLQS[2,1] * self.YLQSbar[2,mif1] * self.yu[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[2,2] * self.YLQS[2,1] * self.YLQSbar[2,mif1] * self.yu[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[0,0] * self.YLQS[0,2] * self.YLQSbar[0,mif1] * self.yu[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[0,1] * self.YLQS[0,2] * self.YLQSbar[0,mif1] * self.yu[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[0,2] * self.YLQS[0,2] * self.YLQSbar[0,mif1] * self.yu[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[0,0] * self.YLQS[1,2] * self.YLQSbar[0,mif1] * self.yu[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[0,1] * self.YLQS[1,2] * self.YLQSbar[0,mif1] * self.yu[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[0,2] * self.YLQS[1,2] * self.YLQSbar[0,mif1] * self.yu[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[0,0] * self.YLQS[2,2] * self.YLQSbar[0,mif1] * self.yu[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[0,1] * self.YLQS[2,2] * self.YLQSbar[0,mif1] * self.yu[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[0,2] * self.YLQS[2,2] * self.YLQSbar[0,mif1] * self.yu[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[1,0] * self.YLQS[0,2] * self.YLQSbar[1,mif1] * self.yu[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[1,1] * self.YLQS[0,2] * self.YLQSbar[1,mif1] * self.yu[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[1,2] * self.YLQS[0,2] * self.YLQSbar[1,mif1] * self.yu[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[1,0] * self.YLQS[1,2] * self.YLQSbar[1,mif1] * self.yu[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[1,1] * self.YLQS[1,2] * self.YLQSbar[1,mif1] * self.yu[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[1,2] * self.YLQS[1,2] * self.YLQSbar[1,mif1] * self.yu[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[1,0] * self.YLQS[2,2] * self.YLQSbar[1,mif1] * self.yu[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[1,1] * self.YLQS[2,2] * self.YLQSbar[1,mif1] * self.yu[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[1,2] * self.YLQS[2,2] * self.YLQSbar[1,mif1] * self.yu[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[2,0] * self.YLQS[0,2] * self.YLQSbar[2,mif1] * self.yu[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[2,1] * self.YLQS[0,2] * self.YLQSbar[2,mif1] * self.yu[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[2,2] * self.YLQS[0,2] * self.YLQSbar[2,mif1] * self.yu[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[2,0] * self.YLQS[1,2] * self.YLQSbar[2,mif1] * self.yu[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[2,1] * self.YLQS[1,2] * self.YLQSbar[2,mif1] * self.yu[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[2,2] * self.YLQS[1,2] * self.YLQSbar[2,mif1] * self.yu[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[2,0] * self.YLQS[2,2] * self.YLQSbar[2,mif1] * self.yu[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[2,1] * self.YLQS[2,2] * self.YLQSbar[2,mif1] * self.yu[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[2,2] * self.YLQS[2,2] * self.YLQSbar[2,mif1] * self.yu[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,mif2] * self.yl[0,0] * self.ylbar[0,0] * self.yu[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[0,mif2] * self.yl[0,1] * self.ylbar[0,0] * self.yu[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[0,mif2] * self.yl[0,2] * self.ylbar[0,0] * self.yu[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[1,mif2] * self.yl[0,0] * self.ylbar[0,1] * self.yu[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,mif2] * self.yl[0,1] * self.ylbar[0,1] * self.yu[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[1,mif2] * self.yl[0,2] * self.ylbar[0,1] * self.yu[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[2,mif2] * self.yl[0,0] * self.ylbar[0,2] * self.yu[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[2,mif2] * self.yl[0,1] * self.ylbar[0,2] * self.yu[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,mif2] * self.yl[0,2] * self.ylbar[0,2] * self.yu[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,mif2] * self.yl[1,0] * self.ylbar[1,0] * self.yu[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[0,mif2] * self.yl[1,1] * self.ylbar[1,0] * self.yu[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[0,mif2] * self.yl[1,2] * self.ylbar[1,0] * self.yu[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[1,mif2] * self.yl[1,0] * self.ylbar[1,1] * self.yu[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,mif2] * self.yl[1,1] * self.ylbar[1,1] * self.yu[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[1,mif2] * self.yl[1,2] * self.ylbar[1,1] * self.yu[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[2,mif2] * self.yl[1,0] * self.ylbar[1,2] * self.yu[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[2,mif2] * self.yl[1,1] * self.ylbar[1,2] * self.yu[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,mif2] * self.yl[1,2] * self.ylbar[1,2] * self.yu[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,mif2] * self.yl[2,0] * self.ylbar[2,0] * self.yu[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[0,mif2] * self.yl[2,1] * self.ylbar[2,0] * self.yu[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[0,mif2] * self.yl[2,2] * self.ylbar[2,0] * self.yu[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[1,mif2] * self.yl[2,0] * self.ylbar[2,1] * self.yu[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,mif2] * self.yl[2,1] * self.ylbar[2,1] * self.yu[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[1,mif2] * self.yl[2,2] * self.ylbar[2,1] * self.yu[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[2,mif2] * self.yl[2,0] * self.ylbar[2,2] * self.yu[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[2,mif2] * self.yl[2,1] * self.ylbar[2,2] * self.yu[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,mif2] * self.yl[2,2] * self.ylbar[2,2] * self.yu[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,mif2] * self.yl[0,0] * self.ylbar[0,0] * self.yu[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[0,mif2] * self.yl[0,1] * self.ylbar[0,0] * self.yu[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[0,mif2] * self.yl[0,2] * self.ylbar[0,0] * self.yu[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[1,mif2] * self.yl[0,0] * self.ylbar[0,1] * self.yu[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,mif2] * self.yl[0,1] * self.ylbar[0,1] * self.yu[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[1,mif2] * self.yl[0,2] * self.ylbar[0,1] * self.yu[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[2,mif2] * self.yl[0,0] * self.ylbar[0,2] * self.yu[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[2,mif2] * self.yl[0,1] * self.ylbar[0,2] * self.yu[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,mif2] * self.yl[0,2] * self.ylbar[0,2] * self.yu[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,mif2] * self.yl[1,0] * self.ylbar[1,0] * self.yu[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[0,mif2] * self.yl[1,1] * self.ylbar[1,0] * self.yu[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[0,mif2] * self.yl[1,2] * self.ylbar[1,0] * self.yu[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[1,mif2] * self.yl[1,0] * self.ylbar[1,1] * self.yu[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,mif2] * self.yl[1,1] * self.ylbar[1,1] * self.yu[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[1,mif2] * self.yl[1,2] * self.ylbar[1,1] * self.yu[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[2,mif2] * self.yl[1,0] * self.ylbar[1,2] * self.yu[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[2,mif2] * self.yl[1,1] * self.ylbar[1,2] * self.yu[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,mif2] * self.yl[1,2] * self.ylbar[1,2] * self.yu[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,mif2] * self.yl[2,0] * self.ylbar[2,0] * self.yu[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[0,mif2] * self.yl[2,1] * self.ylbar[2,0] * self.yu[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[0,mif2] * self.yl[2,2] * self.ylbar[2,0] * self.yu[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[1,mif2] * self.yl[2,0] * self.ylbar[2,1] * self.yu[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,mif2] * self.yl[2,1] * self.ylbar[2,1] * self.yu[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[1,mif2] * self.yl[2,2] * self.ylbar[2,1] * self.yu[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[2,mif2] * self.yl[2,0] * self.ylbar[2,2] * self.yu[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[2,mif2] * self.yl[2,1] * self.ylbar[2,2] * self.yu[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,mif2] * self.yl[2,2] * self.ylbar[2,2] * self.yu[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,mif2] * self.yl[0,0] * self.ylbar[0,0] * self.yu[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[0,mif2] * self.yl[0,1] * self.ylbar[0,0] * self.yu[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[0,mif2] * self.yl[0,2] * self.ylbar[0,0] * self.yu[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[1,mif2] * self.yl[0,0] * self.ylbar[0,1] * self.yu[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,mif2] * self.yl[0,1] * self.ylbar[0,1] * self.yu[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[1,mif2] * self.yl[0,2] * self.ylbar[0,1] * self.yu[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[2,mif2] * self.yl[0,0] * self.ylbar[0,2] * self.yu[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[2,mif2] * self.yl[0,1] * self.ylbar[0,2] * self.yu[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,mif2] * self.yl[0,2] * self.ylbar[0,2] * self.yu[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,mif2] * self.yl[1,0] * self.ylbar[1,0] * self.yu[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[0,mif2] * self.yl[1,1] * self.ylbar[1,0] * self.yu[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[0,mif2] * self.yl[1,2] * self.ylbar[1,0] * self.yu[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[1,mif2] * self.yl[1,0] * self.ylbar[1,1] * self.yu[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,mif2] * self.yl[1,1] * self.ylbar[1,1] * self.yu[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[1,mif2] * self.yl[1,2] * self.ylbar[1,1] * self.yu[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[2,mif2] * self.yl[1,0] * self.ylbar[1,2] * self.yu[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[2,mif2] * self.yl[1,1] * self.ylbar[1,2] * self.yu[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,mif2] * self.yl[1,2] * self.ylbar[1,2] * self.yu[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,mif2] * self.yl[2,0] * self.ylbar[2,0] * self.yu[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[0,mif2] * self.yl[2,1] * self.ylbar[2,0] * self.yu[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[0,mif2] * self.yl[2,2] * self.ylbar[2,0] * self.yu[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[1,mif2] * self.yl[2,0] * self.ylbar[2,1] * self.yu[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,mif2] * self.yl[2,1] * self.ylbar[2,1] * self.yu[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[1,mif2] * self.yl[2,2] * self.ylbar[2,1] * self.yu[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[2,mif2] * self.yl[2,0] * self.ylbar[2,2] * self.yu[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[2,mif2] * self.yl[2,1] * self.ylbar[2,2] * self.yu[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,mif2] * self.yl[2,2] * self.ylbar[2,2] * self.yu[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[0,0] * self.YLQSbar[0,mif1] * self.yu[0,mif2] * self.yubar[0,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[0,1] * self.YLQSbar[0,mif1] * self.yu[0,mif2] * self.yubar[0,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[0,2] * self.YLQSbar[0,mif1] * self.yu[0,mif2] * self.yubar[0,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[1,0] * self.YLQSbar[1,mif1] * self.yu[0,mif2] * self.yubar[0,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[1,1] * self.YLQSbar[1,mif1] * self.yu[0,mif2] * self.yubar[0,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[1,2] * self.YLQSbar[1,mif1] * self.yu[0,mif2] * self.yubar[0,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[2,0] * self.YLQSbar[2,mif1] * self.yu[0,mif2] * self.yubar[0,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[2,1] * self.YLQSbar[2,mif1] * self.yu[0,mif2] * self.yubar[0,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[2,2] * self.YLQSbar[2,mif1] * self.yu[0,mif2] * self.yubar[0,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[0,0] * self.YLQSbar[0,0] * self.yu[mif1,0] * self.yubar[0,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,0] * self.yu[mif1,0] * self.yubar[0,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[0,2] * self.YLQSbar[0,0] * self.yu[mif1,0] * self.yubar[0,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[1,0] * self.YLQSbar[1,0] * self.yu[mif1,0] * self.yubar[0,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,0] * self.yu[mif1,0] * self.yubar[0,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[1,2] * self.YLQSbar[1,0] * self.yu[mif1,0] * self.yubar[0,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[2,0] * self.YLQSbar[2,0] * self.yu[mif1,0] * self.yubar[0,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,0] * self.yu[mif1,0] * self.yubar[0,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[2,2] * self.YLQSbar[2,0] * self.yu[mif1,0] * self.yubar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,0] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,0] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,0] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,0] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,0] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,0] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[0,0] * self.YLQSbar[0,mif1] * self.yu[0,mif2] * self.yubar[0,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[0,1] * self.YLQSbar[0,mif1] * self.yu[0,mif2] * self.yubar[0,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[0,2] * self.YLQSbar[0,mif1] * self.yu[0,mif2] * self.yubar[0,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[1,0] * self.YLQSbar[1,mif1] * self.yu[0,mif2] * self.yubar[0,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[1,1] * self.YLQSbar[1,mif1] * self.yu[0,mif2] * self.yubar[0,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[1,2] * self.YLQSbar[1,mif1] * self.yu[0,mif2] * self.yubar[0,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[2,0] * self.YLQSbar[2,mif1] * self.yu[0,mif2] * self.yubar[0,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[2,1] * self.YLQSbar[2,mif1] * self.yu[0,mif2] * self.yubar[0,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[2,2] * self.YLQSbar[2,mif1] * self.yu[0,mif2] * self.yubar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,1] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,1] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,1] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[0,0] * self.YLQSbar[0,0] * self.yu[mif1,1] * self.yubar[0,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,0] * self.yu[mif1,1] * self.yubar[0,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[0,2] * self.YLQSbar[0,0] * self.yu[mif1,1] * self.yubar[0,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[1,0] * self.YLQSbar[1,0] * self.yu[mif1,1] * self.yubar[0,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,0] * self.yu[mif1,1] * self.yubar[0,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[1,2] * self.YLQSbar[1,0] * self.yu[mif1,1] * self.yubar[0,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[2,0] * self.YLQSbar[2,0] * self.yu[mif1,1] * self.yubar[0,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,0] * self.yu[mif1,1] * self.yubar[0,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[2,2] * self.YLQSbar[2,0] * self.yu[mif1,1] * self.yubar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,0] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,0] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,0] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,0] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,0] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,0] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,0] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,0] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,0] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,1] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,1] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,1] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[0,0] * self.YLQSbar[0,mif1] * self.yu[0,mif2] * self.yubar[0,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[0,1] * self.YLQSbar[0,mif1] * self.yu[0,mif2] * self.yubar[0,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[0,2] * self.YLQSbar[0,mif1] * self.yu[0,mif2] * self.yubar[0,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[1,0] * self.YLQSbar[1,mif1] * self.yu[0,mif2] * self.yubar[0,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[1,1] * self.YLQSbar[1,mif1] * self.yu[0,mif2] * self.yubar[0,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[1,2] * self.YLQSbar[1,mif1] * self.yu[0,mif2] * self.yubar[0,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[2,0] * self.YLQSbar[2,mif1] * self.yu[0,mif2] * self.yubar[0,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[2,1] * self.YLQSbar[2,mif1] * self.yu[0,mif2] * self.yubar[0,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[2,2] * self.YLQSbar[2,mif1] * self.yu[0,mif2] * self.yubar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,2] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,2] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,2] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,2] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,2] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,2] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[0,0] * self.YLQSbar[0,0] * self.yu[mif1,2] * self.yubar[0,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,0] * self.yu[mif1,2] * self.yubar[0,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[0,2] * self.YLQSbar[0,0] * self.yu[mif1,2] * self.yubar[0,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[1,0] * self.YLQSbar[1,0] * self.yu[mif1,2] * self.yubar[0,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,0] * self.yu[mif1,2] * self.yubar[0,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[1,2] * self.YLQSbar[1,0] * self.yu[mif1,2] * self.yubar[0,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[2,0] * self.YLQSbar[2,0] * self.yu[mif1,2] * self.yubar[0,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,0] * self.yu[mif1,2] * self.yubar[0,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[2,2] * self.YLQSbar[2,0] * self.yu[mif1,2] * self.yubar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,0] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,0] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,0] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,0] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,0] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,0] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,0] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,0] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,0] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[0,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[0,0] * self.YLQSbar[0,mif1] * self.yu[1,mif2] * self.yubar[1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[0,1] * self.YLQSbar[0,mif1] * self.yu[1,mif2] * self.yubar[1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[0,2] * self.YLQSbar[0,mif1] * self.yu[1,mif2] * self.yubar[1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[1,0] * self.YLQSbar[1,mif1] * self.yu[1,mif2] * self.yubar[1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[1,1] * self.YLQSbar[1,mif1] * self.yu[1,mif2] * self.yubar[1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[1,2] * self.YLQSbar[1,mif1] * self.yu[1,mif2] * self.yubar[1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[2,0] * self.YLQSbar[2,mif1] * self.yu[1,mif2] * self.yubar[1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[2,1] * self.YLQSbar[2,mif1] * self.yu[1,mif2] * self.yubar[1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[2,2] * self.YLQSbar[2,mif1] * self.yu[1,mif2] * self.yubar[1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[0,0] * self.YLQSbar[0,1] * self.yu[mif1,0] * self.yubar[1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,1] * self.yu[mif1,0] * self.yubar[1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[0,2] * self.YLQSbar[0,1] * self.yu[mif1,0] * self.yubar[1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[1,0] * self.YLQSbar[1,1] * self.yu[mif1,0] * self.yubar[1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,1] * self.yu[mif1,0] * self.yubar[1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[1,2] * self.YLQSbar[1,1] * self.yu[mif1,0] * self.yubar[1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[2,0] * self.YLQSbar[2,1] * self.yu[mif1,0] * self.yubar[1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,1] * self.yu[mif1,0] * self.yubar[1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[2,2] * self.YLQSbar[2,1] * self.yu[mif1,0] * self.yubar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,1] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,1] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,1] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,1] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,1] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,1] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,1] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,1] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,1] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,0] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,0] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,0] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,0] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,0] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,0] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[0,0] * self.YLQSbar[0,mif1] * self.yu[1,mif2] * self.yubar[1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[0,1] * self.YLQSbar[0,mif1] * self.yu[1,mif2] * self.yubar[1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[0,2] * self.YLQSbar[0,mif1] * self.yu[1,mif2] * self.yubar[1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[1,0] * self.YLQSbar[1,mif1] * self.yu[1,mif2] * self.yubar[1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[1,1] * self.YLQSbar[1,mif1] * self.yu[1,mif2] * self.yubar[1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[1,2] * self.YLQSbar[1,mif1] * self.yu[1,mif2] * self.yubar[1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[2,0] * self.YLQSbar[2,mif1] * self.yu[1,mif2] * self.yubar[1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[2,1] * self.YLQSbar[2,mif1] * self.yu[1,mif2] * self.yubar[1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[2,2] * self.YLQSbar[2,mif1] * self.yu[1,mif2] * self.yubar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,1] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,1] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,1] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[0,0] * self.YLQSbar[0,1] * self.yu[mif1,1] * self.yubar[1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,1] * self.yu[mif1,1] * self.yubar[1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[0,2] * self.YLQSbar[0,1] * self.yu[mif1,1] * self.yubar[1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[1,0] * self.YLQSbar[1,1] * self.yu[mif1,1] * self.yubar[1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,1] * self.yu[mif1,1] * self.yubar[1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[1,2] * self.YLQSbar[1,1] * self.yu[mif1,1] * self.yubar[1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[2,0] * self.YLQSbar[2,1] * self.yu[mif1,1] * self.yubar[1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,1] * self.yu[mif1,1] * self.yubar[1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[2,2] * self.YLQSbar[2,1] * self.yu[mif1,1] * self.yubar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,1] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,1] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,1] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[0,0] * self.YLQSbar[0,mif1] * self.yu[1,mif2] * self.yubar[1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[0,1] * self.YLQSbar[0,mif1] * self.yu[1,mif2] * self.yubar[1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[0,2] * self.YLQSbar[0,mif1] * self.yu[1,mif2] * self.yubar[1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[1,0] * self.YLQSbar[1,mif1] * self.yu[1,mif2] * self.yubar[1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[1,1] * self.YLQSbar[1,mif1] * self.yu[1,mif2] * self.yubar[1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[1,2] * self.YLQSbar[1,mif1] * self.yu[1,mif2] * self.yubar[1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[2,0] * self.YLQSbar[2,mif1] * self.yu[1,mif2] * self.yubar[1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[2,1] * self.YLQSbar[2,mif1] * self.yu[1,mif2] * self.yubar[1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[2,2] * self.YLQSbar[2,mif1] * self.yu[1,mif2] * self.yubar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,2] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,2] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,2] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,2] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,2] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,2] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[0,0] * self.YLQSbar[0,1] * self.yu[mif1,2] * self.yubar[1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,1] * self.yu[mif1,2] * self.yubar[1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[0,2] * self.YLQSbar[0,1] * self.yu[mif1,2] * self.yubar[1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[1,0] * self.YLQSbar[1,1] * self.yu[mif1,2] * self.yubar[1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,1] * self.yu[mif1,2] * self.yubar[1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[1,2] * self.YLQSbar[1,1] * self.yu[mif1,2] * self.yubar[1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[2,0] * self.YLQSbar[2,1] * self.yu[mif1,2] * self.yubar[1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,1] * self.yu[mif1,2] * self.yubar[1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[2,2] * self.YLQSbar[2,1] * self.yu[mif1,2] * self.yubar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,1] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,1] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,1] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,1] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,1] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,1] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,1] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,1] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,1] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[0,0] * self.YLQSbar[0,mif1] * self.yu[2,mif2] * self.yubar[2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[0,1] * self.YLQSbar[0,mif1] * self.yu[2,mif2] * self.yubar[2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[0,2] * self.YLQSbar[0,mif1] * self.yu[2,mif2] * self.yubar[2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[1,0] * self.YLQSbar[1,mif1] * self.yu[2,mif2] * self.yubar[2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[1,1] * self.YLQSbar[1,mif1] * self.yu[2,mif2] * self.yubar[2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[1,2] * self.YLQSbar[1,mif1] * self.yu[2,mif2] * self.yubar[2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[2,0] * self.YLQSbar[2,mif1] * self.yu[2,mif2] * self.yubar[2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[2,1] * self.YLQSbar[2,mif1] * self.yu[2,mif2] * self.yubar[2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[2,2] * self.YLQSbar[2,mif1] * self.yu[2,mif2] * self.yubar[2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[0,0] * self.YLQSbar[0,2] * self.yu[mif1,0] * self.yubar[2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,2] * self.yu[mif1,0] * self.yubar[2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[0,2] * self.YLQSbar[0,2] * self.yu[mif1,0] * self.yubar[2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[1,0] * self.YLQSbar[1,2] * self.yu[mif1,0] * self.yubar[2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,2] * self.yu[mif1,0] * self.yubar[2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[1,2] * self.YLQSbar[1,2] * self.yu[mif1,0] * self.yubar[2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[2,0] * self.YLQSbar[2,2] * self.yu[mif1,0] * self.yubar[2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,2] * self.yu[mif1,0] * self.yubar[2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[2,2] * self.YLQSbar[2,2] * self.yu[mif1,0] * self.yubar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,2] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,2] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,2] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,2] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,2] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,2] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,2] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,2] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,2] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,0] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,0] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,0] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,0] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,0] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,0] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[0,0] * self.YLQSbar[0,mif1] * self.yu[2,mif2] * self.yubar[2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[0,1] * self.YLQSbar[0,mif1] * self.yu[2,mif2] * self.yubar[2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[0,2] * self.YLQSbar[0,mif1] * self.yu[2,mif2] * self.yubar[2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[1,0] * self.YLQSbar[1,mif1] * self.yu[2,mif2] * self.yubar[2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[1,1] * self.YLQSbar[1,mif1] * self.yu[2,mif2] * self.yubar[2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[1,2] * self.YLQSbar[1,mif1] * self.yu[2,mif2] * self.yubar[2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[2,0] * self.YLQSbar[2,mif1] * self.yu[2,mif2] * self.yubar[2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[2,1] * self.YLQSbar[2,mif1] * self.yu[2,mif2] * self.yubar[2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[2,2] * self.YLQSbar[2,mif1] * self.yu[2,mif2] * self.yubar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,1] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,1] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,1] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[0,0] * self.YLQSbar[0,2] * self.yu[mif1,1] * self.yubar[2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,2] * self.yu[mif1,1] * self.yubar[2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[0,2] * self.YLQSbar[0,2] * self.yu[mif1,1] * self.yubar[2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[1,0] * self.YLQSbar[1,2] * self.yu[mif1,1] * self.yubar[2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,2] * self.yu[mif1,1] * self.yubar[2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[1,2] * self.YLQSbar[1,2] * self.yu[mif1,1] * self.yubar[2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[2,0] * self.YLQSbar[2,2] * self.yu[mif1,1] * self.yubar[2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,2] * self.yu[mif1,1] * self.yubar[2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[2,2] * self.YLQSbar[2,2] * self.yu[mif1,1] * self.yubar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,2] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,2] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,2] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,2] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,2] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,2] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,2] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,2] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,2] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,1] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,1] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,1] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[0,0] * self.YLQSbar[0,mif1] * self.yu[2,mif2] * self.yubar[2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[0,1] * self.YLQSbar[0,mif1] * self.yu[2,mif2] * self.yubar[2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[0,2] * self.YLQSbar[0,mif1] * self.yu[2,mif2] * self.yubar[2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[1,0] * self.YLQSbar[1,mif1] * self.yu[2,mif2] * self.yubar[2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[1,1] * self.YLQSbar[1,mif1] * self.yu[2,mif2] * self.yubar[2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[1,2] * self.YLQSbar[1,mif1] * self.yu[2,mif2] * self.yubar[2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[2,0] * self.YLQSbar[2,mif1] * self.yu[2,mif2] * self.yubar[2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[2,1] * self.YLQSbar[2,mif1] * self.yu[2,mif2] * self.yubar[2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[2,2] * self.YLQSbar[2,mif1] * self.yu[2,mif2] * self.yubar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,2] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,2] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,2] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,2] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,2] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,2] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[0,0] * self.YLQSbar[0,2] * self.yu[mif1,2] * self.yubar[2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,2] * self.yu[mif1,2] * self.yubar[2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[0,2] * self.YLQSbar[0,2] * self.yu[mif1,2] * self.yubar[2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[1,0] * self.YLQSbar[1,2] * self.yu[mif1,2] * self.yubar[2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,2] * self.yu[mif1,2] * self.yubar[2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[1,2] * self.YLQSbar[1,2] * self.yu[mif1,2] * self.yubar[2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif2] * self.ylbar[2,0] * self.YLQSbar[2,2] * self.yu[mif1,2] * self.yubar[2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,2] * self.yu[mif1,2] * self.yubar[2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif2] * self.ylbar[2,2] * self.YLQSbar[2,2] * self.yu[mif1,2] * self.yubar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2])

    def alphaOdH(self, mif1,mif2):
        return (1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.YLQS[0,0] * self.YLQSbar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.YLQS[0,0] * self.YLQSbar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.YLQS[0,0] * self.YLQSbar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.YLQS[0,1] * self.YLQSbar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.YLQS[0,1] * self.YLQSbar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.YLQS[0,1] * self.YLQSbar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.YLQS[0,2] * self.YLQSbar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.YLQS[0,2] * self.YLQSbar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.YLQS[0,2] * self.YLQSbar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.YLQS[0,0] * self.YLQSbar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.YLQS[0,0] * self.YLQSbar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.YLQS[0,0] * self.YLQSbar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.YLQS[0,1] * self.YLQSbar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.YLQS[0,1] * self.YLQSbar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.YLQS[0,1] * self.YLQSbar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.YLQS[0,2] * self.YLQSbar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.YLQS[0,2] * self.YLQSbar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.YLQS[0,2] * self.YLQSbar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.YLQS[0,0] * self.YLQSbar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.YLQS[0,0] * self.YLQSbar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.YLQS[0,0] * self.YLQSbar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.YLQS[0,1] * self.YLQSbar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.YLQS[0,1] * self.YLQSbar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.YLQS[0,1] * self.YLQSbar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.YLQS[0,2] * self.YLQSbar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.YLQS[0,2] * self.YLQSbar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.YLQS[0,2] * self.YLQSbar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.YLQS[1,0] * self.YLQSbar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.YLQS[1,0] * self.YLQSbar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.YLQS[1,0] * self.YLQSbar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.YLQS[1,1] * self.YLQSbar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.YLQS[1,1] * self.YLQSbar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.YLQS[1,1] * self.YLQSbar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.YLQS[1,2] * self.YLQSbar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.YLQS[1,2] * self.YLQSbar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.YLQS[1,2] * self.YLQSbar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.YLQS[1,0] * self.YLQSbar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.YLQS[1,0] * self.YLQSbar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.YLQS[1,0] * self.YLQSbar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.YLQS[1,1] * self.YLQSbar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.YLQS[1,1] * self.YLQSbar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.YLQS[1,1] * self.YLQSbar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.YLQS[1,2] * self.YLQSbar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.YLQS[1,2] * self.YLQSbar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.YLQS[1,2] * self.YLQSbar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.YLQS[1,0] * self.YLQSbar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.YLQS[1,0] * self.YLQSbar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.YLQS[1,0] * self.YLQSbar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.YLQS[1,1] * self.YLQSbar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.YLQS[1,1] * self.YLQSbar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.YLQS[1,1] * self.YLQSbar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.YLQS[1,2] * self.YLQSbar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.YLQS[1,2] * self.YLQSbar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.YLQS[1,2] * self.YLQSbar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.YLQS[2,0] * self.YLQSbar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.YLQS[2,0] * self.YLQSbar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.YLQS[2,0] * self.YLQSbar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.YLQS[2,1] * self.YLQSbar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.YLQS[2,1] * self.YLQSbar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.YLQS[2,1] * self.YLQSbar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.YLQS[2,2] * self.YLQSbar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.YLQS[2,2] * self.YLQSbar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.YLQS[2,2] * self.YLQSbar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.YLQS[2,0] * self.YLQSbar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.YLQS[2,0] * self.YLQSbar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.YLQS[2,0] * self.YLQSbar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.YLQS[2,1] * self.YLQSbar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.YLQS[2,1] * self.YLQSbar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.YLQS[2,1] * self.YLQSbar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.YLQS[2,2] * self.YLQSbar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.YLQS[2,2] * self.YLQSbar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.YLQS[2,2] * self.YLQSbar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.YLQS[2,0] * self.YLQSbar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.YLQS[2,0] * self.YLQSbar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.YLQS[2,0] * self.YLQSbar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.YLQS[2,1] * self.YLQSbar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.YLQS[2,1] * self.YLQSbar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.YLQS[2,1] * self.YLQSbar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.YLQS[2,2] * self.YLQSbar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.YLQS[2,2] * self.YLQSbar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.YLQS[2,2] * self.YLQSbar[2,2])

    def alphaOeH(self, mif1,mif2):
        return (1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,0] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,1] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,2] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[0,0] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[0,1] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[0,2] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[0,0] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[0,1] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[0,2] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[1,0] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[1,1] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[1,2] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,0] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,1] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,2] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[1,0] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[1,1] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[1,2] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[2,0] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[2,1] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[2,2] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[2,0] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[2,1] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[2,2] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,0] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,1] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,2] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,0] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,1] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,2] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[0,0] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[0,1] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[0,2] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[0,0] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[0,1] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[0,2] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[1,0] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[1,1] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[1,2] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,0] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,1] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,2] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[1,0] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[1,1] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[1,2] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[2,0] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[2,1] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[2,2] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[2,0] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[2,1] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[2,2] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,0] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,1] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,2] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,0] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,1] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,2] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[0,0] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[0,1] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[0,2] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[0,0] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[0,1] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[0,2] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[1,0] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[1,1] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[1,2] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,0] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,1] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,2] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[1,0] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[1,1] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[1,2] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[2,0] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[2,1] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[2,2] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[2,0] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[2,1] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[2,2] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,0] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,1] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,2] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,0] * self.YLQS[0,0] * self.YLQSbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,1] * self.YLQS[0,0] * self.YLQSbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,2] * self.YLQS[0,0] * self.YLQSbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[0,0] * self.YLQS[1,0] * self.YLQSbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[0,1] * self.YLQS[1,0] * self.YLQSbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[0,2] * self.YLQS[1,0] * self.YLQSbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[0,0] * self.YLQS[2,0] * self.YLQSbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[0,1] * self.YLQS[2,0] * self.YLQSbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[0,2] * self.YLQS[2,0] * self.YLQSbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,0] * self.YLQS[0,1] * self.YLQSbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,1] * self.YLQS[0,1] * self.YLQSbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,2] * self.YLQS[0,1] * self.YLQSbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[0,0] * self.YLQS[1,1] * self.YLQSbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[0,1] * self.YLQS[1,1] * self.YLQSbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[0,2] * self.YLQS[1,1] * self.YLQSbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[0,0] * self.YLQS[2,1] * self.YLQSbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[0,1] * self.YLQS[2,1] * self.YLQSbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[0,2] * self.YLQS[2,1] * self.YLQSbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,0] * self.YLQS[0,2] * self.YLQSbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,1] * self.YLQS[0,2] * self.YLQSbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,2] * self.YLQS[0,2] * self.YLQSbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[0,0] * self.YLQS[1,2] * self.YLQSbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[0,1] * self.YLQS[1,2] * self.YLQSbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[0,2] * self.YLQS[1,2] * self.YLQSbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[0,0] * self.YLQS[2,2] * self.YLQSbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[0,1] * self.YLQS[2,2] * self.YLQSbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[0,2] * self.YLQS[2,2] * self.YLQSbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[1,0] * self.YLQS[0,0] * self.YLQSbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[1,1] * self.YLQS[0,0] * self.YLQSbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[1,2] * self.YLQS[0,0] * self.YLQSbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,0] * self.YLQS[1,0] * self.YLQSbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,1] * self.YLQS[1,0] * self.YLQSbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,2] * self.YLQS[1,0] * self.YLQSbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[1,0] * self.YLQS[2,0] * self.YLQSbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[1,1] * self.YLQS[2,0] * self.YLQSbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[1,2] * self.YLQS[2,0] * self.YLQSbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[1,0] * self.YLQS[0,1] * self.YLQSbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[1,1] * self.YLQS[0,1] * self.YLQSbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[1,2] * self.YLQS[0,1] * self.YLQSbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,0] * self.YLQS[1,1] * self.YLQSbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,1] * self.YLQS[1,1] * self.YLQSbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,2] * self.YLQS[1,1] * self.YLQSbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[1,0] * self.YLQS[2,1] * self.YLQSbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[1,1] * self.YLQS[2,1] * self.YLQSbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[1,2] * self.YLQS[2,1] * self.YLQSbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[1,0] * self.YLQS[0,2] * self.YLQSbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[1,1] * self.YLQS[0,2] * self.YLQSbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[1,2] * self.YLQS[0,2] * self.YLQSbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,0] * self.YLQS[1,2] * self.YLQSbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,1] * self.YLQS[1,2] * self.YLQSbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,2] * self.YLQS[1,2] * self.YLQSbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[1,0] * self.YLQS[2,2] * self.YLQSbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[1,1] * self.YLQS[2,2] * self.YLQSbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[1,2] * self.YLQS[2,2] * self.YLQSbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[2,0] * self.YLQS[0,0] * self.YLQSbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[2,1] * self.YLQS[0,0] * self.YLQSbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[2,2] * self.YLQS[0,0] * self.YLQSbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[2,0] * self.YLQS[1,0] * self.YLQSbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[2,1] * self.YLQS[1,0] * self.YLQSbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[2,2] * self.YLQS[1,0] * self.YLQSbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,0] * self.YLQS[2,0] * self.YLQSbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,1] * self.YLQS[2,0] * self.YLQSbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,2] * self.YLQS[2,0] * self.YLQSbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[2,0] * self.YLQS[0,1] * self.YLQSbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[2,1] * self.YLQS[0,1] * self.YLQSbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[2,2] * self.YLQS[0,1] * self.YLQSbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[2,0] * self.YLQS[1,1] * self.YLQSbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[2,1] * self.YLQS[1,1] * self.YLQSbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[2,2] * self.YLQS[1,1] * self.YLQSbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,0] * self.YLQS[2,1] * self.YLQSbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,1] * self.YLQS[2,1] * self.YLQSbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,2] * self.YLQS[2,1] * self.YLQSbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[2,0] * self.YLQS[0,2] * self.YLQSbar[2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[2,1] * self.YLQS[0,2] * self.YLQSbar[2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[2,2] * self.YLQS[0,2] * self.YLQSbar[2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[2,0] * self.YLQS[1,2] * self.YLQSbar[2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[2,1] * self.YLQS[1,2] * self.YLQSbar[2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[2,2] * self.YLQS[1,2] * self.YLQSbar[2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,0] * self.YLQS[2,2] * self.YLQSbar[2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,1] * self.YLQS[2,2] * self.YLQSbar[2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,2] * self.YLQS[2,2] * self.YLQSbar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.yl[mif1,0] * self.ylbar[0,0] * self.YLQSbar[0,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.yl[mif1,1] * self.ylbar[0,1] * self.YLQSbar[0,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.yl[mif1,2] * self.ylbar[0,2] * self.YLQSbar[0,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.yl[mif1,0] * self.ylbar[1,0] * self.YLQSbar[1,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.yl[mif1,1] * self.ylbar[1,1] * self.YLQSbar[1,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.yl[mif1,2] * self.ylbar[1,2] * self.YLQSbar[1,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.yl[mif1,0] * self.ylbar[2,0] * self.YLQSbar[2,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.yl[mif1,1] * self.ylbar[2,1] * self.YLQSbar[2,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.yl[mif1,2] * self.ylbar[2,2] * self.YLQSbar[2,0] * self.yubar[0,0] + 9/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yubar[0,0] + 3/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yubar[0,0] + -3/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.yl[0,mif2] * self.ylbar[0,0] * self.YLQSbar[mif1,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.yl[0,mif2] * self.ylbar[0,1] * self.YLQSbar[mif1,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.yl[0,mif2] * self.ylbar[0,2] * self.YLQSbar[mif1,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.yl[1,mif2] * self.ylbar[1,0] * self.YLQSbar[mif1,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.yl[1,mif2] * self.ylbar[1,1] * self.YLQSbar[mif1,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.yl[1,mif2] * self.ylbar[1,2] * self.YLQSbar[mif1,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.yl[2,mif2] * self.ylbar[2,0] * self.YLQSbar[mif1,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.yl[2,mif2] * self.ylbar[2,1] * self.YLQSbar[mif1,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.yl[2,mif2] * self.ylbar[2,2] * self.YLQSbar[mif1,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[mif2,0] * self.yl[mif1,0] * self.yu[0,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[mif2,0] * self.yl[mif1,1] * self.yu[0,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[mif2,0] * self.yl[mif1,2] * self.yu[0,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,0] * self.YLQSbar[mif1,0] * self.yu[0,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,0] * self.YLQSbar[mif1,0] * self.yu[0,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,0] * self.YLQSbar[mif1,0] * self.yu[0,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[mif2,0] * self.yl[mif1,0] * self.yu[0,1] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[mif2,0] * self.yl[mif1,1] * self.yu[0,1] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[mif2,0] * self.yl[mif1,2] * self.yu[0,1] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[mif2,0] * self.yl[mif1,0] * self.yu[0,2] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[mif2,0] * self.yl[mif1,1] * self.yu[0,2] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[mif2,0] * self.yl[mif1,2] * self.yu[0,2] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,1] * self.YLQSbar[mif1,0] * self.yu[1,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,1] * self.YLQSbar[mif1,0] * self.yu[1,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,1] * self.YLQSbar[mif1,0] * self.yu[1,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,2] * self.YLQSbar[mif1,0] * self.yu[2,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,2] * self.YLQSbar[mif1,0] * self.yu[2,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,2] * self.YLQSbar[mif1,0] * self.yu[2,0] * self.yubar[0,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yu[0,0] * (self.yubar[0,0])**(2) + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yu[0,0] * (self.yubar[0,0])**(2) + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yu[0,0] * (self.yubar[0,0])**(2) + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.yl[mif1,0] * self.ylbar[0,0] * self.YLQSbar[0,0] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.yl[mif1,1] * self.ylbar[0,1] * self.YLQSbar[0,0] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.yl[mif1,2] * self.ylbar[0,2] * self.YLQSbar[0,0] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.yl[mif1,0] * self.ylbar[1,0] * self.YLQSbar[1,0] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.yl[mif1,1] * self.ylbar[1,1] * self.YLQSbar[1,0] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.yl[mif1,2] * self.ylbar[1,2] * self.YLQSbar[1,0] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.yl[mif1,0] * self.ylbar[2,0] * self.YLQSbar[2,0] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.yl[mif1,1] * self.ylbar[2,1] * self.YLQSbar[2,0] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.yl[mif1,2] * self.ylbar[2,2] * self.YLQSbar[2,0] * self.yubar[0,1] + 9/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yubar[0,1] + 3/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yubar[0,1] + -3/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.yl[0,mif2] * self.ylbar[0,0] * self.YLQSbar[mif1,0] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.yl[0,mif2] * self.ylbar[0,1] * self.YLQSbar[mif1,0] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.yl[0,mif2] * self.ylbar[0,2] * self.YLQSbar[mif1,0] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.yl[1,mif2] * self.ylbar[1,0] * self.YLQSbar[mif1,0] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.yl[1,mif2] * self.ylbar[1,1] * self.YLQSbar[mif1,0] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.yl[1,mif2] * self.ylbar[1,2] * self.YLQSbar[mif1,0] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.yl[2,mif2] * self.ylbar[2,0] * self.YLQSbar[mif1,0] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.yl[2,mif2] * self.ylbar[2,1] * self.YLQSbar[mif1,0] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.yl[2,mif2] * self.ylbar[2,2] * self.YLQSbar[mif1,0] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[mif2,1] * self.yl[mif1,0] * self.yu[0,0] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[mif2,1] * self.yl[mif1,1] * self.yu[0,0] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[mif2,1] * self.yl[mif1,2] * self.yu[0,0] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[mif2,1] * self.yl[mif1,0] * self.yu[0,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[mif2,1] * self.yl[mif1,1] * self.yu[0,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[mif2,1] * self.yl[mif1,2] * self.yu[0,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,0] * self.YLQSbar[mif1,0] * self.yu[0,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,0] * self.YLQSbar[mif1,0] * self.yu[0,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,0] * self.YLQSbar[mif1,0] * self.yu[0,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[mif2,1] * self.yl[mif1,0] * self.yu[0,2] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[mif2,1] * self.yl[mif1,1] * self.yu[0,2] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[mif2,1] * self.yl[mif1,2] * self.yu[0,2] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,1] * self.YLQSbar[mif1,0] * self.yu[1,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,1] * self.YLQSbar[mif1,0] * self.yu[1,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,1] * self.YLQSbar[mif1,0] * self.yu[1,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,2] * self.YLQSbar[mif1,0] * self.yu[2,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,2] * self.YLQSbar[mif1,0] * self.yu[2,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,2] * self.YLQSbar[mif1,0] * self.yu[2,1] * self.yubar[0,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yu[0,0] * self.yubar[0,0] * self.yubar[0,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yu[0,0] * self.yubar[0,0] * self.yubar[0,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yu[0,0] * self.yubar[0,0] * self.yubar[0,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yu[0,1] * self.yubar[0,0] * self.yubar[0,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yu[0,1] * self.yubar[0,0] * self.yubar[0,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yu[0,1] * self.yubar[0,0] * self.yubar[0,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yu[0,1] * (self.yubar[0,1])**(2) + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yu[0,1] * (self.yubar[0,1])**(2) + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yu[0,1] * (self.yubar[0,1])**(2) + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.yl[mif1,0] * self.ylbar[0,0] * self.YLQSbar[0,0] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.yl[mif1,1] * self.ylbar[0,1] * self.YLQSbar[0,0] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.yl[mif1,2] * self.ylbar[0,2] * self.YLQSbar[0,0] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.yl[mif1,0] * self.ylbar[1,0] * self.YLQSbar[1,0] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.yl[mif1,1] * self.ylbar[1,1] * self.YLQSbar[1,0] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.yl[mif1,2] * self.ylbar[1,2] * self.YLQSbar[1,0] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.yl[mif1,0] * self.ylbar[2,0] * self.YLQSbar[2,0] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.yl[mif1,1] * self.ylbar[2,1] * self.YLQSbar[2,0] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.yl[mif1,2] * self.ylbar[2,2] * self.YLQSbar[2,0] * self.yubar[0,2] + 9/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yubar[0,2] + 3/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yubar[0,2] + -3/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.yl[0,mif2] * self.ylbar[0,0] * self.YLQSbar[mif1,0] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.yl[0,mif2] * self.ylbar[0,1] * self.YLQSbar[mif1,0] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.yl[0,mif2] * self.ylbar[0,2] * self.YLQSbar[mif1,0] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.yl[1,mif2] * self.ylbar[1,0] * self.YLQSbar[mif1,0] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.yl[1,mif2] * self.ylbar[1,1] * self.YLQSbar[mif1,0] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.yl[1,mif2] * self.ylbar[1,2] * self.YLQSbar[mif1,0] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.yl[2,mif2] * self.ylbar[2,0] * self.YLQSbar[mif1,0] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.yl[2,mif2] * self.ylbar[2,1] * self.YLQSbar[mif1,0] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.yl[2,mif2] * self.ylbar[2,2] * self.YLQSbar[mif1,0] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[mif2,2] * self.yl[mif1,0] * self.yu[0,0] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[mif2,2] * self.yl[mif1,1] * self.yu[0,0] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[mif2,2] * self.yl[mif1,2] * self.yu[0,0] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[mif2,2] * self.yl[mif1,0] * self.yu[0,1] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[mif2,2] * self.yl[mif1,1] * self.yu[0,1] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[mif2,2] * self.yl[mif1,2] * self.yu[0,1] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[mif2,2] * self.yl[mif1,0] * self.yu[0,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[mif2,2] * self.yl[mif1,1] * self.yu[0,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[mif2,2] * self.yl[mif1,2] * self.yu[0,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,0] * self.YLQSbar[mif1,0] * self.yu[0,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,0] * self.YLQSbar[mif1,0] * self.yu[0,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,0] * self.YLQSbar[mif1,0] * self.yu[0,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,1] * self.YLQSbar[mif1,0] * self.yu[1,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,1] * self.YLQSbar[mif1,0] * self.yu[1,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,1] * self.YLQSbar[mif1,0] * self.yu[1,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,2] * self.YLQSbar[mif1,0] * self.yu[2,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,2] * self.YLQSbar[mif1,0] * self.yu[2,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,2] * self.YLQSbar[mif1,0] * self.yu[2,2] * self.yubar[0,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yu[0,0] * self.yubar[0,0] * self.yubar[0,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yu[0,0] * self.yubar[0,0] * self.yubar[0,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yu[0,0] * self.yubar[0,0] * self.yubar[0,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yu[0,2] * self.yubar[0,0] * self.yubar[0,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yu[0,2] * self.yubar[0,0] * self.yubar[0,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yu[0,2] * self.yubar[0,0] * self.yubar[0,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yu[0,1] * self.yubar[0,1] * self.yubar[0,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yu[0,1] * self.yubar[0,1] * self.yubar[0,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yu[0,1] * self.yubar[0,1] * self.yubar[0,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yu[0,2] * self.yubar[0,1] * self.yubar[0,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yu[0,2] * self.yubar[0,1] * self.yubar[0,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yu[0,2] * self.yubar[0,1] * self.yubar[0,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yu[0,2] * (self.yubar[0,2])**(2) + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yu[0,2] * (self.yubar[0,2])**(2) + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yu[0,2] * (self.yubar[0,2])**(2) + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.yl[mif1,0] * self.ylbar[0,0] * self.YLQSbar[0,1] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.yl[mif1,1] * self.ylbar[0,1] * self.YLQSbar[0,1] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.yl[mif1,2] * self.ylbar[0,2] * self.YLQSbar[0,1] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.yl[mif1,0] * self.ylbar[1,0] * self.YLQSbar[1,1] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.yl[mif1,1] * self.ylbar[1,1] * self.YLQSbar[1,1] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.yl[mif1,2] * self.ylbar[1,2] * self.YLQSbar[1,1] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.yl[mif1,0] * self.ylbar[2,0] * self.YLQSbar[2,1] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.yl[mif1,1] * self.ylbar[2,1] * self.YLQSbar[2,1] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.yl[mif1,2] * self.ylbar[2,2] * self.YLQSbar[2,1] * self.yubar[1,0] + 9/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yubar[1,0] + 3/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yubar[1,0] + -3/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.yl[0,mif2] * self.ylbar[0,0] * self.YLQSbar[mif1,1] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.yl[0,mif2] * self.ylbar[0,1] * self.YLQSbar[mif1,1] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.yl[0,mif2] * self.ylbar[0,2] * self.YLQSbar[mif1,1] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.yl[1,mif2] * self.ylbar[1,0] * self.YLQSbar[mif1,1] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.yl[1,mif2] * self.ylbar[1,1] * self.YLQSbar[mif1,1] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.yl[1,mif2] * self.ylbar[1,2] * self.YLQSbar[mif1,1] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.yl[2,mif2] * self.ylbar[2,0] * self.YLQSbar[mif1,1] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.yl[2,mif2] * self.ylbar[2,1] * self.YLQSbar[mif1,1] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.yl[2,mif2] * self.ylbar[2,2] * self.YLQSbar[mif1,1] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,0] * self.YLQSbar[mif1,1] * self.yu[0,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,0] * self.YLQSbar[mif1,1] * self.yu[0,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,0] * self.YLQSbar[mif1,1] * self.yu[0,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[mif2,0] * self.yl[mif1,0] * self.yu[1,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[mif2,0] * self.yl[mif1,1] * self.yu[1,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[mif2,0] * self.yl[mif1,2] * self.yu[1,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,1] * self.YLQSbar[mif1,1] * self.yu[1,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,1] * self.YLQSbar[mif1,1] * self.yu[1,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,1] * self.YLQSbar[mif1,1] * self.yu[1,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[mif2,0] * self.yl[mif1,0] * self.yu[1,1] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[mif2,0] * self.yl[mif1,1] * self.yu[1,1] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[mif2,0] * self.yl[mif1,2] * self.yu[1,1] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[mif2,0] * self.yl[mif1,0] * self.yu[1,2] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[mif2,0] * self.yl[mif1,1] * self.yu[1,2] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[mif2,0] * self.yl[mif1,2] * self.yu[1,2] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,2] * self.YLQSbar[mif1,1] * self.yu[2,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,2] * self.YLQSbar[mif1,1] * self.yu[2,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,2] * self.YLQSbar[mif1,1] * self.yu[2,0] * self.yubar[1,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yu[0,0] * self.yubar[0,0] * self.yubar[1,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yu[0,0] * self.yubar[0,0] * self.yubar[1,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yu[0,0] * self.yubar[0,0] * self.yubar[1,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yu[1,0] * self.yubar[0,0] * self.yubar[1,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yu[1,0] * self.yubar[0,0] * self.yubar[1,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yu[1,0] * self.yubar[0,0] * self.yubar[1,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yu[0,0] * self.yubar[0,1] * self.yubar[1,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yu[0,0] * self.yubar[0,1] * self.yubar[1,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yu[0,0] * self.yubar[0,1] * self.yubar[1,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yu[1,1] * self.yubar[0,1] * self.yubar[1,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yu[1,1] * self.yubar[0,1] * self.yubar[1,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yu[1,1] * self.yubar[0,1] * self.yubar[1,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yu[0,0] * self.yubar[0,2] * self.yubar[1,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yu[0,0] * self.yubar[0,2] * self.yubar[1,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yu[0,0] * self.yubar[0,2] * self.yubar[1,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yu[1,2] * self.yubar[0,2] * self.yubar[1,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yu[1,2] * self.yubar[0,2] * self.yubar[1,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yu[1,2] * self.yubar[0,2] * self.yubar[1,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yu[1,0] * (self.yubar[1,0])**(2) + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yu[1,0] * (self.yubar[1,0])**(2) + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yu[1,0] * (self.yubar[1,0])**(2) + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.yl[mif1,0] * self.ylbar[0,0] * self.YLQSbar[0,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.yl[mif1,1] * self.ylbar[0,1] * self.YLQSbar[0,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.yl[mif1,2] * self.ylbar[0,2] * self.YLQSbar[0,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.yl[mif1,0] * self.ylbar[1,0] * self.YLQSbar[1,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.yl[mif1,1] * self.ylbar[1,1] * self.YLQSbar[1,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.yl[mif1,2] * self.ylbar[1,2] * self.YLQSbar[1,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.yl[mif1,0] * self.ylbar[2,0] * self.YLQSbar[2,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.yl[mif1,1] * self.ylbar[2,1] * self.YLQSbar[2,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.yl[mif1,2] * self.ylbar[2,2] * self.YLQSbar[2,1] * self.yubar[1,1] + 9/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yubar[1,1] + 3/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yubar[1,1] + -3/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.yl[0,mif2] * self.ylbar[0,0] * self.YLQSbar[mif1,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.yl[0,mif2] * self.ylbar[0,1] * self.YLQSbar[mif1,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.yl[0,mif2] * self.ylbar[0,2] * self.YLQSbar[mif1,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.yl[1,mif2] * self.ylbar[1,0] * self.YLQSbar[mif1,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.yl[1,mif2] * self.ylbar[1,1] * self.YLQSbar[mif1,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.yl[1,mif2] * self.ylbar[1,2] * self.YLQSbar[mif1,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.yl[2,mif2] * self.ylbar[2,0] * self.YLQSbar[mif1,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.yl[2,mif2] * self.ylbar[2,1] * self.YLQSbar[mif1,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.yl[2,mif2] * self.ylbar[2,2] * self.YLQSbar[mif1,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,0] * self.YLQSbar[mif1,1] * self.yu[0,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,0] * self.YLQSbar[mif1,1] * self.yu[0,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,0] * self.YLQSbar[mif1,1] * self.yu[0,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[mif2,1] * self.yl[mif1,0] * self.yu[1,0] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[mif2,1] * self.yl[mif1,1] * self.yu[1,0] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[mif2,1] * self.yl[mif1,2] * self.yu[1,0] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[mif2,1] * self.yl[mif1,0] * self.yu[1,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[mif2,1] * self.yl[mif1,1] * self.yu[1,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[mif2,1] * self.yl[mif1,2] * self.yu[1,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,1] * self.YLQSbar[mif1,1] * self.yu[1,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,1] * self.YLQSbar[mif1,1] * self.yu[1,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,1] * self.YLQSbar[mif1,1] * self.yu[1,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[mif2,1] * self.yl[mif1,0] * self.yu[1,2] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[mif2,1] * self.yl[mif1,1] * self.yu[1,2] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[mif2,1] * self.yl[mif1,2] * self.yu[1,2] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,2] * self.YLQSbar[mif1,1] * self.yu[2,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,2] * self.YLQSbar[mif1,1] * self.yu[2,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,2] * self.YLQSbar[mif1,1] * self.yu[2,1] * self.yubar[1,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yu[0,1] * self.yubar[0,0] * self.yubar[1,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yu[0,1] * self.yubar[0,0] * self.yubar[1,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yu[0,1] * self.yubar[0,0] * self.yubar[1,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yu[1,0] * self.yubar[0,0] * self.yubar[1,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yu[1,0] * self.yubar[0,0] * self.yubar[1,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yu[1,0] * self.yubar[0,0] * self.yubar[1,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yu[0,1] * self.yubar[0,1] * self.yubar[1,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yu[0,1] * self.yubar[0,1] * self.yubar[1,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yu[0,1] * self.yubar[0,1] * self.yubar[1,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yu[1,1] * self.yubar[0,1] * self.yubar[1,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yu[1,1] * self.yubar[0,1] * self.yubar[1,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yu[1,1] * self.yubar[0,1] * self.yubar[1,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yu[0,1] * self.yubar[0,2] * self.yubar[1,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yu[0,1] * self.yubar[0,2] * self.yubar[1,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yu[0,1] * self.yubar[0,2] * self.yubar[1,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yu[1,2] * self.yubar[0,2] * self.yubar[1,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yu[1,2] * self.yubar[0,2] * self.yubar[1,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yu[1,2] * self.yubar[0,2] * self.yubar[1,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yu[1,0] * self.yubar[1,0] * self.yubar[1,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yu[1,0] * self.yubar[1,0] * self.yubar[1,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yu[1,0] * self.yubar[1,0] * self.yubar[1,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yu[1,1] * self.yubar[1,0] * self.yubar[1,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yu[1,1] * self.yubar[1,0] * self.yubar[1,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yu[1,1] * self.yubar[1,0] * self.yubar[1,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yu[1,1] * (self.yubar[1,1])**(2) + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yu[1,1] * (self.yubar[1,1])**(2) + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yu[1,1] * (self.yubar[1,1])**(2) + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.yl[mif1,0] * self.ylbar[0,0] * self.YLQSbar[0,1] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.yl[mif1,1] * self.ylbar[0,1] * self.YLQSbar[0,1] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.yl[mif1,2] * self.ylbar[0,2] * self.YLQSbar[0,1] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.yl[mif1,0] * self.ylbar[1,0] * self.YLQSbar[1,1] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.yl[mif1,1] * self.ylbar[1,1] * self.YLQSbar[1,1] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.yl[mif1,2] * self.ylbar[1,2] * self.YLQSbar[1,1] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.yl[mif1,0] * self.ylbar[2,0] * self.YLQSbar[2,1] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.yl[mif1,1] * self.ylbar[2,1] * self.YLQSbar[2,1] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.yl[mif1,2] * self.ylbar[2,2] * self.YLQSbar[2,1] * self.yubar[1,2] + 9/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yubar[1,2] + 3/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yubar[1,2] + -3/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.yl[0,mif2] * self.ylbar[0,0] * self.YLQSbar[mif1,1] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.yl[0,mif2] * self.ylbar[0,1] * self.YLQSbar[mif1,1] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.yl[0,mif2] * self.ylbar[0,2] * self.YLQSbar[mif1,1] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.yl[1,mif2] * self.ylbar[1,0] * self.YLQSbar[mif1,1] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.yl[1,mif2] * self.ylbar[1,1] * self.YLQSbar[mif1,1] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.yl[1,mif2] * self.ylbar[1,2] * self.YLQSbar[mif1,1] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.yl[2,mif2] * self.ylbar[2,0] * self.YLQSbar[mif1,1] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.yl[2,mif2] * self.ylbar[2,1] * self.YLQSbar[mif1,1] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.yl[2,mif2] * self.ylbar[2,2] * self.YLQSbar[mif1,1] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,0] * self.YLQSbar[mif1,1] * self.yu[0,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,0] * self.YLQSbar[mif1,1] * self.yu[0,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,0] * self.YLQSbar[mif1,1] * self.yu[0,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[mif2,2] * self.yl[mif1,0] * self.yu[1,0] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[mif2,2] * self.yl[mif1,1] * self.yu[1,0] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[mif2,2] * self.yl[mif1,2] * self.yu[1,0] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[mif2,2] * self.yl[mif1,0] * self.yu[1,1] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[mif2,2] * self.yl[mif1,1] * self.yu[1,1] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[mif2,2] * self.yl[mif1,2] * self.yu[1,1] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[mif2,2] * self.yl[mif1,0] * self.yu[1,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[mif2,2] * self.yl[mif1,1] * self.yu[1,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[mif2,2] * self.yl[mif1,2] * self.yu[1,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,1] * self.YLQSbar[mif1,1] * self.yu[1,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,1] * self.YLQSbar[mif1,1] * self.yu[1,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,1] * self.YLQSbar[mif1,1] * self.yu[1,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,2] * self.YLQSbar[mif1,1] * self.yu[2,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,2] * self.YLQSbar[mif1,1] * self.yu[2,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,2] * self.YLQSbar[mif1,1] * self.yu[2,2] * self.yubar[1,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yu[0,2] * self.yubar[0,0] * self.yubar[1,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yu[0,2] * self.yubar[0,0] * self.yubar[1,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yu[0,2] * self.yubar[0,0] * self.yubar[1,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yu[1,0] * self.yubar[0,0] * self.yubar[1,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yu[1,0] * self.yubar[0,0] * self.yubar[1,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yu[1,0] * self.yubar[0,0] * self.yubar[1,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yu[0,2] * self.yubar[0,1] * self.yubar[1,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yu[0,2] * self.yubar[0,1] * self.yubar[1,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yu[0,2] * self.yubar[0,1] * self.yubar[1,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yu[1,1] * self.yubar[0,1] * self.yubar[1,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yu[1,1] * self.yubar[0,1] * self.yubar[1,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yu[1,1] * self.yubar[0,1] * self.yubar[1,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yu[0,2] * self.yubar[0,2] * self.yubar[1,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yu[0,2] * self.yubar[0,2] * self.yubar[1,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yu[0,2] * self.yubar[0,2] * self.yubar[1,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yu[1,2] * self.yubar[0,2] * self.yubar[1,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yu[1,2] * self.yubar[0,2] * self.yubar[1,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yu[1,2] * self.yubar[0,2] * self.yubar[1,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yu[1,0] * self.yubar[1,0] * self.yubar[1,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yu[1,0] * self.yubar[1,0] * self.yubar[1,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yu[1,0] * self.yubar[1,0] * self.yubar[1,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yu[1,2] * self.yubar[1,0] * self.yubar[1,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yu[1,2] * self.yubar[1,0] * self.yubar[1,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yu[1,2] * self.yubar[1,0] * self.yubar[1,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yu[1,1] * self.yubar[1,1] * self.yubar[1,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yu[1,1] * self.yubar[1,1] * self.yubar[1,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yu[1,1] * self.yubar[1,1] * self.yubar[1,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yu[1,2] * self.yubar[1,1] * self.yubar[1,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yu[1,2] * self.yubar[1,1] * self.yubar[1,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yu[1,2] * self.yubar[1,1] * self.yubar[1,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yu[1,2] * (self.yubar[1,2])**(2) + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yu[1,2] * (self.yubar[1,2])**(2) + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yu[1,2] * (self.yubar[1,2])**(2) + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.yl[mif1,0] * self.ylbar[0,0] * self.YLQSbar[0,2] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.yl[mif1,1] * self.ylbar[0,1] * self.YLQSbar[0,2] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.yl[mif1,2] * self.ylbar[0,2] * self.YLQSbar[0,2] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.yl[mif1,0] * self.ylbar[1,0] * self.YLQSbar[1,2] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.yl[mif1,1] * self.ylbar[1,1] * self.YLQSbar[1,2] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.yl[mif1,2] * self.ylbar[1,2] * self.YLQSbar[1,2] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.yl[mif1,0] * self.ylbar[2,0] * self.YLQSbar[2,2] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.yl[mif1,1] * self.ylbar[2,1] * self.YLQSbar[2,2] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.yl[mif1,2] * self.ylbar[2,2] * self.YLQSbar[2,2] * self.yubar[2,0] + 9/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yubar[2,0] + 3/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yubar[2,0] + -3/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.yl[0,mif2] * self.ylbar[0,0] * self.YLQSbar[mif1,2] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.yl[0,mif2] * self.ylbar[0,1] * self.YLQSbar[mif1,2] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.yl[0,mif2] * self.ylbar[0,2] * self.YLQSbar[mif1,2] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.yl[1,mif2] * self.ylbar[1,0] * self.YLQSbar[mif1,2] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.yl[1,mif2] * self.ylbar[1,1] * self.YLQSbar[mif1,2] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.yl[1,mif2] * self.ylbar[1,2] * self.YLQSbar[mif1,2] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.yl[2,mif2] * self.ylbar[2,0] * self.YLQSbar[mif1,2] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.yl[2,mif2] * self.ylbar[2,1] * self.YLQSbar[mif1,2] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.yl[2,mif2] * self.ylbar[2,2] * self.YLQSbar[mif1,2] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,0] * self.YLQSbar[mif1,2] * self.yu[0,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,0] * self.YLQSbar[mif1,2] * self.yu[0,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,0] * self.YLQSbar[mif1,2] * self.yu[0,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,1] * self.YLQSbar[mif1,2] * self.yu[1,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,1] * self.YLQSbar[mif1,2] * self.yu[1,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,1] * self.YLQSbar[mif1,2] * self.yu[1,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[mif2,0] * self.yl[mif1,0] * self.yu[2,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[mif2,0] * self.yl[mif1,1] * self.yu[2,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[mif2,0] * self.yl[mif1,2] * self.yu[2,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,2] * self.YLQSbar[mif1,2] * self.yu[2,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,2] * self.YLQSbar[mif1,2] * self.yu[2,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,2] * self.YLQSbar[mif1,2] * self.yu[2,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[mif2,0] * self.yl[mif1,0] * self.yu[2,1] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[mif2,0] * self.yl[mif1,1] * self.yu[2,1] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[mif2,0] * self.yl[mif1,2] * self.yu[2,1] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[mif2,0] * self.yl[mif1,0] * self.yu[2,2] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[mif2,0] * self.yl[mif1,1] * self.yu[2,2] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[mif2,0] * self.yl[mif1,2] * self.yu[2,2] * self.yubar[2,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yu[0,0] * self.yubar[0,0] * self.yubar[2,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yu[0,0] * self.yubar[0,0] * self.yubar[2,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yu[0,0] * self.yubar[0,0] * self.yubar[2,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yu[2,0] * self.yubar[0,0] * self.yubar[2,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yu[2,0] * self.yubar[0,0] * self.yubar[2,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yu[2,0] * self.yubar[0,0] * self.yubar[2,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yu[0,0] * self.yubar[0,1] * self.yubar[2,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yu[0,0] * self.yubar[0,1] * self.yubar[2,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yu[0,0] * self.yubar[0,1] * self.yubar[2,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yu[2,1] * self.yubar[0,1] * self.yubar[2,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yu[2,1] * self.yubar[0,1] * self.yubar[2,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yu[2,1] * self.yubar[0,1] * self.yubar[2,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yu[0,0] * self.yubar[0,2] * self.yubar[2,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yu[0,0] * self.yubar[0,2] * self.yubar[2,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yu[0,0] * self.yubar[0,2] * self.yubar[2,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yu[2,2] * self.yubar[0,2] * self.yubar[2,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yu[2,2] * self.yubar[0,2] * self.yubar[2,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yu[2,2] * self.yubar[0,2] * self.yubar[2,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yu[1,0] * self.yubar[1,0] * self.yubar[2,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yu[1,0] * self.yubar[1,0] * self.yubar[2,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yu[1,0] * self.yubar[1,0] * self.yubar[2,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yu[2,0] * self.yubar[1,0] * self.yubar[2,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yu[2,0] * self.yubar[1,0] * self.yubar[2,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yu[2,0] * self.yubar[1,0] * self.yubar[2,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yu[1,0] * self.yubar[1,1] * self.yubar[2,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yu[1,0] * self.yubar[1,1] * self.yubar[2,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yu[1,0] * self.yubar[1,1] * self.yubar[2,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yu[2,1] * self.yubar[1,1] * self.yubar[2,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yu[2,1] * self.yubar[1,1] * self.yubar[2,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yu[2,1] * self.yubar[1,1] * self.yubar[2,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yu[1,0] * self.yubar[1,2] * self.yubar[2,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yu[1,0] * self.yubar[1,2] * self.yubar[2,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yu[1,0] * self.yubar[1,2] * self.yubar[2,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yu[2,2] * self.yubar[1,2] * self.yubar[2,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yu[2,2] * self.yubar[1,2] * self.yubar[2,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yu[2,2] * self.yubar[1,2] * self.yubar[2,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yu[2,0] * (self.yubar[2,0])**(2) + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yu[2,0] * (self.yubar[2,0])**(2) + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yu[2,0] * (self.yubar[2,0])**(2) + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.yl[mif1,0] * self.ylbar[0,0] * self.YLQSbar[0,2] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.yl[mif1,1] * self.ylbar[0,1] * self.YLQSbar[0,2] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.yl[mif1,2] * self.ylbar[0,2] * self.YLQSbar[0,2] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.yl[mif1,0] * self.ylbar[1,0] * self.YLQSbar[1,2] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.yl[mif1,1] * self.ylbar[1,1] * self.YLQSbar[1,2] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.yl[mif1,2] * self.ylbar[1,2] * self.YLQSbar[1,2] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.yl[mif1,0] * self.ylbar[2,0] * self.YLQSbar[2,2] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.yl[mif1,1] * self.ylbar[2,1] * self.YLQSbar[2,2] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.yl[mif1,2] * self.ylbar[2,2] * self.YLQSbar[2,2] * self.yubar[2,1] + 9/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yubar[2,1] + 3/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yubar[2,1] + -3/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.yl[0,mif2] * self.ylbar[0,0] * self.YLQSbar[mif1,2] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.yl[0,mif2] * self.ylbar[0,1] * self.YLQSbar[mif1,2] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.yl[0,mif2] * self.ylbar[0,2] * self.YLQSbar[mif1,2] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.yl[1,mif2] * self.ylbar[1,0] * self.YLQSbar[mif1,2] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.yl[1,mif2] * self.ylbar[1,1] * self.YLQSbar[mif1,2] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.yl[1,mif2] * self.ylbar[1,2] * self.YLQSbar[mif1,2] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.yl[2,mif2] * self.ylbar[2,0] * self.YLQSbar[mif1,2] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.yl[2,mif2] * self.ylbar[2,1] * self.YLQSbar[mif1,2] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.yl[2,mif2] * self.ylbar[2,2] * self.YLQSbar[mif1,2] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,0] * self.YLQSbar[mif1,2] * self.yu[0,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,0] * self.YLQSbar[mif1,2] * self.yu[0,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,0] * self.YLQSbar[mif1,2] * self.yu[0,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,1] * self.YLQSbar[mif1,2] * self.yu[1,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,1] * self.YLQSbar[mif1,2] * self.yu[1,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,1] * self.YLQSbar[mif1,2] * self.yu[1,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[mif2,1] * self.yl[mif1,0] * self.yu[2,0] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[mif2,1] * self.yl[mif1,1] * self.yu[2,0] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[mif2,1] * self.yl[mif1,2] * self.yu[2,0] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[mif2,1] * self.yl[mif1,0] * self.yu[2,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[mif2,1] * self.yl[mif1,1] * self.yu[2,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[mif2,1] * self.yl[mif1,2] * self.yu[2,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,2] * self.YLQSbar[mif1,2] * self.yu[2,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,2] * self.YLQSbar[mif1,2] * self.yu[2,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,2] * self.YLQSbar[mif1,2] * self.yu[2,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[mif2,1] * self.yl[mif1,0] * self.yu[2,2] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[mif2,1] * self.yl[mif1,1] * self.yu[2,2] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[mif2,1] * self.yl[mif1,2] * self.yu[2,2] * self.yubar[2,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yu[0,1] * self.yubar[0,0] * self.yubar[2,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yu[0,1] * self.yubar[0,0] * self.yubar[2,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yu[0,1] * self.yubar[0,0] * self.yubar[2,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yu[2,0] * self.yubar[0,0] * self.yubar[2,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yu[2,0] * self.yubar[0,0] * self.yubar[2,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yu[2,0] * self.yubar[0,0] * self.yubar[2,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yu[0,1] * self.yubar[0,1] * self.yubar[2,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yu[0,1] * self.yubar[0,1] * self.yubar[2,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yu[0,1] * self.yubar[0,1] * self.yubar[2,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yu[2,1] * self.yubar[0,1] * self.yubar[2,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yu[2,1] * self.yubar[0,1] * self.yubar[2,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yu[2,1] * self.yubar[0,1] * self.yubar[2,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yu[0,1] * self.yubar[0,2] * self.yubar[2,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yu[0,1] * self.yubar[0,2] * self.yubar[2,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yu[0,1] * self.yubar[0,2] * self.yubar[2,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yu[2,2] * self.yubar[0,2] * self.yubar[2,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yu[2,2] * self.yubar[0,2] * self.yubar[2,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yu[2,2] * self.yubar[0,2] * self.yubar[2,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yu[1,1] * self.yubar[1,0] * self.yubar[2,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yu[1,1] * self.yubar[1,0] * self.yubar[2,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yu[1,1] * self.yubar[1,0] * self.yubar[2,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yu[2,0] * self.yubar[1,0] * self.yubar[2,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yu[2,0] * self.yubar[1,0] * self.yubar[2,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yu[2,0] * self.yubar[1,0] * self.yubar[2,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yu[1,1] * self.yubar[1,1] * self.yubar[2,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yu[1,1] * self.yubar[1,1] * self.yubar[2,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yu[1,1] * self.yubar[1,1] * self.yubar[2,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yu[2,1] * self.yubar[1,1] * self.yubar[2,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yu[2,1] * self.yubar[1,1] * self.yubar[2,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yu[2,1] * self.yubar[1,1] * self.yubar[2,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yu[1,1] * self.yubar[1,2] * self.yubar[2,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yu[1,1] * self.yubar[1,2] * self.yubar[2,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yu[1,1] * self.yubar[1,2] * self.yubar[2,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yu[2,2] * self.yubar[1,2] * self.yubar[2,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yu[2,2] * self.yubar[1,2] * self.yubar[2,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yu[2,2] * self.yubar[1,2] * self.yubar[2,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yu[2,0] * self.yubar[2,0] * self.yubar[2,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yu[2,0] * self.yubar[2,0] * self.yubar[2,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yu[2,0] * self.yubar[2,0] * self.yubar[2,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yu[2,1] * self.yubar[2,0] * self.yubar[2,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yu[2,1] * self.yubar[2,0] * self.yubar[2,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yu[2,1] * self.yubar[2,0] * self.yubar[2,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yu[2,1] * (self.yubar[2,1])**(2) + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yu[2,1] * (self.yubar[2,1])**(2) + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yu[2,1] * (self.yubar[2,1])**(2) + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.yl[mif1,0] * self.ylbar[0,0] * self.YLQSbar[0,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.yl[mif1,1] * self.ylbar[0,1] * self.YLQSbar[0,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.yl[mif1,2] * self.ylbar[0,2] * self.YLQSbar[0,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.yl[mif1,0] * self.ylbar[1,0] * self.YLQSbar[1,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.yl[mif1,1] * self.ylbar[1,1] * self.YLQSbar[1,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.yl[mif1,2] * self.ylbar[1,2] * self.YLQSbar[1,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.yl[mif1,0] * self.ylbar[2,0] * self.YLQSbar[2,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.yl[mif1,1] * self.ylbar[2,1] * self.YLQSbar[2,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.yl[mif1,2] * self.ylbar[2,2] * self.YLQSbar[2,2] * self.yubar[2,2] + 9/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yubar[2,2] + 3/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yubar[2,2] + -3/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.yl[0,mif2] * self.ylbar[0,0] * self.YLQSbar[mif1,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.yl[0,mif2] * self.ylbar[0,1] * self.YLQSbar[mif1,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.yl[0,mif2] * self.ylbar[0,2] * self.YLQSbar[mif1,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.yl[1,mif2] * self.ylbar[1,0] * self.YLQSbar[mif1,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.yl[1,mif2] * self.ylbar[1,1] * self.YLQSbar[mif1,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.yl[1,mif2] * self.ylbar[1,2] * self.YLQSbar[mif1,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.yl[2,mif2] * self.ylbar[2,0] * self.YLQSbar[mif1,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.yl[2,mif2] * self.ylbar[2,1] * self.YLQSbar[mif1,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.yl[2,mif2] * self.ylbar[2,2] * self.YLQSbar[mif1,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,0] * self.YLQSbar[mif1,2] * self.yu[0,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,0] * self.YLQSbar[mif1,2] * self.yu[0,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,0] * self.YLQSbar[mif1,2] * self.yu[0,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,1] * self.YLQSbar[mif1,2] * self.yu[1,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,1] * self.YLQSbar[mif1,2] * self.yu[1,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,1] * self.YLQSbar[mif1,2] * self.yu[1,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[mif2,2] * self.yl[mif1,0] * self.yu[2,0] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[mif2,2] * self.yl[mif1,1] * self.yu[2,0] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[mif2,2] * self.yl[mif1,2] * self.yu[2,0] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[mif2,2] * self.yl[mif1,0] * self.yu[2,1] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[mif2,2] * self.yl[mif1,1] * self.yu[2,1] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[mif2,2] * self.yl[mif1,2] * self.yu[2,1] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[mif2,2] * self.yl[mif1,0] * self.yu[2,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[mif2,2] * self.yl[mif1,1] * self.yu[2,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[mif2,2] * self.yl[mif1,2] * self.yu[2,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif2] * self.YLQS[0,2] * self.YLQSbar[mif1,2] * self.yu[2,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif2] * self.YLQS[1,2] * self.YLQSbar[mif1,2] * self.yu[2,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif2] * self.YLQS[2,2] * self.YLQSbar[mif1,2] * self.yu[2,2] * self.yubar[2,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yu[0,2] * self.yubar[0,0] * self.yubar[2,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yu[0,2] * self.yubar[0,0] * self.yubar[2,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yu[0,2] * self.yubar[0,0] * self.yubar[2,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yu[2,0] * self.yubar[0,0] * self.yubar[2,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yu[2,0] * self.yubar[0,0] * self.yubar[2,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yu[2,0] * self.yubar[0,0] * self.yubar[2,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yu[0,2] * self.yubar[0,1] * self.yubar[2,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yu[0,2] * self.yubar[0,1] * self.yubar[2,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yu[0,2] * self.yubar[0,1] * self.yubar[2,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yu[2,1] * self.yubar[0,1] * self.yubar[2,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yu[2,1] * self.yubar[0,1] * self.yubar[2,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yu[2,1] * self.yubar[0,1] * self.yubar[2,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yu[0,2] * self.yubar[0,2] * self.yubar[2,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yu[0,2] * self.yubar[0,2] * self.yubar[2,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yu[0,2] * self.yubar[0,2] * self.yubar[2,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yu[2,2] * self.yubar[0,2] * self.yubar[2,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yu[2,2] * self.yubar[0,2] * self.yubar[2,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yu[2,2] * self.yubar[0,2] * self.yubar[2,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yu[1,2] * self.yubar[1,0] * self.yubar[2,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yu[1,2] * self.yubar[1,0] * self.yubar[2,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yu[1,2] * self.yubar[1,0] * self.yubar[2,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yu[2,0] * self.yubar[1,0] * self.yubar[2,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yu[2,0] * self.yubar[1,0] * self.yubar[2,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yu[2,0] * self.yubar[1,0] * self.yubar[2,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yu[1,2] * self.yubar[1,1] * self.yubar[2,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yu[1,2] * self.yubar[1,1] * self.yubar[2,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yu[1,2] * self.yubar[1,1] * self.yubar[2,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yu[2,1] * self.yubar[1,1] * self.yubar[2,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yu[2,1] * self.yubar[1,1] * self.yubar[2,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yu[2,1] * self.yubar[1,1] * self.yubar[2,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yu[1,2] * self.yubar[1,2] * self.yubar[2,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yu[1,2] * self.yubar[1,2] * self.yubar[2,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yu[1,2] * self.yubar[1,2] * self.yubar[2,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yu[2,2] * self.yubar[1,2] * self.yubar[2,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yu[2,2] * self.yubar[1,2] * self.yubar[2,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yu[2,2] * self.yubar[1,2] * self.yubar[2,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yu[2,0] * self.yubar[2,0] * self.yubar[2,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yu[2,0] * self.yubar[2,0] * self.yubar[2,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yu[2,0] * self.yubar[2,0] * self.yubar[2,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yu[2,2] * self.yubar[2,0] * self.yubar[2,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yu[2,2] * self.yubar[2,0] * self.yubar[2,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yu[2,2] * self.yubar[2,0] * self.yubar[2,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yu[2,1] * self.yubar[2,1] * self.yubar[2,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yu[2,1] * self.yubar[2,1] * self.yubar[2,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yu[2,1] * self.yubar[2,1] * self.yubar[2,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yu[2,2] * self.yubar[2,1] * self.yubar[2,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yu[2,2] * self.yubar[2,1] * self.yubar[2,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yu[2,2] * self.yubar[2,1] * self.yubar[2,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yu[2,2] * (self.yubar[2,2])**(2) + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yu[2,2] * (self.yubar[2,2])**(2) + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yu[2,2] * (self.yubar[2,2])**(2))

    def alphaOuGbar(self, mif1,mif2):
        return (1/64 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.YLQS[0,mif1] + 1/64 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.YLQS[0,mif1] + 1/64 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.YLQS[0,mif1] + 1/64 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,0] * self.YLQS[1,mif1] + 1/64 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,1] * self.YLQS[1,mif1] + 1/64 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,2] * self.YLQS[1,mif1] + 1/64 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[2,0] * self.YLQS[2,mif1] + 1/64 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[2,1] * self.YLQS[2,mif1] + 1/64 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[2,2] * self.YLQS[2,mif1] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,0] * self.yubar[0,mif2] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,0] * self.yubar[0,mif2] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,0] * self.yubar[0,mif2] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,1] * self.yubar[1,mif2] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,1] * self.yubar[1,mif2] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,1] * self.yubar[1,mif2] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,2] * self.yubar[2,mif2] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,2] * self.yubar[2,mif2] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,2] * self.yubar[2,mif2] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,0] * self.yubar[mif1,0] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,0] * self.yubar[mif1,0] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,0] * self.yubar[mif1,0] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,1] * self.yubar[mif1,1] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,1] * self.yubar[mif1,1] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,1] * self.yubar[mif1,1] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,2] * self.yubar[mif1,2] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,2] * self.yubar[mif1,2] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,2] * self.yubar[mif1,2])

    def alphaOuWbar(self, mif1,mif2):
        return (3/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.YLQS[0,mif1] + 1/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.YLQS[0,mif1] + -1/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[0,0] * self.YLQS[0,mif1] + 3/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.YLQS[0,mif1] + 1/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.YLQS[0,mif1] + -1/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[0,1] * self.YLQS[0,mif1] + 3/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.YLQS[0,mif1] + 1/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.YLQS[0,mif1] + -1/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[0,2] * self.YLQS[0,mif1] + 3/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,0] * self.YLQS[1,mif1] + 1/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,0] * self.YLQS[1,mif1] + -1/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[1,0] * self.YLQS[1,mif1] + 3/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,1] * self.YLQS[1,mif1] + 1/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,1] * self.YLQS[1,mif1] + -1/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[1,1] * self.YLQS[1,mif1] + 3/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,2] * self.YLQS[1,mif1] + 1/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,2] * self.YLQS[1,mif1] + -1/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[1,2] * self.YLQS[1,mif1] + 3/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[2,0] * self.YLQS[2,mif1] + 1/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[2,0] * self.YLQS[2,mif1] + -1/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[2,0] * self.YLQS[2,mif1] + 3/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[2,1] * self.YLQS[2,mif1] + 1/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[2,1] * self.YLQS[2,mif1] + -1/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[2,1] * self.YLQS[2,mif1] + 3/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[2,2] * self.YLQS[2,mif1] + 1/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[2,2] * self.YLQS[2,mif1] + -1/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[2,2] * self.YLQS[2,mif1] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,0] * self.yubar[0,mif2] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,0] * self.yubar[0,mif2] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,0] * self.yubar[0,mif2] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,0] * self.yubar[0,mif2] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,0] * self.yubar[0,mif2] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,0] * self.yubar[0,mif2] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,1] * self.yubar[1,mif2] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,1] * self.yubar[1,mif2] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,1] * self.yubar[1,mif2] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,1] * self.yubar[1,mif2] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,1] * self.yubar[1,mif2] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,1] * self.yubar[1,mif2] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,2] * self.yubar[2,mif2] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,2] * self.yubar[2,mif2] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,2] * self.yubar[2,mif2] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,2] * self.yubar[2,mif2] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,2] * self.yubar[2,mif2] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,2] * self.yubar[2,mif2])

    def alphaOuBbar(self, mif1,mif2):
        return (23/768 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.YLQS[0,mif1] + 3/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.YLQS[0,mif1] + -3/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[0,0] * self.YLQS[0,mif1] + 23/768 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.YLQS[0,mif1] + 3/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.YLQS[0,mif1] + -3/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[0,1] * self.YLQS[0,mif1] + 23/768 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.YLQS[0,mif1] + 3/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.YLQS[0,mif1] + -3/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[0,2] * self.YLQS[0,mif1] + 23/768 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,0] * self.YLQS[1,mif1] + 3/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,0] * self.YLQS[1,mif1] + -3/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[1,0] * self.YLQS[1,mif1] + 23/768 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,1] * self.YLQS[1,mif1] + 3/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,1] * self.YLQS[1,mif1] + -3/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[1,1] * self.YLQS[1,mif1] + 23/768 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,2] * self.YLQS[1,mif1] + 3/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,2] * self.YLQS[1,mif1] + -3/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[1,2] * self.YLQS[1,mif1] + 23/768 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[2,0] * self.YLQS[2,mif1] + 3/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[2,0] * self.YLQS[2,mif1] + -3/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[2,0] * self.YLQS[2,mif1] + 23/768 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[2,1] * self.YLQS[2,mif1] + 3/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[2,1] * self.YLQS[2,mif1] + -3/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[2,1] * self.YLQS[2,mif1] + 23/768 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[2,2] * self.YLQS[2,mif1] + 3/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[2,2] * self.YLQS[2,mif1] + -3/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[2,2] * self.YLQS[2,mif1] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,0] * self.yubar[0,mif2] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,0] * self.yubar[0,mif2] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,0] * self.yubar[0,mif2] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,0] * self.yubar[0,mif2] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,0] * self.yubar[0,mif2] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,0] * self.yubar[0,mif2] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,1] * self.yubar[1,mif2] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,1] * self.yubar[1,mif2] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,1] * self.yubar[1,mif2] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,1] * self.yubar[1,mif2] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,1] * self.yubar[1,mif2] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,1] * self.yubar[1,mif2] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,2] * self.yubar[2,mif2] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,2] * self.yubar[2,mif2] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,2] * self.yubar[2,mif2] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,2] * self.yubar[2,mif2] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,2] * self.yubar[2,mif2] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,2] * self.yubar[2,mif2] + -1/576 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,0] * self.yubar[mif1,0] + 1/128 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,0] * self.yubar[mif1,0] + -1/576 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,0] * self.yubar[mif1,0] + 1/128 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,0] * self.yubar[mif1,0] + -1/576 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,0] * self.yubar[mif1,0] + 1/128 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,0] * self.yubar[mif1,0] + -1/576 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,1] * self.yubar[mif1,1] + 1/128 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,1] * self.yubar[mif1,1] + -1/576 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,1] * self.yubar[mif1,1] + 1/128 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,1] * self.yubar[mif1,1] + -1/576 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,1] * self.yubar[mif1,1] + 1/128 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,1] * self.yubar[mif1,1] + -1/576 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,2] * self.yubar[mif1,2] + 1/128 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,2] * self.yubar[mif1,2] + -1/576 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,2] * self.yubar[mif1,2] + 1/128 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,2] * self.yubar[mif1,2] + -1/576 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,2] * self.yubar[mif1,2] + 1/128 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,2] * self.yubar[mif1,2])

    def alphaOdGbar(self, mif1,mif2):
        return (-1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YLQS[0,mif1] * self.YLQSbar[0,0] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YLQS[0,mif1] * self.YLQSbar[0,1] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YLQS[0,mif1] * self.YLQSbar[0,2] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YLQS[1,mif1] * self.YLQSbar[1,0] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YLQS[1,mif1] * self.YLQSbar[1,1] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YLQS[1,mif1] * self.YLQSbar[1,2] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YLQS[2,mif1] * self.YLQSbar[2,0] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YLQS[2,mif1] * self.YLQSbar[2,1] + -1/384 * self.g3 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YLQS[2,mif1] * self.YLQSbar[2,2])

    def alphaOdWbar(self, mif1,mif2):
        return (-1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YLQS[0,mif1] * self.YLQSbar[0,0] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YLQS[0,mif1] * self.YLQSbar[0,0] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YLQS[0,mif1] * self.YLQSbar[0,1] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YLQS[0,mif1] * self.YLQSbar[0,1] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YLQS[0,mif1] * self.YLQSbar[0,2] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YLQS[0,mif1] * self.YLQSbar[0,2] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YLQS[1,mif1] * self.YLQSbar[1,0] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YLQS[1,mif1] * self.YLQSbar[1,0] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YLQS[1,mif1] * self.YLQSbar[1,1] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YLQS[1,mif1] * self.YLQSbar[1,1] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YLQS[1,mif1] * self.YLQSbar[1,2] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YLQS[1,mif1] * self.YLQSbar[1,2] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YLQS[2,mif1] * self.YLQSbar[2,0] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YLQS[2,mif1] * self.YLQSbar[2,0] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YLQS[2,mif1] * self.YLQSbar[2,1] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YLQS[2,mif1] * self.YLQSbar[2,1] + -1/768 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YLQS[2,mif1] * self.YLQSbar[2,2] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YLQS[2,mif1] * self.YLQSbar[2,2])

    def alphaOdBbar(self, mif1,mif2):
        return (-1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YLQS[0,mif1] * self.YLQSbar[0,0] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YLQS[0,mif1] * self.YLQSbar[0,0] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YLQS[0,mif1] * self.YLQSbar[0,1] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YLQS[0,mif1] * self.YLQSbar[0,1] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YLQS[0,mif1] * self.YLQSbar[0,2] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YLQS[0,mif1] * self.YLQSbar[0,2] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YLQS[1,mif1] * self.YLQSbar[1,0] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YLQS[1,mif1] * self.YLQSbar[1,0] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YLQS[1,mif1] * self.YLQSbar[1,1] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YLQS[1,mif1] * self.YLQSbar[1,1] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YLQS[1,mif1] * self.YLQSbar[1,2] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YLQS[1,mif1] * self.YLQSbar[1,2] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YLQS[2,mif1] * self.YLQSbar[2,0] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YLQS[2,mif1] * self.YLQSbar[2,0] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YLQS[2,mif1] * self.YLQSbar[2,1] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YLQS[2,mif1] * self.YLQSbar[2,1] + -1/2304 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YLQS[2,mif1] * self.YLQSbar[2,2] + 1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YLQS[2,mif1] * self.YLQSbar[2,2])

    def alphaOeWbar(self, mif1,mif2):
        return (-1/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,0] * self.YLQSbar[0,0] + 3/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,0] * self.YLQSbar[0,0] + -1/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,1] * self.YLQSbar[0,1] + 3/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,1] * self.YLQSbar[0,1] + -1/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,2] * self.YLQSbar[0,2] + 3/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,2] * self.YLQSbar[0,2] + -1/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,0] * self.YLQSbar[1,0] + 3/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,0] * self.YLQSbar[1,0] + -1/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,1] * self.YLQSbar[1,1] + 3/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,1] * self.YLQSbar[1,1] + -1/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,2] * self.YLQSbar[1,2] + 3/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,2] * self.YLQSbar[1,2] + -1/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,0] * self.YLQSbar[2,0] + 3/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,0] * self.YLQSbar[2,0] + -1/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,1] * self.YLQSbar[2,1] + 3/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,1] * self.YLQSbar[2,1] + -1/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,2] * self.YLQSbar[2,2] + 3/256 * self.g2 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,2] * self.YLQSbar[2,2] + 9/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] + 3/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] + -3/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] + 9/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,1] + 3/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,1] + -3/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,1] + 9/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,2] + 3/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,2] + -3/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,2] + 9/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,0] + 3/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,0] + -3/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,0] + 9/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,1] + 3/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,1] + -3/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,1] + 9/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,2] + 3/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,2] + -3/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,2] + 9/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[2,0] + 3/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[2,0] + -3/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[2,0] + 9/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[2,1] + 3/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[2,1] + -3/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[2,1] + 9/256 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[2,2] + 3/128 * self.g2 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[2,2] + -3/128 * self.g2 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[2,2])

    def alphaOeBbar(self, mif1,mif2):
        return (1/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[0,0] * self.ylbar[mif1,0] + -1/64 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[0,0] * self.ylbar[mif1,0] + 1/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[0,1] * self.ylbar[mif1,0] + -1/64 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[0,1] * self.ylbar[mif1,0] + 1/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[0,2] * self.ylbar[mif1,0] + -1/64 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[0,2] * self.ylbar[mif1,0] + 1/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[1,0] * self.ylbar[mif1,1] + -1/64 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[1,0] * self.ylbar[mif1,1] + 1/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[1,1] * self.ylbar[mif1,1] + -1/64 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[1,1] * self.ylbar[mif1,1] + 1/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[1,2] * self.ylbar[mif1,1] + -1/64 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[1,2] * self.ylbar[mif1,1] + 1/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[2,0] * self.ylbar[mif1,2] + -1/64 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[2,0] * self.ylbar[mif1,2] + 1/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[2,1] * self.ylbar[mif1,2] + -1/64 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[2,1] * self.ylbar[mif1,2] + 1/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[2,2] * self.ylbar[mif1,2] + -1/64 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[2,2] * self.ylbar[mif1,2] + 1/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,0] * self.YLQSbar[0,0] + -1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,0] * self.YLQSbar[0,0] + 1/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,1] * self.YLQSbar[0,1] + -1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,1] * self.YLQSbar[0,1] + 1/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,2] * self.YLQSbar[0,2] + -1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,2] * self.YLQSbar[0,2] + 1/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,0] * self.YLQSbar[1,0] + -1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,0] * self.YLQSbar[1,0] + 1/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,1] * self.YLQSbar[1,1] + -1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,1] * self.YLQSbar[1,1] + 1/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,2] * self.YLQSbar[1,2] + -1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,2] * self.YLQSbar[1,2] + 1/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,0] * self.YLQSbar[2,0] + -1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,0] * self.YLQSbar[2,0] + 1/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,1] * self.YLQSbar[2,1] + -1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,1] * self.YLQSbar[2,1] + 1/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,2] * self.YLQSbar[2,2] + -1/256 * self.g1 * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,2] * self.YLQSbar[2,2] + -19/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] + -5/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] + 5/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] + -19/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,1] + -5/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,1] + 5/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,1] + -19/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,2] + -5/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,2] + 5/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,2] + -19/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,0] + -5/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,0] + 5/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,0] + -19/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,1] + -5/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,1] + 5/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,1] + -19/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,2] + -5/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,2] + 5/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,2] + -19/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[2,0] + -5/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[2,0] + 5/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[2,0] + -19/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[2,1] + -5/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[2,1] + 5/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[2,1] + -19/256 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[2,2] + -5/128 * self.g1 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[2,2] + 5/128 * self.g1 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[2,2])

    def alphaOHq1bar(self, mif1,mif2):
        return (-1/17280 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -25/6912 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/256 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + 1/192 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[0,0] * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[0,0] * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[0,1] * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[0,1] * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[0,2] * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[0,2] * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[0,0] * self.YLQS[1,mif1] * self.YLQSbar[0,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[0,0] * self.YLQS[1,mif1] * self.YLQSbar[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,0] * self.YLQS[1,mif1] * self.YLQSbar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[0,1] * self.YLQS[1,mif1] * self.YLQSbar[0,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[0,1] * self.YLQS[1,mif1] * self.YLQSbar[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,1] * self.YLQS[1,mif1] * self.YLQSbar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[0,2] * self.YLQS[1,mif1] * self.YLQSbar[0,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[0,2] * self.YLQS[1,mif1] * self.YLQSbar[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,2] * self.YLQS[1,mif1] * self.YLQSbar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[0,0] * self.YLQS[2,mif1] * self.YLQSbar[0,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[0,0] * self.YLQS[2,mif1] * self.YLQSbar[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,0] * self.YLQS[2,mif1] * self.YLQSbar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[0,1] * self.YLQS[2,mif1] * self.YLQSbar[0,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[0,1] * self.YLQS[2,mif1] * self.YLQSbar[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,1] * self.YLQS[2,mif1] * self.YLQSbar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[0,2] * self.YLQS[2,mif1] * self.YLQSbar[0,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[0,2] * self.YLQS[2,mif1] * self.YLQSbar[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,2] * self.YLQS[2,mif1] * self.YLQSbar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[1,0] * self.YLQS[0,mif1] * self.YLQSbar[1,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[1,0] * self.YLQS[0,mif1] * self.YLQSbar[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[1,0] * self.YLQS[0,mif1] * self.YLQSbar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[1,1] * self.YLQS[0,mif1] * self.YLQSbar[1,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[1,1] * self.YLQS[0,mif1] * self.YLQSbar[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[1,1] * self.YLQS[0,mif1] * self.YLQSbar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[1,2] * self.YLQS[0,mif1] * self.YLQSbar[1,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[1,2] * self.YLQS[0,mif1] * self.YLQSbar[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[1,2] * self.YLQS[0,mif1] * self.YLQSbar[1,mif2] + -25/6912 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/256 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + 1/192 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[1,0] * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[1,0] * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[1,1] * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[1,1] * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[1,2] * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[1,2] * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,2] * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[1,0] * self.YLQS[2,mif1] * self.YLQSbar[1,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[1,0] * self.YLQS[2,mif1] * self.YLQSbar[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,0] * self.YLQS[2,mif1] * self.YLQSbar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[1,1] * self.YLQS[2,mif1] * self.YLQSbar[1,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[1,1] * self.YLQS[2,mif1] * self.YLQSbar[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,1] * self.YLQS[2,mif1] * self.YLQSbar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[1,2] * self.YLQS[2,mif1] * self.YLQSbar[1,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[1,2] * self.YLQS[2,mif1] * self.YLQSbar[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,2] * self.YLQS[2,mif1] * self.YLQSbar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[2,0] * self.YLQS[0,mif1] * self.YLQSbar[2,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[2,0] * self.YLQS[0,mif1] * self.YLQSbar[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[2,0] * self.YLQS[0,mif1] * self.YLQSbar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[2,1] * self.YLQS[0,mif1] * self.YLQSbar[2,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[2,1] * self.YLQS[0,mif1] * self.YLQSbar[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[2,1] * self.YLQS[0,mif1] * self.YLQSbar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[2,2] * self.YLQS[0,mif1] * self.YLQSbar[2,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[2,2] * self.YLQS[0,mif1] * self.YLQSbar[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[2,2] * self.YLQS[0,mif1] * self.YLQSbar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[2,0] * self.YLQS[1,mif1] * self.YLQSbar[2,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[2,0] * self.YLQS[1,mif1] * self.YLQSbar[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[2,0] * self.YLQS[1,mif1] * self.YLQSbar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[2,1] * self.YLQS[1,mif1] * self.YLQSbar[2,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[2,1] * self.YLQS[1,mif1] * self.YLQSbar[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[2,1] * self.YLQS[1,mif1] * self.YLQSbar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[2,2] * self.YLQS[1,mif1] * self.YLQSbar[2,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[2,2] * self.YLQS[1,mif1] * self.YLQSbar[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[2,2] * self.YLQS[1,mif1] * self.YLQSbar[2,mif2] + -25/6912 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/256 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + 1/192 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[2,0] * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[2,0] * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[2,1] * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[2,1] * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,1] * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[2,2] * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[2,2] * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,2] * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[0,0] * self.YLQS[0,mif1] * self.yu[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[0,1] * self.YLQS[0,mif1] * self.yu[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[0,2] * self.YLQS[0,mif1] * self.yu[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[1,0] * self.YLQS[1,mif1] * self.yu[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[1,1] * self.YLQS[1,mif1] * self.yu[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[1,2] * self.YLQS[1,mif1] * self.yu[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[2,0] * self.YLQS[2,mif1] * self.yu[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[2,1] * self.YLQS[2,mif1] * self.yu[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[2,2] * self.YLQS[2,mif1] * self.yu[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[0,0] * self.YLQS[0,mif1] * self.yu[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[0,1] * self.YLQS[0,mif1] * self.yu[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[0,2] * self.YLQS[0,mif1] * self.yu[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[1,0] * self.YLQS[1,mif1] * self.yu[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[1,1] * self.YLQS[1,mif1] * self.yu[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[1,2] * self.YLQS[1,mif1] * self.yu[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[2,0] * self.YLQS[2,mif1] * self.yu[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[2,1] * self.YLQS[2,mif1] * self.yu[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[2,2] * self.YLQS[2,mif1] * self.yu[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[0,0] * self.YLQS[0,mif1] * self.yu[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[0,1] * self.YLQS[0,mif1] * self.yu[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[0,2] * self.YLQS[0,mif1] * self.yu[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[1,0] * self.YLQS[1,mif1] * self.yu[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[1,1] * self.YLQS[1,mif1] * self.yu[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[1,2] * self.YLQS[1,mif1] * self.yu[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[2,0] * self.YLQS[2,mif1] * self.yu[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[2,1] * self.YLQS[2,mif1] * self.yu[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[2,2] * self.YLQS[2,mif1] * self.yu[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[0,0] * self.YLQSbar[0,mif2] * self.yubar[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[0,1] * self.YLQSbar[0,mif2] * self.yubar[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[0,2] * self.YLQSbar[0,mif2] * self.yubar[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[1,0] * self.YLQSbar[1,mif2] * self.yubar[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[1,1] * self.YLQSbar[1,mif2] * self.yubar[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[1,2] * self.YLQSbar[1,mif2] * self.yubar[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[2,0] * self.YLQSbar[2,mif2] * self.yubar[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[2,1] * self.YLQSbar[2,mif2] * self.yubar[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[2,2] * self.YLQSbar[2,mif2] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,0] * self.yu[mif2,0] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,0] * self.yu[mif2,0] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,0] * self.yu[mif2,0] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,0] * self.yu[mif2,1] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,0] * self.yu[mif2,1] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,0] * self.yu[mif2,1] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,0] * self.yu[mif2,2] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,0] * self.yu[mif2,2] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,0] * self.yu[mif2,2] * self.yubar[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[0,0] * self.YLQSbar[0,mif2] * self.yubar[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[0,1] * self.YLQSbar[0,mif2] * self.yubar[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[0,2] * self.YLQSbar[0,mif2] * self.yubar[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[1,0] * self.YLQSbar[1,mif2] * self.yubar[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[1,1] * self.YLQSbar[1,mif2] * self.yubar[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[1,2] * self.YLQSbar[1,mif2] * self.yubar[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[2,0] * self.YLQSbar[2,mif2] * self.yubar[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[2,1] * self.YLQSbar[2,mif2] * self.yubar[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[2,2] * self.YLQSbar[2,mif2] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,1] * self.yu[mif2,0] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,1] * self.yu[mif2,0] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,1] * self.yu[mif2,0] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,1] * self.yu[mif2,1] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,1] * self.yu[mif2,1] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,1] * self.yu[mif2,1] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,1] * self.yu[mif2,2] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,1] * self.yu[mif2,2] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,1] * self.yu[mif2,2] * self.yubar[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[0,0] * self.YLQSbar[0,mif2] * self.yubar[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[0,1] * self.YLQSbar[0,mif2] * self.yubar[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[0,2] * self.YLQSbar[0,mif2] * self.yubar[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[1,0] * self.YLQSbar[1,mif2] * self.yubar[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[1,1] * self.YLQSbar[1,mif2] * self.yubar[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[1,2] * self.YLQSbar[1,mif2] * self.yubar[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[2,0] * self.YLQSbar[2,mif2] * self.yubar[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[2,1] * self.YLQSbar[2,mif2] * self.yubar[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[2,2] * self.YLQSbar[2,mif2] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,2] * self.yu[mif2,0] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,2] * self.yu[mif2,0] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,2] * self.yu[mif2,0] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,2] * self.yu[mif2,1] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,2] * self.yu[mif2,1] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,2] * self.yu[mif2,1] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,2] * self.yu[mif2,2] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,2] * self.yu[mif2,2] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,2] * self.yu[mif2,2] * self.yubar[mif1,2])

    def alphaOHq3bar(self, mif1,mif2):
        return (-7/2304 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + 1/192 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[0,0] * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[0,0] * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[0,1] * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[0,1] * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[0,2] * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[0,2] * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[0,0] * self.YLQS[1,mif1] * self.YLQSbar[0,mif2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[0,0] * self.YLQS[1,mif1] * self.YLQSbar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,0] * self.YLQS[1,mif1] * self.YLQSbar[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[0,1] * self.YLQS[1,mif1] * self.YLQSbar[0,mif2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[0,1] * self.YLQS[1,mif1] * self.YLQSbar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,1] * self.YLQS[1,mif1] * self.YLQSbar[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[0,2] * self.YLQS[1,mif1] * self.YLQSbar[0,mif2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[0,2] * self.YLQS[1,mif1] * self.YLQSbar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,2] * self.YLQS[1,mif1] * self.YLQSbar[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[0,0] * self.YLQS[2,mif1] * self.YLQSbar[0,mif2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[0,0] * self.YLQS[2,mif1] * self.YLQSbar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,0] * self.YLQS[2,mif1] * self.YLQSbar[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[0,1] * self.YLQS[2,mif1] * self.YLQSbar[0,mif2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[0,1] * self.YLQS[2,mif1] * self.YLQSbar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,1] * self.YLQS[2,mif1] * self.YLQSbar[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[0,2] * self.YLQS[2,mif1] * self.YLQSbar[0,mif2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[0,2] * self.YLQS[2,mif1] * self.YLQSbar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,2] * self.YLQS[2,mif1] * self.YLQSbar[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[1,0] * self.YLQS[0,mif1] * self.YLQSbar[1,mif2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[1,0] * self.YLQS[0,mif1] * self.YLQSbar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[1,0] * self.YLQS[0,mif1] * self.YLQSbar[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[1,1] * self.YLQS[0,mif1] * self.YLQSbar[1,mif2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[1,1] * self.YLQS[0,mif1] * self.YLQSbar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[1,1] * self.YLQS[0,mif1] * self.YLQSbar[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[1,2] * self.YLQS[0,mif1] * self.YLQSbar[1,mif2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[1,2] * self.YLQS[0,mif1] * self.YLQSbar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[1,2] * self.YLQS[0,mif1] * self.YLQSbar[1,mif2] + -7/2304 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + 1/192 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[1,0] * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[1,0] * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[1,1] * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[1,1] * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[1,2] * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[1,2] * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,2] * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[1,0] * self.YLQS[2,mif1] * self.YLQSbar[1,mif2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[1,0] * self.YLQS[2,mif1] * self.YLQSbar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,0] * self.YLQS[2,mif1] * self.YLQSbar[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[1,1] * self.YLQS[2,mif1] * self.YLQSbar[1,mif2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[1,1] * self.YLQS[2,mif1] * self.YLQSbar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,1] * self.YLQS[2,mif1] * self.YLQSbar[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[1,2] * self.YLQS[2,mif1] * self.YLQSbar[1,mif2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[1,2] * self.YLQS[2,mif1] * self.YLQSbar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,2] * self.YLQS[2,mif1] * self.YLQSbar[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[2,0] * self.YLQS[0,mif1] * self.YLQSbar[2,mif2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[2,0] * self.YLQS[0,mif1] * self.YLQSbar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[2,0] * self.YLQS[0,mif1] * self.YLQSbar[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[2,1] * self.YLQS[0,mif1] * self.YLQSbar[2,mif2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[2,1] * self.YLQS[0,mif1] * self.YLQSbar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[2,1] * self.YLQS[0,mif1] * self.YLQSbar[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[2,2] * self.YLQS[0,mif1] * self.YLQSbar[2,mif2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[2,2] * self.YLQS[0,mif1] * self.YLQSbar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[2,2] * self.YLQS[0,mif1] * self.YLQSbar[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[2,0] * self.YLQS[1,mif1] * self.YLQSbar[2,mif2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[2,0] * self.YLQS[1,mif1] * self.YLQSbar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[2,0] * self.YLQS[1,mif1] * self.YLQSbar[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[2,1] * self.YLQS[1,mif1] * self.YLQSbar[2,mif2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[2,1] * self.YLQS[1,mif1] * self.YLQSbar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[2,1] * self.YLQS[1,mif1] * self.YLQSbar[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[2,2] * self.YLQS[1,mif1] * self.YLQSbar[2,mif2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[2,2] * self.YLQS[1,mif1] * self.YLQSbar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[2,2] * self.YLQS[1,mif1] * self.YLQSbar[2,mif2] + -7/2304 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + 1/192 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[2,0] * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[2,0] * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[2,1] * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[2,1] * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,1] * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[2,2] * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[2,2] * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,2] * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[0,0] * self.YLQS[0,mif1] * self.yu[mif2,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[0,1] * self.YLQS[0,mif1] * self.yu[mif2,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[0,2] * self.YLQS[0,mif1] * self.yu[mif2,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[1,0] * self.YLQS[1,mif1] * self.yu[mif2,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[1,1] * self.YLQS[1,mif1] * self.yu[mif2,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[1,2] * self.YLQS[1,mif1] * self.yu[mif2,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[2,0] * self.YLQS[2,mif1] * self.yu[mif2,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[2,1] * self.YLQS[2,mif1] * self.yu[mif2,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[2,2] * self.YLQS[2,mif1] * self.yu[mif2,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[0,0] * self.YLQS[0,mif1] * self.yu[mif2,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[0,1] * self.YLQS[0,mif1] * self.yu[mif2,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[0,2] * self.YLQS[0,mif1] * self.yu[mif2,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[1,0] * self.YLQS[1,mif1] * self.yu[mif2,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[1,1] * self.YLQS[1,mif1] * self.yu[mif2,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[1,2] * self.YLQS[1,mif1] * self.yu[mif2,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[2,0] * self.YLQS[2,mif1] * self.yu[mif2,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[2,1] * self.YLQS[2,mif1] * self.yu[mif2,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[2,2] * self.YLQS[2,mif1] * self.yu[mif2,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[0,0] * self.YLQS[0,mif1] * self.yu[mif2,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[0,1] * self.YLQS[0,mif1] * self.yu[mif2,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[0,2] * self.YLQS[0,mif1] * self.yu[mif2,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[1,0] * self.YLQS[1,mif1] * self.yu[mif2,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[1,1] * self.YLQS[1,mif1] * self.yu[mif2,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[1,2] * self.YLQS[1,mif1] * self.yu[mif2,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[2,0] * self.YLQS[2,mif1] * self.yu[mif2,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[2,1] * self.YLQS[2,mif1] * self.yu[mif2,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[2,2] * self.YLQS[2,mif1] * self.yu[mif2,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[0,0] * self.YLQSbar[0,mif2] * self.yubar[mif1,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[0,1] * self.YLQSbar[0,mif2] * self.yubar[mif1,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[0,2] * self.YLQSbar[0,mif2] * self.yubar[mif1,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[1,0] * self.YLQSbar[1,mif2] * self.yubar[mif1,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[1,1] * self.YLQSbar[1,mif2] * self.yubar[mif1,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[1,2] * self.YLQSbar[1,mif2] * self.yubar[mif1,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[2,0] * self.YLQSbar[2,mif2] * self.yubar[mif1,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[2,1] * self.YLQSbar[2,mif2] * self.yubar[mif1,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[2,2] * self.YLQSbar[2,mif2] * self.yubar[mif1,0] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,0] * self.yu[mif2,0] * self.yubar[mif1,0] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,0] * self.yu[mif2,0] * self.yubar[mif1,0] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,0] * self.yu[mif2,0] * self.yubar[mif1,0] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,0] * self.yu[mif2,1] * self.yubar[mif1,0] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,0] * self.yu[mif2,1] * self.yubar[mif1,0] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,0] * self.yu[mif2,1] * self.yubar[mif1,0] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,0] * self.yu[mif2,2] * self.yubar[mif1,0] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,0] * self.yu[mif2,2] * self.yubar[mif1,0] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,0] * self.yu[mif2,2] * self.yubar[mif1,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[0,0] * self.YLQSbar[0,mif2] * self.yubar[mif1,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[0,1] * self.YLQSbar[0,mif2] * self.yubar[mif1,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[0,2] * self.YLQSbar[0,mif2] * self.yubar[mif1,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[1,0] * self.YLQSbar[1,mif2] * self.yubar[mif1,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[1,1] * self.YLQSbar[1,mif2] * self.yubar[mif1,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[1,2] * self.YLQSbar[1,mif2] * self.yubar[mif1,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[2,0] * self.YLQSbar[2,mif2] * self.yubar[mif1,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[2,1] * self.YLQSbar[2,mif2] * self.yubar[mif1,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[2,2] * self.YLQSbar[2,mif2] * self.yubar[mif1,1] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,1] * self.yu[mif2,0] * self.yubar[mif1,1] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,1] * self.yu[mif2,0] * self.yubar[mif1,1] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,1] * self.yu[mif2,0] * self.yubar[mif1,1] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,1] * self.yu[mif2,1] * self.yubar[mif1,1] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,1] * self.yu[mif2,1] * self.yubar[mif1,1] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,1] * self.yu[mif2,1] * self.yubar[mif1,1] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,1] * self.yu[mif2,2] * self.yubar[mif1,1] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,1] * self.yu[mif2,2] * self.yubar[mif1,1] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,1] * self.yu[mif2,2] * self.yubar[mif1,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[0,0] * self.YLQSbar[0,mif2] * self.yubar[mif1,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[0,1] * self.YLQSbar[0,mif2] * self.yubar[mif1,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[0,2] * self.YLQSbar[0,mif2] * self.yubar[mif1,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[1,0] * self.YLQSbar[1,mif2] * self.yubar[mif1,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[1,1] * self.YLQSbar[1,mif2] * self.yubar[mif1,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[1,2] * self.YLQSbar[1,mif2] * self.yubar[mif1,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[2,0] * self.YLQSbar[2,mif2] * self.yubar[mif1,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[2,1] * self.YLQSbar[2,mif2] * self.yubar[mif1,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[2,2] * self.YLQSbar[2,mif2] * self.yubar[mif1,2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,2] * self.yu[mif2,0] * self.yubar[mif1,2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,2] * self.yu[mif2,0] * self.yubar[mif1,2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,2] * self.yu[mif2,0] * self.yubar[mif1,2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,2] * self.yu[mif2,1] * self.yubar[mif1,2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,2] * self.yu[mif2,1] * self.yubar[mif1,2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,2] * self.yu[mif2,1] * self.yubar[mif1,2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,2] * self.yu[mif2,2] * self.yubar[mif1,2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,2] * self.yu[mif2,2] * self.yubar[mif1,2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,2] * self.yu[mif2,2] * self.yubar[mif1,2])

    def alphaOHubar(self, mif1,mif2):
        return (-1/4320 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -23/3456 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,mif1] + -1/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,mif1] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,mif1] + 1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.YeuSbar[0,mif1] + -23/3456 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,mif1] + -1/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,mif1] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,mif1] + 1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.YeuSbar[1,mif1] + -23/3456 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,mif1] + -1/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,mif1] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,mif1] + 1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.YeuSbar[2,mif1] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,mif1] * self.yl[0,0] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,mif1] * self.yl[0,0] * self.ylbar[0,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.YeuSbar[0,mif1] * self.yl[0,0] * self.ylbar[0,0] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[0,mif1] * self.yl[0,1] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[0,mif1] * self.yl[0,1] * self.ylbar[0,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.YeuSbar[0,mif1] * self.yl[0,1] * self.ylbar[0,0] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[0,mif1] * self.yl[0,2] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[0,mif1] * self.yl[0,2] * self.ylbar[0,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.YeuSbar[0,mif1] * self.yl[0,2] * self.ylbar[0,0] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[1,mif1] * self.yl[0,0] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[1,mif1] * self.yl[0,0] * self.ylbar[0,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.YeuSbar[1,mif1] * self.yl[0,0] * self.ylbar[0,1] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,mif1] * self.yl[0,1] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,mif1] * self.yl[0,1] * self.ylbar[0,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.YeuSbar[1,mif1] * self.yl[0,1] * self.ylbar[0,1] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[1,mif1] * self.yl[0,2] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[1,mif1] * self.yl[0,2] * self.ylbar[0,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.YeuSbar[1,mif1] * self.yl[0,2] * self.ylbar[0,1] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[2,mif1] * self.yl[0,0] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[2,mif1] * self.yl[0,0] * self.ylbar[0,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.YeuSbar[2,mif1] * self.yl[0,0] * self.ylbar[0,2] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[2,mif1] * self.yl[0,1] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[2,mif1] * self.yl[0,1] * self.ylbar[0,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.YeuSbar[2,mif1] * self.yl[0,1] * self.ylbar[0,2] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,mif1] * self.yl[0,2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,mif1] * self.yl[0,2] * self.ylbar[0,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.YeuSbar[2,mif1] * self.yl[0,2] * self.ylbar[0,2] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,mif1] * self.yl[1,0] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,mif1] * self.yl[1,0] * self.ylbar[1,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.YeuSbar[0,mif1] * self.yl[1,0] * self.ylbar[1,0] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[0,mif1] * self.yl[1,1] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[0,mif1] * self.yl[1,1] * self.ylbar[1,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.YeuSbar[0,mif1] * self.yl[1,1] * self.ylbar[1,0] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[0,mif1] * self.yl[1,2] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[0,mif1] * self.yl[1,2] * self.ylbar[1,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.YeuSbar[0,mif1] * self.yl[1,2] * self.ylbar[1,0] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[1,mif1] * self.yl[1,0] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[1,mif1] * self.yl[1,0] * self.ylbar[1,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.YeuSbar[1,mif1] * self.yl[1,0] * self.ylbar[1,1] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,mif1] * self.yl[1,1] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,mif1] * self.yl[1,1] * self.ylbar[1,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.YeuSbar[1,mif1] * self.yl[1,1] * self.ylbar[1,1] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[1,mif1] * self.yl[1,2] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[1,mif1] * self.yl[1,2] * self.ylbar[1,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.YeuSbar[1,mif1] * self.yl[1,2] * self.ylbar[1,1] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[2,mif1] * self.yl[1,0] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[2,mif1] * self.yl[1,0] * self.ylbar[1,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.YeuSbar[2,mif1] * self.yl[1,0] * self.ylbar[1,2] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[2,mif1] * self.yl[1,1] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[2,mif1] * self.yl[1,1] * self.ylbar[1,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.YeuSbar[2,mif1] * self.yl[1,1] * self.ylbar[1,2] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,mif1] * self.yl[1,2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,mif1] * self.yl[1,2] * self.ylbar[1,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.YeuSbar[2,mif1] * self.yl[1,2] * self.ylbar[1,2] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,mif1] * self.yl[2,0] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,mif1] * self.yl[2,0] * self.ylbar[2,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.YeuSbar[0,mif1] * self.yl[2,0] * self.ylbar[2,0] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[0,mif1] * self.yl[2,1] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[0,mif1] * self.yl[2,1] * self.ylbar[2,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.YeuSbar[0,mif1] * self.yl[2,1] * self.ylbar[2,0] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[0,mif1] * self.yl[2,2] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[0,mif1] * self.yl[2,2] * self.ylbar[2,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.YeuSbar[0,mif1] * self.yl[2,2] * self.ylbar[2,0] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[1,mif1] * self.yl[2,0] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[1,mif1] * self.yl[2,0] * self.ylbar[2,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.YeuSbar[1,mif1] * self.yl[2,0] * self.ylbar[2,1] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,mif1] * self.yl[2,1] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,mif1] * self.yl[2,1] * self.ylbar[2,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.YeuSbar[1,mif1] * self.yl[2,1] * self.ylbar[2,1] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[1,mif1] * self.yl[2,2] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[1,mif1] * self.yl[2,2] * self.ylbar[2,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.YeuSbar[1,mif1] * self.yl[2,2] * self.ylbar[2,1] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[2,mif1] * self.yl[2,0] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[2,mif1] * self.yl[2,0] * self.ylbar[2,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.YeuSbar[2,mif1] * self.yl[2,0] * self.ylbar[2,2] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[2,mif1] * self.yl[2,1] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[2,mif1] * self.yl[2,1] * self.ylbar[2,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.YeuSbar[2,mif1] * self.yl[2,1] * self.ylbar[2,2] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,mif1] * self.yl[2,2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,mif1] * self.yl[2,2] * self.ylbar[2,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.YeuSbar[2,mif1] * self.yl[2,2] * self.ylbar[2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.YLQS[0,0] * self.yu[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.YLQS[0,0] * self.yu[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.YLQS[0,0] * self.yu[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,0] * self.YLQS[1,0] * self.yu[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,1] * self.YLQS[1,0] * self.yu[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,2] * self.YLQS[1,0] * self.yu[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[2,0] * self.YLQS[2,0] * self.yu[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[2,1] * self.YLQS[2,0] * self.yu[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[2,2] * self.YLQS[2,0] * self.yu[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.YLQS[0,1] * self.yu[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.YLQS[0,1] * self.yu[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.YLQS[0,1] * self.yu[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,0] * self.YLQS[1,1] * self.yu[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,1] * self.YLQS[1,1] * self.yu[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,2] * self.YLQS[1,1] * self.yu[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[2,0] * self.YLQS[2,1] * self.yu[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[2,1] * self.YLQS[2,1] * self.yu[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[2,2] * self.YLQS[2,1] * self.yu[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.YLQS[0,2] * self.yu[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.YLQS[0,2] * self.yu[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.YLQS[0,2] * self.yu[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,0] * self.YLQS[1,2] * self.yu[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,1] * self.YLQS[1,2] * self.yu[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,2] * self.YLQS[1,2] * self.yu[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[2,0] * self.YLQS[2,2] * self.yu[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[2,1] * self.YLQS[2,2] * self.yu[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[2,2] * self.YLQS[2,2] * self.yu[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif1] * self.ylbar[0,0] * self.YLQSbar[0,0] * self.yubar[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif1] * self.ylbar[0,1] * self.YLQSbar[0,0] * self.yubar[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif1] * self.ylbar[0,2] * self.YLQSbar[0,0] * self.yubar[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif1] * self.ylbar[1,0] * self.YLQSbar[1,0] * self.yubar[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif1] * self.ylbar[1,1] * self.YLQSbar[1,0] * self.yubar[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif1] * self.ylbar[1,2] * self.YLQSbar[1,0] * self.yubar[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif1] * self.ylbar[2,0] * self.YLQSbar[2,0] * self.yubar[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif1] * self.ylbar[2,1] * self.YLQSbar[2,0] * self.yubar[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif1] * self.ylbar[2,2] * self.YLQSbar[2,0] * self.yubar[0,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,0] * self.yu[0,mif1] * self.yubar[0,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,0] * self.yu[0,mif1] * self.yubar[0,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,0] * self.yu[0,mif1] * self.yubar[0,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,0] * self.yu[1,mif1] * self.yubar[0,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,0] * self.yu[1,mif1] * self.yubar[0,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,0] * self.yu[1,mif1] * self.yubar[0,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,0] * self.yu[2,mif1] * self.yubar[0,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,0] * self.yu[2,mif1] * self.yubar[0,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,0] * self.yu[2,mif1] * self.yubar[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif1] * self.ylbar[0,0] * self.YLQSbar[0,1] * self.yubar[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif1] * self.ylbar[0,1] * self.YLQSbar[0,1] * self.yubar[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif1] * self.ylbar[0,2] * self.YLQSbar[0,1] * self.yubar[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif1] * self.ylbar[1,0] * self.YLQSbar[1,1] * self.yubar[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif1] * self.ylbar[1,1] * self.YLQSbar[1,1] * self.yubar[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif1] * self.ylbar[1,2] * self.YLQSbar[1,1] * self.yubar[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif1] * self.ylbar[2,0] * self.YLQSbar[2,1] * self.yubar[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif1] * self.ylbar[2,1] * self.YLQSbar[2,1] * self.yubar[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif1] * self.ylbar[2,2] * self.YLQSbar[2,1] * self.yubar[1,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,1] * self.yu[0,mif1] * self.yubar[1,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,1] * self.yu[0,mif1] * self.yubar[1,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,1] * self.yu[0,mif1] * self.yubar[1,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,1] * self.yu[1,mif1] * self.yubar[1,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,1] * self.yu[1,mif1] * self.yubar[1,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,1] * self.yu[1,mif1] * self.yubar[1,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,1] * self.yu[2,mif1] * self.yubar[1,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,1] * self.yu[2,mif1] * self.yubar[1,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,1] * self.yu[2,mif1] * self.yubar[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif1] * self.ylbar[0,0] * self.YLQSbar[0,2] * self.yubar[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif1] * self.ylbar[0,1] * self.YLQSbar[0,2] * self.yubar[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif1] * self.ylbar[0,2] * self.YLQSbar[0,2] * self.yubar[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif1] * self.ylbar[1,0] * self.YLQSbar[1,2] * self.yubar[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif1] * self.ylbar[1,1] * self.YLQSbar[1,2] * self.yubar[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif1] * self.ylbar[1,2] * self.YLQSbar[1,2] * self.yubar[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif1] * self.ylbar[2,0] * self.YLQSbar[2,2] * self.yubar[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif1] * self.ylbar[2,1] * self.YLQSbar[2,2] * self.yubar[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif1] * self.ylbar[2,2] * self.YLQSbar[2,2] * self.yubar[2,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,2] * self.yu[0,mif1] * self.yubar[2,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,2] * self.yu[0,mif1] * self.yubar[2,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,2] * self.yu[0,mif1] * self.yubar[2,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,2] * self.yu[1,mif1] * self.yubar[2,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,2] * self.yu[1,mif1] * self.yubar[2,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,2] * self.yu[1,mif1] * self.yubar[2,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,2] * self.yu[2,mif1] * self.yubar[2,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,2] * self.yu[2,mif1] * self.yubar[2,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,2] * self.yu[2,mif1] * self.yubar[2,mif2])

    def alphaOHdbar(self, mif1,mif2):
        return (1/8640 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif1] * self.ydbar[0,mif2] * self.YLQS[0,0] * self.YLQSbar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif1] * self.ydbar[0,mif2] * self.YLQS[0,1] * self.YLQSbar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif1] * self.ydbar[0,mif2] * self.YLQS[0,2] * self.YLQSbar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif1] * self.ydbar[1,mif2] * self.YLQS[0,0] * self.YLQSbar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif1] * self.ydbar[1,mif2] * self.YLQS[0,1] * self.YLQSbar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif1] * self.ydbar[1,mif2] * self.YLQS[0,2] * self.YLQSbar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif1] * self.ydbar[2,mif2] * self.YLQS[0,0] * self.YLQSbar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif1] * self.ydbar[2,mif2] * self.YLQS[0,1] * self.YLQSbar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif1] * self.ydbar[2,mif2] * self.YLQS[0,2] * self.YLQSbar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif1] * self.ydbar[0,mif2] * self.YLQS[1,0] * self.YLQSbar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif1] * self.ydbar[0,mif2] * self.YLQS[1,1] * self.YLQSbar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif1] * self.ydbar[0,mif2] * self.YLQS[1,2] * self.YLQSbar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif1] * self.ydbar[1,mif2] * self.YLQS[1,0] * self.YLQSbar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif1] * self.ydbar[1,mif2] * self.YLQS[1,1] * self.YLQSbar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif1] * self.ydbar[1,mif2] * self.YLQS[1,2] * self.YLQSbar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif1] * self.ydbar[2,mif2] * self.YLQS[1,0] * self.YLQSbar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif1] * self.ydbar[2,mif2] * self.YLQS[1,1] * self.YLQSbar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif1] * self.ydbar[2,mif2] * self.YLQS[1,2] * self.YLQSbar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif1] * self.ydbar[0,mif2] * self.YLQS[2,0] * self.YLQSbar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif1] * self.ydbar[0,mif2] * self.YLQS[2,1] * self.YLQSbar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif1] * self.ydbar[0,mif2] * self.YLQS[2,2] * self.YLQSbar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif1] * self.ydbar[1,mif2] * self.YLQS[2,0] * self.YLQSbar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif1] * self.ydbar[1,mif2] * self.YLQS[2,1] * self.YLQSbar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif1] * self.ydbar[1,mif2] * self.YLQS[2,2] * self.YLQSbar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif1] * self.ydbar[2,mif2] * self.YLQS[2,0] * self.YLQSbar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif1] * self.ydbar[2,mif2] * self.YLQS[2,1] * self.YLQSbar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif1] * self.ydbar[2,mif2] * self.YLQS[2,2] * self.YLQSbar[2,2])

    def alphaOHudbar(self, mif1,mif2):
        return (-1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YeuSbar[0,mif1] * self.ylbar[0,0] * self.YLQSbar[0,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YeuSbar[1,mif1] * self.ylbar[0,1] * self.YLQSbar[0,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YeuSbar[2,mif1] * self.ylbar[0,2] * self.YLQSbar[0,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YeuSbar[0,mif1] * self.ylbar[0,0] * self.YLQSbar[0,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YeuSbar[1,mif1] * self.ylbar[0,1] * self.YLQSbar[0,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YeuSbar[2,mif1] * self.ylbar[0,2] * self.YLQSbar[0,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YeuSbar[0,mif1] * self.ylbar[0,0] * self.YLQSbar[0,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YeuSbar[1,mif1] * self.ylbar[0,1] * self.YLQSbar[0,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YeuSbar[2,mif1] * self.ylbar[0,2] * self.YLQSbar[0,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YeuSbar[0,mif1] * self.ylbar[1,0] * self.YLQSbar[1,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YeuSbar[1,mif1] * self.ylbar[1,1] * self.YLQSbar[1,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YeuSbar[2,mif1] * self.ylbar[1,2] * self.YLQSbar[1,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YeuSbar[0,mif1] * self.ylbar[1,0] * self.YLQSbar[1,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YeuSbar[1,mif1] * self.ylbar[1,1] * self.YLQSbar[1,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YeuSbar[2,mif1] * self.ylbar[1,2] * self.YLQSbar[1,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YeuSbar[0,mif1] * self.ylbar[1,0] * self.YLQSbar[1,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YeuSbar[1,mif1] * self.ylbar[1,1] * self.YLQSbar[1,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YeuSbar[2,mif1] * self.ylbar[1,2] * self.YLQSbar[1,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YeuSbar[0,mif1] * self.ylbar[2,0] * self.YLQSbar[2,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YeuSbar[1,mif1] * self.ylbar[2,1] * self.YLQSbar[2,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YeuSbar[2,mif1] * self.ylbar[2,2] * self.YLQSbar[2,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YeuSbar[0,mif1] * self.ylbar[2,0] * self.YLQSbar[2,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YeuSbar[1,mif1] * self.ylbar[2,1] * self.YLQSbar[2,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YeuSbar[2,mif1] * self.ylbar[2,2] * self.YLQSbar[2,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YeuSbar[0,mif1] * self.ylbar[2,0] * self.YLQSbar[2,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YeuSbar[1,mif1] * self.ylbar[2,1] * self.YLQSbar[2,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YeuSbar[2,mif1] * self.ylbar[2,2] * self.YLQSbar[2,2] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YLQS[0,0] * self.YLQSbar[0,0] * self.yu[0,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YLQS[0,0] * self.YLQSbar[0,1] * self.yu[0,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YLQS[0,0] * self.YLQSbar[0,2] * self.yu[0,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YLQS[1,0] * self.YLQSbar[1,0] * self.yu[0,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YLQS[1,0] * self.YLQSbar[1,1] * self.yu[0,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YLQS[1,0] * self.YLQSbar[1,2] * self.yu[0,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YLQS[2,0] * self.YLQSbar[2,0] * self.yu[0,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YLQS[2,0] * self.YLQSbar[2,1] * self.yu[0,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YLQS[2,0] * self.YLQSbar[2,2] * self.yu[0,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YLQS[0,1] * self.YLQSbar[0,0] * self.yu[1,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YLQS[0,1] * self.YLQSbar[0,1] * self.yu[1,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YLQS[0,1] * self.YLQSbar[0,2] * self.yu[1,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YLQS[1,1] * self.YLQSbar[1,0] * self.yu[1,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YLQS[1,1] * self.YLQSbar[1,1] * self.yu[1,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YLQS[1,1] * self.YLQSbar[1,2] * self.yu[1,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YLQS[2,1] * self.YLQSbar[2,0] * self.yu[1,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YLQS[2,1] * self.YLQSbar[2,1] * self.yu[1,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YLQS[2,1] * self.YLQSbar[2,2] * self.yu[1,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YLQS[0,2] * self.YLQSbar[0,0] * self.yu[2,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YLQS[0,2] * self.YLQSbar[0,1] * self.yu[2,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YLQS[0,2] * self.YLQSbar[0,2] * self.yu[2,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YLQS[1,2] * self.YLQSbar[1,0] * self.yu[2,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YLQS[1,2] * self.YLQSbar[1,1] * self.yu[2,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YLQS[1,2] * self.YLQSbar[1,2] * self.yu[2,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif2] * self.YLQS[2,2] * self.YLQSbar[2,0] * self.yu[2,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif2] * self.YLQS[2,2] * self.YLQSbar[2,1] * self.yu[2,mif1] + 1/96 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif2] * self.YLQS[2,2] * self.YLQSbar[2,2] * self.yu[2,mif1])

    def alphaOHl1bar(self, mif1,mif2):
        return (1/5760 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,0] * self.yl[mif2,0] * self.ylbar[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,1] * self.yl[mif2,0] * self.ylbar[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,2] * self.yl[mif2,0] * self.ylbar[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[0,0] * self.yl[mif2,1] * self.ylbar[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[0,1] * self.yl[mif2,1] * self.ylbar[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[0,2] * self.yl[mif2,1] * self.ylbar[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[0,0] * self.yl[mif2,2] * self.ylbar[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[0,1] * self.yl[mif2,2] * self.ylbar[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[0,2] * self.yl[mif2,2] * self.ylbar[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[1,0] * self.yl[mif2,0] * self.ylbar[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[1,1] * self.yl[mif2,0] * self.ylbar[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[1,2] * self.yl[mif2,0] * self.ylbar[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,0] * self.yl[mif2,1] * self.ylbar[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,1] * self.yl[mif2,1] * self.ylbar[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,2] * self.yl[mif2,1] * self.ylbar[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[1,0] * self.yl[mif2,2] * self.ylbar[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[1,1] * self.yl[mif2,2] * self.ylbar[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[1,2] * self.yl[mif2,2] * self.ylbar[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[2,0] * self.yl[mif2,0] * self.ylbar[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[2,1] * self.yl[mif2,0] * self.ylbar[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[2,2] * self.yl[mif2,0] * self.ylbar[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[2,0] * self.yl[mif2,1] * self.ylbar[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[2,1] * self.yl[mif2,1] * self.ylbar[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[2,2] * self.yl[mif2,1] * self.ylbar[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,0] * self.yl[mif2,2] * self.ylbar[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,1] * self.yl[mif2,2] * self.ylbar[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,2] * self.yl[mif2,2] * self.ylbar[mif1,2] + 1/768 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + 1/256 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + 1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -1/192 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[0,0] * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[0,1] * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[0,2] * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[0,0] * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[0,1] * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[0,2] * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[1,0] * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[1,1] * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[1,2] * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] + 1/768 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + 1/256 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + 1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -1/192 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,2] * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[1,0] * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[1,1] * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[1,2] * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[2,0] * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[2,1] * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[2,2] * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[2,0] * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[2,1] * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[2,2] * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] + 1/768 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + 1/256 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + 1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -1/192 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,1] * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,2] * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[mif2,1] * self.YLQS[mif1,0] * self.yu[0,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[mif2,2] * self.YLQS[mif1,0] * self.yu[0,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[mif2,0] * self.YLQS[mif1,0] * self.yu[0,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[mif2,1] * self.YLQS[mif1,0] * self.yu[0,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[mif2,2] * self.YLQS[mif1,0] * self.yu[0,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[mif2,0] * self.YLQS[mif1,0] * self.yu[0,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[mif2,1] * self.YLQS[mif1,0] * self.yu[0,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[mif2,2] * self.YLQS[mif1,0] * self.yu[0,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[mif2,0] * self.YLQS[mif1,1] * self.yu[1,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[mif2,1] * self.YLQS[mif1,1] * self.yu[1,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[mif2,2] * self.YLQS[mif1,1] * self.yu[1,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[mif2,0] * self.YLQS[mif1,1] * self.yu[1,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[mif2,1] * self.YLQS[mif1,1] * self.yu[1,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[mif2,2] * self.YLQS[mif1,1] * self.yu[1,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[mif2,0] * self.YLQS[mif1,1] * self.yu[1,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[mif2,1] * self.YLQS[mif1,1] * self.yu[1,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[mif2,2] * self.YLQS[mif1,1] * self.yu[1,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[mif2,0] * self.YLQS[mif1,2] * self.yu[2,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[mif2,1] * self.YLQS[mif1,2] * self.yu[2,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[mif2,2] * self.YLQS[mif1,2] * self.yu[2,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[mif2,0] * self.YLQS[mif1,2] * self.yu[2,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[mif2,1] * self.YLQS[mif1,2] * self.yu[2,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[mif2,2] * self.YLQS[mif1,2] * self.yu[2,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[mif2,0] * self.YLQS[mif1,2] * self.yu[2,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[mif2,1] * self.YLQS[mif1,2] * self.yu[2,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[mif2,2] * self.YLQS[mif1,2] * self.yu[2,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[mif1,0] * self.YLQSbar[mif2,0] * self.yubar[0,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[mif1,1] * self.YLQSbar[mif2,0] * self.yubar[0,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[mif1,2] * self.YLQSbar[mif2,0] * self.yubar[0,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] * self.yu[0,0] * self.yubar[0,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] * self.yu[0,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] * self.yu[0,0] * self.yubar[0,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] * self.yu[1,0] * self.yubar[0,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] * self.yu[1,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] * self.yu[1,0] * self.yubar[0,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] * self.yu[2,0] * self.yubar[0,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] * self.yu[2,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] * self.yu[2,0] * self.yubar[0,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[mif1,0] * self.YLQSbar[mif2,0] * self.yubar[0,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[mif1,1] * self.YLQSbar[mif2,0] * self.yubar[0,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[mif1,2] * self.YLQSbar[mif2,0] * self.yubar[0,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] * self.yu[0,1] * self.yubar[0,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] * self.yu[0,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] * self.yu[0,1] * self.yubar[0,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] * self.yu[1,1] * self.yubar[0,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] * self.yu[1,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] * self.yu[1,1] * self.yubar[0,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] * self.yu[2,1] * self.yubar[0,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] * self.yu[2,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] * self.yu[2,1] * self.yubar[0,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[mif1,0] * self.YLQSbar[mif2,0] * self.yubar[0,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[mif1,1] * self.YLQSbar[mif2,0] * self.yubar[0,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[mif1,2] * self.YLQSbar[mif2,0] * self.yubar[0,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] * self.yu[0,2] * self.yubar[0,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] * self.yu[0,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] * self.yu[0,2] * self.yubar[0,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] * self.yu[1,2] * self.yubar[0,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] * self.yu[1,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] * self.yu[1,2] * self.yubar[0,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] * self.yu[2,2] * self.yubar[0,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] * self.yu[2,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] * self.yu[2,2] * self.yubar[0,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[mif1,0] * self.YLQSbar[mif2,1] * self.yubar[1,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[mif1,1] * self.YLQSbar[mif2,1] * self.yubar[1,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[mif1,2] * self.YLQSbar[mif2,1] * self.yubar[1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] * self.yu[0,0] * self.yubar[1,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] * self.yu[0,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] * self.yu[0,0] * self.yubar[1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] * self.yu[1,0] * self.yubar[1,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] * self.yu[1,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] * self.yu[1,0] * self.yubar[1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] * self.yu[2,0] * self.yubar[1,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] * self.yu[2,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] * self.yu[2,0] * self.yubar[1,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[mif1,0] * self.YLQSbar[mif2,1] * self.yubar[1,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[mif1,1] * self.YLQSbar[mif2,1] * self.yubar[1,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[mif1,2] * self.YLQSbar[mif2,1] * self.yubar[1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] * self.yu[0,1] * self.yubar[1,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] * self.yu[0,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] * self.yu[0,1] * self.yubar[1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] * self.yu[1,1] * self.yubar[1,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] * self.yu[1,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] * self.yu[1,1] * self.yubar[1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] * self.yu[2,1] * self.yubar[1,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] * self.yu[2,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] * self.yu[2,1] * self.yubar[1,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[mif1,0] * self.YLQSbar[mif2,1] * self.yubar[1,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[mif1,1] * self.YLQSbar[mif2,1] * self.yubar[1,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[mif1,2] * self.YLQSbar[mif2,1] * self.yubar[1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] * self.yu[0,2] * self.yubar[1,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] * self.yu[0,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] * self.yu[0,2] * self.yubar[1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] * self.yu[1,2] * self.yubar[1,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] * self.yu[1,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] * self.yu[1,2] * self.yubar[1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] * self.yu[2,2] * self.yubar[1,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] * self.yu[2,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] * self.yu[2,2] * self.yubar[1,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[mif1,0] * self.YLQSbar[mif2,2] * self.yubar[2,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[mif1,1] * self.YLQSbar[mif2,2] * self.yubar[2,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[mif1,2] * self.YLQSbar[mif2,2] * self.yubar[2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] * self.yu[0,0] * self.yubar[2,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] * self.yu[0,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] * self.yu[0,0] * self.yubar[2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] * self.yu[1,0] * self.yubar[2,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] * self.yu[1,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] * self.yu[1,0] * self.yubar[2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] * self.yu[2,0] * self.yubar[2,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] * self.yu[2,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] * self.yu[2,0] * self.yubar[2,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[mif1,0] * self.YLQSbar[mif2,2] * self.yubar[2,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[mif1,1] * self.YLQSbar[mif2,2] * self.yubar[2,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[mif1,2] * self.YLQSbar[mif2,2] * self.yubar[2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] * self.yu[0,1] * self.yubar[2,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] * self.yu[0,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] * self.yu[0,1] * self.yubar[2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] * self.yu[1,1] * self.yubar[2,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] * self.yu[1,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] * self.yu[1,1] * self.yubar[2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] * self.yu[2,1] * self.yubar[2,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] * self.yu[2,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] * self.yu[2,1] * self.yubar[2,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[mif1,0] * self.YLQSbar[mif2,2] * self.yubar[2,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[mif1,1] * self.YLQSbar[mif2,2] * self.yubar[2,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[mif1,2] * self.YLQSbar[mif2,2] * self.yubar[2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] * self.yu[0,2] * self.yubar[2,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] * self.yu[0,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] * self.yu[0,2] * self.yubar[2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] * self.yu[1,2] * self.yubar[2,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] * self.yu[1,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] * self.yu[1,2] * self.yubar[2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] * self.yu[2,2] * self.yubar[2,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] * self.yu[2,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] * self.yu[2,2] * self.yubar[2,2])

    def alphaOHl3bar(self, mif1,mif2):
        return (-1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,0] * self.yl[mif2,0] * self.ylbar[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,1] * self.yl[mif2,0] * self.ylbar[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,2] * self.yl[mif2,0] * self.ylbar[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[0,0] * self.yl[mif2,1] * self.ylbar[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[0,1] * self.yl[mif2,1] * self.ylbar[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[0,2] * self.yl[mif2,1] * self.ylbar[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[0,0] * self.yl[mif2,2] * self.ylbar[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[0,1] * self.yl[mif2,2] * self.ylbar[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[0,2] * self.yl[mif2,2] * self.ylbar[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[1,0] * self.yl[mif2,0] * self.ylbar[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[1,1] * self.yl[mif2,0] * self.ylbar[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[1,2] * self.yl[mif2,0] * self.ylbar[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,0] * self.yl[mif2,1] * self.ylbar[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,1] * self.yl[mif2,1] * self.ylbar[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,2] * self.yl[mif2,1] * self.ylbar[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[1,0] * self.yl[mif2,2] * self.ylbar[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[1,1] * self.yl[mif2,2] * self.ylbar[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[1,2] * self.yl[mif2,2] * self.ylbar[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[2,0] * self.yl[mif2,0] * self.ylbar[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[2,1] * self.yl[mif2,0] * self.ylbar[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[2,2] * self.yl[mif2,0] * self.ylbar[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[2,0] * self.yl[mif2,1] * self.ylbar[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[2,1] * self.yl[mif2,1] * self.ylbar[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[2,2] * self.yl[mif2,1] * self.ylbar[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,0] * self.yl[mif2,2] * self.ylbar[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,1] * self.yl[mif2,2] * self.ylbar[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,2] * self.yl[mif2,2] * self.ylbar[mif1,2] + -7/768 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -3/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + 1/64 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[0,0] * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[0,1] * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[0,2] * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[0,0] * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[0,1] * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[0,2] * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[1,0] * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[1,1] * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[1,2] * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] + -7/768 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -3/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + 1/64 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,2] * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[1,0] * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[1,1] * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[1,2] * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[2,0] * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[2,1] * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[2,2] * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[2,0] * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[2,1] * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[2,2] * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] + -7/768 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -3/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + 1/64 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,1] * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,2] * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[mif2,1] * self.YLQS[mif1,0] * self.yu[0,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[mif2,2] * self.YLQS[mif1,0] * self.yu[0,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[mif2,0] * self.YLQS[mif1,0] * self.yu[0,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[mif2,1] * self.YLQS[mif1,0] * self.yu[0,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[mif2,2] * self.YLQS[mif1,0] * self.yu[0,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[mif2,0] * self.YLQS[mif1,0] * self.yu[0,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[mif2,1] * self.YLQS[mif1,0] * self.yu[0,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[mif2,2] * self.YLQS[mif1,0] * self.yu[0,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[mif2,0] * self.YLQS[mif1,1] * self.yu[1,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[mif2,1] * self.YLQS[mif1,1] * self.yu[1,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[mif2,2] * self.YLQS[mif1,1] * self.yu[1,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[mif2,0] * self.YLQS[mif1,1] * self.yu[1,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[mif2,1] * self.YLQS[mif1,1] * self.yu[1,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[mif2,2] * self.YLQS[mif1,1] * self.yu[1,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[mif2,0] * self.YLQS[mif1,1] * self.yu[1,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[mif2,1] * self.YLQS[mif1,1] * self.yu[1,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[mif2,2] * self.YLQS[mif1,1] * self.yu[1,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[mif2,0] * self.YLQS[mif1,2] * self.yu[2,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[mif2,1] * self.YLQS[mif1,2] * self.yu[2,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[mif2,2] * self.YLQS[mif1,2] * self.yu[2,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[mif2,0] * self.YLQS[mif1,2] * self.yu[2,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[mif2,1] * self.YLQS[mif1,2] * self.yu[2,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[mif2,2] * self.YLQS[mif1,2] * self.yu[2,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[mif2,0] * self.YLQS[mif1,2] * self.yu[2,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[mif2,1] * self.YLQS[mif1,2] * self.yu[2,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[mif2,2] * self.YLQS[mif1,2] * self.yu[2,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[mif1,0] * self.YLQSbar[mif2,0] * self.yubar[0,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[mif1,1] * self.YLQSbar[mif2,0] * self.yubar[0,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[mif1,2] * self.YLQSbar[mif2,0] * self.yubar[0,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] * self.yu[0,0] * self.yubar[0,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] * self.yu[0,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] * self.yu[0,0] * self.yubar[0,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] * self.yu[1,0] * self.yubar[0,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] * self.yu[1,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] * self.yu[1,0] * self.yubar[0,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] * self.yu[2,0] * self.yubar[0,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] * self.yu[2,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] * self.yu[2,0] * self.yubar[0,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[mif1,0] * self.YLQSbar[mif2,0] * self.yubar[0,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[mif1,1] * self.YLQSbar[mif2,0] * self.yubar[0,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[mif1,2] * self.YLQSbar[mif2,0] * self.yubar[0,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] * self.yu[0,1] * self.yubar[0,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] * self.yu[0,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] * self.yu[0,1] * self.yubar[0,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] * self.yu[1,1] * self.yubar[0,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] * self.yu[1,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] * self.yu[1,1] * self.yubar[0,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] * self.yu[2,1] * self.yubar[0,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] * self.yu[2,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] * self.yu[2,1] * self.yubar[0,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[mif1,0] * self.YLQSbar[mif2,0] * self.yubar[0,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[mif1,1] * self.YLQSbar[mif2,0] * self.yubar[0,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[mif1,2] * self.YLQSbar[mif2,0] * self.yubar[0,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] * self.yu[0,2] * self.yubar[0,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] * self.yu[0,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] * self.yu[0,2] * self.yubar[0,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] * self.yu[1,2] * self.yubar[0,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] * self.yu[1,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] * self.yu[1,2] * self.yubar[0,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] * self.yu[2,2] * self.yubar[0,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] * self.yu[2,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] * self.yu[2,2] * self.yubar[0,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[mif1,0] * self.YLQSbar[mif2,1] * self.yubar[1,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[mif1,1] * self.YLQSbar[mif2,1] * self.yubar[1,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[mif1,2] * self.YLQSbar[mif2,1] * self.yubar[1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] * self.yu[0,0] * self.yubar[1,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] * self.yu[0,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] * self.yu[0,0] * self.yubar[1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] * self.yu[1,0] * self.yubar[1,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] * self.yu[1,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] * self.yu[1,0] * self.yubar[1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] * self.yu[2,0] * self.yubar[1,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] * self.yu[2,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] * self.yu[2,0] * self.yubar[1,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[mif1,0] * self.YLQSbar[mif2,1] * self.yubar[1,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[mif1,1] * self.YLQSbar[mif2,1] * self.yubar[1,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[mif1,2] * self.YLQSbar[mif2,1] * self.yubar[1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] * self.yu[0,1] * self.yubar[1,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] * self.yu[0,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] * self.yu[0,1] * self.yubar[1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] * self.yu[1,1] * self.yubar[1,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] * self.yu[1,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] * self.yu[1,1] * self.yubar[1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] * self.yu[2,1] * self.yubar[1,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] * self.yu[2,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] * self.yu[2,1] * self.yubar[1,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[mif1,0] * self.YLQSbar[mif2,1] * self.yubar[1,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[mif1,1] * self.YLQSbar[mif2,1] * self.yubar[1,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[mif1,2] * self.YLQSbar[mif2,1] * self.yubar[1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] * self.yu[0,2] * self.yubar[1,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] * self.yu[0,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] * self.yu[0,2] * self.yubar[1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] * self.yu[1,2] * self.yubar[1,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] * self.yu[1,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] * self.yu[1,2] * self.yubar[1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] * self.yu[2,2] * self.yubar[1,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] * self.yu[2,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] * self.yu[2,2] * self.yubar[1,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,0] * self.ylbar[mif1,0] * self.YLQSbar[mif2,2] * self.yubar[2,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,0] * self.ylbar[mif1,1] * self.YLQSbar[mif2,2] * self.yubar[2,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,0] * self.ylbar[mif1,2] * self.YLQSbar[mif2,2] * self.yubar[2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] * self.yu[0,0] * self.yubar[2,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] * self.yu[0,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] * self.yu[0,0] * self.yubar[2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] * self.yu[1,0] * self.yubar[2,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] * self.yu[1,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] * self.yu[1,0] * self.yubar[2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] * self.yu[2,0] * self.yubar[2,0] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] * self.yu[2,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] * self.yu[2,0] * self.yubar[2,0] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,1] * self.ylbar[mif1,0] * self.YLQSbar[mif2,2] * self.yubar[2,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,1] * self.ylbar[mif1,1] * self.YLQSbar[mif2,2] * self.yubar[2,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,1] * self.ylbar[mif1,2] * self.YLQSbar[mif2,2] * self.yubar[2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] * self.yu[0,1] * self.yubar[2,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] * self.yu[0,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] * self.yu[0,1] * self.yubar[2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] * self.yu[1,1] * self.yubar[2,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] * self.yu[1,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] * self.yu[1,1] * self.yubar[2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] * self.yu[2,1] * self.yubar[2,1] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] * self.yu[2,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] * self.yu[2,1] * self.yubar[2,1] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,2] * self.ylbar[mif1,0] * self.YLQSbar[mif2,2] * self.yubar[2,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,2] * self.ylbar[mif1,1] * self.YLQSbar[mif2,2] * self.yubar[2,2] + 3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,2] * self.ylbar[mif1,2] * self.YLQSbar[mif2,2] * self.yubar[2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] * self.yu[0,2] * self.yubar[2,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] * self.yu[0,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] * self.yu[0,2] * self.yubar[2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] * self.yu[1,2] * self.yubar[2,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] * self.yu[1,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] * self.yu[1,2] * self.yubar[2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] * self.yu[2,2] * self.yubar[2,2] + 3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] * self.yu[2,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] * self.yu[2,2] * self.yubar[2,2])

    def alphaOHebar(self, mif1,mif2):
        return (1/2880 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[mif1,0] + 1/64 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[mif1,0] + 1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[mif1,0] + -1/48 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YeuSbar[mif1,0] + 1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[mif1,1] + 1/64 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[mif1,1] + 1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[mif1,1] + -1/48 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YeuSbar[mif1,1] + 1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[mif1,2] + 1/64 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[mif1,2] + 1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[mif1,2] + -1/48 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YeuSbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif1] * self.ylbar[0,mif2] * self.YLQS[0,0] * self.YLQSbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif1] * self.ylbar[0,mif2] * self.YLQS[1,0] * self.YLQSbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif1] * self.ylbar[0,mif2] * self.YLQS[2,0] * self.YLQSbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif1] * self.ylbar[0,mif2] * self.YLQS[0,1] * self.YLQSbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif1] * self.ylbar[0,mif2] * self.YLQS[1,1] * self.YLQSbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif1] * self.ylbar[0,mif2] * self.YLQS[2,1] * self.YLQSbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif1] * self.ylbar[0,mif2] * self.YLQS[0,2] * self.YLQSbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif1] * self.ylbar[0,mif2] * self.YLQS[1,2] * self.YLQSbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif1] * self.ylbar[0,mif2] * self.YLQS[2,2] * self.YLQSbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif1] * self.ylbar[1,mif2] * self.YLQS[0,0] * self.YLQSbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif1] * self.ylbar[1,mif2] * self.YLQS[1,0] * self.YLQSbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif1] * self.ylbar[1,mif2] * self.YLQS[2,0] * self.YLQSbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif1] * self.ylbar[1,mif2] * self.YLQS[0,1] * self.YLQSbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif1] * self.ylbar[1,mif2] * self.YLQS[1,1] * self.YLQSbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif1] * self.ylbar[1,mif2] * self.YLQS[2,1] * self.YLQSbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif1] * self.ylbar[1,mif2] * self.YLQS[0,2] * self.YLQSbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif1] * self.ylbar[1,mif2] * self.YLQS[1,2] * self.YLQSbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif1] * self.ylbar[1,mif2] * self.YLQS[2,2] * self.YLQSbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif1] * self.ylbar[2,mif2] * self.YLQS[0,0] * self.YLQSbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif1] * self.ylbar[2,mif2] * self.YLQS[1,0] * self.YLQSbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif1] * self.ylbar[2,mif2] * self.YLQS[2,0] * self.YLQSbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif1] * self.ylbar[2,mif2] * self.YLQS[0,1] * self.YLQSbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif1] * self.ylbar[2,mif2] * self.YLQS[1,1] * self.YLQSbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif1] * self.ylbar[2,mif2] * self.YLQS[2,1] * self.YLQSbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif1] * self.ylbar[2,mif2] * self.YLQS[0,2] * self.YLQSbar[2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif1] * self.ylbar[2,mif2] * self.YLQS[1,2] * self.YLQSbar[2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif1] * self.ylbar[2,mif2] * self.YLQS[2,2] * self.YLQSbar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[0,mif1] * self.YLQS[0,0] * self.yu[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[1,mif1] * self.YLQS[1,0] * self.yu[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[2,mif1] * self.YLQS[2,0] * self.yu[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[0,mif1] * self.YLQS[0,0] * self.yu[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[1,mif1] * self.YLQS[1,0] * self.yu[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[2,mif1] * self.YLQS[2,0] * self.yu[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[0,mif1] * self.YLQS[0,0] * self.yu[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[1,mif1] * self.YLQS[1,0] * self.yu[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[2,mif1] * self.YLQS[2,0] * self.yu[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[0,mif1] * self.YLQS[0,1] * self.yu[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[1,mif1] * self.YLQS[1,1] * self.yu[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[2,mif1] * self.YLQS[2,1] * self.yu[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[0,mif1] * self.YLQS[0,1] * self.yu[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[1,mif1] * self.YLQS[1,1] * self.yu[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[2,mif1] * self.YLQS[2,1] * self.yu[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[0,mif1] * self.YLQS[0,1] * self.yu[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[1,mif1] * self.YLQS[1,1] * self.yu[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[2,mif1] * self.YLQS[2,1] * self.yu[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[0,mif1] * self.YLQS[0,2] * self.yu[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[1,mif1] * self.YLQS[1,2] * self.yu[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[2,mif1] * self.YLQS[2,2] * self.yu[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[0,mif1] * self.YLQS[0,2] * self.yu[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[1,mif1] * self.YLQS[1,2] * self.yu[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[2,mif1] * self.YLQS[2,2] * self.yu[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[0,mif1] * self.YLQS[0,2] * self.yu[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[1,mif1] * self.YLQS[1,2] * self.yu[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[2,mif1] * self.YLQS[2,2] * self.yu[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif1,0] * self.ylbar[0,mif2] * self.YLQSbar[0,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif1,0] * self.ylbar[1,mif2] * self.YLQSbar[1,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif1,0] * self.ylbar[2,mif2] * self.YLQSbar[2,0] * self.yubar[0,0] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[mif1,0] * self.yu[0,0] * self.yubar[0,0] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[mif1,0] * self.yu[0,0] * self.yubar[0,0] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YeuSbar[mif1,0] * self.yu[0,0] * self.yubar[0,0] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[mif1,0] * self.yu[0,1] * self.yubar[0,0] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[mif1,0] * self.yu[0,1] * self.yubar[0,0] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YeuSbar[mif1,0] * self.yu[0,1] * self.yubar[0,0] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[mif1,0] * self.yu[0,2] * self.yubar[0,0] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[mif1,0] * self.yu[0,2] * self.yubar[0,0] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YeuSbar[mif1,0] * self.yu[0,2] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif1,1] * self.ylbar[0,mif2] * self.YLQSbar[0,0] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif1,1] * self.ylbar[1,mif2] * self.YLQSbar[1,0] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif1,1] * self.ylbar[2,mif2] * self.YLQSbar[2,0] * self.yubar[0,1] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[mif1,1] * self.yu[0,0] * self.yubar[0,1] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[mif1,1] * self.yu[0,0] * self.yubar[0,1] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YeuSbar[mif1,1] * self.yu[0,0] * self.yubar[0,1] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[mif1,1] * self.yu[0,1] * self.yubar[0,1] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[mif1,1] * self.yu[0,1] * self.yubar[0,1] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YeuSbar[mif1,1] * self.yu[0,1] * self.yubar[0,1] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[mif1,1] * self.yu[0,2] * self.yubar[0,1] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[mif1,1] * self.yu[0,2] * self.yubar[0,1] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YeuSbar[mif1,1] * self.yu[0,2] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif1,2] * self.ylbar[0,mif2] * self.YLQSbar[0,0] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif1,2] * self.ylbar[1,mif2] * self.YLQSbar[1,0] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif1,2] * self.ylbar[2,mif2] * self.YLQSbar[2,0] * self.yubar[0,2] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[mif1,2] * self.yu[0,0] * self.yubar[0,2] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[mif1,2] * self.yu[0,0] * self.yubar[0,2] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YeuSbar[mif1,2] * self.yu[0,0] * self.yubar[0,2] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[mif1,2] * self.yu[0,1] * self.yubar[0,2] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[mif1,2] * self.yu[0,1] * self.yubar[0,2] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YeuSbar[mif1,2] * self.yu[0,1] * self.yubar[0,2] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[mif1,2] * self.yu[0,2] * self.yubar[0,2] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[mif1,2] * self.yu[0,2] * self.yubar[0,2] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YeuSbar[mif1,2] * self.yu[0,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif1,0] * self.ylbar[0,mif2] * self.YLQSbar[0,1] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif1,0] * self.ylbar[1,mif2] * self.YLQSbar[1,1] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif1,0] * self.ylbar[2,mif2] * self.YLQSbar[2,1] * self.yubar[1,0] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[mif1,0] * self.yu[1,0] * self.yubar[1,0] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[mif1,0] * self.yu[1,0] * self.yubar[1,0] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YeuSbar[mif1,0] * self.yu[1,0] * self.yubar[1,0] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[mif1,0] * self.yu[1,1] * self.yubar[1,0] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[mif1,0] * self.yu[1,1] * self.yubar[1,0] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YeuSbar[mif1,0] * self.yu[1,1] * self.yubar[1,0] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[mif1,0] * self.yu[1,2] * self.yubar[1,0] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[mif1,0] * self.yu[1,2] * self.yubar[1,0] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YeuSbar[mif1,0] * self.yu[1,2] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif1,1] * self.ylbar[0,mif2] * self.YLQSbar[0,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif1,1] * self.ylbar[1,mif2] * self.YLQSbar[1,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif1,1] * self.ylbar[2,mif2] * self.YLQSbar[2,1] * self.yubar[1,1] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[mif1,1] * self.yu[1,0] * self.yubar[1,1] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[mif1,1] * self.yu[1,0] * self.yubar[1,1] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YeuSbar[mif1,1] * self.yu[1,0] * self.yubar[1,1] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[mif1,1] * self.yu[1,1] * self.yubar[1,1] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[mif1,1] * self.yu[1,1] * self.yubar[1,1] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YeuSbar[mif1,1] * self.yu[1,1] * self.yubar[1,1] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[mif1,1] * self.yu[1,2] * self.yubar[1,1] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[mif1,1] * self.yu[1,2] * self.yubar[1,1] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YeuSbar[mif1,1] * self.yu[1,2] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif1,2] * self.ylbar[0,mif2] * self.YLQSbar[0,1] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif1,2] * self.ylbar[1,mif2] * self.YLQSbar[1,1] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif1,2] * self.ylbar[2,mif2] * self.YLQSbar[2,1] * self.yubar[1,2] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[mif1,2] * self.yu[1,0] * self.yubar[1,2] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[mif1,2] * self.yu[1,0] * self.yubar[1,2] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YeuSbar[mif1,2] * self.yu[1,0] * self.yubar[1,2] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[mif1,2] * self.yu[1,1] * self.yubar[1,2] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[mif1,2] * self.yu[1,1] * self.yubar[1,2] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YeuSbar[mif1,2] * self.yu[1,1] * self.yubar[1,2] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[mif1,2] * self.yu[1,2] * self.yubar[1,2] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[mif1,2] * self.yu[1,2] * self.yubar[1,2] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YeuSbar[mif1,2] * self.yu[1,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif1,0] * self.ylbar[0,mif2] * self.YLQSbar[0,2] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif1,0] * self.ylbar[1,mif2] * self.YLQSbar[1,2] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif1,0] * self.ylbar[2,mif2] * self.YLQSbar[2,2] * self.yubar[2,0] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[mif1,0] * self.yu[2,0] * self.yubar[2,0] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[mif1,0] * self.yu[2,0] * self.yubar[2,0] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YeuSbar[mif1,0] * self.yu[2,0] * self.yubar[2,0] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[mif1,0] * self.yu[2,1] * self.yubar[2,0] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[mif1,0] * self.yu[2,1] * self.yubar[2,0] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YeuSbar[mif1,0] * self.yu[2,1] * self.yubar[2,0] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[mif1,0] * self.yu[2,2] * self.yubar[2,0] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[mif1,0] * self.yu[2,2] * self.yubar[2,0] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YeuSbar[mif1,0] * self.yu[2,2] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif1,1] * self.ylbar[0,mif2] * self.YLQSbar[0,2] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif1,1] * self.ylbar[1,mif2] * self.YLQSbar[1,2] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif1,1] * self.ylbar[2,mif2] * self.YLQSbar[2,2] * self.yubar[2,1] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[mif1,1] * self.yu[2,0] * self.yubar[2,1] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[mif1,1] * self.yu[2,0] * self.yubar[2,1] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YeuSbar[mif1,1] * self.yu[2,0] * self.yubar[2,1] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[mif1,1] * self.yu[2,1] * self.yubar[2,1] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[mif1,1] * self.yu[2,1] * self.yubar[2,1] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YeuSbar[mif1,1] * self.yu[2,1] * self.yubar[2,1] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[mif1,1] * self.yu[2,2] * self.yubar[2,1] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[mif1,1] * self.yu[2,2] * self.yubar[2,1] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YeuSbar[mif1,1] * self.yu[2,2] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif1,2] * self.ylbar[0,mif2] * self.YLQSbar[0,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif1,2] * self.ylbar[1,mif2] * self.YLQSbar[1,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif1,2] * self.ylbar[2,mif2] * self.YLQSbar[2,2] * self.yubar[2,2] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[mif1,2] * self.yu[2,0] * self.yubar[2,2] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[mif1,2] * self.yu[2,0] * self.yubar[2,2] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YeuSbar[mif1,2] * self.yu[2,0] * self.yubar[2,2] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[mif1,2] * self.yu[2,1] * self.yubar[2,2] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[mif1,2] * self.yu[2,1] * self.yubar[2,2] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YeuSbar[mif1,2] * self.yu[2,1] * self.yubar[2,2] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[mif1,2] * self.yu[2,2] * self.yubar[2,2] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[mif1,2] * self.yu[2,2] * self.yubar[2,2] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YeuSbar[mif1,2] * self.yu[2,2] * self.yubar[2,2])

    def alphaOuHbar(self, mif1,mif2):
        return (3/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.YLQS[0,mif1] + 1/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.YLQS[0,mif1] + -1/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[0,0] * self.YLQS[0,mif1] + 3/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.YLQS[0,mif1] + 1/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.YLQS[0,mif1] + -1/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[0,1] * self.YLQS[0,mif1] + 3/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.YLQS[0,mif1] + 1/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.YLQS[0,mif1] + -1/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[0,2] * self.YLQS[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * (self.yl[0,0])**(2) * self.ylbar[0,0] * self.YLQS[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * (self.yl[0,0])**(2) * self.ylbar[0,0] * self.YLQS[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * (self.yl[0,0])**(2) * self.ylbar[0,0] * self.YLQS[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] * self.YLQS[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] * self.YLQS[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] * self.YLQS[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] * self.YLQS[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] * self.YLQS[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] * self.YLQS[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,1] * self.YLQS[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,1] * self.YLQS[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,1] * self.YLQS[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * (self.yl[0,1])**(2) * self.ylbar[0,1] * self.YLQS[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * (self.yl[0,1])**(2) * self.ylbar[0,1] * self.YLQS[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * (self.yl[0,1])**(2) * self.ylbar[0,1] * self.YLQS[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] * self.YLQS[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] * self.YLQS[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] * self.YLQS[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,2] * self.YLQS[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,2] * self.YLQS[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,2] * self.YLQS[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,2] * self.YLQS[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,2] * self.YLQS[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,2] * self.YLQS[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * (self.yl[0,2])**(2) * self.ylbar[0,2] * self.YLQS[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * (self.yl[0,2])**(2) * self.ylbar[0,2] * self.YLQS[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * (self.yl[0,2])**(2) * self.ylbar[0,2] * self.YLQS[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.yl[1,0] * self.ylbar[1,0] * self.YLQS[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.yl[1,0] * self.ylbar[1,0] * self.YLQS[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[0,0] * self.yl[1,0] * self.ylbar[1,0] * self.YLQS[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,0] * self.yl[1,1] * self.ylbar[1,0] * self.YLQS[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,0] * self.yl[1,1] * self.ylbar[1,0] * self.YLQS[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[0,0] * self.yl[1,1] * self.ylbar[1,0] * self.YLQS[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,0] * self.yl[1,2] * self.ylbar[1,0] * self.YLQS[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,0] * self.yl[1,2] * self.ylbar[1,0] * self.YLQS[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[0,0] * self.yl[1,2] * self.ylbar[1,0] * self.YLQS[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,1] * self.yl[1,0] * self.ylbar[1,1] * self.YLQS[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,1] * self.yl[1,0] * self.ylbar[1,1] * self.YLQS[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[0,1] * self.yl[1,0] * self.ylbar[1,1] * self.YLQS[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.yl[1,1] * self.ylbar[1,1] * self.YLQS[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.yl[1,1] * self.ylbar[1,1] * self.YLQS[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[0,1] * self.yl[1,1] * self.ylbar[1,1] * self.YLQS[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,1] * self.yl[1,2] * self.ylbar[1,1] * self.YLQS[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,1] * self.yl[1,2] * self.ylbar[1,1] * self.YLQS[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[0,1] * self.yl[1,2] * self.ylbar[1,1] * self.YLQS[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,2] * self.yl[1,0] * self.ylbar[1,2] * self.YLQS[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,2] * self.yl[1,0] * self.ylbar[1,2] * self.YLQS[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[0,2] * self.yl[1,0] * self.ylbar[1,2] * self.YLQS[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,2] * self.yl[1,1] * self.ylbar[1,2] * self.YLQS[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,2] * self.yl[1,1] * self.ylbar[1,2] * self.YLQS[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[0,2] * self.yl[1,1] * self.ylbar[1,2] * self.YLQS[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.yl[1,2] * self.ylbar[1,2] * self.YLQS[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.yl[1,2] * self.ylbar[1,2] * self.YLQS[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[0,2] * self.yl[1,2] * self.ylbar[1,2] * self.YLQS[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.yl[2,0] * self.ylbar[2,0] * self.YLQS[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.yl[2,0] * self.ylbar[2,0] * self.YLQS[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[0,0] * self.yl[2,0] * self.ylbar[2,0] * self.YLQS[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,0] * self.yl[2,1] * self.ylbar[2,0] * self.YLQS[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,0] * self.yl[2,1] * self.ylbar[2,0] * self.YLQS[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[0,0] * self.yl[2,1] * self.ylbar[2,0] * self.YLQS[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,0] * self.yl[2,2] * self.ylbar[2,0] * self.YLQS[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,0] * self.yl[2,2] * self.ylbar[2,0] * self.YLQS[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[0,0] * self.yl[2,2] * self.ylbar[2,0] * self.YLQS[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,1] * self.yl[2,0] * self.ylbar[2,1] * self.YLQS[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,1] * self.yl[2,0] * self.ylbar[2,1] * self.YLQS[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[0,1] * self.yl[2,0] * self.ylbar[2,1] * self.YLQS[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.yl[2,1] * self.ylbar[2,1] * self.YLQS[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.yl[2,1] * self.ylbar[2,1] * self.YLQS[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[0,1] * self.yl[2,1] * self.ylbar[2,1] * self.YLQS[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,1] * self.yl[2,2] * self.ylbar[2,1] * self.YLQS[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,1] * self.yl[2,2] * self.ylbar[2,1] * self.YLQS[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[0,1] * self.yl[2,2] * self.ylbar[2,1] * self.YLQS[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,2] * self.yl[2,0] * self.ylbar[2,2] * self.YLQS[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,2] * self.yl[2,0] * self.ylbar[2,2] * self.YLQS[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[0,2] * self.yl[2,0] * self.ylbar[2,2] * self.YLQS[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,2] * self.yl[2,1] * self.ylbar[2,2] * self.YLQS[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,2] * self.yl[2,1] * self.ylbar[2,2] * self.YLQS[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[0,2] * self.yl[2,1] * self.ylbar[2,2] * self.YLQS[0,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[2,2] * self.YLQS[0,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[2,2] * self.YLQS[0,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[2,2] * self.YLQS[0,mif1] + 3/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,0] * self.YLQS[1,mif1] + 1/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,0] * self.YLQS[1,mif1] + -1/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[1,0] * self.YLQS[1,mif1] + 3/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,1] * self.YLQS[1,mif1] + 1/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,1] * self.YLQS[1,mif1] + -1/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[1,1] * self.YLQS[1,mif1] + 3/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,2] * self.YLQS[1,mif1] + 1/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,2] * self.YLQS[1,mif1] + -1/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[1,2] * self.YLQS[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] * self.YLQS[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] * self.YLQS[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] * self.YLQS[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.YLQS[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.YLQS[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.YLQS[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.YLQS[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.YLQS[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.YLQS[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.YLQS[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.YLQS[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.YLQS[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] * self.YLQS[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] * self.YLQS[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] * self.YLQS[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.YLQS[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.YLQS[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.YLQS[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.YLQS[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.YLQS[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.YLQS[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.YLQS[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.YLQS[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.YLQS[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] * self.YLQS[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] * self.YLQS[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] * self.YLQS[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * (self.yl[1,0])**(2) * self.ylbar[1,0] * self.YLQS[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * (self.yl[1,0])**(2) * self.ylbar[1,0] * self.YLQS[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * (self.yl[1,0])**(2) * self.ylbar[1,0] * self.YLQS[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] * self.YLQS[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] * self.YLQS[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] * self.YLQS[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] * self.YLQS[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] * self.YLQS[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] * self.YLQS[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,1] * self.YLQS[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,1] * self.YLQS[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,1] * self.YLQS[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * (self.yl[1,1])**(2) * self.ylbar[1,1] * self.YLQS[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * (self.yl[1,1])**(2) * self.ylbar[1,1] * self.YLQS[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * (self.yl[1,1])**(2) * self.ylbar[1,1] * self.YLQS[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,1] * self.YLQS[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,1] * self.YLQS[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,1] * self.YLQS[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,2] * self.YLQS[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,2] * self.YLQS[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,2] * self.YLQS[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,2] * self.YLQS[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,2] * self.YLQS[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,2] * self.YLQS[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * (self.yl[1,2])**(2) * self.ylbar[1,2] * self.YLQS[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * (self.yl[1,2])**(2) * self.ylbar[1,2] * self.YLQS[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * (self.yl[1,2])**(2) * self.ylbar[1,2] * self.YLQS[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,0] * self.yl[2,0] * self.ylbar[2,0] * self.YLQS[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,0] * self.yl[2,0] * self.ylbar[2,0] * self.YLQS[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[1,0] * self.yl[2,0] * self.ylbar[2,0] * self.YLQS[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,0] * self.yl[2,1] * self.ylbar[2,0] * self.YLQS[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,0] * self.yl[2,1] * self.ylbar[2,0] * self.YLQS[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[1,0] * self.yl[2,1] * self.ylbar[2,0] * self.YLQS[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,0] * self.yl[2,2] * self.ylbar[2,0] * self.YLQS[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,0] * self.yl[2,2] * self.ylbar[2,0] * self.YLQS[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[1,0] * self.yl[2,2] * self.ylbar[2,0] * self.YLQS[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,1] * self.yl[2,0] * self.ylbar[2,1] * self.YLQS[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,1] * self.yl[2,0] * self.ylbar[2,1] * self.YLQS[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[1,1] * self.yl[2,0] * self.ylbar[2,1] * self.YLQS[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,1] * self.yl[2,1] * self.ylbar[2,1] * self.YLQS[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,1] * self.yl[2,1] * self.ylbar[2,1] * self.YLQS[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[1,1] * self.yl[2,1] * self.ylbar[2,1] * self.YLQS[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,1] * self.yl[2,2] * self.ylbar[2,1] * self.YLQS[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,1] * self.yl[2,2] * self.ylbar[2,1] * self.YLQS[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[1,1] * self.yl[2,2] * self.ylbar[2,1] * self.YLQS[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,2] * self.yl[2,0] * self.ylbar[2,2] * self.YLQS[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,2] * self.yl[2,0] * self.ylbar[2,2] * self.YLQS[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[1,2] * self.yl[2,0] * self.ylbar[2,2] * self.YLQS[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,2] * self.yl[2,1] * self.ylbar[2,2] * self.YLQS[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,2] * self.yl[2,1] * self.ylbar[2,2] * self.YLQS[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[1,2] * self.yl[2,1] * self.ylbar[2,2] * self.YLQS[1,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[2,2] * self.YLQS[1,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[2,2] * self.YLQS[1,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[2,2] * self.YLQS[1,mif1] + 3/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[2,0] * self.YLQS[2,mif1] + 1/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[2,0] * self.YLQS[2,mif1] + -1/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[2,0] * self.YLQS[2,mif1] + 3/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[2,1] * self.YLQS[2,mif1] + 1/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[2,1] * self.YLQS[2,mif1] + -1/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[2,1] * self.YLQS[2,mif1] + 3/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[2,2] * self.YLQS[2,mif1] + 1/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[2,2] * self.YLQS[2,mif1] + -1/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[2,2] * self.YLQS[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] * self.YLQS[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] * self.YLQS[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] * self.YLQS[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.YLQS[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.YLQS[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.YLQS[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.YLQS[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.YLQS[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.YLQS[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.YLQS[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.YLQS[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.YLQS[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] * self.YLQS[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] * self.YLQS[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] * self.YLQS[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.YLQS[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.YLQS[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.YLQS[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.YLQS[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.YLQS[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.YLQS[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.YLQS[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.YLQS[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.YLQS[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] * self.YLQS[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] * self.YLQS[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] * self.YLQS[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] * self.YLQS[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] * self.YLQS[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] * self.YLQS[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.YLQS[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.YLQS[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.YLQS[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.YLQS[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.YLQS[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.YLQS[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.YLQS[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.YLQS[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.YLQS[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] * self.YLQS[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] * self.YLQS[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] * self.YLQS[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.YLQS[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.YLQS[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.YLQS[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.YLQS[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.YLQS[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.YLQS[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.YLQS[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.YLQS[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.YLQS[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] * self.YLQS[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] * self.YLQS[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] * self.YLQS[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * (self.yl[2,0])**(2) * self.ylbar[2,0] * self.YLQS[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * (self.yl[2,0])**(2) * self.ylbar[2,0] * self.YLQS[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * (self.yl[2,0])**(2) * self.ylbar[2,0] * self.YLQS[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] * self.YLQS[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] * self.YLQS[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] * self.YLQS[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] * self.YLQS[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] * self.YLQS[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] * self.YLQS[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,1] * self.YLQS[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,1] * self.YLQS[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,1] * self.YLQS[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * (self.yl[2,1])**(2) * self.ylbar[2,1] * self.YLQS[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * (self.yl[2,1])**(2) * self.ylbar[2,1] * self.YLQS[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * (self.yl[2,1])**(2) * self.ylbar[2,1] * self.YLQS[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,1] * self.YLQS[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,1] * self.YLQS[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,1] * self.YLQS[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,2] * self.YLQS[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,2] * self.YLQS[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,2] * self.YLQS[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,2] * self.YLQS[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,2] * self.YLQS[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,2] * self.YLQS[2,mif1] + -1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * (self.yl[2,2])**(2) * self.ylbar[2,2] * self.YLQS[2,mif1] + -1/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * (self.yl[2,2])**(2) * self.ylbar[2,2] * self.YLQS[2,mif1] + 1/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * (self.yl[2,2])**(2) * self.ylbar[2,2] * self.YLQS[2,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[0,0] * self.YLQS[0,mif1] * self.YLQSbar[0,0] * self.yubar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[0,1] * self.YLQS[0,mif1] * self.YLQSbar[0,0] * self.yubar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[0,2] * self.YLQS[0,mif1] * self.YLQSbar[0,0] * self.yubar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[0,0] * self.YLQS[1,mif1] * self.YLQSbar[0,0] * self.yubar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[0,1] * self.YLQS[1,mif1] * self.YLQSbar[0,0] * self.yubar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[0,2] * self.YLQS[1,mif1] * self.YLQSbar[0,0] * self.yubar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[0,0] * self.YLQS[2,mif1] * self.YLQSbar[0,0] * self.yubar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[0,1] * self.YLQS[2,mif1] * self.YLQSbar[0,0] * self.yubar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[0,2] * self.YLQS[2,mif1] * self.YLQSbar[0,0] * self.yubar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[1,0] * self.YLQS[0,mif1] * self.YLQSbar[1,0] * self.yubar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[1,1] * self.YLQS[0,mif1] * self.YLQSbar[1,0] * self.yubar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[1,2] * self.YLQS[0,mif1] * self.YLQSbar[1,0] * self.yubar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[1,0] * self.YLQS[1,mif1] * self.YLQSbar[1,0] * self.yubar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[1,1] * self.YLQS[1,mif1] * self.YLQSbar[1,0] * self.yubar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[1,2] * self.YLQS[1,mif1] * self.YLQSbar[1,0] * self.yubar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[1,0] * self.YLQS[2,mif1] * self.YLQSbar[1,0] * self.yubar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[1,1] * self.YLQS[2,mif1] * self.YLQSbar[1,0] * self.yubar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[1,2] * self.YLQS[2,mif1] * self.YLQSbar[1,0] * self.yubar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[2,0] * self.YLQS[0,mif1] * self.YLQSbar[2,0] * self.yubar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[2,1] * self.YLQS[0,mif1] * self.YLQSbar[2,0] * self.yubar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[2,2] * self.YLQS[0,mif1] * self.YLQSbar[2,0] * self.yubar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[2,0] * self.YLQS[1,mif1] * self.YLQSbar[2,0] * self.yubar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[2,1] * self.YLQS[1,mif1] * self.YLQSbar[2,0] * self.yubar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[2,2] * self.YLQS[1,mif1] * self.YLQSbar[2,0] * self.yubar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[2,0] * self.YLQS[2,mif1] * self.YLQSbar[2,0] * self.yubar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[2,1] * self.YLQS[2,mif1] * self.YLQSbar[2,0] * self.yubar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[2,2] * self.YLQS[2,mif1] * self.YLQSbar[2,0] * self.yubar[0,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[0,0] * self.YLQS[0,mif1] * self.yu[0,0] * self.yubar[0,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[0,1] * self.YLQS[0,mif1] * self.yu[0,0] * self.yubar[0,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[0,2] * self.YLQS[0,mif1] * self.yu[0,0] * self.yubar[0,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[1,0] * self.YLQS[1,mif1] * self.yu[0,0] * self.yubar[0,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[1,1] * self.YLQS[1,mif1] * self.yu[0,0] * self.yubar[0,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[1,2] * self.YLQS[1,mif1] * self.yu[0,0] * self.yubar[0,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[2,0] * self.YLQS[2,mif1] * self.yu[0,0] * self.yubar[0,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[2,1] * self.YLQS[2,mif1] * self.yu[0,0] * self.yubar[0,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[2,2] * self.YLQS[2,mif1] * self.yu[0,0] * self.yubar[0,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[0,0] * self.YLQS[0,mif1] * self.yu[0,1] * self.yubar[0,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[0,1] * self.YLQS[0,mif1] * self.yu[0,1] * self.yubar[0,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[0,2] * self.YLQS[0,mif1] * self.yu[0,1] * self.yubar[0,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[1,0] * self.YLQS[1,mif1] * self.yu[0,1] * self.yubar[0,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[1,1] * self.YLQS[1,mif1] * self.yu[0,1] * self.yubar[0,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[1,2] * self.YLQS[1,mif1] * self.yu[0,1] * self.yubar[0,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[2,0] * self.YLQS[2,mif1] * self.yu[0,1] * self.yubar[0,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[2,1] * self.YLQS[2,mif1] * self.yu[0,1] * self.yubar[0,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[2,2] * self.YLQS[2,mif1] * self.yu[0,1] * self.yubar[0,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[0,0] * self.YLQS[0,mif1] * self.yu[0,2] * self.yubar[0,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[0,1] * self.YLQS[0,mif1] * self.yu[0,2] * self.yubar[0,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[0,2] * self.YLQS[0,mif1] * self.yu[0,2] * self.yubar[0,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[1,0] * self.YLQS[1,mif1] * self.yu[0,2] * self.yubar[0,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[1,1] * self.YLQS[1,mif1] * self.yu[0,2] * self.yubar[0,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[1,2] * self.YLQS[1,mif1] * self.yu[0,2] * self.yubar[0,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[2,0] * self.YLQS[2,mif1] * self.yu[0,2] * self.yubar[0,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[2,1] * self.YLQS[2,mif1] * self.yu[0,2] * self.yubar[0,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[2,2] * self.YLQS[2,mif1] * self.yu[0,2] * self.yubar[0,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,0] * self.yu[0,0] * self.yubar[0,0] * self.yubar[0,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,0] * self.yu[0,0] * self.yubar[0,0] * self.yubar[0,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,0] * self.yu[0,0] * self.yubar[0,0] * self.yubar[0,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,0] * self.yu[0,1] * self.yubar[0,1] * self.yubar[0,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,0] * self.yu[0,1] * self.yubar[0,1] * self.yubar[0,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,0] * self.yu[0,1] * self.yubar[0,1] * self.yubar[0,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,0] * self.yu[0,2] * self.yubar[0,2] * self.yubar[0,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,0] * self.yu[0,2] * self.yubar[0,2] * self.yubar[0,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,0] * self.yu[0,2] * self.yubar[0,2] * self.yubar[0,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,1] * self.yu[0,0] * self.yubar[0,mif2] * self.yubar[1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,1] * self.yu[0,0] * self.yubar[0,mif2] * self.yubar[1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,1] * self.yu[0,0] * self.yubar[0,mif2] * self.yubar[1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,1] * self.yu[0,1] * self.yubar[0,mif2] * self.yubar[1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,1] * self.yu[0,1] * self.yubar[0,mif2] * self.yubar[1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,1] * self.yu[0,1] * self.yubar[0,mif2] * self.yubar[1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,1] * self.yu[0,2] * self.yubar[0,mif2] * self.yubar[1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,1] * self.yu[0,2] * self.yubar[0,mif2] * self.yubar[1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,1] * self.yu[0,2] * self.yubar[0,mif2] * self.yubar[1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[0,0] * self.YLQS[0,mif1] * self.YLQSbar[0,1] * self.yubar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[0,1] * self.YLQS[0,mif1] * self.YLQSbar[0,1] * self.yubar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[0,2] * self.YLQS[0,mif1] * self.YLQSbar[0,1] * self.yubar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[0,0] * self.YLQS[1,mif1] * self.YLQSbar[0,1] * self.yubar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[0,1] * self.YLQS[1,mif1] * self.YLQSbar[0,1] * self.yubar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[0,2] * self.YLQS[1,mif1] * self.YLQSbar[0,1] * self.yubar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[0,0] * self.YLQS[2,mif1] * self.YLQSbar[0,1] * self.yubar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[0,1] * self.YLQS[2,mif1] * self.YLQSbar[0,1] * self.yubar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[0,2] * self.YLQS[2,mif1] * self.YLQSbar[0,1] * self.yubar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[1,0] * self.YLQS[0,mif1] * self.YLQSbar[1,1] * self.yubar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[1,1] * self.YLQS[0,mif1] * self.YLQSbar[1,1] * self.yubar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[1,2] * self.YLQS[0,mif1] * self.YLQSbar[1,1] * self.yubar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[1,0] * self.YLQS[1,mif1] * self.YLQSbar[1,1] * self.yubar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[1,1] * self.YLQS[1,mif1] * self.YLQSbar[1,1] * self.yubar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[1,2] * self.YLQS[1,mif1] * self.YLQSbar[1,1] * self.yubar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[1,0] * self.YLQS[2,mif1] * self.YLQSbar[1,1] * self.yubar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[1,1] * self.YLQS[2,mif1] * self.YLQSbar[1,1] * self.yubar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[1,2] * self.YLQS[2,mif1] * self.YLQSbar[1,1] * self.yubar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[2,0] * self.YLQS[0,mif1] * self.YLQSbar[2,1] * self.yubar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[2,1] * self.YLQS[0,mif1] * self.YLQSbar[2,1] * self.yubar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[2,2] * self.YLQS[0,mif1] * self.YLQSbar[2,1] * self.yubar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[2,0] * self.YLQS[1,mif1] * self.YLQSbar[2,1] * self.yubar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[2,1] * self.YLQS[1,mif1] * self.YLQSbar[2,1] * self.yubar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[2,2] * self.YLQS[1,mif1] * self.YLQSbar[2,1] * self.yubar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[2,0] * self.YLQS[2,mif1] * self.YLQSbar[2,1] * self.yubar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[2,1] * self.YLQS[2,mif1] * self.YLQSbar[2,1] * self.yubar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[2,2] * self.YLQS[2,mif1] * self.YLQSbar[2,1] * self.yubar[1,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[0,0] * self.YLQS[0,mif1] * self.yu[1,0] * self.yubar[1,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[0,1] * self.YLQS[0,mif1] * self.yu[1,0] * self.yubar[1,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[0,2] * self.YLQS[0,mif1] * self.yu[1,0] * self.yubar[1,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[1,0] * self.YLQS[1,mif1] * self.yu[1,0] * self.yubar[1,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[1,1] * self.YLQS[1,mif1] * self.yu[1,0] * self.yubar[1,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[1,2] * self.YLQS[1,mif1] * self.yu[1,0] * self.yubar[1,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[2,0] * self.YLQS[2,mif1] * self.yu[1,0] * self.yubar[1,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[2,1] * self.YLQS[2,mif1] * self.yu[1,0] * self.yubar[1,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[2,2] * self.YLQS[2,mif1] * self.yu[1,0] * self.yubar[1,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[0,0] * self.YLQS[0,mif1] * self.yu[1,1] * self.yubar[1,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[0,1] * self.YLQS[0,mif1] * self.yu[1,1] * self.yubar[1,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[0,2] * self.YLQS[0,mif1] * self.yu[1,1] * self.yubar[1,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[1,0] * self.YLQS[1,mif1] * self.yu[1,1] * self.yubar[1,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[1,1] * self.YLQS[1,mif1] * self.yu[1,1] * self.yubar[1,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[1,2] * self.YLQS[1,mif1] * self.yu[1,1] * self.yubar[1,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[2,0] * self.YLQS[2,mif1] * self.yu[1,1] * self.yubar[1,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[2,1] * self.YLQS[2,mif1] * self.yu[1,1] * self.yubar[1,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[2,2] * self.YLQS[2,mif1] * self.yu[1,1] * self.yubar[1,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[0,0] * self.YLQS[0,mif1] * self.yu[1,2] * self.yubar[1,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[0,1] * self.YLQS[0,mif1] * self.yu[1,2] * self.yubar[1,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[0,2] * self.YLQS[0,mif1] * self.yu[1,2] * self.yubar[1,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[1,0] * self.YLQS[1,mif1] * self.yu[1,2] * self.yubar[1,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[1,1] * self.YLQS[1,mif1] * self.yu[1,2] * self.yubar[1,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[1,2] * self.YLQS[1,mif1] * self.yu[1,2] * self.yubar[1,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[2,0] * self.YLQS[2,mif1] * self.yu[1,2] * self.yubar[1,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[2,1] * self.YLQS[2,mif1] * self.yu[1,2] * self.yubar[1,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[2,2] * self.YLQS[2,mif1] * self.yu[1,2] * self.yubar[1,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,0] * self.yu[1,0] * self.yubar[0,0] * self.yubar[1,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,0] * self.yu[1,0] * self.yubar[0,0] * self.yubar[1,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,0] * self.yu[1,0] * self.yubar[0,0] * self.yubar[1,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,0] * self.yu[1,1] * self.yubar[0,1] * self.yubar[1,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,0] * self.yu[1,1] * self.yubar[0,1] * self.yubar[1,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,0] * self.yu[1,1] * self.yubar[0,1] * self.yubar[1,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,0] * self.yu[1,2] * self.yubar[0,2] * self.yubar[1,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,0] * self.yu[1,2] * self.yubar[0,2] * self.yubar[1,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,0] * self.yu[1,2] * self.yubar[0,2] * self.yubar[1,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,1] * self.yu[1,0] * self.yubar[1,0] * self.yubar[1,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,1] * self.yu[1,0] * self.yubar[1,0] * self.yubar[1,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,1] * self.yu[1,0] * self.yubar[1,0] * self.yubar[1,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,1] * self.yu[1,1] * self.yubar[1,1] * self.yubar[1,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,1] * self.yu[1,1] * self.yubar[1,1] * self.yubar[1,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,1] * self.yu[1,1] * self.yubar[1,1] * self.yubar[1,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,1] * self.yu[1,2] * self.yubar[1,2] * self.yubar[1,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,1] * self.yu[1,2] * self.yubar[1,2] * self.yubar[1,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,1] * self.yu[1,2] * self.yubar[1,2] * self.yubar[1,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,2] * self.yu[0,0] * self.yubar[0,mif2] * self.yubar[2,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,2] * self.yu[0,0] * self.yubar[0,mif2] * self.yubar[2,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,2] * self.yu[0,0] * self.yubar[0,mif2] * self.yubar[2,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,2] * self.yu[1,0] * self.yubar[1,mif2] * self.yubar[2,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,2] * self.yu[1,0] * self.yubar[1,mif2] * self.yubar[2,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,2] * self.yu[1,0] * self.yubar[1,mif2] * self.yubar[2,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,2] * self.yu[0,1] * self.yubar[0,mif2] * self.yubar[2,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,2] * self.yu[0,1] * self.yubar[0,mif2] * self.yubar[2,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,2] * self.yu[0,1] * self.yubar[0,mif2] * self.yubar[2,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,2] * self.yu[1,1] * self.yubar[1,mif2] * self.yubar[2,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,2] * self.yu[1,1] * self.yubar[1,mif2] * self.yubar[2,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,2] * self.yu[1,1] * self.yubar[1,mif2] * self.yubar[2,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,2] * self.yu[0,2] * self.yubar[0,mif2] * self.yubar[2,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,2] * self.yu[0,2] * self.yubar[0,mif2] * self.yubar[2,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,2] * self.yu[0,2] * self.yubar[0,mif2] * self.yubar[2,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,2] * self.yu[1,2] * self.yubar[1,mif2] * self.yubar[2,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,2] * self.yu[1,2] * self.yubar[1,mif2] * self.yubar[2,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,2] * self.yu[1,2] * self.yubar[1,mif2] * self.yubar[2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[0,0] * self.YLQS[0,mif1] * self.YLQSbar[0,2] * self.yubar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[0,1] * self.YLQS[0,mif1] * self.YLQSbar[0,2] * self.yubar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[0,2] * self.YLQS[0,mif1] * self.YLQSbar[0,2] * self.yubar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[0,0] * self.YLQS[1,mif1] * self.YLQSbar[0,2] * self.yubar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[0,1] * self.YLQS[1,mif1] * self.YLQSbar[0,2] * self.yubar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[0,2] * self.YLQS[1,mif1] * self.YLQSbar[0,2] * self.yubar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[0,0] * self.YLQS[2,mif1] * self.YLQSbar[0,2] * self.yubar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[0,1] * self.YLQS[2,mif1] * self.YLQSbar[0,2] * self.yubar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[0,2] * self.YLQS[2,mif1] * self.YLQSbar[0,2] * self.yubar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[1,0] * self.YLQS[0,mif1] * self.YLQSbar[1,2] * self.yubar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[1,1] * self.YLQS[0,mif1] * self.YLQSbar[1,2] * self.yubar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[1,2] * self.YLQS[0,mif1] * self.YLQSbar[1,2] * self.yubar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[1,0] * self.YLQS[1,mif1] * self.YLQSbar[1,2] * self.yubar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[1,1] * self.YLQS[1,mif1] * self.YLQSbar[1,2] * self.yubar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[1,2] * self.YLQS[1,mif1] * self.YLQSbar[1,2] * self.yubar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[1,0] * self.YLQS[2,mif1] * self.YLQSbar[1,2] * self.yubar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[1,1] * self.YLQS[2,mif1] * self.YLQSbar[1,2] * self.yubar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[1,2] * self.YLQS[2,mif1] * self.YLQSbar[1,2] * self.yubar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[2,0] * self.YLQS[0,mif1] * self.YLQSbar[2,2] * self.yubar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[2,1] * self.YLQS[0,mif1] * self.YLQSbar[2,2] * self.yubar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[2,2] * self.YLQS[0,mif1] * self.YLQSbar[2,2] * self.yubar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[2,0] * self.YLQS[1,mif1] * self.YLQSbar[2,2] * self.yubar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[2,1] * self.YLQS[1,mif1] * self.YLQSbar[2,2] * self.yubar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[2,2] * self.YLQS[1,mif1] * self.YLQSbar[2,2] * self.yubar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[2,0] * self.YLQS[2,mif1] * self.YLQSbar[2,2] * self.yubar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[2,1] * self.YLQS[2,mif1] * self.YLQSbar[2,2] * self.yubar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[2,2] * self.YLQS[2,mif1] * self.YLQSbar[2,2] * self.yubar[2,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[0,0] * self.YLQS[0,mif1] * self.yu[2,0] * self.yubar[2,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[0,1] * self.YLQS[0,mif1] * self.yu[2,0] * self.yubar[2,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[0,2] * self.YLQS[0,mif1] * self.yu[2,0] * self.yubar[2,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[1,0] * self.YLQS[1,mif1] * self.yu[2,0] * self.yubar[2,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[1,1] * self.YLQS[1,mif1] * self.yu[2,0] * self.yubar[2,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[1,2] * self.YLQS[1,mif1] * self.yu[2,0] * self.yubar[2,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[2,0] * self.YLQS[2,mif1] * self.yu[2,0] * self.yubar[2,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[2,1] * self.YLQS[2,mif1] * self.yu[2,0] * self.yubar[2,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[2,2] * self.YLQS[2,mif1] * self.yu[2,0] * self.yubar[2,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[0,0] * self.YLQS[0,mif1] * self.yu[2,1] * self.yubar[2,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[0,1] * self.YLQS[0,mif1] * self.yu[2,1] * self.yubar[2,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[0,2] * self.YLQS[0,mif1] * self.yu[2,1] * self.yubar[2,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[1,0] * self.YLQS[1,mif1] * self.yu[2,1] * self.yubar[2,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[1,1] * self.YLQS[1,mif1] * self.yu[2,1] * self.yubar[2,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[1,2] * self.YLQS[1,mif1] * self.yu[2,1] * self.yubar[2,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[2,0] * self.YLQS[2,mif1] * self.yu[2,1] * self.yubar[2,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[2,1] * self.YLQS[2,mif1] * self.yu[2,1] * self.yubar[2,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[2,2] * self.YLQS[2,mif1] * self.yu[2,1] * self.yubar[2,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[0,0] * self.YLQS[0,mif1] * self.yu[2,2] * self.yubar[2,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[0,1] * self.YLQS[0,mif1] * self.yu[2,2] * self.yubar[2,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[0,2] * self.YLQS[0,mif1] * self.yu[2,2] * self.yubar[2,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[1,0] * self.YLQS[1,mif1] * self.yu[2,2] * self.yubar[2,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[1,1] * self.YLQS[1,mif1] * self.yu[2,2] * self.yubar[2,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[1,2] * self.YLQS[1,mif1] * self.yu[2,2] * self.yubar[2,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[2,0] * self.YLQS[2,mif1] * self.yu[2,2] * self.yubar[2,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[2,1] * self.YLQS[2,mif1] * self.yu[2,2] * self.yubar[2,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[2,2] * self.YLQS[2,mif1] * self.yu[2,2] * self.yubar[2,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,0] * self.yu[2,0] * self.yubar[0,0] * self.yubar[2,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,0] * self.yu[2,0] * self.yubar[0,0] * self.yubar[2,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,0] * self.yu[2,0] * self.yubar[0,0] * self.yubar[2,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,0] * self.yu[2,1] * self.yubar[0,1] * self.yubar[2,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,0] * self.yu[2,1] * self.yubar[0,1] * self.yubar[2,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,0] * self.yu[2,1] * self.yubar[0,1] * self.yubar[2,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,0] * self.yu[2,2] * self.yubar[0,2] * self.yubar[2,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,0] * self.yu[2,2] * self.yubar[0,2] * self.yubar[2,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,0] * self.yu[2,2] * self.yubar[0,2] * self.yubar[2,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,1] * self.yu[2,0] * self.yubar[1,0] * self.yubar[2,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,1] * self.yu[2,0] * self.yubar[1,0] * self.yubar[2,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,1] * self.yu[2,0] * self.yubar[1,0] * self.yubar[2,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,1] * self.yu[2,1] * self.yubar[1,1] * self.yubar[2,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,1] * self.yu[2,1] * self.yubar[1,1] * self.yubar[2,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,1] * self.yu[2,1] * self.yubar[1,1] * self.yubar[2,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,1] * self.yu[2,2] * self.yubar[1,2] * self.yubar[2,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,1] * self.yu[2,2] * self.yubar[1,2] * self.yubar[2,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,1] * self.yu[2,2] * self.yubar[1,2] * self.yubar[2,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,2] * self.yu[2,0] * self.yubar[2,0] * self.yubar[2,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,2] * self.yu[2,0] * self.yubar[2,0] * self.yubar[2,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,2] * self.yu[2,0] * self.yubar[2,0] * self.yubar[2,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,2] * self.yu[2,1] * self.yubar[2,1] * self.yubar[2,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,2] * self.yu[2,1] * self.yubar[2,1] * self.yubar[2,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,2] * self.yu[2,1] * self.yubar[2,1] * self.yubar[2,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,2] * self.yu[2,2] * self.yubar[2,2] * self.yubar[2,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,2] * self.yu[2,2] * self.yubar[2,2] * self.yubar[2,mif2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,2] * self.yu[2,2] * self.yubar[2,2] * self.yubar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,0] * self.yl[0,0] * self.ylbar[0,0] * self.yubar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[0,0] * self.yl[0,1] * self.ylbar[0,0] * self.yubar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[0,0] * self.yl[0,2] * self.ylbar[0,0] * self.yubar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[1,0] * self.yl[0,0] * self.ylbar[0,1] * self.yubar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,0] * self.yl[0,1] * self.ylbar[0,1] * self.yubar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[1,0] * self.yl[0,2] * self.ylbar[0,1] * self.yubar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[2,0] * self.yl[0,0] * self.ylbar[0,2] * self.yubar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[2,0] * self.yl[0,1] * self.ylbar[0,2] * self.yubar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,0] * self.yl[0,2] * self.ylbar[0,2] * self.yubar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,0] * self.yl[1,0] * self.ylbar[1,0] * self.yubar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[0,0] * self.yl[1,1] * self.ylbar[1,0] * self.yubar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[0,0] * self.yl[1,2] * self.ylbar[1,0] * self.yubar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[1,0] * self.yl[1,0] * self.ylbar[1,1] * self.yubar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,0] * self.yl[1,1] * self.ylbar[1,1] * self.yubar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[1,0] * self.yl[1,2] * self.ylbar[1,1] * self.yubar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[2,0] * self.yl[1,0] * self.ylbar[1,2] * self.yubar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[2,0] * self.yl[1,1] * self.ylbar[1,2] * self.yubar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,0] * self.yl[1,2] * self.ylbar[1,2] * self.yubar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,0] * self.yl[2,0] * self.ylbar[2,0] * self.yubar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[0,0] * self.yl[2,1] * self.ylbar[2,0] * self.yubar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[0,0] * self.yl[2,2] * self.ylbar[2,0] * self.yubar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[1,0] * self.yl[2,0] * self.ylbar[2,1] * self.yubar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,0] * self.yl[2,1] * self.ylbar[2,1] * self.yubar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[1,0] * self.yl[2,2] * self.ylbar[2,1] * self.yubar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[2,0] * self.yl[2,0] * self.ylbar[2,2] * self.yubar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[2,0] * self.yl[2,1] * self.ylbar[2,2] * self.yubar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,0] * self.yl[2,2] * self.ylbar[2,2] * self.yubar[mif1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,0] * self.yu[0,0] * self.yubar[0,mif2] * self.yubar[mif1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,0] * self.yu[0,0] * self.yubar[0,mif2] * self.yubar[mif1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,0] * self.yu[0,0] * self.yubar[0,mif2] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,0] * self.yu[0,0] * self.yubar[0,mif2] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,0] * self.yu[0,0] * self.yubar[0,mif2] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,0] * self.yu[0,0] * self.yubar[0,mif2] * self.yubar[mif1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,0] * self.yu[0,1] * self.yubar[0,mif2] * self.yubar[mif1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,0] * self.yu[0,1] * self.yubar[0,mif2] * self.yubar[mif1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,0] * self.yu[0,1] * self.yubar[0,mif2] * self.yubar[mif1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,0] * self.yu[0,2] * self.yubar[0,mif2] * self.yubar[mif1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,0] * self.yu[0,2] * self.yubar[0,mif2] * self.yubar[mif1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,0] * self.yu[0,2] * self.yubar[0,mif2] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,0] * self.yu[1,0] * self.yubar[0,mif2] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,0] * self.yu[1,0] * self.yubar[0,mif2] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,0] * self.yu[1,0] * self.yubar[0,mif2] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,0] * self.yu[2,0] * self.yubar[0,mif2] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,0] * self.yu[2,0] * self.yubar[0,mif2] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,0] * self.yu[2,0] * self.yubar[0,mif2] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,1] * self.yu[0,0] * self.yubar[1,mif2] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,1] * self.yu[0,0] * self.yubar[1,mif2] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,1] * self.yu[0,0] * self.yubar[1,mif2] * self.yubar[mif1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,0] * self.yu[1,0] * self.yubar[1,mif2] * self.yubar[mif1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,0] * self.yu[1,0] * self.yubar[1,mif2] * self.yubar[mif1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,0] * self.yu[1,0] * self.yubar[1,mif2] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,1] * self.yu[1,0] * self.yubar[1,mif2] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,1] * self.yu[1,0] * self.yubar[1,mif2] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,1] * self.yu[1,0] * self.yubar[1,mif2] * self.yubar[mif1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,0] * self.yu[1,1] * self.yubar[1,mif2] * self.yubar[mif1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,0] * self.yu[1,1] * self.yubar[1,mif2] * self.yubar[mif1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,0] * self.yu[1,1] * self.yubar[1,mif2] * self.yubar[mif1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,0] * self.yu[1,2] * self.yubar[1,mif2] * self.yubar[mif1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,0] * self.yu[1,2] * self.yubar[1,mif2] * self.yubar[mif1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,0] * self.yu[1,2] * self.yubar[1,mif2] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,1] * self.yu[2,0] * self.yubar[1,mif2] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,1] * self.yu[2,0] * self.yubar[1,mif2] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,1] * self.yu[2,0] * self.yubar[1,mif2] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,2] * self.yu[0,0] * self.yubar[2,mif2] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,2] * self.yu[0,0] * self.yubar[2,mif2] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,2] * self.yu[0,0] * self.yubar[2,mif2] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,2] * self.yu[1,0] * self.yubar[2,mif2] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,2] * self.yu[1,0] * self.yubar[2,mif2] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,2] * self.yu[1,0] * self.yubar[2,mif2] * self.yubar[mif1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,0] * self.yu[2,0] * self.yubar[2,mif2] * self.yubar[mif1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,0] * self.yu[2,0] * self.yubar[2,mif2] * self.yubar[mif1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,0] * self.yu[2,0] * self.yubar[2,mif2] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,2] * self.yu[2,0] * self.yubar[2,mif2] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,2] * self.yu[2,0] * self.yubar[2,mif2] * self.yubar[mif1,0] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,2] * self.yu[2,0] * self.yubar[2,mif2] * self.yubar[mif1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,0] * self.yu[2,1] * self.yubar[2,mif2] * self.yubar[mif1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,0] * self.yu[2,1] * self.yubar[2,mif2] * self.yubar[mif1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,0] * self.yu[2,1] * self.yubar[2,mif2] * self.yubar[mif1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,0] * self.yu[2,2] * self.yubar[2,mif2] * self.yubar[mif1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,0] * self.yu[2,2] * self.yubar[2,mif2] * self.yubar[mif1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,0] * self.yu[2,2] * self.yubar[2,mif2] * self.yubar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,1] * self.yl[0,0] * self.ylbar[0,0] * self.yubar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[0,1] * self.yl[0,1] * self.ylbar[0,0] * self.yubar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[0,1] * self.yl[0,2] * self.ylbar[0,0] * self.yubar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[1,1] * self.yl[0,0] * self.ylbar[0,1] * self.yubar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,1] * self.yl[0,1] * self.ylbar[0,1] * self.yubar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[1,1] * self.yl[0,2] * self.ylbar[0,1] * self.yubar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[2,1] * self.yl[0,0] * self.ylbar[0,2] * self.yubar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[2,1] * self.yl[0,1] * self.ylbar[0,2] * self.yubar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,1] * self.yl[0,2] * self.ylbar[0,2] * self.yubar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,1] * self.yl[1,0] * self.ylbar[1,0] * self.yubar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[0,1] * self.yl[1,1] * self.ylbar[1,0] * self.yubar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[0,1] * self.yl[1,2] * self.ylbar[1,0] * self.yubar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[1,1] * self.yl[1,0] * self.ylbar[1,1] * self.yubar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,1] * self.yl[1,1] * self.ylbar[1,1] * self.yubar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[1,1] * self.yl[1,2] * self.ylbar[1,1] * self.yubar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[2,1] * self.yl[1,0] * self.ylbar[1,2] * self.yubar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[2,1] * self.yl[1,1] * self.ylbar[1,2] * self.yubar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,1] * self.yl[1,2] * self.ylbar[1,2] * self.yubar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,1] * self.yl[2,0] * self.ylbar[2,0] * self.yubar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[0,1] * self.yl[2,1] * self.ylbar[2,0] * self.yubar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[0,1] * self.yl[2,2] * self.ylbar[2,0] * self.yubar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[1,1] * self.yl[2,0] * self.ylbar[2,1] * self.yubar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,1] * self.yl[2,1] * self.ylbar[2,1] * self.yubar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[1,1] * self.yl[2,2] * self.ylbar[2,1] * self.yubar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[2,1] * self.yl[2,0] * self.ylbar[2,2] * self.yubar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[2,1] * self.yl[2,1] * self.ylbar[2,2] * self.yubar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,1] * self.yl[2,2] * self.ylbar[2,2] * self.yubar[mif1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,1] * self.yu[0,0] * self.yubar[0,mif2] * self.yubar[mif1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,1] * self.yu[0,0] * self.yubar[0,mif2] * self.yubar[mif1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,1] * self.yu[0,0] * self.yubar[0,mif2] * self.yubar[mif1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,1] * self.yu[0,1] * self.yubar[0,mif2] * self.yubar[mif1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,1] * self.yu[0,1] * self.yubar[0,mif2] * self.yubar[mif1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,1] * self.yu[0,1] * self.yubar[0,mif2] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,0] * self.yu[0,1] * self.yubar[0,mif2] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,0] * self.yu[0,1] * self.yubar[0,mif2] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,0] * self.yu[0,1] * self.yubar[0,mif2] * self.yubar[mif1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,1] * self.yu[0,2] * self.yubar[0,mif2] * self.yubar[mif1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,1] * self.yu[0,2] * self.yubar[0,mif2] * self.yubar[mif1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,1] * self.yu[0,2] * self.yubar[0,mif2] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,0] * self.yu[1,1] * self.yubar[0,mif2] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,0] * self.yu[1,1] * self.yubar[0,mif2] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,0] * self.yu[1,1] * self.yubar[0,mif2] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,0] * self.yu[2,1] * self.yubar[0,mif2] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,0] * self.yu[2,1] * self.yubar[0,mif2] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,0] * self.yu[2,1] * self.yubar[0,mif2] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,1] * self.yu[0,1] * self.yubar[1,mif2] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,1] * self.yu[0,1] * self.yubar[1,mif2] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,1] * self.yu[0,1] * self.yubar[1,mif2] * self.yubar[mif1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,1] * self.yu[1,0] * self.yubar[1,mif2] * self.yubar[mif1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,1] * self.yu[1,0] * self.yubar[1,mif2] * self.yubar[mif1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,1] * self.yu[1,0] * self.yubar[1,mif2] * self.yubar[mif1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,1] * self.yu[1,1] * self.yubar[1,mif2] * self.yubar[mif1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,1] * self.yu[1,1] * self.yubar[1,mif2] * self.yubar[mif1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,1] * self.yu[1,1] * self.yubar[1,mif2] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,1] * self.yu[1,1] * self.yubar[1,mif2] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,1] * self.yu[1,1] * self.yubar[1,mif2] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,1] * self.yu[1,1] * self.yubar[1,mif2] * self.yubar[mif1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,1] * self.yu[1,2] * self.yubar[1,mif2] * self.yubar[mif1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,1] * self.yu[1,2] * self.yubar[1,mif2] * self.yubar[mif1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,1] * self.yu[1,2] * self.yubar[1,mif2] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,1] * self.yu[2,1] * self.yubar[1,mif2] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,1] * self.yu[2,1] * self.yubar[1,mif2] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,1] * self.yu[2,1] * self.yubar[1,mif2] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,2] * self.yu[0,1] * self.yubar[2,mif2] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,2] * self.yu[0,1] * self.yubar[2,mif2] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,2] * self.yu[0,1] * self.yubar[2,mif2] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,2] * self.yu[1,1] * self.yubar[2,mif2] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,2] * self.yu[1,1] * self.yubar[2,mif2] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,2] * self.yu[1,1] * self.yubar[2,mif2] * self.yubar[mif1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,1] * self.yu[2,0] * self.yubar[2,mif2] * self.yubar[mif1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,1] * self.yu[2,0] * self.yubar[2,mif2] * self.yubar[mif1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,1] * self.yu[2,0] * self.yubar[2,mif2] * self.yubar[mif1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,1] * self.yu[2,1] * self.yubar[2,mif2] * self.yubar[mif1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,1] * self.yu[2,1] * self.yubar[2,mif2] * self.yubar[mif1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,1] * self.yu[2,1] * self.yubar[2,mif2] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,2] * self.yu[2,1] * self.yubar[2,mif2] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,2] * self.yu[2,1] * self.yubar[2,mif2] * self.yubar[mif1,1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,2] * self.yu[2,1] * self.yubar[2,mif2] * self.yubar[mif1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,1] * self.yu[2,2] * self.yubar[2,mif2] * self.yubar[mif1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,1] * self.yu[2,2] * self.yubar[2,mif2] * self.yubar[mif1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,1] * self.yu[2,2] * self.yubar[2,mif2] * self.yubar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,2] * self.yl[0,0] * self.ylbar[0,0] * self.yubar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[0,2] * self.yl[0,1] * self.ylbar[0,0] * self.yubar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[0,2] * self.yl[0,2] * self.ylbar[0,0] * self.yubar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[1,2] * self.yl[0,0] * self.ylbar[0,1] * self.yubar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,2] * self.yl[0,1] * self.ylbar[0,1] * self.yubar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[1,2] * self.yl[0,2] * self.ylbar[0,1] * self.yubar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[2,2] * self.yl[0,0] * self.ylbar[0,2] * self.yubar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[2,2] * self.yl[0,1] * self.ylbar[0,2] * self.yubar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,2] * self.yl[0,2] * self.ylbar[0,2] * self.yubar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,2] * self.yl[1,0] * self.ylbar[1,0] * self.yubar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[0,2] * self.yl[1,1] * self.ylbar[1,0] * self.yubar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[0,2] * self.yl[1,2] * self.ylbar[1,0] * self.yubar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[1,2] * self.yl[1,0] * self.ylbar[1,1] * self.yubar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,2] * self.yl[1,1] * self.ylbar[1,1] * self.yubar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[1,2] * self.yl[1,2] * self.ylbar[1,1] * self.yubar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[2,2] * self.yl[1,0] * self.ylbar[1,2] * self.yubar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[2,2] * self.yl[1,1] * self.ylbar[1,2] * self.yubar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,2] * self.yl[1,2] * self.ylbar[1,2] * self.yubar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[0,2] * self.yl[2,0] * self.ylbar[2,0] * self.yubar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[0,2] * self.yl[2,1] * self.ylbar[2,0] * self.yubar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[0,2] * self.yl[2,2] * self.ylbar[2,0] * self.yubar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[1,2] * self.yl[2,0] * self.ylbar[2,1] * self.yubar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[1,2] * self.yl[2,1] * self.ylbar[2,1] * self.yubar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[1,2] * self.yl[2,2] * self.ylbar[2,1] * self.yubar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuSbar[2,2] * self.yl[2,0] * self.ylbar[2,2] * self.yubar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuSbar[2,2] * self.yl[2,1] * self.ylbar[2,2] * self.yubar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuSbar[2,2] * self.yl[2,2] * self.ylbar[2,2] * self.yubar[mif1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,2] * self.yu[0,0] * self.yubar[0,mif2] * self.yubar[mif1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,2] * self.yu[0,0] * self.yubar[0,mif2] * self.yubar[mif1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,2] * self.yu[0,0] * self.yubar[0,mif2] * self.yubar[mif1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,2] * self.yu[0,1] * self.yubar[0,mif2] * self.yubar[mif1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,2] * self.yu[0,1] * self.yubar[0,mif2] * self.yubar[mif1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,2] * self.yu[0,1] * self.yubar[0,mif2] * self.yubar[mif1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,2] * self.yu[0,2] * self.yubar[0,mif2] * self.yubar[mif1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,2] * self.yu[0,2] * self.yubar[0,mif2] * self.yubar[mif1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,2] * self.yu[0,2] * self.yubar[0,mif2] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,0] * self.yu[0,2] * self.yubar[0,mif2] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,0] * self.yu[0,2] * self.yubar[0,mif2] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,0] * self.yu[0,2] * self.yubar[0,mif2] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,0] * self.yu[1,2] * self.yubar[0,mif2] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,0] * self.yu[1,2] * self.yubar[0,mif2] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,0] * self.yu[1,2] * self.yubar[0,mif2] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,0] * self.yu[2,2] * self.yubar[0,mif2] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,0] * self.yu[2,2] * self.yubar[0,mif2] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,0] * self.yu[2,2] * self.yubar[0,mif2] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,1] * self.yu[0,2] * self.yubar[1,mif2] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,1] * self.yu[0,2] * self.yubar[1,mif2] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,1] * self.yu[0,2] * self.yubar[1,mif2] * self.yubar[mif1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,2] * self.yu[1,0] * self.yubar[1,mif2] * self.yubar[mif1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,2] * self.yu[1,0] * self.yubar[1,mif2] * self.yubar[mif1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,2] * self.yu[1,0] * self.yubar[1,mif2] * self.yubar[mif1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,2] * self.yu[1,1] * self.yubar[1,mif2] * self.yubar[mif1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,2] * self.yu[1,1] * self.yubar[1,mif2] * self.yubar[mif1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,2] * self.yu[1,1] * self.yubar[1,mif2] * self.yubar[mif1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,2] * self.yu[1,2] * self.yubar[1,mif2] * self.yubar[mif1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,2] * self.yu[1,2] * self.yubar[1,mif2] * self.yubar[mif1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,2] * self.yu[1,2] * self.yubar[1,mif2] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,1] * self.yu[1,2] * self.yubar[1,mif2] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,1] * self.yu[1,2] * self.yubar[1,mif2] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,1] * self.yu[1,2] * self.yubar[1,mif2] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,1] * self.yu[2,2] * self.yubar[1,mif2] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,1] * self.yu[2,2] * self.yubar[1,mif2] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,1] * self.yu[2,2] * self.yubar[1,mif2] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,2] * self.yu[0,2] * self.yubar[2,mif2] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,2] * self.yu[0,2] * self.yubar[2,mif2] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,2] * self.yu[0,2] * self.yubar[2,mif2] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,2] * self.yu[1,2] * self.yubar[2,mif2] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,2] * self.yu[1,2] * self.yubar[2,mif2] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,2] * self.yu[1,2] * self.yubar[2,mif2] * self.yubar[mif1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,2] * self.yu[2,0] * self.yubar[2,mif2] * self.yubar[mif1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,2] * self.yu[2,0] * self.yubar[2,mif2] * self.yubar[mif1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,2] * self.yu[2,0] * self.yubar[2,mif2] * self.yubar[mif1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,2] * self.yu[2,1] * self.yubar[2,mif2] * self.yubar[mif1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,2] * self.yu[2,1] * self.yubar[2,mif2] * self.yubar[mif1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,2] * self.yu[2,1] * self.yubar[2,mif2] * self.yubar[mif1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,2] * self.yu[2,2] * self.yubar[2,mif2] * self.yubar[mif1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,2] * self.yu[2,2] * self.yubar[2,mif2] * self.yubar[mif1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,2] * self.yu[2,2] * self.yubar[2,mif2] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,2] * self.yu[2,2] * self.yubar[2,mif2] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,2] * self.yu[2,2] * self.yubar[2,mif2] * self.yubar[mif1,2] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,2] * self.yu[2,2] * self.yubar[2,mif2] * self.yubar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.YLQS[0,0] * self.yu[0,mif1] * self.yubar[mif1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.YLQS[0,0] * self.yu[0,mif1] * self.yubar[mif1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.YLQS[0,0] * self.yu[0,mif1] * self.yubar[mif1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,0] * self.YLQS[1,0] * self.yu[0,mif1] * self.yubar[mif1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,1] * self.YLQS[1,0] * self.yu[0,mif1] * self.yubar[mif1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,2] * self.YLQS[1,0] * self.yu[0,mif1] * self.yubar[mif1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[2,0] * self.YLQS[2,0] * self.yu[0,mif1] * self.yubar[mif1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[2,1] * self.YLQS[2,0] * self.yu[0,mif1] * self.yubar[mif1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[2,2] * self.YLQS[2,0] * self.yu[0,mif1] * self.yubar[mif1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.YLQS[0,1] * self.yu[1,mif1] * self.yubar[mif1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.YLQS[0,1] * self.yu[1,mif1] * self.yubar[mif1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.YLQS[0,1] * self.yu[1,mif1] * self.yubar[mif1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,0] * self.YLQS[1,1] * self.yu[1,mif1] * self.yubar[mif1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,1] * self.YLQS[1,1] * self.yu[1,mif1] * self.yubar[mif1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,2] * self.YLQS[1,1] * self.yu[1,mif1] * self.yubar[mif1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[2,0] * self.YLQS[2,1] * self.yu[1,mif1] * self.yubar[mif1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[2,1] * self.YLQS[2,1] * self.yu[1,mif1] * self.yubar[mif1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[2,2] * self.YLQS[2,1] * self.yu[1,mif1] * self.yubar[mif1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[0,0] * self.YLQS[0,2] * self.yu[2,mif1] * self.yubar[mif1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[0,1] * self.YLQS[0,2] * self.yu[2,mif1] * self.yubar[mif1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[0,2] * self.YLQS[0,2] * self.yu[2,mif1] * self.yubar[mif1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[1,0] * self.YLQS[1,2] * self.yu[2,mif1] * self.yubar[mif1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[1,1] * self.YLQS[1,2] * self.yu[2,mif1] * self.yubar[mif1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[1,2] * self.YLQS[1,2] * self.yu[2,mif1] * self.yubar[mif1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.yl[2,0] * self.YLQS[2,2] * self.yu[2,mif1] * self.yubar[mif1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.yl[2,1] * self.YLQS[2,2] * self.yu[2,mif1] * self.yubar[mif1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.yl[2,2] * self.YLQS[2,2] * self.yu[2,mif1] * self.yubar[mif1,mif1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,0] * self.yu[0,mif1] * self.yubar[0,mif2] * self.yubar[mif1,mif1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,0] * self.yu[0,mif1] * self.yubar[0,mif2] * self.yubar[mif1,mif1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,0] * self.yu[0,mif1] * self.yubar[0,mif2] * self.yubar[mif1,mif1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,0] * self.yu[1,mif1] * self.yubar[0,mif2] * self.yubar[mif1,mif1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,0] * self.yu[1,mif1] * self.yubar[0,mif2] * self.yubar[mif1,mif1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,0] * self.yu[1,mif1] * self.yubar[0,mif2] * self.yubar[mif1,mif1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,0] * self.yu[2,mif1] * self.yubar[0,mif2] * self.yubar[mif1,mif1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,0] * self.yu[2,mif1] * self.yubar[0,mif2] * self.yubar[mif1,mif1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,0] * self.yu[2,mif1] * self.yubar[0,mif2] * self.yubar[mif1,mif1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,1] * self.yu[0,mif1] * self.yubar[1,mif2] * self.yubar[mif1,mif1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,1] * self.yu[0,mif1] * self.yubar[1,mif2] * self.yubar[mif1,mif1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,1] * self.yu[0,mif1] * self.yubar[1,mif2] * self.yubar[mif1,mif1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,1] * self.yu[1,mif1] * self.yubar[1,mif2] * self.yubar[mif1,mif1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,1] * self.yu[1,mif1] * self.yubar[1,mif2] * self.yubar[mif1,mif1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,1] * self.yu[1,mif1] * self.yubar[1,mif2] * self.yubar[mif1,mif1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,1] * self.yu[2,mif1] * self.yubar[1,mif2] * self.yubar[mif1,mif1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,1] * self.yu[2,mif1] * self.yubar[1,mif2] * self.yubar[mif1,mif1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,1] * self.yu[2,mif1] * self.yubar[1,mif2] * self.yubar[mif1,mif1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQSbar[0,2] * self.yu[0,mif1] * self.yubar[2,mif2] * self.yubar[mif1,mif1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQSbar[1,2] * self.yu[0,mif1] * self.yubar[2,mif2] * self.yubar[mif1,mif1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQSbar[2,2] * self.yu[0,mif1] * self.yubar[2,mif2] * self.yubar[mif1,mif1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQSbar[0,2] * self.yu[1,mif1] * self.yubar[2,mif2] * self.yubar[mif1,mif1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQSbar[1,2] * self.yu[1,mif1] * self.yubar[2,mif2] * self.yubar[mif1,mif1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQSbar[2,2] * self.yu[1,mif1] * self.yubar[2,mif2] * self.yubar[mif1,mif1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQSbar[0,2] * self.yu[2,mif1] * self.yubar[2,mif2] * self.yubar[mif1,mif1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQSbar[1,2] * self.yu[2,mif1] * self.yubar[2,mif2] * self.yubar[mif1,mif1] + 1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQSbar[2,2] * self.yu[2,mif1] * self.yubar[2,mif2] * self.yubar[mif1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[0,0] * self.YLQS[0,mif1] * self.yu[mif2,0] * self.yubar[mif2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[0,1] * self.YLQS[0,mif1] * self.yu[mif2,0] * self.yubar[mif2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[0,2] * self.YLQS[0,mif1] * self.yu[mif2,0] * self.yubar[mif2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[1,0] * self.YLQS[1,mif1] * self.yu[mif2,0] * self.yubar[mif2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[1,1] * self.YLQS[1,mif1] * self.yu[mif2,0] * self.yubar[mif2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[1,2] * self.YLQS[1,mif1] * self.yu[mif2,0] * self.yubar[mif2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[2,0] * self.YLQS[2,mif1] * self.yu[mif2,0] * self.yubar[mif2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[2,1] * self.YLQS[2,mif1] * self.yu[mif2,0] * self.yubar[mif2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[2,2] * self.YLQS[2,mif1] * self.yu[mif2,0] * self.yubar[mif2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[0,0] * self.YLQS[0,mif1] * self.yu[mif2,1] * self.yubar[mif2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[0,1] * self.YLQS[0,mif1] * self.yu[mif2,1] * self.yubar[mif2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[0,2] * self.YLQS[0,mif1] * self.yu[mif2,1] * self.yubar[mif2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[1,0] * self.YLQS[1,mif1] * self.yu[mif2,1] * self.yubar[mif2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[1,1] * self.YLQS[1,mif1] * self.yu[mif2,1] * self.yubar[mif2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[1,2] * self.YLQS[1,mif1] * self.yu[mif2,1] * self.yubar[mif2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[2,0] * self.YLQS[2,mif1] * self.yu[mif2,1] * self.yubar[mif2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[2,1] * self.YLQS[2,mif1] * self.yu[mif2,1] * self.yubar[mif2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[2,2] * self.YLQS[2,mif1] * self.yu[mif2,1] * self.yubar[mif2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[0,0] * self.YLQS[0,mif1] * self.yu[mif2,2] * self.yubar[mif2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[0,1] * self.YLQS[0,mif1] * self.yu[mif2,2] * self.yubar[mif2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[0,2] * self.YLQS[0,mif1] * self.yu[mif2,2] * self.yubar[mif2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[1,0] * self.YLQS[1,mif1] * self.yu[mif2,2] * self.yubar[mif2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[1,1] * self.YLQS[1,mif1] * self.yu[mif2,2] * self.yubar[mif2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[1,2] * self.YLQS[1,mif1] * self.yu[mif2,2] * self.yubar[mif2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[2,0] * self.YLQS[2,mif1] * self.yu[mif2,2] * self.yubar[mif2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[2,1] * self.YLQS[2,mif1] * self.yu[mif2,2] * self.yubar[mif2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[2,2] * self.YLQS[2,mif1] * self.yu[mif2,2] * self.yubar[mif2,mif2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,0] * self.yu[mif2,0] * self.yubar[0,0] * self.yubar[mif2,mif2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,0] * self.yu[mif2,0] * self.yubar[0,0] * self.yubar[mif2,mif2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,0] * self.yu[mif2,0] * self.yubar[0,0] * self.yubar[mif2,mif2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,0] * self.yu[mif2,1] * self.yubar[0,1] * self.yubar[mif2,mif2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,0] * self.yu[mif2,1] * self.yubar[0,1] * self.yubar[mif2,mif2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,0] * self.yu[mif2,1] * self.yubar[0,1] * self.yubar[mif2,mif2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,0] * self.yu[mif2,2] * self.yubar[0,2] * self.yubar[mif2,mif2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,0] * self.yu[mif2,2] * self.yubar[0,2] * self.yubar[mif2,mif2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,0] * self.yu[mif2,2] * self.yubar[0,2] * self.yubar[mif2,mif2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,1] * self.yu[mif2,0] * self.yubar[1,0] * self.yubar[mif2,mif2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,1] * self.yu[mif2,0] * self.yubar[1,0] * self.yubar[mif2,mif2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,1] * self.yu[mif2,0] * self.yubar[1,0] * self.yubar[mif2,mif2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,1] * self.yu[mif2,1] * self.yubar[1,1] * self.yubar[mif2,mif2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,1] * self.yu[mif2,1] * self.yubar[1,1] * self.yubar[mif2,mif2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,1] * self.yu[mif2,1] * self.yubar[1,1] * self.yubar[mif2,mif2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,1] * self.yu[mif2,2] * self.yubar[1,2] * self.yubar[mif2,mif2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,1] * self.yu[mif2,2] * self.yubar[1,2] * self.yubar[mif2,mif2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,1] * self.yu[mif2,2] * self.yubar[1,2] * self.yubar[mif2,mif2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,2] * self.yu[mif2,0] * self.yubar[2,0] * self.yubar[mif2,mif2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,2] * self.yu[mif2,0] * self.yubar[2,0] * self.yubar[mif2,mif2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,2] * self.yu[mif2,0] * self.yubar[2,0] * self.yubar[mif2,mif2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,2] * self.yu[mif2,1] * self.yubar[2,1] * self.yubar[mif2,mif2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,2] * self.yu[mif2,1] * self.yubar[2,1] * self.yubar[mif2,mif2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,2] * self.yu[mif2,1] * self.yubar[2,1] * self.yubar[mif2,mif2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQSbar[0,2] * self.yu[mif2,2] * self.yubar[2,2] * self.yubar[mif2,mif2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQSbar[1,2] * self.yu[mif2,2] * self.yubar[2,2] * self.yubar[mif2,mif2] + -1/384 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQSbar[2,2] * self.yu[mif2,2] * self.yubar[2,2] * self.yubar[mif2,mif2])

    def alphaOdHbar(self, mif1,mif2):
        return (1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,mif2] * self.ydbar[mif1,0] * self.YLQS[0,0] * self.YLQSbar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,mif2] * self.ydbar[mif1,1] * self.YLQS[0,0] * self.YLQSbar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,mif2] * self.ydbar[mif1,2] * self.YLQS[0,0] * self.YLQSbar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,mif2] * self.ydbar[mif1,0] * self.YLQS[0,1] * self.YLQSbar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,mif2] * self.ydbar[mif1,1] * self.YLQS[0,1] * self.YLQSbar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,mif2] * self.ydbar[mif1,2] * self.YLQS[0,1] * self.YLQSbar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,mif2] * self.ydbar[mif1,0] * self.YLQS[0,2] * self.YLQSbar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,mif2] * self.ydbar[mif1,1] * self.YLQS[0,2] * self.YLQSbar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,mif2] * self.ydbar[mif1,2] * self.YLQS[0,2] * self.YLQSbar[0,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,mif2] * self.ydbar[mif1,0] * self.YLQS[0,0] * self.YLQSbar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,mif2] * self.ydbar[mif1,1] * self.YLQS[0,0] * self.YLQSbar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,mif2] * self.ydbar[mif1,2] * self.YLQS[0,0] * self.YLQSbar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,mif2] * self.ydbar[mif1,0] * self.YLQS[0,1] * self.YLQSbar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,mif2] * self.ydbar[mif1,1] * self.YLQS[0,1] * self.YLQSbar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,mif2] * self.ydbar[mif1,2] * self.YLQS[0,1] * self.YLQSbar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,mif2] * self.ydbar[mif1,0] * self.YLQS[0,2] * self.YLQSbar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,mif2] * self.ydbar[mif1,1] * self.YLQS[0,2] * self.YLQSbar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,mif2] * self.ydbar[mif1,2] * self.YLQS[0,2] * self.YLQSbar[0,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,mif2] * self.ydbar[mif1,0] * self.YLQS[0,0] * self.YLQSbar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,mif2] * self.ydbar[mif1,1] * self.YLQS[0,0] * self.YLQSbar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,mif2] * self.ydbar[mif1,2] * self.YLQS[0,0] * self.YLQSbar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,mif2] * self.ydbar[mif1,0] * self.YLQS[0,1] * self.YLQSbar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,mif2] * self.ydbar[mif1,1] * self.YLQS[0,1] * self.YLQSbar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,mif2] * self.ydbar[mif1,2] * self.YLQS[0,1] * self.YLQSbar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,mif2] * self.ydbar[mif1,0] * self.YLQS[0,2] * self.YLQSbar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,mif2] * self.ydbar[mif1,1] * self.YLQS[0,2] * self.YLQSbar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,mif2] * self.ydbar[mif1,2] * self.YLQS[0,2] * self.YLQSbar[0,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,mif2] * self.ydbar[mif1,0] * self.YLQS[1,0] * self.YLQSbar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,mif2] * self.ydbar[mif1,1] * self.YLQS[1,0] * self.YLQSbar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,mif2] * self.ydbar[mif1,2] * self.YLQS[1,0] * self.YLQSbar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,mif2] * self.ydbar[mif1,0] * self.YLQS[1,1] * self.YLQSbar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,mif2] * self.ydbar[mif1,1] * self.YLQS[1,1] * self.YLQSbar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,mif2] * self.ydbar[mif1,2] * self.YLQS[1,1] * self.YLQSbar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,mif2] * self.ydbar[mif1,0] * self.YLQS[1,2] * self.YLQSbar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,mif2] * self.ydbar[mif1,1] * self.YLQS[1,2] * self.YLQSbar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,mif2] * self.ydbar[mif1,2] * self.YLQS[1,2] * self.YLQSbar[1,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,mif2] * self.ydbar[mif1,0] * self.YLQS[1,0] * self.YLQSbar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,mif2] * self.ydbar[mif1,1] * self.YLQS[1,0] * self.YLQSbar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,mif2] * self.ydbar[mif1,2] * self.YLQS[1,0] * self.YLQSbar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,mif2] * self.ydbar[mif1,0] * self.YLQS[1,1] * self.YLQSbar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,mif2] * self.ydbar[mif1,1] * self.YLQS[1,1] * self.YLQSbar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,mif2] * self.ydbar[mif1,2] * self.YLQS[1,1] * self.YLQSbar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,mif2] * self.ydbar[mif1,0] * self.YLQS[1,2] * self.YLQSbar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,mif2] * self.ydbar[mif1,1] * self.YLQS[1,2] * self.YLQSbar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,mif2] * self.ydbar[mif1,2] * self.YLQS[1,2] * self.YLQSbar[1,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,mif2] * self.ydbar[mif1,0] * self.YLQS[1,0] * self.YLQSbar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,mif2] * self.ydbar[mif1,1] * self.YLQS[1,0] * self.YLQSbar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,mif2] * self.ydbar[mif1,2] * self.YLQS[1,0] * self.YLQSbar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,mif2] * self.ydbar[mif1,0] * self.YLQS[1,1] * self.YLQSbar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,mif2] * self.ydbar[mif1,1] * self.YLQS[1,1] * self.YLQSbar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,mif2] * self.ydbar[mif1,2] * self.YLQS[1,1] * self.YLQSbar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,mif2] * self.ydbar[mif1,0] * self.YLQS[1,2] * self.YLQSbar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,mif2] * self.ydbar[mif1,1] * self.YLQS[1,2] * self.YLQSbar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,mif2] * self.ydbar[mif1,2] * self.YLQS[1,2] * self.YLQSbar[1,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,mif2] * self.ydbar[mif1,0] * self.YLQS[2,0] * self.YLQSbar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,mif2] * self.ydbar[mif1,1] * self.YLQS[2,0] * self.YLQSbar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,mif2] * self.ydbar[mif1,2] * self.YLQS[2,0] * self.YLQSbar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,mif2] * self.ydbar[mif1,0] * self.YLQS[2,1] * self.YLQSbar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,mif2] * self.ydbar[mif1,1] * self.YLQS[2,1] * self.YLQSbar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,mif2] * self.ydbar[mif1,2] * self.YLQS[2,1] * self.YLQSbar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,mif2] * self.ydbar[mif1,0] * self.YLQS[2,2] * self.YLQSbar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,mif2] * self.ydbar[mif1,1] * self.YLQS[2,2] * self.YLQSbar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,mif2] * self.ydbar[mif1,2] * self.YLQS[2,2] * self.YLQSbar[2,0] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,mif2] * self.ydbar[mif1,0] * self.YLQS[2,0] * self.YLQSbar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,mif2] * self.ydbar[mif1,1] * self.YLQS[2,0] * self.YLQSbar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,mif2] * self.ydbar[mif1,2] * self.YLQS[2,0] * self.YLQSbar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,mif2] * self.ydbar[mif1,0] * self.YLQS[2,1] * self.YLQSbar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,mif2] * self.ydbar[mif1,1] * self.YLQS[2,1] * self.YLQSbar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,mif2] * self.ydbar[mif1,2] * self.YLQS[2,1] * self.YLQSbar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,mif2] * self.ydbar[mif1,0] * self.YLQS[2,2] * self.YLQSbar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,mif2] * self.ydbar[mif1,1] * self.YLQS[2,2] * self.YLQSbar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,mif2] * self.ydbar[mif1,2] * self.YLQS[2,2] * self.YLQSbar[2,1] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,mif2] * self.ydbar[mif1,0] * self.YLQS[2,0] * self.YLQSbar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,mif2] * self.ydbar[mif1,1] * self.YLQS[2,0] * self.YLQSbar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,mif2] * self.ydbar[mif1,2] * self.YLQS[2,0] * self.YLQSbar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,mif2] * self.ydbar[mif1,0] * self.YLQS[2,1] * self.YLQSbar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,mif2] * self.ydbar[mif1,1] * self.YLQS[2,1] * self.YLQSbar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,mif2] * self.ydbar[mif1,2] * self.YLQS[2,1] * self.YLQSbar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,mif2] * self.ydbar[mif1,0] * self.YLQS[2,2] * self.YLQSbar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,mif2] * self.ydbar[mif1,1] * self.YLQS[2,2] * self.YLQSbar[2,2] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,mif2] * self.ydbar[mif1,2] * self.YLQS[2,2] * self.YLQSbar[2,2])

    def alphaOeHbar(self, mif1,mif2):
        return (1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,0] * self.yl[0,0] * self.ylbar[0,mif2] * self.ylbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,1] * self.yl[0,0] * self.ylbar[0,mif2] * self.ylbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,2] * self.yl[0,0] * self.ylbar[0,mif2] * self.ylbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[0,0] * self.yl[0,1] * self.ylbar[0,mif2] * self.ylbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[0,1] * self.yl[0,1] * self.ylbar[0,mif2] * self.ylbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[0,2] * self.yl[0,1] * self.ylbar[0,mif2] * self.ylbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[0,0] * self.yl[0,2] * self.ylbar[0,mif2] * self.ylbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[0,1] * self.yl[0,2] * self.ylbar[0,mif2] * self.ylbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[0,2] * self.yl[0,2] * self.ylbar[0,mif2] * self.ylbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,0] * self.yl[1,0] * self.ylbar[1,mif2] * self.ylbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,1] * self.yl[1,0] * self.ylbar[1,mif2] * self.ylbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,2] * self.yl[1,0] * self.ylbar[1,mif2] * self.ylbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[0,0] * self.yl[1,1] * self.ylbar[1,mif2] * self.ylbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[0,1] * self.yl[1,1] * self.ylbar[1,mif2] * self.ylbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[0,2] * self.yl[1,1] * self.ylbar[1,mif2] * self.ylbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[0,0] * self.yl[1,2] * self.ylbar[1,mif2] * self.ylbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[0,1] * self.yl[1,2] * self.ylbar[1,mif2] * self.ylbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[0,2] * self.yl[1,2] * self.ylbar[1,mif2] * self.ylbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,0] * self.yl[2,0] * self.ylbar[2,mif2] * self.ylbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,1] * self.yl[2,0] * self.ylbar[2,mif2] * self.ylbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,2] * self.yl[2,0] * self.ylbar[2,mif2] * self.ylbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[0,0] * self.yl[2,1] * self.ylbar[2,mif2] * self.ylbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[0,1] * self.yl[2,1] * self.ylbar[2,mif2] * self.ylbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[0,2] * self.yl[2,1] * self.ylbar[2,mif2] * self.ylbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[0,0] * self.yl[2,2] * self.ylbar[2,mif2] * self.ylbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[0,1] * self.yl[2,2] * self.ylbar[2,mif2] * self.ylbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[0,2] * self.yl[2,2] * self.ylbar[2,mif2] * self.ylbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[1,0] * self.yl[0,0] * self.ylbar[0,mif2] * self.ylbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[1,1] * self.yl[0,0] * self.ylbar[0,mif2] * self.ylbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[1,2] * self.yl[0,0] * self.ylbar[0,mif2] * self.ylbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,0] * self.yl[0,1] * self.ylbar[0,mif2] * self.ylbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,1] * self.yl[0,1] * self.ylbar[0,mif2] * self.ylbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,2] * self.yl[0,1] * self.ylbar[0,mif2] * self.ylbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[1,0] * self.yl[0,2] * self.ylbar[0,mif2] * self.ylbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[1,1] * self.yl[0,2] * self.ylbar[0,mif2] * self.ylbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[1,2] * self.yl[0,2] * self.ylbar[0,mif2] * self.ylbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[1,0] * self.yl[1,0] * self.ylbar[1,mif2] * self.ylbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[1,1] * self.yl[1,0] * self.ylbar[1,mif2] * self.ylbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[1,2] * self.yl[1,0] * self.ylbar[1,mif2] * self.ylbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,0] * self.yl[1,1] * self.ylbar[1,mif2] * self.ylbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,1] * self.yl[1,1] * self.ylbar[1,mif2] * self.ylbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,2] * self.yl[1,1] * self.ylbar[1,mif2] * self.ylbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[1,0] * self.yl[1,2] * self.ylbar[1,mif2] * self.ylbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[1,1] * self.yl[1,2] * self.ylbar[1,mif2] * self.ylbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[1,2] * self.yl[1,2] * self.ylbar[1,mif2] * self.ylbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[1,0] * self.yl[2,0] * self.ylbar[2,mif2] * self.ylbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[1,1] * self.yl[2,0] * self.ylbar[2,mif2] * self.ylbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[1,2] * self.yl[2,0] * self.ylbar[2,mif2] * self.ylbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,0] * self.yl[2,1] * self.ylbar[2,mif2] * self.ylbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,1] * self.yl[2,1] * self.ylbar[2,mif2] * self.ylbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,2] * self.yl[2,1] * self.ylbar[2,mif2] * self.ylbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[1,0] * self.yl[2,2] * self.ylbar[2,mif2] * self.ylbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[1,1] * self.yl[2,2] * self.ylbar[2,mif2] * self.ylbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[1,2] * self.yl[2,2] * self.ylbar[2,mif2] * self.ylbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[2,0] * self.yl[0,0] * self.ylbar[0,mif2] * self.ylbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[2,1] * self.yl[0,0] * self.ylbar[0,mif2] * self.ylbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[2,2] * self.yl[0,0] * self.ylbar[0,mif2] * self.ylbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[2,0] * self.yl[0,1] * self.ylbar[0,mif2] * self.ylbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[2,1] * self.yl[0,1] * self.ylbar[0,mif2] * self.ylbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[2,2] * self.yl[0,1] * self.ylbar[0,mif2] * self.ylbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,0] * self.yl[0,2] * self.ylbar[0,mif2] * self.ylbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,1] * self.yl[0,2] * self.ylbar[0,mif2] * self.ylbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,2] * self.yl[0,2] * self.ylbar[0,mif2] * self.ylbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[2,0] * self.yl[1,0] * self.ylbar[1,mif2] * self.ylbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[2,1] * self.yl[1,0] * self.ylbar[1,mif2] * self.ylbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[2,2] * self.yl[1,0] * self.ylbar[1,mif2] * self.ylbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[2,0] * self.yl[1,1] * self.ylbar[1,mif2] * self.ylbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[2,1] * self.yl[1,1] * self.ylbar[1,mif2] * self.ylbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[2,2] * self.yl[1,1] * self.ylbar[1,mif2] * self.ylbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,0] * self.yl[1,2] * self.ylbar[1,mif2] * self.ylbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,1] * self.yl[1,2] * self.ylbar[1,mif2] * self.ylbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,2] * self.yl[1,2] * self.ylbar[1,mif2] * self.ylbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[2,0] * self.yl[2,0] * self.ylbar[2,mif2] * self.ylbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[2,1] * self.yl[2,0] * self.ylbar[2,mif2] * self.ylbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[2,2] * self.yl[2,0] * self.ylbar[2,mif2] * self.ylbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[2,0] * self.yl[2,1] * self.ylbar[2,mif2] * self.ylbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[2,1] * self.yl[2,1] * self.ylbar[2,mif2] * self.ylbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[2,2] * self.yl[2,1] * self.ylbar[2,mif2] * self.ylbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,0] * self.yl[2,2] * self.ylbar[2,mif2] * self.ylbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,1] * self.yl[2,2] * self.ylbar[2,mif2] * self.ylbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,2] * self.yl[2,2] * self.ylbar[2,mif2] * self.ylbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[0,mif2] * self.ylbar[mif1,0] * self.YLQS[0,0] * self.YLQSbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[0,mif2] * self.ylbar[mif1,1] * self.YLQS[0,0] * self.YLQSbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[0,mif2] * self.ylbar[mif1,2] * self.YLQS[0,0] * self.YLQSbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[0,mif2] * self.ylbar[mif1,0] * self.YLQS[1,0] * self.YLQSbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[0,mif2] * self.ylbar[mif1,1] * self.YLQS[1,0] * self.YLQSbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[0,mif2] * self.ylbar[mif1,2] * self.YLQS[1,0] * self.YLQSbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[0,mif2] * self.ylbar[mif1,0] * self.YLQS[2,0] * self.YLQSbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[0,mif2] * self.ylbar[mif1,1] * self.YLQS[2,0] * self.YLQSbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[0,mif2] * self.ylbar[mif1,2] * self.YLQS[2,0] * self.YLQSbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[0,mif2] * self.ylbar[mif1,0] * self.YLQS[0,1] * self.YLQSbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[0,mif2] * self.ylbar[mif1,1] * self.YLQS[0,1] * self.YLQSbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[0,mif2] * self.ylbar[mif1,2] * self.YLQS[0,1] * self.YLQSbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[0,mif2] * self.ylbar[mif1,0] * self.YLQS[1,1] * self.YLQSbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[0,mif2] * self.ylbar[mif1,1] * self.YLQS[1,1] * self.YLQSbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[0,mif2] * self.ylbar[mif1,2] * self.YLQS[1,1] * self.YLQSbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[0,mif2] * self.ylbar[mif1,0] * self.YLQS[2,1] * self.YLQSbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[0,mif2] * self.ylbar[mif1,1] * self.YLQS[2,1] * self.YLQSbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[0,mif2] * self.ylbar[mif1,2] * self.YLQS[2,1] * self.YLQSbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[0,mif2] * self.ylbar[mif1,0] * self.YLQS[0,2] * self.YLQSbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[0,mif2] * self.ylbar[mif1,1] * self.YLQS[0,2] * self.YLQSbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[0,mif2] * self.ylbar[mif1,2] * self.YLQS[0,2] * self.YLQSbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[0,mif2] * self.ylbar[mif1,0] * self.YLQS[1,2] * self.YLQSbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[0,mif2] * self.ylbar[mif1,1] * self.YLQS[1,2] * self.YLQSbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[0,mif2] * self.ylbar[mif1,2] * self.YLQS[1,2] * self.YLQSbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[0,mif2] * self.ylbar[mif1,0] * self.YLQS[2,2] * self.YLQSbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[0,mif2] * self.ylbar[mif1,1] * self.YLQS[2,2] * self.YLQSbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[0,mif2] * self.ylbar[mif1,2] * self.YLQS[2,2] * self.YLQSbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[1,mif2] * self.ylbar[mif1,0] * self.YLQS[0,0] * self.YLQSbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[1,mif2] * self.ylbar[mif1,1] * self.YLQS[0,0] * self.YLQSbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[1,mif2] * self.ylbar[mif1,2] * self.YLQS[0,0] * self.YLQSbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[1,mif2] * self.ylbar[mif1,0] * self.YLQS[1,0] * self.YLQSbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[1,mif2] * self.ylbar[mif1,1] * self.YLQS[1,0] * self.YLQSbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[1,mif2] * self.ylbar[mif1,2] * self.YLQS[1,0] * self.YLQSbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[1,mif2] * self.ylbar[mif1,0] * self.YLQS[2,0] * self.YLQSbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[1,mif2] * self.ylbar[mif1,1] * self.YLQS[2,0] * self.YLQSbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[1,mif2] * self.ylbar[mif1,2] * self.YLQS[2,0] * self.YLQSbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[1,mif2] * self.ylbar[mif1,0] * self.YLQS[0,1] * self.YLQSbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[1,mif2] * self.ylbar[mif1,1] * self.YLQS[0,1] * self.YLQSbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[1,mif2] * self.ylbar[mif1,2] * self.YLQS[0,1] * self.YLQSbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[1,mif2] * self.ylbar[mif1,0] * self.YLQS[1,1] * self.YLQSbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[1,mif2] * self.ylbar[mif1,1] * self.YLQS[1,1] * self.YLQSbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[1,mif2] * self.ylbar[mif1,2] * self.YLQS[1,1] * self.YLQSbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[1,mif2] * self.ylbar[mif1,0] * self.YLQS[2,1] * self.YLQSbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[1,mif2] * self.ylbar[mif1,1] * self.YLQS[2,1] * self.YLQSbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[1,mif2] * self.ylbar[mif1,2] * self.YLQS[2,1] * self.YLQSbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[1,mif2] * self.ylbar[mif1,0] * self.YLQS[0,2] * self.YLQSbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[1,mif2] * self.ylbar[mif1,1] * self.YLQS[0,2] * self.YLQSbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[1,mif2] * self.ylbar[mif1,2] * self.YLQS[0,2] * self.YLQSbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[1,mif2] * self.ylbar[mif1,0] * self.YLQS[1,2] * self.YLQSbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[1,mif2] * self.ylbar[mif1,1] * self.YLQS[1,2] * self.YLQSbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[1,mif2] * self.ylbar[mif1,2] * self.YLQS[1,2] * self.YLQSbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[1,mif2] * self.ylbar[mif1,0] * self.YLQS[2,2] * self.YLQSbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[1,mif2] * self.ylbar[mif1,1] * self.YLQS[2,2] * self.YLQSbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[1,mif2] * self.ylbar[mif1,2] * self.YLQS[2,2] * self.YLQSbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[2,mif2] * self.ylbar[mif1,0] * self.YLQS[0,0] * self.YLQSbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[2,mif2] * self.ylbar[mif1,1] * self.YLQS[0,0] * self.YLQSbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[2,mif2] * self.ylbar[mif1,2] * self.YLQS[0,0] * self.YLQSbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[2,mif2] * self.ylbar[mif1,0] * self.YLQS[1,0] * self.YLQSbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[2,mif2] * self.ylbar[mif1,1] * self.YLQS[1,0] * self.YLQSbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[2,mif2] * self.ylbar[mif1,2] * self.YLQS[1,0] * self.YLQSbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[2,mif2] * self.ylbar[mif1,0] * self.YLQS[2,0] * self.YLQSbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[2,mif2] * self.ylbar[mif1,1] * self.YLQS[2,0] * self.YLQSbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[2,mif2] * self.ylbar[mif1,2] * self.YLQS[2,0] * self.YLQSbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[2,mif2] * self.ylbar[mif1,0] * self.YLQS[0,1] * self.YLQSbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[2,mif2] * self.ylbar[mif1,1] * self.YLQS[0,1] * self.YLQSbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[2,mif2] * self.ylbar[mif1,2] * self.YLQS[0,1] * self.YLQSbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[2,mif2] * self.ylbar[mif1,0] * self.YLQS[1,1] * self.YLQSbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[2,mif2] * self.ylbar[mif1,1] * self.YLQS[1,1] * self.YLQSbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[2,mif2] * self.ylbar[mif1,2] * self.YLQS[1,1] * self.YLQSbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[2,mif2] * self.ylbar[mif1,0] * self.YLQS[2,1] * self.YLQSbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[2,mif2] * self.ylbar[mif1,1] * self.YLQS[2,1] * self.YLQSbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[2,mif2] * self.ylbar[mif1,2] * self.YLQS[2,1] * self.YLQSbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,0] * self.ylbar[2,mif2] * self.ylbar[mif1,0] * self.YLQS[0,2] * self.YLQSbar[2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,1] * self.ylbar[2,mif2] * self.ylbar[mif1,1] * self.YLQS[0,2] * self.YLQSbar[2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,2] * self.ylbar[2,mif2] * self.ylbar[mif1,2] * self.YLQS[0,2] * self.YLQSbar[2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,0] * self.ylbar[2,mif2] * self.ylbar[mif1,0] * self.YLQS[1,2] * self.YLQSbar[2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,1] * self.ylbar[2,mif2] * self.ylbar[mif1,1] * self.YLQS[1,2] * self.YLQSbar[2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,2] * self.ylbar[2,mif2] * self.ylbar[mif1,2] * self.YLQS[1,2] * self.YLQSbar[2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,0] * self.ylbar[2,mif2] * self.ylbar[mif1,0] * self.YLQS[2,2] * self.YLQSbar[2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,1] * self.ylbar[2,mif2] * self.ylbar[mif1,1] * self.YLQS[2,2] * self.YLQSbar[2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,2] * self.ylbar[2,mif2] * self.ylbar[mif1,2] * self.YLQS[2,2] * self.YLQSbar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[0,0] * self.ylbar[mif1,0] * self.YLQS[0,0] * self.yu[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[0,1] * self.ylbar[mif1,1] * self.YLQS[0,0] * self.yu[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[0,2] * self.ylbar[mif1,2] * self.YLQS[0,0] * self.yu[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[1,0] * self.ylbar[mif1,0] * self.YLQS[1,0] * self.yu[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[1,1] * self.ylbar[mif1,1] * self.YLQS[1,0] * self.yu[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[1,2] * self.ylbar[mif1,2] * self.YLQS[1,0] * self.yu[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[2,0] * self.ylbar[mif1,0] * self.YLQS[2,0] * self.yu[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[2,1] * self.ylbar[mif1,1] * self.YLQS[2,0] * self.yu[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[2,2] * self.ylbar[mif1,2] * self.YLQS[2,0] * self.yu[0,0] + 9/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] + 3/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] + -3/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[0,0] * self.ylbar[0,mif2] * self.YLQS[mif1,0] * self.yu[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[0,1] * self.ylbar[0,mif2] * self.YLQS[mif1,0] * self.yu[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[0,2] * self.ylbar[0,mif2] * self.YLQS[mif1,0] * self.yu[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[1,0] * self.ylbar[1,mif2] * self.YLQS[mif1,0] * self.yu[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[1,1] * self.ylbar[1,mif2] * self.YLQS[mif1,0] * self.yu[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[1,2] * self.ylbar[1,mif2] * self.YLQS[mif1,0] * self.yu[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[2,0] * self.ylbar[2,mif2] * self.YLQS[mif1,0] * self.yu[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[2,1] * self.ylbar[2,mif2] * self.YLQS[mif1,0] * self.yu[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[2,2] * self.ylbar[2,mif2] * self.YLQS[mif1,0] * self.yu[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[0,0] * self.ylbar[mif1,0] * self.YLQS[0,0] * self.yu[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[0,1] * self.ylbar[mif1,1] * self.YLQS[0,0] * self.yu[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[0,2] * self.ylbar[mif1,2] * self.YLQS[0,0] * self.yu[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[1,0] * self.ylbar[mif1,0] * self.YLQS[1,0] * self.yu[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[1,1] * self.ylbar[mif1,1] * self.YLQS[1,0] * self.yu[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[1,2] * self.ylbar[mif1,2] * self.YLQS[1,0] * self.yu[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[2,0] * self.ylbar[mif1,0] * self.YLQS[2,0] * self.yu[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[2,1] * self.ylbar[mif1,1] * self.YLQS[2,0] * self.yu[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[2,2] * self.ylbar[mif1,2] * self.YLQS[2,0] * self.yu[0,1] + 9/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,1] + 3/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,1] + -3/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[0,0] * self.ylbar[0,mif2] * self.YLQS[mif1,0] * self.yu[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[0,1] * self.ylbar[0,mif2] * self.YLQS[mif1,0] * self.yu[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[0,2] * self.ylbar[0,mif2] * self.YLQS[mif1,0] * self.yu[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[1,0] * self.ylbar[1,mif2] * self.YLQS[mif1,0] * self.yu[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[1,1] * self.ylbar[1,mif2] * self.YLQS[mif1,0] * self.yu[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[1,2] * self.ylbar[1,mif2] * self.YLQS[mif1,0] * self.yu[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[2,0] * self.ylbar[2,mif2] * self.YLQS[mif1,0] * self.yu[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[2,1] * self.ylbar[2,mif2] * self.YLQS[mif1,0] * self.yu[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[2,2] * self.ylbar[2,mif2] * self.YLQS[mif1,0] * self.yu[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[0,0] * self.ylbar[mif1,0] * self.YLQS[0,0] * self.yu[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[0,1] * self.ylbar[mif1,1] * self.YLQS[0,0] * self.yu[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[0,2] * self.ylbar[mif1,2] * self.YLQS[0,0] * self.yu[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[1,0] * self.ylbar[mif1,0] * self.YLQS[1,0] * self.yu[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[1,1] * self.ylbar[mif1,1] * self.YLQS[1,0] * self.yu[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[1,2] * self.ylbar[mif1,2] * self.YLQS[1,0] * self.yu[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[2,0] * self.ylbar[mif1,0] * self.YLQS[2,0] * self.yu[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[2,1] * self.ylbar[mif1,1] * self.YLQS[2,0] * self.yu[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[2,2] * self.ylbar[mif1,2] * self.YLQS[2,0] * self.yu[0,2] + 9/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,2] + 3/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,2] + -3/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[0,0] * self.ylbar[0,mif2] * self.YLQS[mif1,0] * self.yu[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[0,1] * self.ylbar[0,mif2] * self.YLQS[mif1,0] * self.yu[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[0,2] * self.ylbar[0,mif2] * self.YLQS[mif1,0] * self.yu[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[1,0] * self.ylbar[1,mif2] * self.YLQS[mif1,0] * self.yu[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[1,1] * self.ylbar[1,mif2] * self.YLQS[mif1,0] * self.yu[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[1,2] * self.ylbar[1,mif2] * self.YLQS[mif1,0] * self.yu[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[2,0] * self.ylbar[2,mif2] * self.YLQS[mif1,0] * self.yu[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[2,1] * self.ylbar[2,mif2] * self.YLQS[mif1,0] * self.yu[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[2,2] * self.ylbar[2,mif2] * self.YLQS[mif1,0] * self.yu[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[0,0] * self.ylbar[mif1,0] * self.YLQS[0,1] * self.yu[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[0,1] * self.ylbar[mif1,1] * self.YLQS[0,1] * self.yu[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[0,2] * self.ylbar[mif1,2] * self.YLQS[0,1] * self.yu[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[1,0] * self.ylbar[mif1,0] * self.YLQS[1,1] * self.yu[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[1,1] * self.ylbar[mif1,1] * self.YLQS[1,1] * self.yu[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[1,2] * self.ylbar[mif1,2] * self.YLQS[1,1] * self.yu[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[2,0] * self.ylbar[mif1,0] * self.YLQS[2,1] * self.yu[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[2,1] * self.ylbar[mif1,1] * self.YLQS[2,1] * self.yu[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[2,2] * self.ylbar[mif1,2] * self.YLQS[2,1] * self.yu[1,0] + 9/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,0] + 3/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,0] + -3/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[0,0] * self.ylbar[0,mif2] * self.YLQS[mif1,1] * self.yu[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[0,1] * self.ylbar[0,mif2] * self.YLQS[mif1,1] * self.yu[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[0,2] * self.ylbar[0,mif2] * self.YLQS[mif1,1] * self.yu[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[1,0] * self.ylbar[1,mif2] * self.YLQS[mif1,1] * self.yu[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[1,1] * self.ylbar[1,mif2] * self.YLQS[mif1,1] * self.yu[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[1,2] * self.ylbar[1,mif2] * self.YLQS[mif1,1] * self.yu[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[2,0] * self.ylbar[2,mif2] * self.YLQS[mif1,1] * self.yu[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[2,1] * self.ylbar[2,mif2] * self.YLQS[mif1,1] * self.yu[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[2,2] * self.ylbar[2,mif2] * self.YLQS[mif1,1] * self.yu[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[0,0] * self.ylbar[mif1,0] * self.YLQS[0,1] * self.yu[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[0,1] * self.ylbar[mif1,1] * self.YLQS[0,1] * self.yu[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[0,2] * self.ylbar[mif1,2] * self.YLQS[0,1] * self.yu[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[1,0] * self.ylbar[mif1,0] * self.YLQS[1,1] * self.yu[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[1,1] * self.ylbar[mif1,1] * self.YLQS[1,1] * self.yu[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[1,2] * self.ylbar[mif1,2] * self.YLQS[1,1] * self.yu[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[2,0] * self.ylbar[mif1,0] * self.YLQS[2,1] * self.yu[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[2,1] * self.ylbar[mif1,1] * self.YLQS[2,1] * self.yu[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[2,2] * self.ylbar[mif1,2] * self.YLQS[2,1] * self.yu[1,1] + 9/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,1] + 3/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,1] + -3/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[0,0] * self.ylbar[0,mif2] * self.YLQS[mif1,1] * self.yu[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[0,1] * self.ylbar[0,mif2] * self.YLQS[mif1,1] * self.yu[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[0,2] * self.ylbar[0,mif2] * self.YLQS[mif1,1] * self.yu[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[1,0] * self.ylbar[1,mif2] * self.YLQS[mif1,1] * self.yu[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[1,1] * self.ylbar[1,mif2] * self.YLQS[mif1,1] * self.yu[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[1,2] * self.ylbar[1,mif2] * self.YLQS[mif1,1] * self.yu[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[2,0] * self.ylbar[2,mif2] * self.YLQS[mif1,1] * self.yu[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[2,1] * self.ylbar[2,mif2] * self.YLQS[mif1,1] * self.yu[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[2,2] * self.ylbar[2,mif2] * self.YLQS[mif1,1] * self.yu[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[0,0] * self.ylbar[mif1,0] * self.YLQS[0,1] * self.yu[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[0,1] * self.ylbar[mif1,1] * self.YLQS[0,1] * self.yu[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[0,2] * self.ylbar[mif1,2] * self.YLQS[0,1] * self.yu[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[1,0] * self.ylbar[mif1,0] * self.YLQS[1,1] * self.yu[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[1,1] * self.ylbar[mif1,1] * self.YLQS[1,1] * self.yu[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[1,2] * self.ylbar[mif1,2] * self.YLQS[1,1] * self.yu[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[2,0] * self.ylbar[mif1,0] * self.YLQS[2,1] * self.yu[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[2,1] * self.ylbar[mif1,1] * self.YLQS[2,1] * self.yu[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[2,2] * self.ylbar[mif1,2] * self.YLQS[2,1] * self.yu[1,2] + 9/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,2] + 3/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,2] + -3/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[0,0] * self.ylbar[0,mif2] * self.YLQS[mif1,1] * self.yu[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[0,1] * self.ylbar[0,mif2] * self.YLQS[mif1,1] * self.yu[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[0,2] * self.ylbar[0,mif2] * self.YLQS[mif1,1] * self.yu[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[1,0] * self.ylbar[1,mif2] * self.YLQS[mif1,1] * self.yu[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[1,1] * self.ylbar[1,mif2] * self.YLQS[mif1,1] * self.yu[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[1,2] * self.ylbar[1,mif2] * self.YLQS[mif1,1] * self.yu[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[2,0] * self.ylbar[2,mif2] * self.YLQS[mif1,1] * self.yu[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[2,1] * self.ylbar[2,mif2] * self.YLQS[mif1,1] * self.yu[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[2,2] * self.ylbar[2,mif2] * self.YLQS[mif1,1] * self.yu[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[0,0] * self.ylbar[mif1,0] * self.YLQS[0,2] * self.yu[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[0,1] * self.ylbar[mif1,1] * self.YLQS[0,2] * self.yu[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[0,2] * self.ylbar[mif1,2] * self.YLQS[0,2] * self.yu[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[1,0] * self.ylbar[mif1,0] * self.YLQS[1,2] * self.yu[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[1,1] * self.ylbar[mif1,1] * self.YLQS[1,2] * self.yu[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[1,2] * self.ylbar[mif1,2] * self.YLQS[1,2] * self.yu[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[2,0] * self.ylbar[mif1,0] * self.YLQS[2,2] * self.yu[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[2,1] * self.ylbar[mif1,1] * self.YLQS[2,2] * self.yu[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.yl[2,2] * self.ylbar[mif1,2] * self.YLQS[2,2] * self.yu[2,0] + 9/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[2,0] + 3/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[2,0] + -3/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[0,0] * self.ylbar[0,mif2] * self.YLQS[mif1,2] * self.yu[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[0,1] * self.ylbar[0,mif2] * self.YLQS[mif1,2] * self.yu[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[0,2] * self.ylbar[0,mif2] * self.YLQS[mif1,2] * self.yu[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[1,0] * self.ylbar[1,mif2] * self.YLQS[mif1,2] * self.yu[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[1,1] * self.ylbar[1,mif2] * self.YLQS[mif1,2] * self.yu[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[1,2] * self.ylbar[1,mif2] * self.YLQS[mif1,2] * self.yu[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.yl[2,0] * self.ylbar[2,mif2] * self.YLQS[mif1,2] * self.yu[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.yl[2,1] * self.ylbar[2,mif2] * self.YLQS[mif1,2] * self.yu[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.yl[2,2] * self.ylbar[2,mif2] * self.YLQS[mif1,2] * self.yu[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[0,0] * self.ylbar[mif1,0] * self.YLQS[0,2] * self.yu[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[0,1] * self.ylbar[mif1,1] * self.YLQS[0,2] * self.yu[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[0,2] * self.ylbar[mif1,2] * self.YLQS[0,2] * self.yu[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[1,0] * self.ylbar[mif1,0] * self.YLQS[1,2] * self.yu[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[1,1] * self.ylbar[mif1,1] * self.YLQS[1,2] * self.yu[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[1,2] * self.ylbar[mif1,2] * self.YLQS[1,2] * self.yu[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[2,0] * self.ylbar[mif1,0] * self.YLQS[2,2] * self.yu[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[2,1] * self.ylbar[mif1,1] * self.YLQS[2,2] * self.yu[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.yl[2,2] * self.ylbar[mif1,2] * self.YLQS[2,2] * self.yu[2,1] + 9/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[2,1] + 3/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[2,1] + -3/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[0,0] * self.ylbar[0,mif2] * self.YLQS[mif1,2] * self.yu[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[0,1] * self.ylbar[0,mif2] * self.YLQS[mif1,2] * self.yu[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[0,2] * self.ylbar[0,mif2] * self.YLQS[mif1,2] * self.yu[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[1,0] * self.ylbar[1,mif2] * self.YLQS[mif1,2] * self.yu[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[1,1] * self.ylbar[1,mif2] * self.YLQS[mif1,2] * self.yu[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[1,2] * self.ylbar[1,mif2] * self.YLQS[mif1,2] * self.yu[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.yl[2,0] * self.ylbar[2,mif2] * self.YLQS[mif1,2] * self.yu[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.yl[2,1] * self.ylbar[2,mif2] * self.YLQS[mif1,2] * self.yu[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.yl[2,2] * self.ylbar[2,mif2] * self.YLQS[mif1,2] * self.yu[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[0,0] * self.ylbar[mif1,0] * self.YLQS[0,2] * self.yu[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[0,1] * self.ylbar[mif1,1] * self.YLQS[0,2] * self.yu[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[0,2] * self.ylbar[mif1,2] * self.YLQS[0,2] * self.yu[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[1,0] * self.ylbar[mif1,0] * self.YLQS[1,2] * self.yu[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[1,1] * self.ylbar[mif1,1] * self.YLQS[1,2] * self.yu[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[1,2] * self.ylbar[mif1,2] * self.YLQS[1,2] * self.yu[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[2,0] * self.ylbar[mif1,0] * self.YLQS[2,2] * self.yu[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[2,1] * self.ylbar[mif1,1] * self.YLQS[2,2] * self.yu[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.yl[2,2] * self.ylbar[mif1,2] * self.YLQS[2,2] * self.yu[2,2] + 9/32 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[2,2] + 3/16 * self.invepsilonbar * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[2,2] + -3/16 * self.lam * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[0,0] * self.ylbar[0,mif2] * self.YLQS[mif1,2] * self.yu[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[0,1] * self.ylbar[0,mif2] * self.YLQS[mif1,2] * self.yu[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[0,2] * self.ylbar[0,mif2] * self.YLQS[mif1,2] * self.yu[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[1,0] * self.ylbar[1,mif2] * self.YLQS[mif1,2] * self.yu[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[1,1] * self.ylbar[1,mif2] * self.YLQS[mif1,2] * self.yu[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[1,2] * self.ylbar[1,mif2] * self.YLQS[mif1,2] * self.yu[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.yl[2,0] * self.ylbar[2,mif2] * self.YLQS[mif1,2] * self.yu[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.yl[2,1] * self.ylbar[2,mif2] * self.YLQS[mif1,2] * self.yu[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.yl[2,2] * self.ylbar[2,mif2] * self.YLQS[mif1,2] * self.yu[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[0,0] * self.ylbar[mif1,0] * self.yu[0,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[1,0] * self.ylbar[mif1,1] * self.yu[0,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[2,0] * self.ylbar[mif1,2] * self.yu[0,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,0] * self.YLQSbar[0,0] * self.yu[0,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,0] * self.YLQSbar[1,0] * self.yu[0,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,0] * self.YLQSbar[2,0] * self.yu[0,0] * self.yubar[0,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * (self.yu[0,0])**(2) * self.yubar[0,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * (self.yu[0,0])**(2) * self.yubar[0,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * (self.yu[0,0])**(2) * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[0,0] * self.ylbar[mif1,0] * self.yu[0,1] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[1,0] * self.ylbar[mif1,1] * self.yu[0,1] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[2,0] * self.ylbar[mif1,2] * self.yu[0,1] * self.yubar[0,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,0] * self.yu[0,1] * self.yubar[0,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,0] * self.yu[0,1] * self.yubar[0,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,0] * self.yu[0,1] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[0,0] * self.ylbar[mif1,0] * self.yu[0,2] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[1,0] * self.ylbar[mif1,1] * self.yu[0,2] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[2,0] * self.ylbar[mif1,2] * self.yu[0,2] * self.yubar[0,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,0] * self.yu[0,2] * self.yubar[0,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,0] * self.yu[0,2] * self.yubar[0,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,0] * self.yu[0,2] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,1] * self.YLQSbar[0,0] * self.yu[1,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,1] * self.YLQSbar[1,0] * self.yu[1,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,1] * self.YLQSbar[2,0] * self.yu[1,0] * self.yubar[0,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[0,0] * self.yu[1,0] * self.yubar[0,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[0,0] * self.yu[1,0] * self.yubar[0,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[0,0] * self.yu[1,0] * self.yubar[0,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[0,1] * self.yu[1,0] * self.yubar[0,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[0,1] * self.yu[1,0] * self.yubar[0,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[0,1] * self.yu[1,0] * self.yubar[0,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[0,2] * self.yu[1,0] * self.yubar[0,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[0,2] * self.yu[1,0] * self.yubar[0,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[0,2] * self.yu[1,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,2] * self.YLQSbar[0,0] * self.yu[2,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,2] * self.YLQSbar[1,0] * self.yu[2,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,2] * self.YLQSbar[2,0] * self.yu[2,0] * self.yubar[0,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[0,0] * self.yu[2,0] * self.yubar[0,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[0,0] * self.yu[2,0] * self.yubar[0,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[0,0] * self.yu[2,0] * self.yubar[0,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[0,1] * self.yu[2,0] * self.yubar[0,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[0,1] * self.yu[2,0] * self.yubar[0,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[0,1] * self.yu[2,0] * self.yubar[0,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[0,2] * self.yu[2,0] * self.yubar[0,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[0,2] * self.yu[2,0] * self.yubar[0,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[0,2] * self.yu[2,0] * self.yubar[0,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[0,1] * self.ylbar[mif1,0] * self.yu[0,0] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[1,1] * self.ylbar[mif1,1] * self.yu[0,0] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[2,1] * self.ylbar[mif1,2] * self.yu[0,0] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[0,1] * self.ylbar[mif1,0] * self.yu[0,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[1,1] * self.ylbar[mif1,1] * self.yu[0,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[2,1] * self.ylbar[mif1,2] * self.yu[0,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,0] * self.YLQSbar[0,0] * self.yu[0,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,0] * self.YLQSbar[1,0] * self.yu[0,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,0] * self.YLQSbar[2,0] * self.yu[0,1] * self.yubar[0,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] * self.yu[0,1] * self.yubar[0,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] * self.yu[0,1] * self.yubar[0,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] * self.yu[0,1] * self.yubar[0,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * (self.yu[0,1])**(2) * self.yubar[0,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * (self.yu[0,1])**(2) * self.yubar[0,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * (self.yu[0,1])**(2) * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[0,1] * self.ylbar[mif1,0] * self.yu[0,2] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[1,1] * self.ylbar[mif1,1] * self.yu[0,2] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[2,1] * self.ylbar[mif1,2] * self.yu[0,2] * self.yubar[0,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,1] * self.yu[0,2] * self.yubar[0,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,1] * self.yu[0,2] * self.yubar[0,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,1] * self.yu[0,2] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,1] * self.YLQSbar[0,0] * self.yu[1,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,1] * self.YLQSbar[1,0] * self.yu[1,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,1] * self.YLQSbar[2,0] * self.yu[1,1] * self.yubar[0,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[0,0] * self.yu[1,1] * self.yubar[0,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[0,0] * self.yu[1,1] * self.yubar[0,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[0,0] * self.yu[1,1] * self.yubar[0,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[0,1] * self.yu[1,1] * self.yubar[0,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[0,1] * self.yu[1,1] * self.yubar[0,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[0,1] * self.yu[1,1] * self.yubar[0,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[0,2] * self.yu[1,1] * self.yubar[0,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[0,2] * self.yu[1,1] * self.yubar[0,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[0,2] * self.yu[1,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,2] * self.YLQSbar[0,0] * self.yu[2,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,2] * self.YLQSbar[1,0] * self.yu[2,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,2] * self.YLQSbar[2,0] * self.yu[2,1] * self.yubar[0,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[0,0] * self.yu[2,1] * self.yubar[0,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[0,0] * self.yu[2,1] * self.yubar[0,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[0,0] * self.yu[2,1] * self.yubar[0,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[0,1] * self.yu[2,1] * self.yubar[0,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[0,1] * self.yu[2,1] * self.yubar[0,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[0,1] * self.yu[2,1] * self.yubar[0,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[0,2] * self.yu[2,1] * self.yubar[0,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[0,2] * self.yu[2,1] * self.yubar[0,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[0,2] * self.yu[2,1] * self.yubar[0,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[0,2] * self.ylbar[mif1,0] * self.yu[0,0] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[1,2] * self.ylbar[mif1,1] * self.yu[0,0] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[2,2] * self.ylbar[mif1,2] * self.yu[0,0] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[0,2] * self.ylbar[mif1,0] * self.yu[0,1] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[1,2] * self.ylbar[mif1,1] * self.yu[0,1] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[2,2] * self.ylbar[mif1,2] * self.yu[0,1] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[0,2] * self.ylbar[mif1,0] * self.yu[0,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[1,2] * self.ylbar[mif1,1] * self.yu[0,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[2,2] * self.ylbar[mif1,2] * self.yu[0,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,0] * self.YLQSbar[0,0] * self.yu[0,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,0] * self.YLQSbar[1,0] * self.yu[0,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,0] * self.YLQSbar[2,0] * self.yu[0,2] * self.yubar[0,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] * self.yu[0,2] * self.yubar[0,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] * self.yu[0,2] * self.yubar[0,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] * self.yu[0,2] * self.yubar[0,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,1] * self.yu[0,2] * self.yubar[0,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,1] * self.yu[0,2] * self.yubar[0,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,1] * self.yu[0,2] * self.yubar[0,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * (self.yu[0,2])**(2) * self.yubar[0,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * (self.yu[0,2])**(2) * self.yubar[0,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * (self.yu[0,2])**(2) * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,1] * self.YLQSbar[0,0] * self.yu[1,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,1] * self.YLQSbar[1,0] * self.yu[1,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,1] * self.YLQSbar[2,0] * self.yu[1,2] * self.yubar[0,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[0,0] * self.yu[1,2] * self.yubar[0,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[0,0] * self.yu[1,2] * self.yubar[0,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[0,0] * self.yu[1,2] * self.yubar[0,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[0,1] * self.yu[1,2] * self.yubar[0,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[0,1] * self.yu[1,2] * self.yubar[0,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[0,1] * self.yu[1,2] * self.yubar[0,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[0,2] * self.yu[1,2] * self.yubar[0,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[0,2] * self.yu[1,2] * self.yubar[0,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[0,2] * self.yu[1,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,2] * self.YLQSbar[0,0] * self.yu[2,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,2] * self.YLQSbar[1,0] * self.yu[2,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,2] * self.YLQSbar[2,0] * self.yu[2,2] * self.yubar[0,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[0,0] * self.yu[2,2] * self.yubar[0,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[0,0] * self.yu[2,2] * self.yubar[0,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[0,0] * self.yu[2,2] * self.yubar[0,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[0,1] * self.yu[2,2] * self.yubar[0,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[0,1] * self.yu[2,2] * self.yubar[0,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[0,1] * self.yu[2,2] * self.yubar[0,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[0,2] * self.yu[2,2] * self.yubar[0,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[0,2] * self.yu[2,2] * self.yubar[0,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[0,2] * self.yu[2,2] * self.yubar[0,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,0] * self.YLQSbar[0,1] * self.yu[0,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,0] * self.YLQSbar[1,1] * self.yu[0,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,0] * self.YLQSbar[2,1] * self.yu[0,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[0,0] * self.ylbar[mif1,0] * self.yu[1,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[1,0] * self.ylbar[mif1,1] * self.yu[1,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[2,0] * self.ylbar[mif1,2] * self.yu[1,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,1] * self.YLQSbar[0,1] * self.yu[1,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,1] * self.YLQSbar[1,1] * self.yu[1,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,1] * self.YLQSbar[2,1] * self.yu[1,0] * self.yubar[1,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] * self.yu[1,0] * self.yubar[1,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] * self.yu[1,0] * self.yubar[1,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] * self.yu[1,0] * self.yubar[1,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * (self.yu[1,0])**(2) * self.yubar[1,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * (self.yu[1,0])**(2) * self.yubar[1,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * (self.yu[1,0])**(2) * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[0,0] * self.ylbar[mif1,0] * self.yu[1,1] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[1,0] * self.ylbar[mif1,1] * self.yu[1,1] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[2,0] * self.ylbar[mif1,2] * self.yu[1,1] * self.yubar[1,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,0] * self.yu[1,1] * self.yubar[1,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,0] * self.yu[1,1] * self.yubar[1,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,0] * self.yu[1,1] * self.yubar[1,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,0] * self.yu[1,1] * self.yubar[1,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,0] * self.yu[1,1] * self.yubar[1,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,0] * self.yu[1,1] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[0,0] * self.ylbar[mif1,0] * self.yu[1,2] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[1,0] * self.ylbar[mif1,1] * self.yu[1,2] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[2,0] * self.ylbar[mif1,2] * self.yu[1,2] * self.yubar[1,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,0] * self.yu[1,2] * self.yubar[1,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,0] * self.yu[1,2] * self.yubar[1,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,0] * self.yu[1,2] * self.yubar[1,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,0] * self.yu[1,2] * self.yubar[1,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,0] * self.yu[1,2] * self.yubar[1,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,0] * self.yu[1,2] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,2] * self.YLQSbar[0,1] * self.yu[2,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,2] * self.YLQSbar[1,1] * self.yu[2,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,2] * self.YLQSbar[2,1] * self.yu[2,0] * self.yubar[1,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[1,0] * self.yu[2,0] * self.yubar[1,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[1,0] * self.yu[2,0] * self.yubar[1,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[1,0] * self.yu[2,0] * self.yubar[1,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[1,1] * self.yu[2,0] * self.yubar[1,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[1,1] * self.yu[2,0] * self.yubar[1,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[1,1] * self.yu[2,0] * self.yubar[1,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[1,2] * self.yu[2,0] * self.yubar[1,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[1,2] * self.yu[2,0] * self.yubar[1,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[1,2] * self.yu[2,0] * self.yubar[1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,0] * self.YLQSbar[0,1] * self.yu[0,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,0] * self.YLQSbar[1,1] * self.yu[0,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,0] * self.YLQSbar[2,1] * self.yu[0,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[0,1] * self.ylbar[mif1,0] * self.yu[1,0] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[1,1] * self.ylbar[mif1,1] * self.yu[1,0] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[2,1] * self.ylbar[mif1,2] * self.yu[1,0] * self.yubar[1,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,1] * self.yu[1,0] * self.yubar[1,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,1] * self.yu[1,0] * self.yubar[1,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,1] * self.yu[1,0] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[0,1] * self.ylbar[mif1,0] * self.yu[1,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[1,1] * self.ylbar[mif1,1] * self.yu[1,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[2,1] * self.ylbar[mif1,2] * self.yu[1,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,1] * self.YLQSbar[0,1] * self.yu[1,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,1] * self.YLQSbar[1,1] * self.yu[1,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,1] * self.YLQSbar[2,1] * self.yu[1,1] * self.yubar[1,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,1] * self.yu[1,1] * self.yubar[1,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,1] * self.yu[1,1] * self.yubar[1,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,1] * self.yu[1,1] * self.yubar[1,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,0] * self.yu[1,1] * self.yubar[1,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,0] * self.yu[1,1] * self.yubar[1,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,0] * self.yu[1,1] * self.yubar[1,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * (self.yu[1,1])**(2) * self.yubar[1,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * (self.yu[1,1])**(2) * self.yubar[1,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * (self.yu[1,1])**(2) * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[0,1] * self.ylbar[mif1,0] * self.yu[1,2] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[1,1] * self.ylbar[mif1,1] * self.yu[1,2] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[2,1] * self.ylbar[mif1,2] * self.yu[1,2] * self.yubar[1,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,1] * self.yu[1,2] * self.yubar[1,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,1] * self.yu[1,2] * self.yubar[1,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,1] * self.yu[1,2] * self.yubar[1,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,1] * self.yu[1,2] * self.yubar[1,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,1] * self.yu[1,2] * self.yubar[1,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,1] * self.yu[1,2] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,2] * self.YLQSbar[0,1] * self.yu[2,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,2] * self.YLQSbar[1,1] * self.yu[2,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,2] * self.YLQSbar[2,1] * self.yu[2,1] * self.yubar[1,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[1,0] * self.yu[2,1] * self.yubar[1,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[1,0] * self.yu[2,1] * self.yubar[1,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[1,0] * self.yu[2,1] * self.yubar[1,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[1,1] * self.yu[2,1] * self.yubar[1,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[1,1] * self.yu[2,1] * self.yubar[1,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[1,1] * self.yu[2,1] * self.yubar[1,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[1,2] * self.yu[2,1] * self.yubar[1,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[1,2] * self.yu[2,1] * self.yubar[1,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[1,2] * self.yu[2,1] * self.yubar[1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,0] * self.YLQSbar[0,1] * self.yu[0,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,0] * self.YLQSbar[1,1] * self.yu[0,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,0] * self.YLQSbar[2,1] * self.yu[0,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[0,2] * self.ylbar[mif1,0] * self.yu[1,0] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[1,2] * self.ylbar[mif1,1] * self.yu[1,0] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[2,2] * self.ylbar[mif1,2] * self.yu[1,0] * self.yubar[1,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,2] * self.yu[1,0] * self.yubar[1,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,2] * self.yu[1,0] * self.yubar[1,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,2] * self.yu[1,0] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[0,2] * self.ylbar[mif1,0] * self.yu[1,1] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[1,2] * self.ylbar[mif1,1] * self.yu[1,1] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[2,2] * self.ylbar[mif1,2] * self.yu[1,1] * self.yubar[1,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,2] * self.yu[1,1] * self.yubar[1,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,2] * self.yu[1,1] * self.yubar[1,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,2] * self.yu[1,1] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[0,2] * self.ylbar[mif1,0] * self.yu[1,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[1,2] * self.ylbar[mif1,1] * self.yu[1,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[2,2] * self.ylbar[mif1,2] * self.yu[1,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,1] * self.YLQSbar[0,1] * self.yu[1,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,1] * self.YLQSbar[1,1] * self.yu[1,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,1] * self.YLQSbar[2,1] * self.yu[1,2] * self.yubar[1,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,2] * self.yu[1,2] * self.yubar[1,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,2] * self.yu[1,2] * self.yubar[1,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,2] * self.yu[1,2] * self.yubar[1,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,0] * self.yu[1,2] * self.yubar[1,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,0] * self.yu[1,2] * self.yubar[1,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,0] * self.yu[1,2] * self.yubar[1,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,1] * self.yu[1,2] * self.yubar[1,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,1] * self.yu[1,2] * self.yubar[1,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,1] * self.yu[1,2] * self.yubar[1,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * (self.yu[1,2])**(2) * self.yubar[1,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * (self.yu[1,2])**(2) * self.yubar[1,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * (self.yu[1,2])**(2) * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,2] * self.YLQSbar[0,1] * self.yu[2,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,2] * self.YLQSbar[1,1] * self.yu[2,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,2] * self.YLQSbar[2,1] * self.yu[2,2] * self.yubar[1,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[1,0] * self.yu[2,2] * self.yubar[1,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[1,0] * self.yu[2,2] * self.yubar[1,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[1,0] * self.yu[2,2] * self.yubar[1,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[1,1] * self.yu[2,2] * self.yubar[1,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[1,1] * self.yu[2,2] * self.yubar[1,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[1,1] * self.yu[2,2] * self.yubar[1,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[1,2] * self.yu[2,2] * self.yubar[1,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[1,2] * self.yu[2,2] * self.yubar[1,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[1,2] * self.yu[2,2] * self.yubar[1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,0] * self.YLQSbar[0,2] * self.yu[0,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,0] * self.YLQSbar[1,2] * self.yu[0,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,0] * self.YLQSbar[2,2] * self.yu[0,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,1] * self.YLQSbar[0,2] * self.yu[1,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,1] * self.YLQSbar[1,2] * self.yu[1,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,1] * self.YLQSbar[2,2] * self.yu[1,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[0,0] * self.ylbar[mif1,0] * self.yu[2,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[1,0] * self.ylbar[mif1,1] * self.yu[2,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[2,0] * self.ylbar[mif1,2] * self.yu[2,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,2] * self.YLQSbar[0,2] * self.yu[2,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,2] * self.YLQSbar[1,2] * self.yu[2,0] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,2] * self.YLQSbar[2,2] * self.yu[2,0] * self.yubar[2,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] * self.yu[2,0] * self.yubar[2,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] * self.yu[2,0] * self.yubar[2,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] * self.yu[2,0] * self.yubar[2,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,0] * self.yu[2,0] * self.yubar[2,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,0] * self.yu[2,0] * self.yubar[2,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,0] * self.yu[2,0] * self.yubar[2,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * (self.yu[2,0])**(2) * self.yubar[2,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * (self.yu[2,0])**(2) * self.yubar[2,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * (self.yu[2,0])**(2) * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[0,0] * self.ylbar[mif1,0] * self.yu[2,1] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[1,0] * self.ylbar[mif1,1] * self.yu[2,1] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[2,0] * self.ylbar[mif1,2] * self.yu[2,1] * self.yubar[2,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,0] * self.yu[2,1] * self.yubar[2,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,0] * self.yu[2,1] * self.yubar[2,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,0] * self.yu[2,1] * self.yubar[2,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,0] * self.yu[2,1] * self.yubar[2,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,0] * self.yu[2,1] * self.yubar[2,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,0] * self.yu[2,1] * self.yubar[2,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[2,0] * self.yu[2,1] * self.yubar[2,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[2,0] * self.yu[2,1] * self.yubar[2,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[2,0] * self.yu[2,1] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[0,0] * self.ylbar[mif1,0] * self.yu[2,2] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[1,0] * self.ylbar[mif1,1] * self.yu[2,2] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[2,0] * self.ylbar[mif1,2] * self.yu[2,2] * self.yubar[2,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,0] * self.yu[2,2] * self.yubar[2,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,0] * self.yu[2,2] * self.yubar[2,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,0] * self.yu[2,2] * self.yubar[2,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,0] * self.yu[2,2] * self.yubar[2,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,0] * self.yu[2,2] * self.yubar[2,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,0] * self.yu[2,2] * self.yubar[2,0] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[2,0] * self.yu[2,2] * self.yubar[2,0] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[2,0] * self.yu[2,2] * self.yubar[2,0] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[2,0] * self.yu[2,2] * self.yubar[2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,0] * self.YLQSbar[0,2] * self.yu[0,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,0] * self.YLQSbar[1,2] * self.yu[0,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,0] * self.YLQSbar[2,2] * self.yu[0,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,1] * self.YLQSbar[0,2] * self.yu[1,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,1] * self.YLQSbar[1,2] * self.yu[1,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,1] * self.YLQSbar[2,2] * self.yu[1,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[0,1] * self.ylbar[mif1,0] * self.yu[2,0] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[1,1] * self.ylbar[mif1,1] * self.yu[2,0] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[2,1] * self.ylbar[mif1,2] * self.yu[2,0] * self.yubar[2,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,1] * self.yu[2,0] * self.yubar[2,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,1] * self.yu[2,0] * self.yubar[2,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,1] * self.yu[2,0] * self.yubar[2,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,1] * self.yu[2,0] * self.yubar[2,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,1] * self.yu[2,0] * self.yubar[2,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,1] * self.yu[2,0] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[0,1] * self.ylbar[mif1,0] * self.yu[2,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[1,1] * self.ylbar[mif1,1] * self.yu[2,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[2,1] * self.ylbar[mif1,2] * self.yu[2,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,2] * self.YLQSbar[0,2] * self.yu[2,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,2] * self.YLQSbar[1,2] * self.yu[2,1] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,2] * self.YLQSbar[2,2] * self.yu[2,1] * self.yubar[2,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,1] * self.yu[2,1] * self.yubar[2,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,1] * self.yu[2,1] * self.yubar[2,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,1] * self.yu[2,1] * self.yubar[2,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,1] * self.yu[2,1] * self.yubar[2,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,1] * self.yu[2,1] * self.yubar[2,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,1] * self.yu[2,1] * self.yubar[2,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[2,0] * self.yu[2,1] * self.yubar[2,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[2,0] * self.yu[2,1] * self.yubar[2,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[2,0] * self.yu[2,1] * self.yubar[2,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * (self.yu[2,1])**(2) * self.yubar[2,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * (self.yu[2,1])**(2) * self.yubar[2,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * (self.yu[2,1])**(2) * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[0,1] * self.ylbar[mif1,0] * self.yu[2,2] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[1,1] * self.ylbar[mif1,1] * self.yu[2,2] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[2,1] * self.ylbar[mif1,2] * self.yu[2,2] * self.yubar[2,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,1] * self.yu[2,2] * self.yubar[2,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,1] * self.yu[2,2] * self.yubar[2,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,1] * self.yu[2,2] * self.yubar[2,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,1] * self.yu[2,2] * self.yubar[2,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,1] * self.yu[2,2] * self.yubar[2,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,1] * self.yu[2,2] * self.yubar[2,1] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[2,1] * self.yu[2,2] * self.yubar[2,1] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[2,1] * self.yu[2,2] * self.yubar[2,1] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[2,1] * self.yu[2,2] * self.yubar[2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,0] * self.YLQSbar[0,2] * self.yu[0,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,0] * self.YLQSbar[1,2] * self.yu[0,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,0] * self.YLQSbar[2,2] * self.yu[0,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,1] * self.YLQSbar[0,2] * self.yu[1,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,1] * self.YLQSbar[1,2] * self.yu[1,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,1] * self.YLQSbar[2,2] * self.yu[1,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[0,2] * self.ylbar[mif1,0] * self.yu[2,0] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[1,2] * self.ylbar[mif1,1] * self.yu[2,0] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuSbar[2,2] * self.ylbar[mif1,2] * self.yu[2,0] * self.yubar[2,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,2] * self.yu[2,0] * self.yubar[2,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,2] * self.yu[2,0] * self.yubar[2,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,2] * self.yu[2,0] * self.yubar[2,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,2] * self.yu[2,0] * self.yubar[2,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,2] * self.yu[2,0] * self.yubar[2,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,2] * self.yu[2,0] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[0,2] * self.ylbar[mif1,0] * self.yu[2,1] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[1,2] * self.ylbar[mif1,1] * self.yu[2,1] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuSbar[2,2] * self.ylbar[mif1,2] * self.yu[2,1] * self.yubar[2,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,2] * self.yu[2,1] * self.yubar[2,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,2] * self.yu[2,1] * self.yubar[2,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,2] * self.yu[2,1] * self.yubar[2,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,2] * self.yu[2,1] * self.yubar[2,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,2] * self.yu[2,1] * self.yubar[2,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,2] * self.yu[2,1] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[0,2] * self.ylbar[mif1,0] * self.yu[2,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[1,2] * self.ylbar[mif1,1] * self.yu[2,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuSbar[2,2] * self.ylbar[mif1,2] * self.yu[2,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[0,mif2] * self.YLQS[mif1,2] * self.YLQSbar[0,2] * self.yu[2,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[1,mif2] * self.YLQS[mif1,2] * self.YLQSbar[1,2] * self.yu[2,2] * self.yubar[2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ylbar[2,mif2] * self.YLQS[mif1,2] * self.YLQSbar[2,2] * self.yu[2,2] * self.yubar[2,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,2] * self.yu[2,2] * self.yubar[2,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,2] * self.yu[2,2] * self.yubar[2,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,2] * self.yu[2,2] * self.yubar[2,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,2] * self.yu[2,2] * self.yubar[2,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,2] * self.yu[2,2] * self.yubar[2,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,2] * self.yu[2,2] * self.yubar[2,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[2,0] * self.yu[2,2] * self.yubar[2,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[2,0] * self.yu[2,2] * self.yubar[2,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[2,0] * self.yu[2,2] * self.yubar[2,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[2,1] * self.yu[2,2] * self.yubar[2,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[2,1] * self.yu[2,2] * self.yubar[2,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[2,1] * self.yu[2,2] * self.yubar[2,2] + -3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * (self.yu[2,2])**(2) * self.yubar[2,2] + -3/16 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * (self.yu[2,2])**(2) * self.yubar[2,2] + 3/16 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * (self.yu[2,2])**(2) * self.yubar[2,2])

    def alphaOqq1(self, mif1,mif2,mif3,mif4):
        return (-1/7680 * (self.g3)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -1/103680 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/11520 * (self.g3)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -25/41472 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/3456 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/1536 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/1152 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + 1/1152 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + 1/2304 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YLQS[0,mif4] * self.YLQSbar[0,mif1] + 1/2304 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YLQS[0,mif2] * self.YLQSbar[0,mif3] + -25/41472 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[0,mif4] * self.YLQSbar[0,mif3] + -1/3456 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[0,mif4] * self.YLQSbar[0,mif3] + -1/1536 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[0,mif4] * self.YLQSbar[0,mif3] + -1/1152 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[0,mif4] * self.YLQSbar[0,mif3] + 1/1152 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif4] * self.YLQSbar[0,mif3] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif2] * self.YLQS[0,mif4] * self.YLQSbar[0,mif1] * self.YLQSbar[0,mif3] + -25/41472 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/3456 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/1536 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/1152 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + 1/1152 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + 1/2304 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YLQS[1,mif4] * self.YLQSbar[1,mif1] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif2] * self.YLQS[1,mif4] * self.YLQSbar[0,mif3] * self.YLQSbar[1,mif1] + 1/2304 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YLQS[1,mif2] * self.YLQSbar[1,mif3] + -25/41472 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[1,mif4] * self.YLQSbar[1,mif3] + -1/3456 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[1,mif4] * self.YLQSbar[1,mif3] + -1/1536 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[1,mif4] * self.YLQSbar[1,mif3] + -1/1152 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[1,mif4] * self.YLQSbar[1,mif3] + 1/1152 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif4] * self.YLQSbar[1,mif3] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif4] * self.YLQS[1,mif2] * self.YLQSbar[0,mif1] * self.YLQSbar[1,mif3] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif2] * self.YLQS[1,mif4] * self.YLQSbar[1,mif1] * self.YLQSbar[1,mif3] + -25/41472 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/3456 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/1536 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/1152 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + 1/1152 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + 1/2304 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YLQS[2,mif4] * self.YLQSbar[2,mif1] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif2] * self.YLQS[2,mif4] * self.YLQSbar[0,mif3] * self.YLQSbar[2,mif1] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif2] * self.YLQS[2,mif4] * self.YLQSbar[1,mif3] * self.YLQSbar[2,mif1] + 1/2304 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YLQS[2,mif2] * self.YLQSbar[2,mif3] + -25/41472 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[2,mif4] * self.YLQSbar[2,mif3] + -1/3456 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[2,mif4] * self.YLQSbar[2,mif3] + -1/1536 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[2,mif4] * self.YLQSbar[2,mif3] + -1/1152 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[2,mif4] * self.YLQSbar[2,mif3] + 1/1152 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif4] * self.YLQSbar[2,mif3] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif4] * self.YLQS[2,mif2] * self.YLQSbar[0,mif1] * self.YLQSbar[2,mif3] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif4] * self.YLQS[2,mif2] * self.YLQSbar[1,mif1] * self.YLQSbar[2,mif3] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif2] * self.YLQS[2,mif4] * self.YLQSbar[2,mif1] * self.YLQSbar[2,mif3])

    def alphaOqq3(self, mif1,mif2,mif3,mif4):
        return (-1/7680 * (self.g3)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -7/4608 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/512 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/384 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + 1/384 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + 1/2304 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YLQS[0,mif4] * self.YLQSbar[0,mif1] + 1/2304 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YLQS[0,mif2] * self.YLQSbar[0,mif3] + -7/4608 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[0,mif4] * self.YLQSbar[0,mif3] + -1/512 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[0,mif4] * self.YLQSbar[0,mif3] + -1/384 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[0,mif4] * self.YLQSbar[0,mif3] + 1/384 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif4] * self.YLQSbar[0,mif3] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif2] * self.YLQS[0,mif4] * self.YLQSbar[0,mif1] * self.YLQSbar[0,mif3] + -7/4608 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/512 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/384 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + 1/384 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + 1/2304 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YLQS[1,mif4] * self.YLQSbar[1,mif1] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif2] * self.YLQS[1,mif4] * self.YLQSbar[0,mif3] * self.YLQSbar[1,mif1] + 1/2304 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YLQS[1,mif2] * self.YLQSbar[1,mif3] + -7/4608 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[1,mif4] * self.YLQSbar[1,mif3] + -1/512 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[1,mif4] * self.YLQSbar[1,mif3] + -1/384 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[1,mif4] * self.YLQSbar[1,mif3] + 1/384 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif4] * self.YLQSbar[1,mif3] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif4] * self.YLQS[1,mif2] * self.YLQSbar[0,mif1] * self.YLQSbar[1,mif3] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif2] * self.YLQS[1,mif4] * self.YLQSbar[1,mif1] * self.YLQSbar[1,mif3] + -7/4608 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/512 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/384 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + 1/384 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + 1/2304 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YLQS[2,mif4] * self.YLQSbar[2,mif1] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif2] * self.YLQS[2,mif4] * self.YLQSbar[0,mif3] * self.YLQSbar[2,mif1] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif2] * self.YLQS[2,mif4] * self.YLQSbar[1,mif3] * self.YLQSbar[2,mif1] + 1/2304 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YLQS[2,mif2] * self.YLQSbar[2,mif3] + -7/4608 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[2,mif4] * self.YLQSbar[2,mif3] + -1/512 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[2,mif4] * self.YLQSbar[2,mif3] + -1/384 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[2,mif4] * self.YLQSbar[2,mif3] + 1/384 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif4] * self.YLQSbar[2,mif3] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif4] * self.YLQS[2,mif2] * self.YLQSbar[0,mif1] * self.YLQSbar[2,mif3] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif4] * self.YLQS[2,mif2] * self.YLQSbar[1,mif1] * self.YLQSbar[2,mif3] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif2] * self.YLQS[2,mif4] * self.YLQSbar[2,mif1] * self.YLQSbar[2,mif3])

    def alphaOuu(self, mif1,mif2,mif3,mif4):
        return (-1/3840 * (self.g3)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -1/6480 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/11520 * (self.g3)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -23/5184 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[0,mif1] * self.YeuSbar[0,mif2] + -1/3456 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[0,mif1] * self.YeuSbar[0,mif2] + -1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[0,mif1] * self.YeuSbar[0,mif2] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[0,mif1] * self.YeuSbar[0,mif2] + 1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif1] * self.YeuSbar[0,mif2] + 1/1152 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YeuS[0,mif3] * self.YeuSbar[0,mif2] + 1/1152 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YeuS[0,mif1] * self.YeuSbar[0,mif4] + -23/5184 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[0,mif3] * self.YeuSbar[0,mif4] + -1/3456 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[0,mif3] * self.YeuSbar[0,mif4] + -1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[0,mif3] * self.YeuSbar[0,mif4] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[0,mif3] * self.YeuSbar[0,mif4] + 1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif3] * self.YeuSbar[0,mif4] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuS[0,mif3] * self.YeuSbar[0,mif2] * self.YeuSbar[0,mif4] + -23/5184 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[1,mif1] * self.YeuSbar[1,mif2] + -1/3456 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[1,mif1] * self.YeuSbar[1,mif2] + -1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[1,mif1] * self.YeuSbar[1,mif2] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[1,mif1] * self.YeuSbar[1,mif2] + 1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif1] * self.YeuSbar[1,mif2] + 1/1152 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YeuS[1,mif3] * self.YeuSbar[1,mif2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuS[1,mif3] * self.YeuSbar[0,mif4] * self.YeuSbar[1,mif2] + 1/1152 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YeuS[1,mif1] * self.YeuSbar[1,mif4] + -23/5184 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[1,mif3] * self.YeuSbar[1,mif4] + -1/3456 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[1,mif3] * self.YeuSbar[1,mif4] + -1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[1,mif3] * self.YeuSbar[1,mif4] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[1,mif3] * self.YeuSbar[1,mif4] + 1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif3] * self.YeuSbar[1,mif4] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.YeuS[1,mif1] * self.YeuSbar[0,mif2] * self.YeuSbar[1,mif4] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuS[1,mif3] * self.YeuSbar[1,mif2] * self.YeuSbar[1,mif4] + -23/5184 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[2,mif1] * self.YeuSbar[2,mif2] + -1/3456 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[2,mif1] * self.YeuSbar[2,mif2] + -1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[2,mif1] * self.YeuSbar[2,mif2] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[2,mif1] * self.YeuSbar[2,mif2] + 1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif1] * self.YeuSbar[2,mif2] + 1/1152 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YeuS[2,mif3] * self.YeuSbar[2,mif2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuS[2,mif3] * self.YeuSbar[0,mif4] * self.YeuSbar[2,mif2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuS[2,mif3] * self.YeuSbar[1,mif4] * self.YeuSbar[2,mif2] + 1/1152 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YeuS[2,mif1] * self.YeuSbar[2,mif4] + -23/5184 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[2,mif3] * self.YeuSbar[2,mif4] + -1/3456 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[2,mif3] * self.YeuSbar[2,mif4] + -1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[2,mif3] * self.YeuSbar[2,mif4] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[2,mif3] * self.YeuSbar[2,mif4] + 1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif3] * self.YeuSbar[2,mif4] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.YeuS[2,mif1] * self.YeuSbar[0,mif2] * self.YeuSbar[2,mif4] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.YeuS[2,mif1] * self.YeuSbar[1,mif2] * self.YeuSbar[2,mif4] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuS[2,mif3] * self.YeuSbar[2,mif2] * self.YeuSbar[2,mif4])

    def alphaOdd(self, mif1,mif2,mif3,mif4):
        return (-1/3840 * (self.g3)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -1/25920 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/11520 * (self.g3)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4))

    def alphaOud1(self, mif1,mif2,mif3,mif4):
        return (1/6480 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 23/5184 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[0,mif1] * self.YeuSbar[0,mif2] + 1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[0,mif1] * self.YeuSbar[0,mif2] + 1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[0,mif1] * self.YeuSbar[0,mif2] + -1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif1] * self.YeuSbar[0,mif2] + 23/5184 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[1,mif1] * self.YeuSbar[1,mif2] + 1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[1,mif1] * self.YeuSbar[1,mif2] + 1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[1,mif1] * self.YeuSbar[1,mif2] + -1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif1] * self.YeuSbar[1,mif2] + 23/5184 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[2,mif1] * self.YeuSbar[2,mif2] + 1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[2,mif1] * self.YeuSbar[2,mif2] + 1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[2,mif1] * self.YeuSbar[2,mif2] + -1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif1] * self.YeuSbar[2,mif2])

    def alphaOud8(self, mif1,mif2,mif3,mif4):
        return (-1/960 * (self.g3)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/288 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[0,mif1] * self.YeuSbar[0,mif2] + 1/288 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[1,mif1] * self.YeuSbar[1,mif2] + 1/288 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[2,mif1] * self.YeuSbar[2,mif2])

    def alphaOqu1(self, mif1,mif2,mif3,mif4):
        return (-1/12960 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -23/10368 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[0,mif3] * self.YeuSbar[0,mif4] + -1/384 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[0,mif3] * self.YeuSbar[0,mif4] + -1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[0,mif3] * self.YeuSbar[0,mif4] + 1/288 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif3] * self.YeuSbar[0,mif4] + -23/10368 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[1,mif3] * self.YeuSbar[1,mif4] + -1/384 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[1,mif3] * self.YeuSbar[1,mif4] + -1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[1,mif3] * self.YeuSbar[1,mif4] + 1/288 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif3] * self.YeuSbar[1,mif4] + -23/10368 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[2,mif3] * self.YeuSbar[2,mif4] + -1/384 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[2,mif3] * self.YeuSbar[2,mif4] + -1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[2,mif3] * self.YeuSbar[2,mif4] + 1/288 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif3] * self.YeuSbar[2,mif4] + -25/5184 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + 1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.YeuSbar[0,mif4] * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.YeuSbar[1,mif4] * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.YeuSbar[2,mif4] * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -25/5184 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + 1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.YeuSbar[0,mif4] * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.YeuSbar[1,mif4] * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.YeuSbar[2,mif4] * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -25/5184 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + 1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.YeuSbar[0,mif4] * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.YeuSbar[1,mif4] * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.YeuSbar[2,mif4] * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.yl[0,0] * self.YLQS[0,mif2] * self.yu[mif1,mif4] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.yl[0,0] * self.YLQS[0,mif2] * self.yu[mif1,mif4] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif3] * self.yl[0,0] * self.YLQS[0,mif2] * self.yu[mif1,mif4] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.yl[0,1] * self.YLQS[0,mif2] * self.yu[mif1,mif4] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.yl[0,1] * self.YLQS[0,mif2] * self.yu[mif1,mif4] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif3] * self.yl[0,1] * self.YLQS[0,mif2] * self.yu[mif1,mif4] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.yl[0,2] * self.YLQS[0,mif2] * self.yu[mif1,mif4] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.yl[0,2] * self.YLQS[0,mif2] * self.yu[mif1,mif4] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif3] * self.yl[0,2] * self.YLQS[0,mif2] * self.yu[mif1,mif4] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.yl[1,0] * self.YLQS[1,mif2] * self.yu[mif1,mif4] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.yl[1,0] * self.YLQS[1,mif2] * self.yu[mif1,mif4] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif3] * self.yl[1,0] * self.YLQS[1,mif2] * self.yu[mif1,mif4] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.yl[1,1] * self.YLQS[1,mif2] * self.yu[mif1,mif4] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.yl[1,1] * self.YLQS[1,mif2] * self.yu[mif1,mif4] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif3] * self.yl[1,1] * self.YLQS[1,mif2] * self.yu[mif1,mif4] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.yl[1,2] * self.YLQS[1,mif2] * self.yu[mif1,mif4] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.yl[1,2] * self.YLQS[1,mif2] * self.yu[mif1,mif4] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif3] * self.yl[1,2] * self.YLQS[1,mif2] * self.yu[mif1,mif4] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.yl[2,0] * self.YLQS[2,mif2] * self.yu[mif1,mif4] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.yl[2,0] * self.YLQS[2,mif2] * self.yu[mif1,mif4] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif3] * self.yl[2,0] * self.YLQS[2,mif2] * self.yu[mif1,mif4] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.yl[2,1] * self.YLQS[2,mif2] * self.yu[mif1,mif4] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.yl[2,1] * self.YLQS[2,mif2] * self.yu[mif1,mif4] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif3] * self.yl[2,1] * self.YLQS[2,mif2] * self.yu[mif1,mif4] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.yl[2,2] * self.YLQS[2,mif2] * self.yu[mif1,mif4] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.yl[2,2] * self.YLQS[2,mif2] * self.yu[mif1,mif4] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif3] * self.yl[2,2] * self.YLQS[2,mif2] * self.yu[mif1,mif4] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif4] * self.ylbar[0,0] * self.YLQSbar[0,mif1] * self.yubar[mif2,mif3] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif4] * self.ylbar[0,0] * self.YLQSbar[0,mif1] * self.yubar[mif2,mif3] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif4] * self.ylbar[0,0] * self.YLQSbar[0,mif1] * self.yubar[mif2,mif3] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif4] * self.ylbar[0,1] * self.YLQSbar[0,mif1] * self.yubar[mif2,mif3] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif4] * self.ylbar[0,1] * self.YLQSbar[0,mif1] * self.yubar[mif2,mif3] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif4] * self.ylbar[0,1] * self.YLQSbar[0,mif1] * self.yubar[mif2,mif3] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif4] * self.ylbar[0,2] * self.YLQSbar[0,mif1] * self.yubar[mif2,mif3] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif4] * self.ylbar[0,2] * self.YLQSbar[0,mif1] * self.yubar[mif2,mif3] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif4] * self.ylbar[0,2] * self.YLQSbar[0,mif1] * self.yubar[mif2,mif3] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif4] * self.ylbar[1,0] * self.YLQSbar[1,mif1] * self.yubar[mif2,mif3] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif4] * self.ylbar[1,0] * self.YLQSbar[1,mif1] * self.yubar[mif2,mif3] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif4] * self.ylbar[1,0] * self.YLQSbar[1,mif1] * self.yubar[mif2,mif3] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif4] * self.ylbar[1,1] * self.YLQSbar[1,mif1] * self.yubar[mif2,mif3] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif4] * self.ylbar[1,1] * self.YLQSbar[1,mif1] * self.yubar[mif2,mif3] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif4] * self.ylbar[1,1] * self.YLQSbar[1,mif1] * self.yubar[mif2,mif3] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif4] * self.ylbar[1,2] * self.YLQSbar[1,mif1] * self.yubar[mif2,mif3] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif4] * self.ylbar[1,2] * self.YLQSbar[1,mif1] * self.yubar[mif2,mif3] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif4] * self.ylbar[1,2] * self.YLQSbar[1,mif1] * self.yubar[mif2,mif3] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif4] * self.ylbar[2,0] * self.YLQSbar[2,mif1] * self.yubar[mif2,mif3] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif4] * self.ylbar[2,0] * self.YLQSbar[2,mif1] * self.yubar[mif2,mif3] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif4] * self.ylbar[2,0] * self.YLQSbar[2,mif1] * self.yubar[mif2,mif3] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif4] * self.ylbar[2,1] * self.YLQSbar[2,mif1] * self.yubar[mif2,mif3] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif4] * self.ylbar[2,1] * self.YLQSbar[2,mif1] * self.yubar[mif2,mif3] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif4] * self.ylbar[2,1] * self.YLQSbar[2,mif1] * self.yubar[mif2,mif3] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif4] * self.ylbar[2,2] * self.YLQSbar[2,mif1] * self.yubar[mif2,mif3] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif4] * self.ylbar[2,2] * self.YLQSbar[2,mif1] * self.yubar[mif2,mif3] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif4] * self.ylbar[2,2] * self.YLQSbar[2,mif1] * self.yubar[mif2,mif3])

    def alphaOqu8(self, mif1,mif2,mif3,mif4):
        return (-1/960 * (self.g3)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/288 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[0,mif3] * self.YeuSbar[0,mif4] + 1/288 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[1,mif3] * self.YeuSbar[1,mif4] + 1/288 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[2,mif3] * self.YeuSbar[2,mif4] + 1/288 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.YeuSbar[0,mif4] * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.YeuSbar[1,mif4] * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.YeuSbar[2,mif4] * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + 1/288 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.YeuSbar[0,mif4] * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.YeuSbar[1,mif4] * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.YeuSbar[2,mif4] * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + 1/288 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.YeuSbar[0,mif4] * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.YeuSbar[1,mif4] * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.YeuSbar[2,mif4] * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.yl[0,0] * self.YLQS[0,mif2] * self.yu[mif1,mif4] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.yl[0,0] * self.YLQS[0,mif2] * self.yu[mif1,mif4] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif3] * self.yl[0,0] * self.YLQS[0,mif2] * self.yu[mif1,mif4] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.yl[0,1] * self.YLQS[0,mif2] * self.yu[mif1,mif4] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.yl[0,1] * self.YLQS[0,mif2] * self.yu[mif1,mif4] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif3] * self.yl[0,1] * self.YLQS[0,mif2] * self.yu[mif1,mif4] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.yl[0,2] * self.YLQS[0,mif2] * self.yu[mif1,mif4] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.yl[0,2] * self.YLQS[0,mif2] * self.yu[mif1,mif4] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif3] * self.yl[0,2] * self.YLQS[0,mif2] * self.yu[mif1,mif4] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.yl[1,0] * self.YLQS[1,mif2] * self.yu[mif1,mif4] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.yl[1,0] * self.YLQS[1,mif2] * self.yu[mif1,mif4] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif3] * self.yl[1,0] * self.YLQS[1,mif2] * self.yu[mif1,mif4] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.yl[1,1] * self.YLQS[1,mif2] * self.yu[mif1,mif4] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.yl[1,1] * self.YLQS[1,mif2] * self.yu[mif1,mif4] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif3] * self.yl[1,1] * self.YLQS[1,mif2] * self.yu[mif1,mif4] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.yl[1,2] * self.YLQS[1,mif2] * self.yu[mif1,mif4] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.yl[1,2] * self.YLQS[1,mif2] * self.yu[mif1,mif4] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif3] * self.yl[1,2] * self.YLQS[1,mif2] * self.yu[mif1,mif4] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.yl[2,0] * self.YLQS[2,mif2] * self.yu[mif1,mif4] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.yl[2,0] * self.YLQS[2,mif2] * self.yu[mif1,mif4] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif3] * self.yl[2,0] * self.YLQS[2,mif2] * self.yu[mif1,mif4] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.yl[2,1] * self.YLQS[2,mif2] * self.yu[mif1,mif4] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.yl[2,1] * self.YLQS[2,mif2] * self.yu[mif1,mif4] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif3] * self.yl[2,1] * self.YLQS[2,mif2] * self.yu[mif1,mif4] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.yl[2,2] * self.YLQS[2,mif2] * self.yu[mif1,mif4] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.yl[2,2] * self.YLQS[2,mif2] * self.yu[mif1,mif4] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif3] * self.yl[2,2] * self.YLQS[2,mif2] * self.yu[mif1,mif4] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif4] * self.ylbar[0,0] * self.YLQSbar[0,mif1] * self.yubar[mif2,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif4] * self.ylbar[0,0] * self.YLQSbar[0,mif1] * self.yubar[mif2,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif4] * self.ylbar[0,0] * self.YLQSbar[0,mif1] * self.yubar[mif2,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif4] * self.ylbar[0,1] * self.YLQSbar[0,mif1] * self.yubar[mif2,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif4] * self.ylbar[0,1] * self.YLQSbar[0,mif1] * self.yubar[mif2,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif4] * self.ylbar[0,1] * self.YLQSbar[0,mif1] * self.yubar[mif2,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif4] * self.ylbar[0,2] * self.YLQSbar[0,mif1] * self.yubar[mif2,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif4] * self.ylbar[0,2] * self.YLQSbar[0,mif1] * self.yubar[mif2,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif4] * self.ylbar[0,2] * self.YLQSbar[0,mif1] * self.yubar[mif2,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif4] * self.ylbar[1,0] * self.YLQSbar[1,mif1] * self.yubar[mif2,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif4] * self.ylbar[1,0] * self.YLQSbar[1,mif1] * self.yubar[mif2,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif4] * self.ylbar[1,0] * self.YLQSbar[1,mif1] * self.yubar[mif2,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif4] * self.ylbar[1,1] * self.YLQSbar[1,mif1] * self.yubar[mif2,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif4] * self.ylbar[1,1] * self.YLQSbar[1,mif1] * self.yubar[mif2,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif4] * self.ylbar[1,1] * self.YLQSbar[1,mif1] * self.yubar[mif2,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif4] * self.ylbar[1,2] * self.YLQSbar[1,mif1] * self.yubar[mif2,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif4] * self.ylbar[1,2] * self.YLQSbar[1,mif1] * self.yubar[mif2,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif4] * self.ylbar[1,2] * self.YLQSbar[1,mif1] * self.yubar[mif2,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif4] * self.ylbar[2,0] * self.YLQSbar[2,mif1] * self.yubar[mif2,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif4] * self.ylbar[2,0] * self.YLQSbar[2,mif1] * self.yubar[mif2,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif4] * self.ylbar[2,0] * self.YLQSbar[2,mif1] * self.yubar[mif2,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif4] * self.ylbar[2,1] * self.YLQSbar[2,mif1] * self.yubar[mif2,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif4] * self.ylbar[2,1] * self.YLQSbar[2,mif1] * self.yubar[mif2,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif4] * self.ylbar[2,1] * self.YLQSbar[2,mif1] * self.yubar[mif2,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif4] * self.ylbar[2,2] * self.YLQSbar[2,mif1] * self.yubar[mif2,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif4] * self.ylbar[2,2] * self.YLQSbar[2,mif1] * self.yubar[mif2,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif4] * self.ylbar[2,2] * self.YLQSbar[2,mif1] * self.yubar[mif2,mif3])

    def alphaOqd1(self, mif1,mif2,mif3,mif4):
        return (1/25920 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 25/10368 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + 1/384 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + 1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/288 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + 25/10368 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + 1/384 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + 1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/288 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + 25/10368 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + 1/384 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + 1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/288 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif2] * self.YLQSbar[2,mif1])

    def alphaOqd8(self, mif1,mif2,mif3,mif4):
        return (-1/960 * (self.g3)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/288 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + 1/288 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + 1/288 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif2] * self.YLQSbar[2,mif1])

    def alphaOquqd1(self, mif1,mif2,mif3,mif4):
        return (3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.YeuSbar[0,mif2] * self.ylbar[0,0] * self.YLQSbar[0,mif1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.YeuSbar[0,mif2] * self.ylbar[0,0] * self.YLQSbar[0,mif1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[mif3,mif4] * self.YeuSbar[0,mif2] * self.ylbar[0,0] * self.YLQSbar[0,mif1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.YeuSbar[1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,mif1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.YeuSbar[1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,mif1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[mif3,mif4] * self.YeuSbar[1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,mif1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.YeuSbar[2,mif2] * self.ylbar[0,2] * self.YLQSbar[0,mif1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.YeuSbar[2,mif2] * self.ylbar[0,2] * self.YLQSbar[0,mif1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[mif3,mif4] * self.YeuSbar[2,mif2] * self.ylbar[0,2] * self.YLQSbar[0,mif1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.YeuSbar[0,mif2] * self.ylbar[1,0] * self.YLQSbar[1,mif1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.YeuSbar[0,mif2] * self.ylbar[1,0] * self.YLQSbar[1,mif1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[mif3,mif4] * self.YeuSbar[0,mif2] * self.ylbar[1,0] * self.YLQSbar[1,mif1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.YeuSbar[1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.YeuSbar[1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[mif3,mif4] * self.YeuSbar[1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,mif1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.YeuSbar[2,mif2] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.YeuSbar[2,mif2] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[mif3,mif4] * self.YeuSbar[2,mif2] * self.ylbar[1,2] * self.YLQSbar[1,mif1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.YeuSbar[0,mif2] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.YeuSbar[0,mif2] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[mif3,mif4] * self.YeuSbar[0,mif2] * self.ylbar[2,0] * self.YLQSbar[2,mif1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.YeuSbar[1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.YeuSbar[1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[mif3,mif4] * self.YeuSbar[1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,mif1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.YeuSbar[2,mif2] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.YeuSbar[2,mif2] * self.ylbar[2,2] * self.YLQSbar[2,mif1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[mif3,mif4] * self.YeuSbar[2,mif2] * self.ylbar[2,2] * self.YLQSbar[2,mif1])

    def alphaOquqd8(self, mif1,mif2,mif3,mif4):
        return 0

    def alphaOll(self, mif1,mif2,mif3,mif4):
        return (-1/11520 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -1/1536 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + 7/1536 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -1/512 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + 3/512 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -1/384 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + 1/128 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + 1/384 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -1/128 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -7/768 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YLQS[mif4,0] * self.YLQSbar[mif1,0] + -3/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YLQS[mif4,0] * self.YLQSbar[mif1,0] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YLQS[mif4,0] * self.YLQSbar[mif1,0] + 1/64 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif4,0] * self.YLQSbar[mif1,0] + -1/1536 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + 7/1536 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -1/512 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + 3/512 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -1/384 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + 1/128 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + 1/384 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -1/128 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -7/768 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YLQS[mif4,1] * self.YLQSbar[mif1,1] + -3/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YLQS[mif4,1] * self.YLQSbar[mif1,1] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YLQS[mif4,1] * self.YLQSbar[mif1,1] + 1/64 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif4,1] * self.YLQSbar[mif1,1] + -1/1536 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + 7/1536 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -1/512 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + 3/512 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -1/384 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + 1/128 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + 1/384 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -1/128 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -7/768 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YLQS[mif4,2] * self.YLQSbar[mif1,2] + -3/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YLQS[mif4,2] * self.YLQSbar[mif1,2] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YLQS[mif4,2] * self.YLQSbar[mif1,2] + 1/64 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif4,2] * self.YLQSbar[mif1,2] + -7/768 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YLQS[mif2,0] * self.YLQSbar[mif3,0] + -3/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YLQS[mif2,0] * self.YLQSbar[mif3,0] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YLQS[mif2,0] * self.YLQSbar[mif3,0] + 1/64 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,0] * self.YLQSbar[mif3,0] + -1/1536 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif4,0] * self.YLQSbar[mif3,0] + 7/1536 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif4,0] * self.YLQSbar[mif3,0] + -1/512 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif4,0] * self.YLQSbar[mif3,0] + 3/512 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif4,0] * self.YLQSbar[mif3,0] + -1/384 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif4,0] * self.YLQSbar[mif3,0] + 1/128 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif4,0] * self.YLQSbar[mif3,0] + 1/384 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif4,0] * self.YLQSbar[mif3,0] + -1/128 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif4,0] * self.YLQSbar[mif3,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQS[mif4,0] * self.YLQSbar[mif1,0] * self.YLQSbar[mif3,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQS[mif4,0] * self.YLQSbar[mif1,1] * self.YLQSbar[mif3,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQS[mif4,0] * self.YLQSbar[mif1,2] * self.YLQSbar[mif3,0] + -7/768 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YLQS[mif2,1] * self.YLQSbar[mif3,1] + -3/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YLQS[mif2,1] * self.YLQSbar[mif3,1] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YLQS[mif2,1] * self.YLQSbar[mif3,1] + 1/64 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,1] * self.YLQSbar[mif3,1] + -1/1536 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif4,1] * self.YLQSbar[mif3,1] + 7/1536 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif4,1] * self.YLQSbar[mif3,1] + -1/512 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif4,1] * self.YLQSbar[mif3,1] + 3/512 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif4,1] * self.YLQSbar[mif3,1] + -1/384 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif4,1] * self.YLQSbar[mif3,1] + 1/128 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif4,1] * self.YLQSbar[mif3,1] + 1/384 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif4,1] * self.YLQSbar[mif3,1] + -1/128 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif4,1] * self.YLQSbar[mif3,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQS[mif4,1] * self.YLQSbar[mif1,0] * self.YLQSbar[mif3,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQS[mif4,1] * self.YLQSbar[mif1,1] * self.YLQSbar[mif3,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQS[mif4,1] * self.YLQSbar[mif1,2] * self.YLQSbar[mif3,1] + -7/768 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YLQS[mif2,2] * self.YLQSbar[mif3,2] + -3/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YLQS[mif2,2] * self.YLQSbar[mif3,2] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YLQS[mif2,2] * self.YLQSbar[mif3,2] + 1/64 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,2] * self.YLQSbar[mif3,2] + -1/1536 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif4,2] * self.YLQSbar[mif3,2] + 7/1536 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif4,2] * self.YLQSbar[mif3,2] + -1/512 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif4,2] * self.YLQSbar[mif3,2] + 3/512 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif4,2] * self.YLQSbar[mif3,2] + -1/384 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif4,2] * self.YLQSbar[mif3,2] + 1/128 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif4,2] * self.YLQSbar[mif3,2] + 1/384 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif4,2] * self.YLQSbar[mif3,2] + -1/128 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif4,2] * self.YLQSbar[mif3,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQS[mif4,2] * self.YLQSbar[mif1,0] * self.YLQSbar[mif3,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQS[mif4,2] * self.YLQSbar[mif1,1] * self.YLQSbar[mif3,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQS[mif4,2] * self.YLQSbar[mif1,2] * self.YLQSbar[mif3,2])

    def alphaOee(self, mif1,mif2,mif3,mif4):
        return (-1/2880 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif1,0] * self.YeuSbar[mif2,0] + -1/64 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif1,0] * self.YeuSbar[mif2,0] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif1,0] * self.YeuSbar[mif2,0] + 1/48 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,0] * self.YeuSbar[mif2,0] + -1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif1,1] * self.YeuSbar[mif2,1] + -1/64 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif1,1] * self.YeuSbar[mif2,1] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif1,1] * self.YeuSbar[mif2,1] + 1/48 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,1] * self.YeuSbar[mif2,1] + -1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif1,2] * self.YeuSbar[mif2,2] + -1/64 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif1,2] * self.YeuSbar[mif2,2] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif1,2] * self.YeuSbar[mif2,2] + 1/48 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,2] * self.YeuSbar[mif2,2] + -1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif3,0] * self.YeuSbar[mif4,0] + -1/64 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif3,0] * self.YeuSbar[mif4,0] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif3,0] * self.YeuSbar[mif4,0] + 1/48 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,0] * self.YeuSbar[mif4,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.YeuS[mif3,0] * self.YeuSbar[mif2,0] * self.YeuSbar[mif4,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.YeuS[mif3,0] * self.YeuSbar[mif2,1] * self.YeuSbar[mif4,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.YeuS[mif3,0] * self.YeuSbar[mif2,2] * self.YeuSbar[mif4,0] + -1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif3,1] * self.YeuSbar[mif4,1] + -1/64 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif3,1] * self.YeuSbar[mif4,1] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif3,1] * self.YeuSbar[mif4,1] + 1/48 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,1] * self.YeuSbar[mif4,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.YeuS[mif3,1] * self.YeuSbar[mif2,0] * self.YeuSbar[mif4,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.YeuS[mif3,1] * self.YeuSbar[mif2,1] * self.YeuSbar[mif4,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.YeuS[mif3,1] * self.YeuSbar[mif2,2] * self.YeuSbar[mif4,1] + -1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif3,2] * self.YeuSbar[mif4,2] + -1/64 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif3,2] * self.YeuSbar[mif4,2] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif3,2] * self.YeuSbar[mif4,2] + 1/48 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,2] * self.YeuSbar[mif4,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,0] * self.YeuS[mif3,2] * self.YeuSbar[mif2,0] * self.YeuSbar[mif4,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,1] * self.YeuS[mif3,2] * self.YeuSbar[mif2,1] * self.YeuSbar[mif4,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,2] * self.YeuS[mif3,2] * self.YeuSbar[mif2,2] * self.YeuSbar[mif4,2])

    def alphaOle(self, mif1,mif2,mif3,mif4):
        return (-1/2880 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif3,0] * self.YeuSbar[mif4,0] + -1/64 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif3,0] * self.YeuSbar[mif4,0] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif3,0] * self.YeuSbar[mif4,0] + 1/48 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,0] * self.YeuSbar[mif4,0] + -1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif3,1] * self.YeuSbar[mif4,1] + -1/64 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif3,1] * self.YeuSbar[mif4,1] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif3,1] * self.YeuSbar[mif4,1] + 1/48 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,1] * self.YeuSbar[mif4,1] + -1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif3,2] * self.YeuSbar[mif4,2] + -1/64 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif3,2] * self.YeuSbar[mif4,2] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif3,2] * self.YeuSbar[mif4,2] + 1/48 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,2] * self.YeuSbar[mif4,2] + -1/384 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -1/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + 1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,0] * self.YeuSbar[mif4,0] * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,1] * self.YeuSbar[mif4,1] * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,2] * self.YeuSbar[mif4,2] * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -1/384 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -1/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + 1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,0] * self.YeuSbar[mif4,0] * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,1] * self.YeuSbar[mif4,1] * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,2] * self.YeuSbar[mif4,2] * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -1/384 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -1/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + 1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,0] * self.YeuSbar[mif4,0] * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,1] * self.YeuSbar[mif4,1] * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,2] * self.YeuSbar[mif4,2] * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,0] * self.yl[mif1,mif4] * self.YLQS[mif2,0] * self.yu[0,0] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,0] * self.yl[mif1,mif4] * self.YLQS[mif2,0] * self.yu[0,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,0] * self.yl[mif1,mif4] * self.YLQS[mif2,0] * self.yu[0,0] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,1] * self.yl[mif1,mif4] * self.YLQS[mif2,0] * self.yu[0,1] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,1] * self.yl[mif1,mif4] * self.YLQS[mif2,0] * self.yu[0,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,1] * self.yl[mif1,mif4] * self.YLQS[mif2,0] * self.yu[0,1] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,2] * self.yl[mif1,mif4] * self.YLQS[mif2,0] * self.yu[0,2] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,2] * self.yl[mif1,mif4] * self.YLQS[mif2,0] * self.yu[0,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,2] * self.yl[mif1,mif4] * self.YLQS[mif2,0] * self.yu[0,2] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,0] * self.yl[mif1,mif4] * self.YLQS[mif2,1] * self.yu[1,0] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,0] * self.yl[mif1,mif4] * self.YLQS[mif2,1] * self.yu[1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,0] * self.yl[mif1,mif4] * self.YLQS[mif2,1] * self.yu[1,0] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,1] * self.yl[mif1,mif4] * self.YLQS[mif2,1] * self.yu[1,1] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,1] * self.yl[mif1,mif4] * self.YLQS[mif2,1] * self.yu[1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,1] * self.yl[mif1,mif4] * self.YLQS[mif2,1] * self.yu[1,1] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,2] * self.yl[mif1,mif4] * self.YLQS[mif2,1] * self.yu[1,2] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,2] * self.yl[mif1,mif4] * self.YLQS[mif2,1] * self.yu[1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,2] * self.yl[mif1,mif4] * self.YLQS[mif2,1] * self.yu[1,2] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,0] * self.yl[mif1,mif4] * self.YLQS[mif2,2] * self.yu[2,0] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,0] * self.yl[mif1,mif4] * self.YLQS[mif2,2] * self.yu[2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,0] * self.yl[mif1,mif4] * self.YLQS[mif2,2] * self.yu[2,0] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,1] * self.yl[mif1,mif4] * self.YLQS[mif2,2] * self.yu[2,1] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,1] * self.yl[mif1,mif4] * self.YLQS[mif2,2] * self.yu[2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,1] * self.yl[mif1,mif4] * self.YLQS[mif2,2] * self.yu[2,1] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,2] * self.yl[mif1,mif4] * self.YLQS[mif2,2] * self.yu[2,2] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,2] * self.yl[mif1,mif4] * self.YLQS[mif2,2] * self.yu[2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,2] * self.yl[mif1,mif4] * self.YLQS[mif2,2] * self.yu[2,2] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,0] * self.ylbar[mif2,mif3] * self.YLQSbar[mif1,0] * self.yubar[0,0] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,0] * self.ylbar[mif2,mif3] * self.YLQSbar[mif1,0] * self.yubar[0,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif4,0] * self.ylbar[mif2,mif3] * self.YLQSbar[mif1,0] * self.yubar[0,0] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,1] * self.ylbar[mif2,mif3] * self.YLQSbar[mif1,0] * self.yubar[0,1] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,1] * self.ylbar[mif2,mif3] * self.YLQSbar[mif1,0] * self.yubar[0,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif4,1] * self.ylbar[mif2,mif3] * self.YLQSbar[mif1,0] * self.yubar[0,1] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,2] * self.ylbar[mif2,mif3] * self.YLQSbar[mif1,0] * self.yubar[0,2] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,2] * self.ylbar[mif2,mif3] * self.YLQSbar[mif1,0] * self.yubar[0,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif4,2] * self.ylbar[mif2,mif3] * self.YLQSbar[mif1,0] * self.yubar[0,2] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,0] * self.ylbar[mif2,mif3] * self.YLQSbar[mif1,1] * self.yubar[1,0] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,0] * self.ylbar[mif2,mif3] * self.YLQSbar[mif1,1] * self.yubar[1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif4,0] * self.ylbar[mif2,mif3] * self.YLQSbar[mif1,1] * self.yubar[1,0] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,1] * self.ylbar[mif2,mif3] * self.YLQSbar[mif1,1] * self.yubar[1,1] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,1] * self.ylbar[mif2,mif3] * self.YLQSbar[mif1,1] * self.yubar[1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif4,1] * self.ylbar[mif2,mif3] * self.YLQSbar[mif1,1] * self.yubar[1,1] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,2] * self.ylbar[mif2,mif3] * self.YLQSbar[mif1,1] * self.yubar[1,2] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,2] * self.ylbar[mif2,mif3] * self.YLQSbar[mif1,1] * self.yubar[1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif4,2] * self.ylbar[mif2,mif3] * self.YLQSbar[mif1,1] * self.yubar[1,2] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,0] * self.ylbar[mif2,mif3] * self.YLQSbar[mif1,2] * self.yubar[2,0] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,0] * self.ylbar[mif2,mif3] * self.YLQSbar[mif1,2] * self.yubar[2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif4,0] * self.ylbar[mif2,mif3] * self.YLQSbar[mif1,2] * self.yubar[2,0] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,1] * self.ylbar[mif2,mif3] * self.YLQSbar[mif1,2] * self.yubar[2,1] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,1] * self.ylbar[mif2,mif3] * self.YLQSbar[mif1,2] * self.yubar[2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif4,1] * self.ylbar[mif2,mif3] * self.YLQSbar[mif1,2] * self.yubar[2,1] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,2] * self.ylbar[mif2,mif3] * self.YLQSbar[mif1,2] * self.yubar[2,2] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,2] * self.ylbar[mif2,mif3] * self.YLQSbar[mif1,2] * self.yubar[2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif4,2] * self.ylbar[mif2,mif3] * self.YLQSbar[mif1,2] * self.yubar[2,2])

    def alphaOlq1(self, mif1,mif2,mif3,mif4):
        return (1/17280 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 25/6912 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[0,mif4] * self.YLQSbar[0,mif3] + 1/256 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[0,mif4] * self.YLQSbar[0,mif3] + 1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[0,mif4] * self.YLQSbar[0,mif3] + -1/192 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif4] * self.YLQSbar[0,mif3] + 25/6912 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[1,mif4] * self.YLQSbar[1,mif3] + 1/256 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[1,mif4] * self.YLQSbar[1,mif3] + 1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[1,mif4] * self.YLQSbar[1,mif3] + -1/192 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif4] * self.YLQSbar[1,mif3] + 25/6912 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[2,mif4] * self.YLQSbar[2,mif3] + 1/256 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[2,mif4] * self.YLQSbar[2,mif3] + 1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[2,mif4] * self.YLQSbar[2,mif3] + -1/192 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif4] * self.YLQSbar[2,mif3] + 1/2304 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + 1/768 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -1/576 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif4] * self.YLQS[mif2,0] * self.YLQSbar[0,mif3] * self.YLQSbar[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQS[mif2,mif4] * self.YLQSbar[0,mif3] * self.YLQSbar[mif1,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQS[mif2,mif4] * self.YLQSbar[0,mif3] * self.YLQSbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,0] * self.YLQS[mif2,mif4] * self.YLQSbar[0,mif3] * self.YLQSbar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif4] * self.YLQS[mif2,0] * self.YLQSbar[1,mif3] * self.YLQSbar[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQS[mif2,mif4] * self.YLQSbar[1,mif3] * self.YLQSbar[mif1,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQS[mif2,mif4] * self.YLQSbar[1,mif3] * self.YLQSbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,0] * self.YLQS[mif2,mif4] * self.YLQSbar[1,mif3] * self.YLQSbar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif4] * self.YLQS[mif2,0] * self.YLQSbar[2,mif3] * self.YLQSbar[mif1,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQS[mif2,mif4] * self.YLQSbar[2,mif3] * self.YLQSbar[mif1,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQS[mif2,mif4] * self.YLQSbar[2,mif3] * self.YLQSbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,0] * self.YLQS[mif2,mif4] * self.YLQSbar[2,mif3] * self.YLQSbar[mif1,0] + 1/2304 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + 1/768 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -1/576 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif4] * self.YLQS[mif2,1] * self.YLQSbar[0,mif3] * self.YLQSbar[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQS[mif2,mif4] * self.YLQSbar[0,mif3] * self.YLQSbar[mif1,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQS[mif2,mif4] * self.YLQSbar[0,mif3] * self.YLQSbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,1] * self.YLQS[mif2,mif4] * self.YLQSbar[0,mif3] * self.YLQSbar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif4] * self.YLQS[mif2,1] * self.YLQSbar[1,mif3] * self.YLQSbar[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQS[mif2,mif4] * self.YLQSbar[1,mif3] * self.YLQSbar[mif1,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQS[mif2,mif4] * self.YLQSbar[1,mif3] * self.YLQSbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,1] * self.YLQS[mif2,mif4] * self.YLQSbar[1,mif3] * self.YLQSbar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif4] * self.YLQS[mif2,1] * self.YLQSbar[2,mif3] * self.YLQSbar[mif1,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQS[mif2,mif4] * self.YLQSbar[2,mif3] * self.YLQSbar[mif1,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQS[mif2,mif4] * self.YLQSbar[2,mif3] * self.YLQSbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,1] * self.YLQS[mif2,mif4] * self.YLQSbar[2,mif3] * self.YLQSbar[mif1,1] + 1/2304 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + 1/768 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -1/576 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif4] * self.YLQS[mif2,2] * self.YLQSbar[0,mif3] * self.YLQSbar[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQS[mif2,mif4] * self.YLQSbar[0,mif3] * self.YLQSbar[mif1,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQS[mif2,mif4] * self.YLQSbar[0,mif3] * self.YLQSbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,2] * self.YLQS[mif2,mif4] * self.YLQSbar[0,mif3] * self.YLQSbar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif4] * self.YLQS[mif2,2] * self.YLQSbar[1,mif3] * self.YLQSbar[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQS[mif2,mif4] * self.YLQSbar[1,mif3] * self.YLQSbar[mif1,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQS[mif2,mif4] * self.YLQSbar[1,mif3] * self.YLQSbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,2] * self.YLQS[mif2,mif4] * self.YLQSbar[1,mif3] * self.YLQSbar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif4] * self.YLQS[mif2,2] * self.YLQSbar[2,mif3] * self.YLQSbar[mif1,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQS[mif2,mif4] * self.YLQSbar[2,mif3] * self.YLQSbar[mif1,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQS[mif2,mif4] * self.YLQSbar[2,mif3] * self.YLQSbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,2] * self.YLQS[mif2,mif4] * self.YLQSbar[2,mif3] * self.YLQSbar[mif1,2] + 1/4 * (self.MS1)**(-2) * self.YLQS[mif2,mif4] * self.YLQSbar[mif1,mif3] + 1/288 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,mif4] * self.YLQSbar[mif1,mif3] + 1/96 * self.aEV * self.epsilonbar * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,mif4] * self.YLQSbar[mif1,mif3] + 3/128 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,mif4] * self.YLQSbar[mif1,mif3] + 9/128 * self.aEV * self.epsilonbar * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,mif4] * self.YLQSbar[mif1,mif3] + 1/96 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,mif4] * self.YLQSbar[mif1,mif3] + 1/32 * self.aEV * self.epsilonbar * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,mif4] * self.YLQSbar[mif1,mif3] + 1/144 * self.aEV * self.epsilonbar * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,mif4] * self.YLQSbar[mif1,mif3] + 3/64 * self.aEV * self.epsilonbar * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,mif4] * self.YLQSbar[mif1,mif3] + 1/48 * self.aEV * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,mif4] * self.YLQSbar[mif1,mif3] + -1/144 * self.aEV * self.epsilonbar * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,mif4] * self.YLQSbar[mif1,mif3] + -3/64 * self.aEV * self.epsilonbar * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,mif4] * self.YLQSbar[mif1,mif3] + -1/48 * self.aEV * self.epsilonbar * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,mif4] * self.YLQSbar[mif1,mif3] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif4] * self.YLQS[mif2,0] * self.YLQSbar[0,0] * self.YLQSbar[mif1,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif4] * self.YLQS[mif2,0] * self.YLQSbar[0,0] * self.YLQSbar[mif1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif4] * self.YLQS[mif2,0] * self.YLQSbar[0,0] * self.YLQSbar[mif1,mif3] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif4] * self.YLQS[mif2,1] * self.YLQSbar[0,1] * self.YLQSbar[mif1,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif4] * self.YLQS[mif2,1] * self.YLQSbar[0,1] * self.YLQSbar[mif1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif4] * self.YLQS[mif2,1] * self.YLQSbar[0,1] * self.YLQSbar[mif1,mif3] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif4] * self.YLQS[mif2,2] * self.YLQSbar[0,2] * self.YLQSbar[mif1,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif4] * self.YLQS[mif2,2] * self.YLQSbar[0,2] * self.YLQSbar[mif1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif4] * self.YLQS[mif2,2] * self.YLQSbar[0,2] * self.YLQSbar[mif1,mif3] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif4] * self.YLQS[mif2,0] * self.YLQSbar[1,0] * self.YLQSbar[mif1,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif4] * self.YLQS[mif2,0] * self.YLQSbar[1,0] * self.YLQSbar[mif1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif4] * self.YLQS[mif2,0] * self.YLQSbar[1,0] * self.YLQSbar[mif1,mif3] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif4] * self.YLQS[mif2,1] * self.YLQSbar[1,1] * self.YLQSbar[mif1,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif4] * self.YLQS[mif2,1] * self.YLQSbar[1,1] * self.YLQSbar[mif1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif4] * self.YLQS[mif2,1] * self.YLQSbar[1,1] * self.YLQSbar[mif1,mif3] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif4] * self.YLQS[mif2,2] * self.YLQSbar[1,2] * self.YLQSbar[mif1,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif4] * self.YLQS[mif2,2] * self.YLQSbar[1,2] * self.YLQSbar[mif1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif4] * self.YLQS[mif2,2] * self.YLQSbar[1,2] * self.YLQSbar[mif1,mif3] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif4] * self.YLQS[mif2,0] * self.YLQSbar[2,0] * self.YLQSbar[mif1,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif4] * self.YLQS[mif2,0] * self.YLQSbar[2,0] * self.YLQSbar[mif1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif4] * self.YLQS[mif2,0] * self.YLQSbar[2,0] * self.YLQSbar[mif1,mif3] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif4] * self.YLQS[mif2,1] * self.YLQSbar[2,1] * self.YLQSbar[mif1,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif4] * self.YLQS[mif2,1] * self.YLQSbar[2,1] * self.YLQSbar[mif1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif4] * self.YLQS[mif2,1] * self.YLQSbar[2,1] * self.YLQSbar[mif1,mif3] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif4] * self.YLQS[mif2,2] * self.YLQSbar[2,2] * self.YLQSbar[mif1,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif4] * self.YLQS[mif2,2] * self.YLQSbar[2,2] * self.YLQSbar[mif1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif4] * self.YLQS[mif2,2] * self.YLQSbar[2,2] * self.YLQSbar[mif1,mif3])

    def alphaOlq3(self, mif1,mif2,mif3,mif4):
        return (-7/2304 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[0,mif4] * self.YLQSbar[0,mif3] + -1/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[0,mif4] * self.YLQSbar[0,mif3] + -1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[0,mif4] * self.YLQSbar[0,mif3] + 1/192 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif4] * self.YLQSbar[0,mif3] + -7/2304 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[1,mif4] * self.YLQSbar[1,mif3] + -1/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[1,mif4] * self.YLQSbar[1,mif3] + -1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[1,mif4] * self.YLQSbar[1,mif3] + 1/192 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif4] * self.YLQSbar[1,mif3] + -7/2304 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[2,mif4] * self.YLQSbar[2,mif3] + -1/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[2,mif4] * self.YLQSbar[2,mif3] + -1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[2,mif4] * self.YLQSbar[2,mif3] + 1/192 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif4] * self.YLQSbar[2,mif3] + -7/768 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -3/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + 1/64 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQS[mif2,mif4] * self.YLQSbar[0,mif3] * self.YLQSbar[mif1,0] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQS[mif2,mif4] * self.YLQSbar[0,mif3] * self.YLQSbar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,0] * self.YLQS[mif2,mif4] * self.YLQSbar[0,mif3] * self.YLQSbar[mif1,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQS[mif2,mif4] * self.YLQSbar[1,mif3] * self.YLQSbar[mif1,0] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQS[mif2,mif4] * self.YLQSbar[1,mif3] * self.YLQSbar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,0] * self.YLQS[mif2,mif4] * self.YLQSbar[1,mif3] * self.YLQSbar[mif1,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQS[mif2,mif4] * self.YLQSbar[2,mif3] * self.YLQSbar[mif1,0] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQS[mif2,mif4] * self.YLQSbar[2,mif3] * self.YLQSbar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,0] * self.YLQS[mif2,mif4] * self.YLQSbar[2,mif3] * self.YLQSbar[mif1,0] + -7/768 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -3/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + 1/64 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQS[mif2,mif4] * self.YLQSbar[0,mif3] * self.YLQSbar[mif1,1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQS[mif2,mif4] * self.YLQSbar[0,mif3] * self.YLQSbar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,1] * self.YLQS[mif2,mif4] * self.YLQSbar[0,mif3] * self.YLQSbar[mif1,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQS[mif2,mif4] * self.YLQSbar[1,mif3] * self.YLQSbar[mif1,1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQS[mif2,mif4] * self.YLQSbar[1,mif3] * self.YLQSbar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,1] * self.YLQS[mif2,mif4] * self.YLQSbar[1,mif3] * self.YLQSbar[mif1,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQS[mif2,mif4] * self.YLQSbar[2,mif3] * self.YLQSbar[mif1,1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQS[mif2,mif4] * self.YLQSbar[2,mif3] * self.YLQSbar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,1] * self.YLQS[mif2,mif4] * self.YLQSbar[2,mif3] * self.YLQSbar[mif1,1] + -7/768 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -3/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + 1/64 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQS[mif2,mif4] * self.YLQSbar[0,mif3] * self.YLQSbar[mif1,2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQS[mif2,mif4] * self.YLQSbar[0,mif3] * self.YLQSbar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,2] * self.YLQS[mif2,mif4] * self.YLQSbar[0,mif3] * self.YLQSbar[mif1,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQS[mif2,mif4] * self.YLQSbar[1,mif3] * self.YLQSbar[mif1,2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQS[mif2,mif4] * self.YLQSbar[1,mif3] * self.YLQSbar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,2] * self.YLQS[mif2,mif4] * self.YLQSbar[1,mif3] * self.YLQSbar[mif1,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQS[mif2,mif4] * self.YLQSbar[2,mif3] * self.YLQSbar[mif1,2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQS[mif2,mif4] * self.YLQSbar[2,mif3] * self.YLQSbar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,2] * self.YLQS[mif2,mif4] * self.YLQSbar[2,mif3] * self.YLQSbar[mif1,2] + -1/4 * (self.MS1)**(-2) * self.YLQS[mif2,mif4] * self.YLQSbar[mif1,mif3] + -1/288 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,mif4] * self.YLQSbar[mif1,mif3] + -1/96 * self.aEV * self.epsilonbar * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,mif4] * self.YLQSbar[mif1,mif3] + 1/128 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,mif4] * self.YLQSbar[mif1,mif3] + 3/128 * self.aEV * self.epsilonbar * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,mif4] * self.YLQSbar[mif1,mif3] + -1/96 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,mif4] * self.YLQSbar[mif1,mif3] + -1/32 * self.aEV * self.epsilonbar * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,mif4] * self.YLQSbar[mif1,mif3] + -1/144 * self.aEV * self.epsilonbar * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,mif4] * self.YLQSbar[mif1,mif3] + 1/64 * self.aEV * self.epsilonbar * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,mif4] * self.YLQSbar[mif1,mif3] + -1/48 * self.aEV * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,mif4] * self.YLQSbar[mif1,mif3] + 1/144 * self.aEV * self.epsilonbar * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,mif4] * self.YLQSbar[mif1,mif3] + -1/64 * self.aEV * self.epsilonbar * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,mif4] * self.YLQSbar[mif1,mif3] + 1/48 * self.aEV * self.epsilonbar * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,mif4] * self.YLQSbar[mif1,mif3] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif4] * self.YLQS[mif2,0] * self.YLQSbar[0,0] * self.YLQSbar[mif1,mif3] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif4] * self.YLQS[mif2,0] * self.YLQSbar[0,0] * self.YLQSbar[mif1,mif3] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif4] * self.YLQS[mif2,0] * self.YLQSbar[0,0] * self.YLQSbar[mif1,mif3] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif4] * self.YLQS[mif2,1] * self.YLQSbar[0,1] * self.YLQSbar[mif1,mif3] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif4] * self.YLQS[mif2,1] * self.YLQSbar[0,1] * self.YLQSbar[mif1,mif3] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif4] * self.YLQS[mif2,1] * self.YLQSbar[0,1] * self.YLQSbar[mif1,mif3] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif4] * self.YLQS[mif2,2] * self.YLQSbar[0,2] * self.YLQSbar[mif1,mif3] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif4] * self.YLQS[mif2,2] * self.YLQSbar[0,2] * self.YLQSbar[mif1,mif3] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif4] * self.YLQS[mif2,2] * self.YLQSbar[0,2] * self.YLQSbar[mif1,mif3] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif4] * self.YLQS[mif2,0] * self.YLQSbar[1,0] * self.YLQSbar[mif1,mif3] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif4] * self.YLQS[mif2,0] * self.YLQSbar[1,0] * self.YLQSbar[mif1,mif3] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif4] * self.YLQS[mif2,0] * self.YLQSbar[1,0] * self.YLQSbar[mif1,mif3] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif4] * self.YLQS[mif2,1] * self.YLQSbar[1,1] * self.YLQSbar[mif1,mif3] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif4] * self.YLQS[mif2,1] * self.YLQSbar[1,1] * self.YLQSbar[mif1,mif3] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif4] * self.YLQS[mif2,1] * self.YLQSbar[1,1] * self.YLQSbar[mif1,mif3] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif4] * self.YLQS[mif2,2] * self.YLQSbar[1,2] * self.YLQSbar[mif1,mif3] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif4] * self.YLQS[mif2,2] * self.YLQSbar[1,2] * self.YLQSbar[mif1,mif3] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif4] * self.YLQS[mif2,2] * self.YLQSbar[1,2] * self.YLQSbar[mif1,mif3] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif4] * self.YLQS[mif2,0] * self.YLQSbar[2,0] * self.YLQSbar[mif1,mif3] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif4] * self.YLQS[mif2,0] * self.YLQSbar[2,0] * self.YLQSbar[mif1,mif3] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif4] * self.YLQS[mif2,0] * self.YLQSbar[2,0] * self.YLQSbar[mif1,mif3] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif4] * self.YLQS[mif2,1] * self.YLQSbar[2,1] * self.YLQSbar[mif1,mif3] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif4] * self.YLQS[mif2,1] * self.YLQSbar[2,1] * self.YLQSbar[mif1,mif3] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif4] * self.YLQS[mif2,1] * self.YLQSbar[2,1] * self.YLQSbar[mif1,mif3] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif4] * self.YLQS[mif2,2] * self.YLQSbar[2,2] * self.YLQSbar[mif1,mif3] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif4] * self.YLQS[mif2,2] * self.YLQSbar[2,2] * self.YLQSbar[mif1,mif3] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif4] * self.YLQS[mif2,2] * self.YLQSbar[2,2] * self.YLQSbar[mif1,mif3])

    def alphaOeu(self, mif1,mif2,mif3,mif4):
        return (1/2160 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 23/1728 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[0,mif3] * self.YeuSbar[0,mif4] + 1/64 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[0,mif3] * self.YeuSbar[0,mif4] + 1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[0,mif3] * self.YeuSbar[0,mif4] + -1/48 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif3] * self.YeuSbar[0,mif4] + 23/1728 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[1,mif3] * self.YeuSbar[1,mif4] + 1/64 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[1,mif3] * self.YeuSbar[1,mif4] + 1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[1,mif3] * self.YeuSbar[1,mif4] + -1/48 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif3] * self.YeuSbar[1,mif4] + 23/1728 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[2,mif3] * self.YeuSbar[2,mif4] + 1/64 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[2,mif3] * self.YeuSbar[2,mif4] + 1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[2,mif3] * self.YeuSbar[2,mif4] + -1/48 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif3] * self.YeuSbar[2,mif4] + 1/72 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif1,0] * self.YeuSbar[mif2,0] + 1/48 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif1,0] * self.YeuSbar[mif2,0] + 1/36 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif1,0] * self.YeuSbar[mif2,0] + -1/36 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,0] * self.YeuSbar[mif2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.YeuS[mif1,0] * self.YeuSbar[0,mif4] * self.YeuSbar[mif2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuS[mif1,mif3] * self.YeuSbar[0,mif4] * self.YeuSbar[mif2,0] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuS[mif1,mif3] * self.YeuSbar[0,mif4] * self.YeuSbar[mif2,0] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,0] * self.YeuS[mif1,mif3] * self.YeuSbar[0,mif4] * self.YeuSbar[mif2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.YeuS[mif1,0] * self.YeuSbar[1,mif4] * self.YeuSbar[mif2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuS[mif1,mif3] * self.YeuSbar[1,mif4] * self.YeuSbar[mif2,0] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuS[mif1,mif3] * self.YeuSbar[1,mif4] * self.YeuSbar[mif2,0] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,0] * self.YeuS[mif1,mif3] * self.YeuSbar[1,mif4] * self.YeuSbar[mif2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.YeuS[mif1,0] * self.YeuSbar[2,mif4] * self.YeuSbar[mif2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuS[mif1,mif3] * self.YeuSbar[2,mif4] * self.YeuSbar[mif2,0] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuS[mif1,mif3] * self.YeuSbar[2,mif4] * self.YeuSbar[mif2,0] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,0] * self.YeuS[mif1,mif3] * self.YeuSbar[2,mif4] * self.YeuSbar[mif2,0] + 1/72 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif1,1] * self.YeuSbar[mif2,1] + 1/48 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif1,1] * self.YeuSbar[mif2,1] + 1/36 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif1,1] * self.YeuSbar[mif2,1] + -1/36 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,1] * self.YeuSbar[mif2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.YeuS[mif1,1] * self.YeuSbar[0,mif4] * self.YeuSbar[mif2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuS[mif1,mif3] * self.YeuSbar[0,mif4] * self.YeuSbar[mif2,1] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuS[mif1,mif3] * self.YeuSbar[0,mif4] * self.YeuSbar[mif2,1] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,1] * self.YeuS[mif1,mif3] * self.YeuSbar[0,mif4] * self.YeuSbar[mif2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.YeuS[mif1,1] * self.YeuSbar[1,mif4] * self.YeuSbar[mif2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuS[mif1,mif3] * self.YeuSbar[1,mif4] * self.YeuSbar[mif2,1] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuS[mif1,mif3] * self.YeuSbar[1,mif4] * self.YeuSbar[mif2,1] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,1] * self.YeuS[mif1,mif3] * self.YeuSbar[1,mif4] * self.YeuSbar[mif2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.YeuS[mif1,1] * self.YeuSbar[2,mif4] * self.YeuSbar[mif2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuS[mif1,mif3] * self.YeuSbar[2,mif4] * self.YeuSbar[mif2,1] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuS[mif1,mif3] * self.YeuSbar[2,mif4] * self.YeuSbar[mif2,1] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,1] * self.YeuS[mif1,mif3] * self.YeuSbar[2,mif4] * self.YeuSbar[mif2,1] + 1/72 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif1,2] * self.YeuSbar[mif2,2] + 1/48 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif1,2] * self.YeuSbar[mif2,2] + 1/36 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif1,2] * self.YeuSbar[mif2,2] + -1/36 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,2] * self.YeuSbar[mif2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.YeuS[mif1,2] * self.YeuSbar[0,mif4] * self.YeuSbar[mif2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuS[mif1,mif3] * self.YeuSbar[0,mif4] * self.YeuSbar[mif2,2] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuS[mif1,mif3] * self.YeuSbar[0,mif4] * self.YeuSbar[mif2,2] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,2] * self.YeuS[mif1,mif3] * self.YeuSbar[0,mif4] * self.YeuSbar[mif2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.YeuS[mif1,2] * self.YeuSbar[1,mif4] * self.YeuSbar[mif2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuS[mif1,mif3] * self.YeuSbar[1,mif4] * self.YeuSbar[mif2,2] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuS[mif1,mif3] * self.YeuSbar[1,mif4] * self.YeuSbar[mif2,2] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,2] * self.YeuS[mif1,mif3] * self.YeuSbar[1,mif4] * self.YeuSbar[mif2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.YeuS[mif1,2] * self.YeuSbar[2,mif4] * self.YeuSbar[mif2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuS[mif1,mif3] * self.YeuSbar[2,mif4] * self.YeuSbar[mif2,2] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuS[mif1,mif3] * self.YeuSbar[2,mif4] * self.YeuSbar[mif2,2] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,2] * self.YeuS[mif1,mif3] * self.YeuSbar[2,mif4] * self.YeuSbar[mif2,2] + 1/2 * (self.MS1)**(-2) * self.YeuS[mif1,mif3] * self.YeuSbar[mif2,mif4] + 25/576 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,mif3] * self.YeuSbar[mif2,mif4] + 25/192 * self.aEV * self.epsilonbar * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,mif3] * self.YeuSbar[mif2,mif4] + 1/48 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,mif3] * self.YeuSbar[mif2,mif4] + 1/16 * self.aEV * self.epsilonbar * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,mif3] * self.YeuSbar[mif2,mif4] + 25/288 * self.aEV * self.epsilonbar * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,mif3] * self.YeuSbar[mif2,mif4] + 1/24 * self.aEV * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif1,mif3] * self.YeuSbar[mif2,mif4] + -25/288 * self.aEV * self.epsilonbar * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,mif3] * self.YeuSbar[mif2,mif4] + -1/24 * self.aEV * self.epsilonbar * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,mif3] * self.YeuSbar[mif2,mif4] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.YeuS[mif1,0] * self.YeuSbar[0,0] * self.YeuSbar[mif2,mif4] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.YeuS[mif1,0] * self.YeuSbar[0,0] * self.YeuSbar[mif2,mif4] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif3] * self.YeuS[mif1,0] * self.YeuSbar[0,0] * self.YeuSbar[mif2,mif4] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.YeuS[mif1,1] * self.YeuSbar[0,1] * self.YeuSbar[mif2,mif4] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.YeuS[mif1,1] * self.YeuSbar[0,1] * self.YeuSbar[mif2,mif4] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif3] * self.YeuS[mif1,1] * self.YeuSbar[0,1] * self.YeuSbar[mif2,mif4] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.YeuS[mif1,2] * self.YeuSbar[0,2] * self.YeuSbar[mif2,mif4] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.YeuS[mif1,2] * self.YeuSbar[0,2] * self.YeuSbar[mif2,mif4] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif3] * self.YeuS[mif1,2] * self.YeuSbar[0,2] * self.YeuSbar[mif2,mif4] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.YeuS[mif1,0] * self.YeuSbar[1,0] * self.YeuSbar[mif2,mif4] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.YeuS[mif1,0] * self.YeuSbar[1,0] * self.YeuSbar[mif2,mif4] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif3] * self.YeuS[mif1,0] * self.YeuSbar[1,0] * self.YeuSbar[mif2,mif4] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.YeuS[mif1,1] * self.YeuSbar[1,1] * self.YeuSbar[mif2,mif4] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.YeuS[mif1,1] * self.YeuSbar[1,1] * self.YeuSbar[mif2,mif4] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif3] * self.YeuS[mif1,1] * self.YeuSbar[1,1] * self.YeuSbar[mif2,mif4] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.YeuS[mif1,2] * self.YeuSbar[1,2] * self.YeuSbar[mif2,mif4] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.YeuS[mif1,2] * self.YeuSbar[1,2] * self.YeuSbar[mif2,mif4] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif3] * self.YeuS[mif1,2] * self.YeuSbar[1,2] * self.YeuSbar[mif2,mif4] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.YeuS[mif1,0] * self.YeuSbar[2,0] * self.YeuSbar[mif2,mif4] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.YeuS[mif1,0] * self.YeuSbar[2,0] * self.YeuSbar[mif2,mif4] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif3] * self.YeuS[mif1,0] * self.YeuSbar[2,0] * self.YeuSbar[mif2,mif4] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.YeuS[mif1,1] * self.YeuSbar[2,1] * self.YeuSbar[mif2,mif4] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.YeuS[mif1,1] * self.YeuSbar[2,1] * self.YeuSbar[mif2,mif4] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif3] * self.YeuS[mif1,1] * self.YeuSbar[2,1] * self.YeuSbar[mif2,mif4] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.YeuS[mif1,2] * self.YeuSbar[2,2] * self.YeuSbar[mif2,mif4] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.YeuS[mif1,2] * self.YeuSbar[2,2] * self.YeuSbar[mif2,mif4] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif3] * self.YeuS[mif1,2] * self.YeuSbar[2,2] * self.YeuSbar[mif2,mif4])

    def alphaOed(self, mif1,mif2,mif3,mif4):
        return (-1/4320 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif1,0] * self.YeuSbar[mif2,0] + -1/96 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif1,0] * self.YeuSbar[mif2,0] + -1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif1,0] * self.YeuSbar[mif2,0] + 1/72 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,0] * self.YeuSbar[mif2,0] + -1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif1,1] * self.YeuSbar[mif2,1] + -1/96 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif1,1] * self.YeuSbar[mif2,1] + -1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif1,1] * self.YeuSbar[mif2,1] + 1/72 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,1] * self.YeuSbar[mif2,1] + -1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif1,2] * self.YeuSbar[mif2,2] + -1/96 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif1,2] * self.YeuSbar[mif2,2] + -1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif1,2] * self.YeuSbar[mif2,2] + 1/72 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif1,2] * self.YeuSbar[mif2,2])

    def alphaOqe(self, mif1,mif2,mif3,mif4):
        return (1/8640 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/288 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif3,0] * self.YeuSbar[mif4,0] + 1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif3,0] * self.YeuSbar[mif4,0] + 1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif3,0] * self.YeuSbar[mif4,0] + -1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,0] * self.YeuSbar[mif4,0] + 1/288 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif3,1] * self.YeuSbar[mif4,1] + 1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif3,1] * self.YeuSbar[mif4,1] + 1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif3,1] * self.YeuSbar[mif4,1] + -1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,1] * self.YeuSbar[mif4,1] + 1/288 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif3,2] * self.YeuSbar[mif4,2] + 1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif3,2] * self.YeuSbar[mif4,2] + 1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif3,2] * self.YeuSbar[mif4,2] + -1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,2] * self.YeuSbar[mif4,2] + 25/3456 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + 1/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,0] * self.YeuSbar[mif4,0] * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,1] * self.YeuSbar[mif4,1] * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,2] * self.YeuSbar[mif4,2] * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif4] * self.ylbar[0,mif3] * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif4] * self.ylbar[0,mif3] * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,mif4] * self.ylbar[0,mif3] * self.YLQS[0,mif2] * self.YLQSbar[0,mif1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif4] * self.ylbar[0,mif3] * self.YLQS[1,mif2] * self.YLQSbar[0,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif4] * self.ylbar[0,mif3] * self.YLQS[1,mif2] * self.YLQSbar[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,mif4] * self.ylbar[0,mif3] * self.YLQS[1,mif2] * self.YLQSbar[0,mif1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif4] * self.ylbar[0,mif3] * self.YLQS[2,mif2] * self.YLQSbar[0,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif4] * self.ylbar[0,mif3] * self.YLQS[2,mif2] * self.YLQSbar[0,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,mif4] * self.ylbar[0,mif3] * self.YLQS[2,mif2] * self.YLQSbar[0,mif1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif4] * self.ylbar[1,mif3] * self.YLQS[0,mif2] * self.YLQSbar[1,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif4] * self.ylbar[1,mif3] * self.YLQS[0,mif2] * self.YLQSbar[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,mif4] * self.ylbar[1,mif3] * self.YLQS[0,mif2] * self.YLQSbar[1,mif1] + 25/3456 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + 1/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,0] * self.YeuSbar[mif4,0] * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,1] * self.YeuSbar[mif4,1] * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,2] * self.YeuSbar[mif4,2] * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif4] * self.ylbar[1,mif3] * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif4] * self.ylbar[1,mif3] * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,mif4] * self.ylbar[1,mif3] * self.YLQS[1,mif2] * self.YLQSbar[1,mif1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif4] * self.ylbar[1,mif3] * self.YLQS[2,mif2] * self.YLQSbar[1,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif4] * self.ylbar[1,mif3] * self.YLQS[2,mif2] * self.YLQSbar[1,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,mif4] * self.ylbar[1,mif3] * self.YLQS[2,mif2] * self.YLQSbar[1,mif1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif4] * self.ylbar[2,mif3] * self.YLQS[0,mif2] * self.YLQSbar[2,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif4] * self.ylbar[2,mif3] * self.YLQS[0,mif2] * self.YLQSbar[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,mif4] * self.ylbar[2,mif3] * self.YLQS[0,mif2] * self.YLQSbar[2,mif1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif4] * self.ylbar[2,mif3] * self.YLQS[1,mif2] * self.YLQSbar[2,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif4] * self.ylbar[2,mif3] * self.YLQS[1,mif2] * self.YLQSbar[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,mif4] * self.ylbar[2,mif3] * self.YLQS[1,mif2] * self.YLQSbar[2,mif1] + 25/3456 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + 1/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,0] * self.YeuSbar[mif4,0] * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,1] * self.YeuSbar[mif4,1] * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,2] * self.YeuSbar[mif4,2] * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif4] * self.ylbar[2,mif3] * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif4] * self.ylbar[2,mif3] * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,mif4] * self.ylbar[2,mif3] * self.YLQS[2,mif2] * self.YLQSbar[2,mif1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,0] * self.yl[0,mif4] * self.YLQS[0,mif2] * self.yu[mif1,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,0] * self.yl[0,mif4] * self.YLQS[0,mif2] * self.yu[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,0] * self.yl[0,mif4] * self.YLQS[0,mif2] * self.yu[mif1,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,0] * self.yl[1,mif4] * self.YLQS[1,mif2] * self.yu[mif1,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,0] * self.yl[1,mif4] * self.YLQS[1,mif2] * self.yu[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,0] * self.yl[1,mif4] * self.YLQS[1,mif2] * self.yu[mif1,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,0] * self.yl[2,mif4] * self.YLQS[2,mif2] * self.yu[mif1,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,0] * self.yl[2,mif4] * self.YLQS[2,mif2] * self.yu[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,0] * self.yl[2,mif4] * self.YLQS[2,mif2] * self.yu[mif1,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,1] * self.yl[0,mif4] * self.YLQS[0,mif2] * self.yu[mif1,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,1] * self.yl[0,mif4] * self.YLQS[0,mif2] * self.yu[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,1] * self.yl[0,mif4] * self.YLQS[0,mif2] * self.yu[mif1,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,1] * self.yl[1,mif4] * self.YLQS[1,mif2] * self.yu[mif1,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,1] * self.yl[1,mif4] * self.YLQS[1,mif2] * self.yu[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,1] * self.yl[1,mif4] * self.YLQS[1,mif2] * self.yu[mif1,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,1] * self.yl[2,mif4] * self.YLQS[2,mif2] * self.yu[mif1,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,1] * self.yl[2,mif4] * self.YLQS[2,mif2] * self.yu[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,1] * self.yl[2,mif4] * self.YLQS[2,mif2] * self.yu[mif1,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,2] * self.yl[0,mif4] * self.YLQS[0,mif2] * self.yu[mif1,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,2] * self.yl[0,mif4] * self.YLQS[0,mif2] * self.yu[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,2] * self.yl[0,mif4] * self.YLQS[0,mif2] * self.yu[mif1,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,2] * self.yl[1,mif4] * self.YLQS[1,mif2] * self.yu[mif1,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,2] * self.yl[1,mif4] * self.YLQS[1,mif2] * self.yu[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,2] * self.yl[1,mif4] * self.YLQS[1,mif2] * self.yu[mif1,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,2] * self.yl[2,mif4] * self.YLQS[2,mif2] * self.yu[mif1,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,2] * self.yl[2,mif4] * self.YLQS[2,mif2] * self.yu[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,2] * self.yl[2,mif4] * self.YLQS[2,mif2] * self.yu[mif1,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,0] * self.ylbar[0,mif3] * self.YLQSbar[0,mif1] * self.yubar[mif2,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,0] * self.ylbar[0,mif3] * self.YLQSbar[0,mif1] * self.yubar[mif2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif4,0] * self.ylbar[0,mif3] * self.YLQSbar[0,mif1] * self.yubar[mif2,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,0] * self.ylbar[1,mif3] * self.YLQSbar[1,mif1] * self.yubar[mif2,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,0] * self.ylbar[1,mif3] * self.YLQSbar[1,mif1] * self.yubar[mif2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif4,0] * self.ylbar[1,mif3] * self.YLQSbar[1,mif1] * self.yubar[mif2,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,0] * self.ylbar[2,mif3] * self.YLQSbar[2,mif1] * self.yubar[mif2,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,0] * self.ylbar[2,mif3] * self.YLQSbar[2,mif1] * self.yubar[mif2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif4,0] * self.ylbar[2,mif3] * self.YLQSbar[2,mif1] * self.yubar[mif2,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,0] * self.YeuSbar[mif4,0] * self.yu[mif1,0] * self.yubar[mif2,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,0] * self.YeuSbar[mif4,0] * self.yu[mif1,0] * self.yubar[mif2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,0] * self.YeuSbar[mif4,0] * self.yu[mif1,0] * self.yubar[mif2,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,1] * self.YeuSbar[mif4,0] * self.yu[mif1,1] * self.yubar[mif2,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,1] * self.YeuSbar[mif4,0] * self.yu[mif1,1] * self.yubar[mif2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,1] * self.YeuSbar[mif4,0] * self.yu[mif1,1] * self.yubar[mif2,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,2] * self.YeuSbar[mif4,0] * self.yu[mif1,2] * self.yubar[mif2,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,2] * self.YeuSbar[mif4,0] * self.yu[mif1,2] * self.yubar[mif2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,2] * self.YeuSbar[mif4,0] * self.yu[mif1,2] * self.yubar[mif2,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,1] * self.ylbar[0,mif3] * self.YLQSbar[0,mif1] * self.yubar[mif2,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,1] * self.ylbar[0,mif3] * self.YLQSbar[0,mif1] * self.yubar[mif2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif4,1] * self.ylbar[0,mif3] * self.YLQSbar[0,mif1] * self.yubar[mif2,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,1] * self.ylbar[1,mif3] * self.YLQSbar[1,mif1] * self.yubar[mif2,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,1] * self.ylbar[1,mif3] * self.YLQSbar[1,mif1] * self.yubar[mif2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif4,1] * self.ylbar[1,mif3] * self.YLQSbar[1,mif1] * self.yubar[mif2,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,1] * self.ylbar[2,mif3] * self.YLQSbar[2,mif1] * self.yubar[mif2,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,1] * self.ylbar[2,mif3] * self.YLQSbar[2,mif1] * self.yubar[mif2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif4,1] * self.ylbar[2,mif3] * self.YLQSbar[2,mif1] * self.yubar[mif2,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,0] * self.YeuSbar[mif4,1] * self.yu[mif1,0] * self.yubar[mif2,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,0] * self.YeuSbar[mif4,1] * self.yu[mif1,0] * self.yubar[mif2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,0] * self.YeuSbar[mif4,1] * self.yu[mif1,0] * self.yubar[mif2,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,1] * self.YeuSbar[mif4,1] * self.yu[mif1,1] * self.yubar[mif2,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,1] * self.YeuSbar[mif4,1] * self.yu[mif1,1] * self.yubar[mif2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,1] * self.YeuSbar[mif4,1] * self.yu[mif1,1] * self.yubar[mif2,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,2] * self.YeuSbar[mif4,1] * self.yu[mif1,2] * self.yubar[mif2,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,2] * self.YeuSbar[mif4,1] * self.yu[mif1,2] * self.yubar[mif2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,2] * self.YeuSbar[mif4,1] * self.yu[mif1,2] * self.yubar[mif2,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,2] * self.ylbar[0,mif3] * self.YLQSbar[0,mif1] * self.yubar[mif2,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,2] * self.ylbar[0,mif3] * self.YLQSbar[0,mif1] * self.yubar[mif2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif4,2] * self.ylbar[0,mif3] * self.YLQSbar[0,mif1] * self.yubar[mif2,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,2] * self.ylbar[1,mif3] * self.YLQSbar[1,mif1] * self.yubar[mif2,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,2] * self.ylbar[1,mif3] * self.YLQSbar[1,mif1] * self.yubar[mif2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif4,2] * self.ylbar[1,mif3] * self.YLQSbar[1,mif1] * self.yubar[mif2,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,2] * self.ylbar[2,mif3] * self.YLQSbar[2,mif1] * self.yubar[mif2,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif4,2] * self.ylbar[2,mif3] * self.YLQSbar[2,mif1] * self.yubar[mif2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif4,2] * self.ylbar[2,mif3] * self.YLQSbar[2,mif1] * self.yubar[mif2,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,0] * self.YeuSbar[mif4,2] * self.yu[mif1,0] * self.yubar[mif2,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,0] * self.YeuSbar[mif4,2] * self.yu[mif1,0] * self.yubar[mif2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,0] * self.YeuSbar[mif4,2] * self.yu[mif1,0] * self.yubar[mif2,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,1] * self.YeuSbar[mif4,2] * self.yu[mif1,1] * self.yubar[mif2,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,1] * self.YeuSbar[mif4,2] * self.yu[mif1,1] * self.yubar[mif2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,1] * self.YeuSbar[mif4,2] * self.yu[mif1,1] * self.yubar[mif2,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,2] * self.YeuSbar[mif4,2] * self.yu[mif1,2] * self.yubar[mif2,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif3,2] * self.YeuSbar[mif4,2] * self.yu[mif1,2] * self.yubar[mif2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif3,2] * self.YeuSbar[mif4,2] * self.yu[mif1,2] * self.yubar[mif2,2])

    def alphaOlu(self, mif1,mif2,mif3,mif4):
        return (1/4320 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 23/3456 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[0,mif3] * self.YeuSbar[0,mif4] + 1/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[0,mif3] * self.YeuSbar[0,mif4] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[0,mif3] * self.YeuSbar[0,mif4] + -1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif3] * self.YeuSbar[0,mif4] + 23/3456 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[1,mif3] * self.YeuSbar[1,mif4] + 1/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[1,mif3] * self.YeuSbar[1,mif4] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[1,mif3] * self.YeuSbar[1,mif4] + -1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif3] * self.YeuSbar[1,mif4] + 23/3456 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[2,mif3] * self.YeuSbar[2,mif4] + 1/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[2,mif3] * self.YeuSbar[2,mif4] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[2,mif3] * self.YeuSbar[2,mif4] + -1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif3] * self.YeuSbar[2,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.YeuSbar[0,mif4] * self.yl[mif1,0] * self.ylbar[mif2,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.YeuSbar[0,mif4] * self.yl[mif1,0] * self.ylbar[mif2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif3] * self.YeuSbar[0,mif4] * self.yl[mif1,0] * self.ylbar[mif2,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.YeuSbar[0,mif4] * self.yl[mif1,1] * self.ylbar[mif2,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.YeuSbar[0,mif4] * self.yl[mif1,1] * self.ylbar[mif2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif3] * self.YeuSbar[0,mif4] * self.yl[mif1,1] * self.ylbar[mif2,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.YeuSbar[0,mif4] * self.yl[mif1,2] * self.ylbar[mif2,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.YeuSbar[0,mif4] * self.yl[mif1,2] * self.ylbar[mif2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif3] * self.YeuSbar[0,mif4] * self.yl[mif1,2] * self.ylbar[mif2,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.YeuSbar[1,mif4] * self.yl[mif1,0] * self.ylbar[mif2,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.YeuSbar[1,mif4] * self.yl[mif1,0] * self.ylbar[mif2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif3] * self.YeuSbar[1,mif4] * self.yl[mif1,0] * self.ylbar[mif2,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.YeuSbar[1,mif4] * self.yl[mif1,1] * self.ylbar[mif2,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.YeuSbar[1,mif4] * self.yl[mif1,1] * self.ylbar[mif2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif3] * self.YeuSbar[1,mif4] * self.yl[mif1,1] * self.ylbar[mif2,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.YeuSbar[1,mif4] * self.yl[mif1,2] * self.ylbar[mif2,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.YeuSbar[1,mif4] * self.yl[mif1,2] * self.ylbar[mif2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif3] * self.YeuSbar[1,mif4] * self.yl[mif1,2] * self.ylbar[mif2,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.YeuSbar[2,mif4] * self.yl[mif1,0] * self.ylbar[mif2,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.YeuSbar[2,mif4] * self.yl[mif1,0] * self.ylbar[mif2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif3] * self.YeuSbar[2,mif4] * self.yl[mif1,0] * self.ylbar[mif2,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.YeuSbar[2,mif4] * self.yl[mif1,1] * self.ylbar[mif2,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.YeuSbar[2,mif4] * self.yl[mif1,1] * self.ylbar[mif2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif3] * self.YeuSbar[2,mif4] * self.yl[mif1,1] * self.ylbar[mif2,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.YeuSbar[2,mif4] * self.yl[mif1,2] * self.ylbar[mif2,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.YeuSbar[2,mif4] * self.yl[mif1,2] * self.ylbar[mif2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif3] * self.YeuSbar[2,mif4] * self.yl[mif1,2] * self.ylbar[mif2,2] + 1/576 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + 1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + 1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.YeuSbar[0,mif4] * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.YeuSbar[1,mif4] * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.YeuSbar[2,mif4] * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + 1/576 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + 1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + 1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.YeuSbar[0,mif4] * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.YeuSbar[1,mif4] * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.YeuSbar[2,mif4] * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + 1/576 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + 1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + 1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.YeuSbar[0,mif4] * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.YeuSbar[1,mif4] * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.YeuSbar[2,mif4] * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.yl[mif1,0] * self.YLQS[mif2,0] * self.yu[0,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.yl[mif1,0] * self.YLQS[mif2,0] * self.yu[0,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif3] * self.yl[mif1,0] * self.YLQS[mif2,0] * self.yu[0,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.yl[mif1,1] * self.YLQS[mif2,0] * self.yu[0,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.yl[mif1,1] * self.YLQS[mif2,0] * self.yu[0,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif3] * self.yl[mif1,1] * self.YLQS[mif2,0] * self.yu[0,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.yl[mif1,2] * self.YLQS[mif2,0] * self.yu[0,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.yl[mif1,2] * self.YLQS[mif2,0] * self.yu[0,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif3] * self.yl[mif1,2] * self.YLQS[mif2,0] * self.yu[0,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.yl[mif1,0] * self.YLQS[mif2,1] * self.yu[1,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.yl[mif1,0] * self.YLQS[mif2,1] * self.yu[1,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif3] * self.yl[mif1,0] * self.YLQS[mif2,1] * self.yu[1,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.yl[mif1,1] * self.YLQS[mif2,1] * self.yu[1,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.yl[mif1,1] * self.YLQS[mif2,1] * self.yu[1,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif3] * self.yl[mif1,1] * self.YLQS[mif2,1] * self.yu[1,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.yl[mif1,2] * self.YLQS[mif2,1] * self.yu[1,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.yl[mif1,2] * self.YLQS[mif2,1] * self.yu[1,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif3] * self.yl[mif1,2] * self.YLQS[mif2,1] * self.yu[1,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.yl[mif1,0] * self.YLQS[mif2,2] * self.yu[2,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif3] * self.yl[mif1,0] * self.YLQS[mif2,2] * self.yu[2,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif3] * self.yl[mif1,0] * self.YLQS[mif2,2] * self.yu[2,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.yl[mif1,1] * self.YLQS[mif2,2] * self.yu[2,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif3] * self.yl[mif1,1] * self.YLQS[mif2,2] * self.yu[2,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif3] * self.yl[mif1,1] * self.YLQS[mif2,2] * self.yu[2,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.yl[mif1,2] * self.YLQS[mif2,2] * self.yu[2,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif3] * self.yl[mif1,2] * self.YLQS[mif2,2] * self.yu[2,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif3] * self.yl[mif1,2] * self.YLQS[mif2,2] * self.yu[2,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif4] * self.ylbar[mif2,0] * self.YLQSbar[mif1,0] * self.yubar[0,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif4] * self.ylbar[mif2,0] * self.YLQSbar[mif1,0] * self.yubar[0,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif4] * self.ylbar[mif2,0] * self.YLQSbar[mif1,0] * self.yubar[0,mif3] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif4] * self.ylbar[mif2,1] * self.YLQSbar[mif1,0] * self.yubar[0,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif4] * self.ylbar[mif2,1] * self.YLQSbar[mif1,0] * self.yubar[0,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif4] * self.ylbar[mif2,1] * self.YLQSbar[mif1,0] * self.yubar[0,mif3] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif4] * self.ylbar[mif2,2] * self.YLQSbar[mif1,0] * self.yubar[0,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif4] * self.ylbar[mif2,2] * self.YLQSbar[mif1,0] * self.yubar[0,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif4] * self.ylbar[mif2,2] * self.YLQSbar[mif1,0] * self.yubar[0,mif3] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] * self.yu[0,mif4] * self.yubar[0,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] * self.yu[0,mif4] * self.yubar[0,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] * self.yu[0,mif4] * self.yubar[0,mif3] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] * self.yu[1,mif4] * self.yubar[0,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] * self.yu[1,mif4] * self.yubar[0,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] * self.yu[1,mif4] * self.yubar[0,mif3] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] * self.yu[2,mif4] * self.yubar[0,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] * self.yu[2,mif4] * self.yubar[0,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] * self.yu[2,mif4] * self.yubar[0,mif3] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif4] * self.ylbar[mif2,0] * self.YLQSbar[mif1,1] * self.yubar[1,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif4] * self.ylbar[mif2,0] * self.YLQSbar[mif1,1] * self.yubar[1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif4] * self.ylbar[mif2,0] * self.YLQSbar[mif1,1] * self.yubar[1,mif3] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif4] * self.ylbar[mif2,1] * self.YLQSbar[mif1,1] * self.yubar[1,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif4] * self.ylbar[mif2,1] * self.YLQSbar[mif1,1] * self.yubar[1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif4] * self.ylbar[mif2,1] * self.YLQSbar[mif1,1] * self.yubar[1,mif3] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif4] * self.ylbar[mif2,2] * self.YLQSbar[mif1,1] * self.yubar[1,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif4] * self.ylbar[mif2,2] * self.YLQSbar[mif1,1] * self.yubar[1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif4] * self.ylbar[mif2,2] * self.YLQSbar[mif1,1] * self.yubar[1,mif3] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] * self.yu[0,mif4] * self.yubar[1,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] * self.yu[0,mif4] * self.yubar[1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] * self.yu[0,mif4] * self.yubar[1,mif3] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] * self.yu[1,mif4] * self.yubar[1,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] * self.yu[1,mif4] * self.yubar[1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] * self.yu[1,mif4] * self.yubar[1,mif3] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] * self.yu[2,mif4] * self.yubar[1,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] * self.yu[2,mif4] * self.yubar[1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] * self.yu[2,mif4] * self.yubar[1,mif3] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif4] * self.ylbar[mif2,0] * self.YLQSbar[mif1,2] * self.yubar[2,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif4] * self.ylbar[mif2,0] * self.YLQSbar[mif1,2] * self.yubar[2,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif4] * self.ylbar[mif2,0] * self.YLQSbar[mif1,2] * self.yubar[2,mif3] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif4] * self.ylbar[mif2,1] * self.YLQSbar[mif1,2] * self.yubar[2,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif4] * self.ylbar[mif2,1] * self.YLQSbar[mif1,2] * self.yubar[2,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif4] * self.ylbar[mif2,1] * self.YLQSbar[mif1,2] * self.yubar[2,mif3] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif4] * self.ylbar[mif2,2] * self.YLQSbar[mif1,2] * self.yubar[2,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif4] * self.ylbar[mif2,2] * self.YLQSbar[mif1,2] * self.yubar[2,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif4] * self.ylbar[mif2,2] * self.YLQSbar[mif1,2] * self.yubar[2,mif3] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] * self.yu[0,mif4] * self.yubar[2,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] * self.yu[0,mif4] * self.yubar[2,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] * self.yu[0,mif4] * self.yubar[2,mif3] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] * self.yu[1,mif4] * self.yubar[2,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] * self.yu[1,mif4] * self.yubar[2,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] * self.yu[1,mif4] * self.yubar[2,mif3] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] * self.yu[2,mif4] * self.yubar[2,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] * self.yu[2,mif4] * self.yubar[2,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] * self.yu[2,mif4] * self.yubar[2,mif3])

    def alphaOld(self, mif1,mif2,mif3,mif4):
        return (-1/8640 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -1/1152 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -1/384 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + 1/288 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.YLQS[mif2,0] * self.YLQSbar[mif1,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.YLQS[mif2,1] * self.YLQSbar[mif1,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.YLQS[mif2,2] * self.YLQSbar[mif1,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.YLQS[mif2,0] * self.YLQSbar[mif1,1] + -1/1152 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -1/384 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + 1/288 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.YLQS[mif2,1] * self.YLQSbar[mif1,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.YLQS[mif2,2] * self.YLQSbar[mif1,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.YLQS[mif2,0] * self.YLQSbar[mif1,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.YLQS[mif2,1] * self.YLQSbar[mif1,2] + -1/1152 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -1/384 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + 1/288 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.YLQS[mif2,2] * self.YLQSbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.YLQS[mif2,2] * self.YLQSbar[mif1,2])

    def alphaOledq(self, mif1,mif2,mif3,mif4):
        return (-3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.yl[0,mif2] * self.YLQS[0,mif4] * self.YLQSbar[mif1,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.yl[0,mif2] * self.YLQS[0,mif4] * self.YLQSbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[0,mif3] * self.yl[0,mif2] * self.YLQS[0,mif4] * self.YLQSbar[mif1,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.yl[1,mif2] * self.YLQS[1,mif4] * self.YLQSbar[mif1,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.yl[1,mif2] * self.YLQS[1,mif4] * self.YLQSbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[0,mif3] * self.yl[1,mif2] * self.YLQS[1,mif4] * self.YLQSbar[mif1,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.yl[2,mif2] * self.YLQS[2,mif4] * self.YLQSbar[mif1,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.yl[2,mif2] * self.YLQS[2,mif4] * self.YLQSbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[0,mif3] * self.yl[2,mif2] * self.YLQS[2,mif4] * self.YLQSbar[mif1,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.yl[0,mif2] * self.YLQS[0,mif4] * self.YLQSbar[mif1,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.yl[0,mif2] * self.YLQS[0,mif4] * self.YLQSbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[1,mif3] * self.yl[0,mif2] * self.YLQS[0,mif4] * self.YLQSbar[mif1,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.yl[1,mif2] * self.YLQS[1,mif4] * self.YLQSbar[mif1,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.yl[1,mif2] * self.YLQS[1,mif4] * self.YLQSbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[1,mif3] * self.yl[1,mif2] * self.YLQS[1,mif4] * self.YLQSbar[mif1,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.yl[2,mif2] * self.YLQS[2,mif4] * self.YLQSbar[mif1,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.yl[2,mif2] * self.YLQS[2,mif4] * self.YLQSbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[1,mif3] * self.yl[2,mif2] * self.YLQS[2,mif4] * self.YLQSbar[mif1,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.yl[0,mif2] * self.YLQS[0,mif4] * self.YLQSbar[mif1,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.yl[0,mif2] * self.YLQS[0,mif4] * self.YLQSbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[2,mif3] * self.yl[0,mif2] * self.YLQS[0,mif4] * self.YLQSbar[mif1,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.yl[1,mif2] * self.YLQS[1,mif4] * self.YLQSbar[mif1,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.yl[1,mif2] * self.YLQS[1,mif4] * self.YLQSbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[2,mif3] * self.yl[1,mif2] * self.YLQS[1,mif4] * self.YLQSbar[mif1,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.yl[2,mif2] * self.YLQS[2,mif4] * self.YLQSbar[mif1,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.yl[2,mif2] * self.YLQS[2,mif4] * self.YLQSbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[2,mif3] * self.yl[2,mif2] * self.YLQS[2,mif4] * self.YLQSbar[mif1,2] + 9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,mif3] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yubar[0,0] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,mif3] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yubar[0,0] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,mif3] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yubar[0,0] + 9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,mif3] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yubar[0,1] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,mif3] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yubar[0,1] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,mif3] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yubar[0,1] + 9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,mif3] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yubar[0,2] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,mif3] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yubar[0,2] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,mif3] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yubar[0,2] + 9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,mif3] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yubar[1,0] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,mif3] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yubar[1,0] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,mif3] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yubar[1,0] + 9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,mif3] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yubar[1,1] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,mif3] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yubar[1,1] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,mif3] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yubar[1,1] + 9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,mif3] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yubar[1,2] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,mif3] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yubar[1,2] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,mif3] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yubar[1,2] + 9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,mif3] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yubar[2,0] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,mif3] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yubar[2,0] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,mif3] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yubar[2,0] + 9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,mif3] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yubar[2,1] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,mif3] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yubar[2,1] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,mif3] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yubar[2,1] + 9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,mif3] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yubar[2,2] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,mif3] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yubar[2,2] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,mif3] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yubar[2,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yubar[mif4,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yubar[mif4,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[0,mif3] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yubar[mif4,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yubar[mif4,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yubar[mif4,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[1,mif3] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yubar[mif4,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yubar[mif4,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yubar[mif4,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[2,mif3] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yubar[mif4,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yubar[mif4,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yubar[mif4,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[0,mif3] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yubar[mif4,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yubar[mif4,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yubar[mif4,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[1,mif3] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yubar[mif4,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yubar[mif4,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yubar[mif4,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[2,mif3] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yubar[mif4,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yubar[mif4,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yubar[mif4,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[0,mif3] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yubar[mif4,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yubar[mif4,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yubar[mif4,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[1,mif3] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yubar[mif4,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yubar[mif4,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yubar[mif4,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[2,mif3] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yubar[mif4,2])

    def alphaOlequ1(self, mif1,mif2,mif3,mif4):
        return (1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[0,mif3] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[0,mif3] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,0] * self.YeuSbar[0,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[0,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[0,mif3] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[0,mif3] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,0] * self.YeuSbar[1,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[0,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[0,mif3] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[0,mif3] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,0] * self.YeuSbar[2,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[0,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif4] * self.yl[mif1,mif2] * self.ylbar[0,0] * self.YLQSbar[0,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif4] * self.yl[mif1,mif2] * self.ylbar[0,0] * self.YLQSbar[0,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif4] * self.yl[mif1,mif2] * self.ylbar[0,0] * self.YLQSbar[0,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif4] * self.yl[mif1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif4] * self.yl[mif1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif4] * self.yl[mif1,mif2] * self.ylbar[0,1] * self.YLQSbar[0,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif4] * self.yl[mif1,mif2] * self.ylbar[0,2] * self.YLQSbar[0,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif4] * self.yl[mif1,mif2] * self.ylbar[0,2] * self.YLQSbar[0,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif4] * self.yl[mif1,mif2] * self.ylbar[0,2] * self.YLQSbar[0,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[1,mif3] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[1,mif3] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,1] * self.YeuSbar[0,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[1,mif3] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[1,mif3] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,1] * self.YeuSbar[1,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[1,mif3] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[1,mif3] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,1] * self.YeuSbar[2,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[1,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif4] * self.yl[mif1,mif2] * self.ylbar[1,0] * self.YLQSbar[1,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif4] * self.yl[mif1,mif2] * self.ylbar[1,0] * self.YLQSbar[1,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif4] * self.yl[mif1,mif2] * self.ylbar[1,0] * self.YLQSbar[1,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif4] * self.yl[mif1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif4] * self.yl[mif1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif4] * self.yl[mif1,mif2] * self.ylbar[1,1] * self.YLQSbar[1,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif4] * self.yl[mif1,mif2] * self.ylbar[1,2] * self.YLQSbar[1,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif4] * self.yl[mif1,mif2] * self.ylbar[1,2] * self.YLQSbar[1,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif4] * self.yl[mif1,mif2] * self.ylbar[1,2] * self.YLQSbar[1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[2,mif3] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[2,mif3] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,2] * self.YeuSbar[0,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[2,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[2,mif3] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[2,mif3] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,2] * self.YeuSbar[1,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[2,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[2,mif3] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[2,mif3] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,2] * self.YeuSbar[2,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[2,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif4] * self.yl[mif1,mif2] * self.ylbar[2,0] * self.YLQSbar[2,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif4] * self.yl[mif1,mif2] * self.ylbar[2,0] * self.YLQSbar[2,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif4] * self.yl[mif1,mif2] * self.ylbar[2,0] * self.YLQSbar[2,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif4] * self.yl[mif1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif4] * self.yl[mif1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif4] * self.yl[mif1,mif2] * self.ylbar[2,1] * self.YLQSbar[2,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif4] * self.yl[mif1,mif2] * self.ylbar[2,2] * self.YLQSbar[2,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif4] * self.yl[mif1,mif2] * self.ylbar[2,2] * self.YLQSbar[2,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif4] * self.yl[mif1,mif2] * self.ylbar[2,2] * self.YLQSbar[2,mif3] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,mif4] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,mif3] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,mif4] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,mif3] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,0] * self.YeuSbar[0,mif4] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,mif3] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,mif4] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,mif3] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,mif4] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,mif3] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,0] * self.YeuSbar[1,mif4] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,mif3] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,mif4] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,mif3] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,mif4] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,mif3] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,0] * self.YeuSbar[2,mif4] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,mif3] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,mif4] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,mif3] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,mif4] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,mif3] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,1] * self.YeuSbar[0,mif4] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,mif3] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,mif4] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,mif3] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,mif4] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,mif3] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,1] * self.YeuSbar[1,mif4] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,mif3] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,mif4] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,mif3] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,mif4] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,mif3] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,1] * self.YeuSbar[2,mif4] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,mif3] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,mif4] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,mif3] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,mif4] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,mif3] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,2] * self.YeuSbar[0,mif4] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,mif3] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,mif4] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,mif3] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,mif4] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,mif3] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,2] * self.YeuSbar[1,mif4] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,mif3] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,mif4] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,mif3] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,mif4] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,mif3] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,2] * self.YeuSbar[2,mif4] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,mif3] + -2 * (self.MS1)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQSbar[mif1,mif3] + 25/288 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQSbar[mif1,mif3] + 5/48 * self.epsilonbar * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQSbar[mif1,mif3] + 5/48 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQSbar[mif1,mif3] + 1/8 * self.epsilonbar * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQSbar[mif1,mif3] + 5/48 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQSbar[mif1,mif3] + 5/72 * self.epsilonbar * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQSbar[mif1,mif3] + 1/8 * (self.g3)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQSbar[mif1,mif3] + 1/12 * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQSbar[mif1,mif3] + -5/48 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,mif4] * self.YLQSbar[mif1,mif3] + -5/72 * self.epsilonbar * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,mif4] * self.YLQSbar[mif1,mif3] + -1/8 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,mif4] * self.YLQSbar[mif1,mif3] + -1/12 * self.epsilonbar * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,mif4] * self.YLQSbar[mif1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQS[0,0] * self.YLQSbar[0,mif4] * self.YLQSbar[mif1,mif3] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQS[0,0] * self.YLQSbar[0,mif4] * self.YLQSbar[mif1,mif3] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQS[0,0] * self.YLQSbar[0,mif4] * self.YLQSbar[mif1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQS[0,1] * self.YLQSbar[0,mif4] * self.YLQSbar[mif1,mif3] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQS[0,1] * self.YLQSbar[0,mif4] * self.YLQSbar[mif1,mif3] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQS[0,1] * self.YLQSbar[0,mif4] * self.YLQSbar[mif1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQS[0,2] * self.YLQSbar[0,mif4] * self.YLQSbar[mif1,mif3] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQS[0,2] * self.YLQSbar[0,mif4] * self.YLQSbar[mif1,mif3] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQS[0,2] * self.YLQSbar[0,mif4] * self.YLQSbar[mif1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQS[1,0] * self.YLQSbar[1,mif4] * self.YLQSbar[mif1,mif3] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQS[1,0] * self.YLQSbar[1,mif4] * self.YLQSbar[mif1,mif3] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQS[1,0] * self.YLQSbar[1,mif4] * self.YLQSbar[mif1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQS[1,1] * self.YLQSbar[1,mif4] * self.YLQSbar[mif1,mif3] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQS[1,1] * self.YLQSbar[1,mif4] * self.YLQSbar[mif1,mif3] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQS[1,1] * self.YLQSbar[1,mif4] * self.YLQSbar[mif1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQS[1,2] * self.YLQSbar[1,mif4] * self.YLQSbar[mif1,mif3] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQS[1,2] * self.YLQSbar[1,mif4] * self.YLQSbar[mif1,mif3] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQS[1,2] * self.YLQSbar[1,mif4] * self.YLQSbar[mif1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQS[2,0] * self.YLQSbar[2,mif4] * self.YLQSbar[mif1,mif3] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQS[2,0] * self.YLQSbar[2,mif4] * self.YLQSbar[mif1,mif3] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQS[2,0] * self.YLQSbar[2,mif4] * self.YLQSbar[mif1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQS[2,1] * self.YLQSbar[2,mif4] * self.YLQSbar[mif1,mif3] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQS[2,1] * self.YLQSbar[2,mif4] * self.YLQSbar[mif1,mif3] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQS[2,1] * self.YLQSbar[2,mif4] * self.YLQSbar[mif1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQS[2,2] * self.YLQSbar[2,mif4] * self.YLQSbar[mif1,mif3] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQS[2,2] * self.YLQSbar[2,mif4] * self.YLQSbar[mif1,mif3] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQS[2,2] * self.YLQSbar[2,mif4] * self.YLQSbar[mif1,mif3] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[0,0] * self.YLQSbar[mif1,0] * self.YLQSbar[mif3,0] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[0,0] * self.YLQSbar[mif1,0] * self.YLQSbar[mif3,0] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,mif4] * self.YLQS[0,0] * self.YLQSbar[mif1,0] * self.YLQSbar[mif3,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[1,0] * self.YLQSbar[mif1,1] * self.YLQSbar[mif3,0] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[1,0] * self.YLQSbar[mif1,1] * self.YLQSbar[mif3,0] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,mif4] * self.YLQS[1,0] * self.YLQSbar[mif1,1] * self.YLQSbar[mif3,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[2,0] * self.YLQSbar[mif1,2] * self.YLQSbar[mif3,0] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[2,0] * self.YLQSbar[mif1,2] * self.YLQSbar[mif3,0] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,mif4] * self.YLQS[2,0] * self.YLQSbar[mif1,2] * self.YLQSbar[mif3,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[0,1] * self.YLQSbar[mif1,0] * self.YLQSbar[mif3,1] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[0,1] * self.YLQSbar[mif1,0] * self.YLQSbar[mif3,1] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,mif4] * self.YLQS[0,1] * self.YLQSbar[mif1,0] * self.YLQSbar[mif3,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[1,1] * self.YLQSbar[mif1,1] * self.YLQSbar[mif3,1] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[1,1] * self.YLQSbar[mif1,1] * self.YLQSbar[mif3,1] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,mif4] * self.YLQS[1,1] * self.YLQSbar[mif1,1] * self.YLQSbar[mif3,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[2,1] * self.YLQSbar[mif1,2] * self.YLQSbar[mif3,1] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[2,1] * self.YLQSbar[mif1,2] * self.YLQSbar[mif3,1] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,mif4] * self.YLQS[2,1] * self.YLQSbar[mif1,2] * self.YLQSbar[mif3,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[0,2] * self.YLQSbar[mif1,0] * self.YLQSbar[mif3,2] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[0,2] * self.YLQSbar[mif1,0] * self.YLQSbar[mif3,2] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,mif4] * self.YLQS[0,2] * self.YLQSbar[mif1,0] * self.YLQSbar[mif3,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[1,2] * self.YLQSbar[mif1,1] * self.YLQSbar[mif3,2] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[1,2] * self.YLQSbar[mif1,1] * self.YLQSbar[mif3,2] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,mif4] * self.YLQS[1,2] * self.YLQSbar[mif1,1] * self.YLQSbar[mif3,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[2,2] * self.YLQSbar[mif1,2] * self.YLQSbar[mif3,2] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[2,2] * self.YLQSbar[mif1,2] * self.YLQSbar[mif3,2] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,mif4] * self.YLQS[2,2] * self.YLQSbar[mif1,2] * self.YLQSbar[mif3,2] + -9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yu[mif3,mif4] * self.yubar[0,0] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yu[mif3,mif4] * self.yubar[0,0] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,0] * self.yu[mif3,mif4] * self.yubar[0,0] + -9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yu[mif3,mif4] * self.yubar[0,1] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yu[mif3,mif4] * self.yubar[0,1] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,0] * self.yu[mif3,mif4] * self.yubar[0,1] + -9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yu[mif3,mif4] * self.yubar[0,2] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yu[mif3,mif4] * self.yubar[0,2] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,0] * self.yu[mif3,mif4] * self.yubar[0,2] + -9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yu[mif3,mif4] * self.yubar[1,0] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yu[mif3,mif4] * self.yubar[1,0] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,1] * self.yu[mif3,mif4] * self.yubar[1,0] + -9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yu[mif3,mif4] * self.yubar[1,1] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yu[mif3,mif4] * self.yubar[1,1] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,1] * self.yu[mif3,mif4] * self.yubar[1,1] + -9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yu[mif3,mif4] * self.yubar[1,2] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yu[mif3,mif4] * self.yubar[1,2] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,1] * self.yu[mif3,mif4] * self.yubar[1,2] + -9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yu[mif3,mif4] * self.yubar[2,0] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yu[mif3,mif4] * self.yubar[2,0] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,2] * self.yu[mif3,mif4] * self.yubar[2,0] + -9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yu[mif3,mif4] * self.yubar[2,1] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yu[mif3,mif4] * self.yubar[2,1] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,2] * self.yu[mif3,mif4] * self.yubar[2,1] + -9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yu[mif3,mif4] * self.yubar[2,2] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yu[mif3,mif4] * self.yubar[2,2] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,2] * self.yu[mif3,mif4] * self.yubar[2,2])

    def alphaOlequ3(self, mif1,mif2,mif3,mif4):
        return (1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[0,mif3] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[0,mif3] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,0] * self.YeuSbar[0,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[0,mif3] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[0,mif3] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[0,mif3] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,0] * self.YeuSbar[1,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[0,mif3] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[0,mif3] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[0,mif3] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,0] * self.YeuSbar[2,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[0,mif3] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[1,mif3] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[1,mif3] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,1] * self.YeuSbar[0,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[1,mif3] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[1,mif3] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[1,mif3] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,1] * self.YeuSbar[1,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[1,mif3] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[1,mif3] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[1,mif3] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,1] * self.YeuSbar[2,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[1,mif3] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[2,mif3] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[2,mif3] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,2] * self.YeuSbar[0,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[2,mif3] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[2,mif3] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[2,mif3] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,2] * self.YeuSbar[1,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[2,mif3] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[2,mif3] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[2,mif3] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,2] * self.YeuSbar[2,mif1] * self.YeuSbar[mif2,mif4] * self.YLQSbar[2,mif3] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,mif4] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,mif3] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuSbar[0,mif4] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,mif3] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,0] * self.YeuSbar[0,mif4] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,mif3] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,mif4] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,mif3] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuSbar[1,mif4] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,mif3] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,0] * self.YeuSbar[1,mif4] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,mif3] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,mif4] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,mif3] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuSbar[2,mif4] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,mif3] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,0] * self.YeuSbar[2,mif4] * self.YeuSbar[mif2,0] * self.YLQSbar[mif1,mif3] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,mif4] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,mif3] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuSbar[0,mif4] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,mif3] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,1] * self.YeuSbar[0,mif4] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,mif3] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,mif4] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,mif3] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuSbar[1,mif4] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,mif3] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,1] * self.YeuSbar[1,mif4] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,mif3] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,mif4] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,mif3] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuSbar[2,mif4] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,mif3] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,1] * self.YeuSbar[2,mif4] * self.YeuSbar[mif2,1] * self.YLQSbar[mif1,mif3] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,mif4] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,mif3] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuSbar[0,mif4] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,mif3] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,2] * self.YeuSbar[0,mif4] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,mif3] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,mif4] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,mif3] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuSbar[1,mif4] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,mif3] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,2] * self.YeuSbar[1,mif4] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,mif3] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,mif4] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,mif3] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuSbar[2,mif4] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,mif3] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,2] * self.YeuSbar[2,mif4] * self.YeuSbar[mif2,2] * self.YLQSbar[mif1,mif3] + -1/8 * (self.MS1)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQSbar[mif1,mif3] + -5/288 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQSbar[mif1,mif3] + 5/768 * self.epsilonbar * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQSbar[mif1,mif3] + -1/48 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQSbar[mif1,mif3] + 1/128 * self.epsilonbar * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQSbar[mif1,mif3] + -5/576 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQSbar[mif1,mif3] + 5/1152 * self.epsilonbar * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQSbar[mif1,mif3] + -1/96 * (self.g3)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQSbar[mif1,mif3] + 1/192 * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQSbar[mif1,mif3] + 5/576 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,mif4] * self.YLQSbar[mif1,mif3] + -5/1152 * self.epsilonbar * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,mif4] * self.YLQSbar[mif1,mif3] + 1/96 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,mif4] * self.YLQSbar[mif1,mif3] + -1/192 * self.epsilonbar * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,mif4] * self.YLQSbar[mif1,mif3] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQS[0,0] * self.YLQSbar[0,mif4] * self.YLQSbar[mif1,mif3] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQS[0,0] * self.YLQSbar[0,mif4] * self.YLQSbar[mif1,mif3] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQS[0,0] * self.YLQSbar[0,mif4] * self.YLQSbar[mif1,mif3] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQS[0,1] * self.YLQSbar[0,mif4] * self.YLQSbar[mif1,mif3] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQS[0,1] * self.YLQSbar[0,mif4] * self.YLQSbar[mif1,mif3] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQS[0,1] * self.YLQSbar[0,mif4] * self.YLQSbar[mif1,mif3] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQS[0,2] * self.YLQSbar[0,mif4] * self.YLQSbar[mif1,mif3] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQS[0,2] * self.YLQSbar[0,mif4] * self.YLQSbar[mif1,mif3] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQS[0,2] * self.YLQSbar[0,mif4] * self.YLQSbar[mif1,mif3] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQS[1,0] * self.YLQSbar[1,mif4] * self.YLQSbar[mif1,mif3] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQS[1,0] * self.YLQSbar[1,mif4] * self.YLQSbar[mif1,mif3] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQS[1,0] * self.YLQSbar[1,mif4] * self.YLQSbar[mif1,mif3] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQS[1,1] * self.YLQSbar[1,mif4] * self.YLQSbar[mif1,mif3] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQS[1,1] * self.YLQSbar[1,mif4] * self.YLQSbar[mif1,mif3] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQS[1,1] * self.YLQSbar[1,mif4] * self.YLQSbar[mif1,mif3] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQS[1,2] * self.YLQSbar[1,mif4] * self.YLQSbar[mif1,mif3] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQS[1,2] * self.YLQSbar[1,mif4] * self.YLQSbar[mif1,mif3] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQS[1,2] * self.YLQSbar[1,mif4] * self.YLQSbar[mif1,mif3] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQS[2,0] * self.YLQSbar[2,mif4] * self.YLQSbar[mif1,mif3] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,0] * self.YLQS[2,0] * self.YLQSbar[2,mif4] * self.YLQSbar[mif1,mif3] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,0] * self.YLQS[2,0] * self.YLQSbar[2,mif4] * self.YLQSbar[mif1,mif3] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQS[2,1] * self.YLQSbar[2,mif4] * self.YLQSbar[mif1,mif3] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,1] * self.YLQS[2,1] * self.YLQSbar[2,mif4] * self.YLQSbar[mif1,mif3] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,1] * self.YLQS[2,1] * self.YLQSbar[2,mif4] * self.YLQSbar[mif1,mif3] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQS[2,2] * self.YLQSbar[2,mif4] * self.YLQSbar[mif1,mif3] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,2] * self.YLQS[2,2] * self.YLQSbar[2,mif4] * self.YLQSbar[mif1,mif3] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,2] * self.YLQS[2,2] * self.YLQSbar[2,mif4] * self.YLQSbar[mif1,mif3] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[0,0] * self.YLQSbar[mif1,0] * self.YLQSbar[mif3,0] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[0,0] * self.YLQSbar[mif1,0] * self.YLQSbar[mif3,0] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,mif4] * self.YLQS[0,0] * self.YLQSbar[mif1,0] * self.YLQSbar[mif3,0] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[1,0] * self.YLQSbar[mif1,1] * self.YLQSbar[mif3,0] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[1,0] * self.YLQSbar[mif1,1] * self.YLQSbar[mif3,0] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,mif4] * self.YLQS[1,0] * self.YLQSbar[mif1,1] * self.YLQSbar[mif3,0] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[2,0] * self.YLQSbar[mif1,2] * self.YLQSbar[mif3,0] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[2,0] * self.YLQSbar[mif1,2] * self.YLQSbar[mif3,0] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,mif4] * self.YLQS[2,0] * self.YLQSbar[mif1,2] * self.YLQSbar[mif3,0] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[0,1] * self.YLQSbar[mif1,0] * self.YLQSbar[mif3,1] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[0,1] * self.YLQSbar[mif1,0] * self.YLQSbar[mif3,1] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,mif4] * self.YLQS[0,1] * self.YLQSbar[mif1,0] * self.YLQSbar[mif3,1] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[1,1] * self.YLQSbar[mif1,1] * self.YLQSbar[mif3,1] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[1,1] * self.YLQSbar[mif1,1] * self.YLQSbar[mif3,1] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,mif4] * self.YLQS[1,1] * self.YLQSbar[mif1,1] * self.YLQSbar[mif3,1] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[2,1] * self.YLQSbar[mif1,2] * self.YLQSbar[mif3,1] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[2,1] * self.YLQSbar[mif1,2] * self.YLQSbar[mif3,1] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,mif4] * self.YLQS[2,1] * self.YLQSbar[mif1,2] * self.YLQSbar[mif3,1] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[0,2] * self.YLQSbar[mif1,0] * self.YLQSbar[mif3,2] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[0,2] * self.YLQSbar[mif1,0] * self.YLQSbar[mif3,2] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,mif4] * self.YLQS[0,2] * self.YLQSbar[mif1,0] * self.YLQSbar[mif3,2] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[1,2] * self.YLQSbar[mif1,1] * self.YLQSbar[mif3,2] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[1,2] * self.YLQSbar[mif1,1] * self.YLQSbar[mif3,2] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,mif4] * self.YLQS[1,2] * self.YLQSbar[mif1,1] * self.YLQSbar[mif3,2] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[2,2] * self.YLQSbar[mif1,2] * self.YLQSbar[mif3,2] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif2,mif4] * self.YLQS[2,2] * self.YLQSbar[mif1,2] * self.YLQSbar[mif3,2] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif2,mif4] * self.YLQS[2,2] * self.YLQSbar[mif1,2] * self.YLQSbar[mif3,2])

    def alphaOqq1bar(self, mif1,mif2,mif3,mif4):
        return (-1/7680 * (self.g3)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -1/103680 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/11520 * (self.g3)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -25/41472 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/3456 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/1536 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/1152 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + 1/1152 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + 1/2304 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YLQS[0,mif3] * self.YLQSbar[0,mif2] + 1/2304 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YLQS[0,mif1] * self.YLQSbar[0,mif4] + -25/41472 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[0,mif3] * self.YLQSbar[0,mif4] + -1/3456 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[0,mif3] * self.YLQSbar[0,mif4] + -1/1536 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[0,mif3] * self.YLQSbar[0,mif4] + -1/1152 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[0,mif3] * self.YLQSbar[0,mif4] + 1/1152 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif3] * self.YLQSbar[0,mif4] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQS[0,mif3] * self.YLQSbar[0,mif2] * self.YLQSbar[0,mif4] + -25/41472 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/3456 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/1536 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/1152 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + 1/1152 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + 1/2304 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YLQS[1,mif3] * self.YLQSbar[1,mif2] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQS[1,mif3] * self.YLQSbar[0,mif4] * self.YLQSbar[1,mif2] + 1/2304 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YLQS[1,mif1] * self.YLQSbar[1,mif4] + -25/41472 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[1,mif3] * self.YLQSbar[1,mif4] + -1/3456 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[1,mif3] * self.YLQSbar[1,mif4] + -1/1536 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[1,mif3] * self.YLQSbar[1,mif4] + -1/1152 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[1,mif3] * self.YLQSbar[1,mif4] + 1/1152 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif3] * self.YLQSbar[1,mif4] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif3] * self.YLQS[1,mif1] * self.YLQSbar[0,mif2] * self.YLQSbar[1,mif4] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQS[1,mif3] * self.YLQSbar[1,mif2] * self.YLQSbar[1,mif4] + -25/41472 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/3456 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/1536 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/1152 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + 1/1152 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + 1/2304 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YLQS[2,mif3] * self.YLQSbar[2,mif2] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQS[2,mif3] * self.YLQSbar[0,mif4] * self.YLQSbar[2,mif2] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQS[2,mif3] * self.YLQSbar[1,mif4] * self.YLQSbar[2,mif2] + 1/2304 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YLQS[2,mif1] * self.YLQSbar[2,mif4] + -25/41472 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[2,mif3] * self.YLQSbar[2,mif4] + -1/3456 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[2,mif3] * self.YLQSbar[2,mif4] + -1/1536 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[2,mif3] * self.YLQSbar[2,mif4] + -1/1152 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[2,mif3] * self.YLQSbar[2,mif4] + 1/1152 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif3] * self.YLQSbar[2,mif4] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif3] * self.YLQS[2,mif1] * self.YLQSbar[0,mif2] * self.YLQSbar[2,mif4] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif3] * self.YLQS[2,mif1] * self.YLQSbar[1,mif2] * self.YLQSbar[2,mif4] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQS[2,mif3] * self.YLQSbar[2,mif2] * self.YLQSbar[2,mif4])

    def alphaOqq3bar(self, mif1,mif2,mif3,mif4):
        return (-1/7680 * (self.g3)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -7/4608 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/512 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/384 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + 1/384 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + 1/2304 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YLQS[0,mif3] * self.YLQSbar[0,mif2] + 1/2304 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YLQS[0,mif1] * self.YLQSbar[0,mif4] + -7/4608 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[0,mif3] * self.YLQSbar[0,mif4] + -1/512 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[0,mif3] * self.YLQSbar[0,mif4] + -1/384 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[0,mif3] * self.YLQSbar[0,mif4] + 1/384 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif3] * self.YLQSbar[0,mif4] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQS[0,mif3] * self.YLQSbar[0,mif2] * self.YLQSbar[0,mif4] + -7/4608 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/512 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/384 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + 1/384 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + 1/2304 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YLQS[1,mif3] * self.YLQSbar[1,mif2] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQS[1,mif3] * self.YLQSbar[0,mif4] * self.YLQSbar[1,mif2] + 1/2304 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YLQS[1,mif1] * self.YLQSbar[1,mif4] + -7/4608 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[1,mif3] * self.YLQSbar[1,mif4] + -1/512 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[1,mif3] * self.YLQSbar[1,mif4] + -1/384 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[1,mif3] * self.YLQSbar[1,mif4] + 1/384 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif3] * self.YLQSbar[1,mif4] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif3] * self.YLQS[1,mif1] * self.YLQSbar[0,mif2] * self.YLQSbar[1,mif4] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQS[1,mif3] * self.YLQSbar[1,mif2] * self.YLQSbar[1,mif4] + -7/4608 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/512 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/384 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + 1/384 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + 1/2304 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YLQS[2,mif3] * self.YLQSbar[2,mif2] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif1] * self.YLQS[2,mif3] * self.YLQSbar[0,mif4] * self.YLQSbar[2,mif2] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif1] * self.YLQS[2,mif3] * self.YLQSbar[1,mif4] * self.YLQSbar[2,mif2] + 1/2304 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YLQS[2,mif1] * self.YLQSbar[2,mif4] + -7/4608 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[2,mif3] * self.YLQSbar[2,mif4] + -1/512 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[2,mif3] * self.YLQSbar[2,mif4] + -1/384 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[2,mif3] * self.YLQSbar[2,mif4] + 1/384 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif3] * self.YLQSbar[2,mif4] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif3] * self.YLQS[2,mif1] * self.YLQSbar[0,mif2] * self.YLQSbar[2,mif4] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif3] * self.YLQS[2,mif1] * self.YLQSbar[1,mif2] * self.YLQSbar[2,mif4] + -1/256 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif1] * self.YLQS[2,mif3] * self.YLQSbar[2,mif2] * self.YLQSbar[2,mif4])

    def alphaOuubar(self, mif1,mif2,mif3,mif4):
        return (-1/3840 * (self.g3)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -1/6480 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/11520 * (self.g3)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -23/5184 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[0,mif2] * self.YeuSbar[0,mif1] + -1/3456 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[0,mif2] * self.YeuSbar[0,mif1] + -1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[0,mif2] * self.YeuSbar[0,mif1] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[0,mif2] * self.YeuSbar[0,mif1] + 1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.YeuSbar[0,mif1] + 1/1152 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YeuS[0,mif4] * self.YeuSbar[0,mif1] + 1/1152 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YeuS[0,mif2] * self.YeuSbar[0,mif3] + -23/5184 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[0,mif4] * self.YeuSbar[0,mif3] + -1/3456 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[0,mif4] * self.YeuSbar[0,mif3] + -1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[0,mif4] * self.YeuSbar[0,mif3] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[0,mif4] * self.YeuSbar[0,mif3] + 1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif4] * self.YeuSbar[0,mif3] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuS[0,mif4] * self.YeuSbar[0,mif1] * self.YeuSbar[0,mif3] + -23/5184 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[1,mif2] * self.YeuSbar[1,mif1] + -1/3456 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[1,mif2] * self.YeuSbar[1,mif1] + -1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[1,mif2] * self.YeuSbar[1,mif1] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[1,mif2] * self.YeuSbar[1,mif1] + 1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.YeuSbar[1,mif1] + 1/1152 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YeuS[1,mif4] * self.YeuSbar[1,mif1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuS[1,mif4] * self.YeuSbar[0,mif3] * self.YeuSbar[1,mif1] + 1/1152 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YeuS[1,mif2] * self.YeuSbar[1,mif3] + -23/5184 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[1,mif4] * self.YeuSbar[1,mif3] + -1/3456 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[1,mif4] * self.YeuSbar[1,mif3] + -1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[1,mif4] * self.YeuSbar[1,mif3] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[1,mif4] * self.YeuSbar[1,mif3] + 1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif4] * self.YeuSbar[1,mif3] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuS[1,mif2] * self.YeuSbar[0,mif1] * self.YeuSbar[1,mif3] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuS[1,mif4] * self.YeuSbar[1,mif1] * self.YeuSbar[1,mif3] + -23/5184 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[2,mif2] * self.YeuSbar[2,mif1] + -1/3456 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[2,mif2] * self.YeuSbar[2,mif1] + -1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[2,mif2] * self.YeuSbar[2,mif1] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[2,mif2] * self.YeuSbar[2,mif1] + 1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.YeuSbar[2,mif1] + 1/1152 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YeuS[2,mif4] * self.YeuSbar[2,mif1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif2] * self.YeuS[2,mif4] * self.YeuSbar[0,mif3] * self.YeuSbar[2,mif1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif2] * self.YeuS[2,mif4] * self.YeuSbar[1,mif3] * self.YeuSbar[2,mif1] + 1/1152 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YeuS[2,mif2] * self.YeuSbar[2,mif3] + -23/5184 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[2,mif4] * self.YeuSbar[2,mif3] + -1/3456 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[2,mif4] * self.YeuSbar[2,mif3] + -1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[2,mif4] * self.YeuSbar[2,mif3] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[2,mif4] * self.YeuSbar[2,mif3] + 1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif4] * self.YeuSbar[2,mif3] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuS[2,mif2] * self.YeuSbar[0,mif1] * self.YeuSbar[2,mif3] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuS[2,mif2] * self.YeuSbar[1,mif1] * self.YeuSbar[2,mif3] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif2] * self.YeuS[2,mif4] * self.YeuSbar[2,mif1] * self.YeuSbar[2,mif3])

    def alphaOddbar(self, mif1,mif2,mif3,mif4):
        return (-1/3840 * (self.g3)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -1/25920 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/11520 * (self.g3)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4))

    def alphaOud1bar(self, mif1,mif2,mif3,mif4):
        return (1/6480 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 23/5184 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[0,mif2] * self.YeuSbar[0,mif1] + 1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[0,mif2] * self.YeuSbar[0,mif1] + 1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[0,mif2] * self.YeuSbar[0,mif1] + -1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif2] * self.YeuSbar[0,mif1] + 23/5184 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[1,mif2] * self.YeuSbar[1,mif1] + 1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[1,mif2] * self.YeuSbar[1,mif1] + 1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[1,mif2] * self.YeuSbar[1,mif1] + -1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif2] * self.YeuSbar[1,mif1] + 23/5184 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[2,mif2] * self.YeuSbar[2,mif1] + 1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[2,mif2] * self.YeuSbar[2,mif1] + 1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[2,mif2] * self.YeuSbar[2,mif1] + -1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif2] * self.YeuSbar[2,mif1])

    def alphaOud8bar(self, mif1,mif2,mif3,mif4):
        return (-1/960 * (self.g3)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/288 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[0,mif2] * self.YeuSbar[0,mif1] + 1/288 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[1,mif2] * self.YeuSbar[1,mif1] + 1/288 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[2,mif2] * self.YeuSbar[2,mif1])

    def alphaOqu1bar(self, mif1,mif2,mif3,mif4):
        return (-1/12960 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -23/10368 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[0,mif4] * self.YeuSbar[0,mif3] + -1/384 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[0,mif4] * self.YeuSbar[0,mif3] + -1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[0,mif4] * self.YeuSbar[0,mif3] + 1/288 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif4] * self.YeuSbar[0,mif3] + -23/10368 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[1,mif4] * self.YeuSbar[1,mif3] + -1/384 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[1,mif4] * self.YeuSbar[1,mif3] + -1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[1,mif4] * self.YeuSbar[1,mif3] + 1/288 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif4] * self.YeuSbar[1,mif3] + -23/10368 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[2,mif4] * self.YeuSbar[2,mif3] + -1/384 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[2,mif4] * self.YeuSbar[2,mif3] + -1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[2,mif4] * self.YeuSbar[2,mif3] + 1/288 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif4] * self.YeuSbar[2,mif3] + -25/5184 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + 1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuSbar[0,mif3] * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuSbar[1,mif3] * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuSbar[2,mif3] * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -25/5184 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + 1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuSbar[0,mif3] * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuSbar[1,mif3] * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuSbar[2,mif3] * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -25/5184 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + 1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuSbar[0,mif3] * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuSbar[1,mif3] * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuSbar[2,mif3] * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.yl[0,0] * self.YLQS[0,mif1] * self.yu[mif2,mif3] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.yl[0,0] * self.YLQS[0,mif1] * self.yu[mif2,mif3] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif4] * self.yl[0,0] * self.YLQS[0,mif1] * self.yu[mif2,mif3] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.yl[0,1] * self.YLQS[0,mif1] * self.yu[mif2,mif3] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.yl[0,1] * self.YLQS[0,mif1] * self.yu[mif2,mif3] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif4] * self.yl[0,1] * self.YLQS[0,mif1] * self.yu[mif2,mif3] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.yl[0,2] * self.YLQS[0,mif1] * self.yu[mif2,mif3] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.yl[0,2] * self.YLQS[0,mif1] * self.yu[mif2,mif3] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif4] * self.yl[0,2] * self.YLQS[0,mif1] * self.yu[mif2,mif3] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.yl[1,0] * self.YLQS[1,mif1] * self.yu[mif2,mif3] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.yl[1,0] * self.YLQS[1,mif1] * self.yu[mif2,mif3] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif4] * self.yl[1,0] * self.YLQS[1,mif1] * self.yu[mif2,mif3] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.yl[1,1] * self.YLQS[1,mif1] * self.yu[mif2,mif3] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.yl[1,1] * self.YLQS[1,mif1] * self.yu[mif2,mif3] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif4] * self.yl[1,1] * self.YLQS[1,mif1] * self.yu[mif2,mif3] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.yl[1,2] * self.YLQS[1,mif1] * self.yu[mif2,mif3] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.yl[1,2] * self.YLQS[1,mif1] * self.yu[mif2,mif3] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif4] * self.yl[1,2] * self.YLQS[1,mif1] * self.yu[mif2,mif3] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.yl[2,0] * self.YLQS[2,mif1] * self.yu[mif2,mif3] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.yl[2,0] * self.YLQS[2,mif1] * self.yu[mif2,mif3] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif4] * self.yl[2,0] * self.YLQS[2,mif1] * self.yu[mif2,mif3] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.yl[2,1] * self.YLQS[2,mif1] * self.yu[mif2,mif3] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.yl[2,1] * self.YLQS[2,mif1] * self.yu[mif2,mif3] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif4] * self.yl[2,1] * self.YLQS[2,mif1] * self.yu[mif2,mif3] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.yl[2,2] * self.YLQS[2,mif1] * self.yu[mif2,mif3] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.yl[2,2] * self.YLQS[2,mif1] * self.yu[mif2,mif3] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif4] * self.yl[2,2] * self.YLQS[2,mif1] * self.yu[mif2,mif3] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif3] * self.ylbar[0,0] * self.YLQSbar[0,mif2] * self.yubar[mif1,mif4] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif3] * self.ylbar[0,0] * self.YLQSbar[0,mif2] * self.yubar[mif1,mif4] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif3] * self.ylbar[0,0] * self.YLQSbar[0,mif2] * self.yubar[mif1,mif4] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif3] * self.ylbar[0,1] * self.YLQSbar[0,mif2] * self.yubar[mif1,mif4] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif3] * self.ylbar[0,1] * self.YLQSbar[0,mif2] * self.yubar[mif1,mif4] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif3] * self.ylbar[0,1] * self.YLQSbar[0,mif2] * self.yubar[mif1,mif4] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif3] * self.ylbar[0,2] * self.YLQSbar[0,mif2] * self.yubar[mif1,mif4] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif3] * self.ylbar[0,2] * self.YLQSbar[0,mif2] * self.yubar[mif1,mif4] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif3] * self.ylbar[0,2] * self.YLQSbar[0,mif2] * self.yubar[mif1,mif4] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif3] * self.ylbar[1,0] * self.YLQSbar[1,mif2] * self.yubar[mif1,mif4] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif3] * self.ylbar[1,0] * self.YLQSbar[1,mif2] * self.yubar[mif1,mif4] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif3] * self.ylbar[1,0] * self.YLQSbar[1,mif2] * self.yubar[mif1,mif4] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif3] * self.ylbar[1,1] * self.YLQSbar[1,mif2] * self.yubar[mif1,mif4] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif3] * self.ylbar[1,1] * self.YLQSbar[1,mif2] * self.yubar[mif1,mif4] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif3] * self.ylbar[1,1] * self.YLQSbar[1,mif2] * self.yubar[mif1,mif4] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif3] * self.ylbar[1,2] * self.YLQSbar[1,mif2] * self.yubar[mif1,mif4] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif3] * self.ylbar[1,2] * self.YLQSbar[1,mif2] * self.yubar[mif1,mif4] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif3] * self.ylbar[1,2] * self.YLQSbar[1,mif2] * self.yubar[mif1,mif4] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif3] * self.ylbar[2,0] * self.YLQSbar[2,mif2] * self.yubar[mif1,mif4] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif3] * self.ylbar[2,0] * self.YLQSbar[2,mif2] * self.yubar[mif1,mif4] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif3] * self.ylbar[2,0] * self.YLQSbar[2,mif2] * self.yubar[mif1,mif4] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif3] * self.ylbar[2,1] * self.YLQSbar[2,mif2] * self.yubar[mif1,mif4] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif3] * self.ylbar[2,1] * self.YLQSbar[2,mif2] * self.yubar[mif1,mif4] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif3] * self.ylbar[2,1] * self.YLQSbar[2,mif2] * self.yubar[mif1,mif4] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif3] * self.ylbar[2,2] * self.YLQSbar[2,mif2] * self.yubar[mif1,mif4] + -1/192 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif3] * self.ylbar[2,2] * self.YLQSbar[2,mif2] * self.yubar[mif1,mif4] + 1/192 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif3] * self.ylbar[2,2] * self.YLQSbar[2,mif2] * self.yubar[mif1,mif4])

    def alphaOqu8bar(self, mif1,mif2,mif3,mif4):
        return (-1/960 * (self.g3)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/288 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[0,mif4] * self.YeuSbar[0,mif3] + 1/288 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[1,mif4] * self.YeuSbar[1,mif3] + 1/288 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[2,mif4] * self.YeuSbar[2,mif3] + 1/288 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuSbar[0,mif3] * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuSbar[1,mif3] * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuSbar[2,mif3] * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + 1/288 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuSbar[0,mif3] * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuSbar[1,mif3] * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuSbar[2,mif3] * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + 1/288 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuSbar[0,mif3] * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuSbar[1,mif3] * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuSbar[2,mif3] * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.yl[0,0] * self.YLQS[0,mif1] * self.yu[mif2,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.yl[0,0] * self.YLQS[0,mif1] * self.yu[mif2,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif4] * self.yl[0,0] * self.YLQS[0,mif1] * self.yu[mif2,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.yl[0,1] * self.YLQS[0,mif1] * self.yu[mif2,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.yl[0,1] * self.YLQS[0,mif1] * self.yu[mif2,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif4] * self.yl[0,1] * self.YLQS[0,mif1] * self.yu[mif2,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.yl[0,2] * self.YLQS[0,mif1] * self.yu[mif2,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.yl[0,2] * self.YLQS[0,mif1] * self.yu[mif2,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif4] * self.yl[0,2] * self.YLQS[0,mif1] * self.yu[mif2,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.yl[1,0] * self.YLQS[1,mif1] * self.yu[mif2,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.yl[1,0] * self.YLQS[1,mif1] * self.yu[mif2,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif4] * self.yl[1,0] * self.YLQS[1,mif1] * self.yu[mif2,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.yl[1,1] * self.YLQS[1,mif1] * self.yu[mif2,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.yl[1,1] * self.YLQS[1,mif1] * self.yu[mif2,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif4] * self.yl[1,1] * self.YLQS[1,mif1] * self.yu[mif2,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.yl[1,2] * self.YLQS[1,mif1] * self.yu[mif2,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.yl[1,2] * self.YLQS[1,mif1] * self.yu[mif2,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif4] * self.yl[1,2] * self.YLQS[1,mif1] * self.yu[mif2,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.yl[2,0] * self.YLQS[2,mif1] * self.yu[mif2,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.yl[2,0] * self.YLQS[2,mif1] * self.yu[mif2,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif4] * self.yl[2,0] * self.YLQS[2,mif1] * self.yu[mif2,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.yl[2,1] * self.YLQS[2,mif1] * self.yu[mif2,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.yl[2,1] * self.YLQS[2,mif1] * self.yu[mif2,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif4] * self.yl[2,1] * self.YLQS[2,mif1] * self.yu[mif2,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.yl[2,2] * self.YLQS[2,mif1] * self.yu[mif2,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.yl[2,2] * self.YLQS[2,mif1] * self.yu[mif2,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif4] * self.yl[2,2] * self.YLQS[2,mif1] * self.yu[mif2,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif3] * self.ylbar[0,0] * self.YLQSbar[0,mif2] * self.yubar[mif1,mif4] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif3] * self.ylbar[0,0] * self.YLQSbar[0,mif2] * self.yubar[mif1,mif4] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif3] * self.ylbar[0,0] * self.YLQSbar[0,mif2] * self.yubar[mif1,mif4] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif3] * self.ylbar[0,1] * self.YLQSbar[0,mif2] * self.yubar[mif1,mif4] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif3] * self.ylbar[0,1] * self.YLQSbar[0,mif2] * self.yubar[mif1,mif4] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif3] * self.ylbar[0,1] * self.YLQSbar[0,mif2] * self.yubar[mif1,mif4] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif3] * self.ylbar[0,2] * self.YLQSbar[0,mif2] * self.yubar[mif1,mif4] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif3] * self.ylbar[0,2] * self.YLQSbar[0,mif2] * self.yubar[mif1,mif4] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif3] * self.ylbar[0,2] * self.YLQSbar[0,mif2] * self.yubar[mif1,mif4] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif3] * self.ylbar[1,0] * self.YLQSbar[1,mif2] * self.yubar[mif1,mif4] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif3] * self.ylbar[1,0] * self.YLQSbar[1,mif2] * self.yubar[mif1,mif4] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif3] * self.ylbar[1,0] * self.YLQSbar[1,mif2] * self.yubar[mif1,mif4] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif3] * self.ylbar[1,1] * self.YLQSbar[1,mif2] * self.yubar[mif1,mif4] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif3] * self.ylbar[1,1] * self.YLQSbar[1,mif2] * self.yubar[mif1,mif4] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif3] * self.ylbar[1,1] * self.YLQSbar[1,mif2] * self.yubar[mif1,mif4] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif3] * self.ylbar[1,2] * self.YLQSbar[1,mif2] * self.yubar[mif1,mif4] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif3] * self.ylbar[1,2] * self.YLQSbar[1,mif2] * self.yubar[mif1,mif4] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif3] * self.ylbar[1,2] * self.YLQSbar[1,mif2] * self.yubar[mif1,mif4] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif3] * self.ylbar[2,0] * self.YLQSbar[2,mif2] * self.yubar[mif1,mif4] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif3] * self.ylbar[2,0] * self.YLQSbar[2,mif2] * self.yubar[mif1,mif4] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif3] * self.ylbar[2,0] * self.YLQSbar[2,mif2] * self.yubar[mif1,mif4] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif3] * self.ylbar[2,1] * self.YLQSbar[2,mif2] * self.yubar[mif1,mif4] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif3] * self.ylbar[2,1] * self.YLQSbar[2,mif2] * self.yubar[mif1,mif4] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif3] * self.ylbar[2,1] * self.YLQSbar[2,mif2] * self.yubar[mif1,mif4] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif3] * self.ylbar[2,2] * self.YLQSbar[2,mif2] * self.yubar[mif1,mif4] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif3] * self.ylbar[2,2] * self.YLQSbar[2,mif2] * self.yubar[mif1,mif4] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif3] * self.ylbar[2,2] * self.YLQSbar[2,mif2] * self.yubar[mif1,mif4])

    def alphaOqd1bar(self, mif1,mif2,mif3,mif4):
        return (1/25920 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 25/10368 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + 1/384 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + 1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/288 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + 25/10368 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + 1/384 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + 1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/288 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + 25/10368 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + 1/384 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + 1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/288 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif1] * self.YLQSbar[2,mif2])

    def alphaOqd8bar(self, mif1,mif2,mif3,mif4):
        return (-1/960 * (self.g3)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/288 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + 1/288 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + 1/288 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif1] * self.YLQSbar[2,mif2])

    def alphaOquqd1bar(self, mif1,mif2,mif3,mif4):
        return (3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif3,mif4] * self.YeuS[0,mif2] * self.yl[0,0] * self.YLQS[0,mif1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif3,mif4] * self.YeuS[0,mif2] * self.yl[0,0] * self.YLQS[0,mif1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[mif3,mif4] * self.YeuS[0,mif2] * self.yl[0,0] * self.YLQS[0,mif1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif3,mif4] * self.YeuS[1,mif2] * self.yl[0,1] * self.YLQS[0,mif1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif3,mif4] * self.YeuS[1,mif2] * self.yl[0,1] * self.YLQS[0,mif1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[mif3,mif4] * self.YeuS[1,mif2] * self.yl[0,1] * self.YLQS[0,mif1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif3,mif4] * self.YeuS[2,mif2] * self.yl[0,2] * self.YLQS[0,mif1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif3,mif4] * self.YeuS[2,mif2] * self.yl[0,2] * self.YLQS[0,mif1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[mif3,mif4] * self.YeuS[2,mif2] * self.yl[0,2] * self.YLQS[0,mif1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif3,mif4] * self.YeuS[0,mif2] * self.yl[1,0] * self.YLQS[1,mif1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif3,mif4] * self.YeuS[0,mif2] * self.yl[1,0] * self.YLQS[1,mif1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[mif3,mif4] * self.YeuS[0,mif2] * self.yl[1,0] * self.YLQS[1,mif1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif3,mif4] * self.YeuS[1,mif2] * self.yl[1,1] * self.YLQS[1,mif1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif3,mif4] * self.YeuS[1,mif2] * self.yl[1,1] * self.YLQS[1,mif1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[mif3,mif4] * self.YeuS[1,mif2] * self.yl[1,1] * self.YLQS[1,mif1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif3,mif4] * self.YeuS[2,mif2] * self.yl[1,2] * self.YLQS[1,mif1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif3,mif4] * self.YeuS[2,mif2] * self.yl[1,2] * self.YLQS[1,mif1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[mif3,mif4] * self.YeuS[2,mif2] * self.yl[1,2] * self.YLQS[1,mif1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif3,mif4] * self.YeuS[0,mif2] * self.yl[2,0] * self.YLQS[2,mif1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif3,mif4] * self.YeuS[0,mif2] * self.yl[2,0] * self.YLQS[2,mif1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[mif3,mif4] * self.YeuS[0,mif2] * self.yl[2,0] * self.YLQS[2,mif1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif3,mif4] * self.YeuS[1,mif2] * self.yl[2,1] * self.YLQS[2,mif1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif3,mif4] * self.YeuS[1,mif2] * self.yl[2,1] * self.YLQS[2,mif1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[mif3,mif4] * self.YeuS[1,mif2] * self.yl[2,1] * self.YLQS[2,mif1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif3,mif4] * self.YeuS[2,mif2] * self.yl[2,2] * self.YLQS[2,mif1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif3,mif4] * self.YeuS[2,mif2] * self.yl[2,2] * self.YLQS[2,mif1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.ydbar[mif3,mif4] * self.YeuS[2,mif2] * self.yl[2,2] * self.YLQS[2,mif1])

    def alphaOquqd8bar(self, mif1,mif2,mif3,mif4):
        return 0

    def alphaOllbar(self, mif1,mif2,mif3,mif4):
        return (-1/11520 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -1/1536 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + 7/1536 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -1/512 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + 3/512 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -1/384 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + 1/128 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + 1/384 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -1/128 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -7/768 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YLQS[mif3,0] * self.YLQSbar[mif2,0] + -3/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YLQS[mif3,0] * self.YLQSbar[mif2,0] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YLQS[mif3,0] * self.YLQSbar[mif2,0] + 1/64 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif3,0] * self.YLQSbar[mif2,0] + -1/1536 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + 7/1536 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -1/512 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + 3/512 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -1/384 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + 1/128 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + 1/384 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -1/128 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -7/768 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YLQS[mif3,1] * self.YLQSbar[mif2,1] + -3/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YLQS[mif3,1] * self.YLQSbar[mif2,1] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YLQS[mif3,1] * self.YLQSbar[mif2,1] + 1/64 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif3,1] * self.YLQSbar[mif2,1] + -1/1536 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + 7/1536 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -1/512 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + 3/512 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -1/384 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + 1/128 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + 1/384 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -1/128 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -7/768 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YLQS[mif3,2] * self.YLQSbar[mif2,2] + -3/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YLQS[mif3,2] * self.YLQSbar[mif2,2] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.YLQS[mif3,2] * self.YLQSbar[mif2,2] + 1/64 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif3,2] * self.YLQSbar[mif2,2] + -7/768 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YLQS[mif1,0] * self.YLQSbar[mif4,0] + -3/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YLQS[mif1,0] * self.YLQSbar[mif4,0] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YLQS[mif1,0] * self.YLQSbar[mif4,0] + 1/64 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,0] * self.YLQSbar[mif4,0] + -1/1536 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif3,0] * self.YLQSbar[mif4,0] + 7/1536 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif3,0] * self.YLQSbar[mif4,0] + -1/512 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif3,0] * self.YLQSbar[mif4,0] + 3/512 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif3,0] * self.YLQSbar[mif4,0] + -1/384 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif3,0] * self.YLQSbar[mif4,0] + 1/128 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif3,0] * self.YLQSbar[mif4,0] + 1/384 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif3,0] * self.YLQSbar[mif4,0] + -1/128 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif3,0] * self.YLQSbar[mif4,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQS[mif3,0] * self.YLQSbar[mif2,0] * self.YLQSbar[mif4,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQS[mif3,0] * self.YLQSbar[mif2,1] * self.YLQSbar[mif4,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQS[mif3,0] * self.YLQSbar[mif2,2] * self.YLQSbar[mif4,0] + -7/768 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YLQS[mif1,1] * self.YLQSbar[mif4,1] + -3/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YLQS[mif1,1] * self.YLQSbar[mif4,1] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YLQS[mif1,1] * self.YLQSbar[mif4,1] + 1/64 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,1] * self.YLQSbar[mif4,1] + -1/1536 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif3,1] * self.YLQSbar[mif4,1] + 7/1536 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif3,1] * self.YLQSbar[mif4,1] + -1/512 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif3,1] * self.YLQSbar[mif4,1] + 3/512 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif3,1] * self.YLQSbar[mif4,1] + -1/384 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif3,1] * self.YLQSbar[mif4,1] + 1/128 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif3,1] * self.YLQSbar[mif4,1] + 1/384 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif3,1] * self.YLQSbar[mif4,1] + -1/128 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif3,1] * self.YLQSbar[mif4,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQS[mif3,1] * self.YLQSbar[mif2,0] * self.YLQSbar[mif4,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQS[mif3,1] * self.YLQSbar[mif2,1] * self.YLQSbar[mif4,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQS[mif3,1] * self.YLQSbar[mif2,2] * self.YLQSbar[mif4,1] + -7/768 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YLQS[mif1,2] * self.YLQSbar[mif4,2] + -3/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YLQS[mif1,2] * self.YLQSbar[mif4,2] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.YLQS[mif1,2] * self.YLQSbar[mif4,2] + 1/64 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,2] * self.YLQSbar[mif4,2] + -1/1536 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif3,2] * self.YLQSbar[mif4,2] + 7/1536 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif3,2] * self.YLQSbar[mif4,2] + -1/512 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif3,2] * self.YLQSbar[mif4,2] + 3/512 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif3,2] * self.YLQSbar[mif4,2] + -1/384 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif3,2] * self.YLQSbar[mif4,2] + 1/128 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[mif3,2] * self.YLQSbar[mif4,2] + 1/384 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif3,2] * self.YLQSbar[mif4,2] + -1/128 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif3,2] * self.YLQSbar[mif4,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQS[mif3,2] * self.YLQSbar[mif2,0] * self.YLQSbar[mif4,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQS[mif3,2] * self.YLQSbar[mif2,1] * self.YLQSbar[mif4,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQS[mif3,2] * self.YLQSbar[mif2,2] * self.YLQSbar[mif4,2])

    def alphaOeebar(self, mif1,mif2,mif3,mif4):
        return (-1/2880 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif2,0] * self.YeuSbar[mif1,0] + -1/64 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif2,0] * self.YeuSbar[mif1,0] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif2,0] * self.YeuSbar[mif1,0] + 1/48 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YeuSbar[mif1,0] + -1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif2,1] * self.YeuSbar[mif1,1] + -1/64 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif2,1] * self.YeuSbar[mif1,1] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif2,1] * self.YeuSbar[mif1,1] + 1/48 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YeuSbar[mif1,1] + -1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif2,2] * self.YeuSbar[mif1,2] + -1/64 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif2,2] * self.YeuSbar[mif1,2] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif2,2] * self.YeuSbar[mif1,2] + 1/48 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YeuSbar[mif1,2] + -1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif4,0] * self.YeuSbar[mif3,0] + -1/64 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif4,0] * self.YeuSbar[mif3,0] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif4,0] * self.YeuSbar[mif3,0] + 1/48 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,0] * self.YeuSbar[mif3,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuS[mif4,0] * self.YeuSbar[mif1,0] * self.YeuSbar[mif3,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuS[mif4,0] * self.YeuSbar[mif1,1] * self.YeuSbar[mif3,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuS[mif4,0] * self.YeuSbar[mif1,2] * self.YeuSbar[mif3,0] + -1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif4,1] * self.YeuSbar[mif3,1] + -1/64 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif4,1] * self.YeuSbar[mif3,1] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif4,1] * self.YeuSbar[mif3,1] + 1/48 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,1] * self.YeuSbar[mif3,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuS[mif4,1] * self.YeuSbar[mif1,0] * self.YeuSbar[mif3,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuS[mif4,1] * self.YeuSbar[mif1,1] * self.YeuSbar[mif3,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuS[mif4,1] * self.YeuSbar[mif1,2] * self.YeuSbar[mif3,1] + -1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif4,2] * self.YeuSbar[mif3,2] + -1/64 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif4,2] * self.YeuSbar[mif3,2] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif4,2] * self.YeuSbar[mif3,2] + 1/48 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,2] * self.YeuSbar[mif3,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YeuS[mif4,2] * self.YeuSbar[mif1,0] * self.YeuSbar[mif3,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YeuS[mif4,2] * self.YeuSbar[mif1,1] * self.YeuSbar[mif3,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YeuS[mif4,2] * self.YeuSbar[mif1,2] * self.YeuSbar[mif3,2])

    def alphaOlebar(self, mif1,mif2,mif3,mif4):
        return (-1/2880 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif4,0] * self.YeuSbar[mif3,0] + -1/64 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif4,0] * self.YeuSbar[mif3,0] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif4,0] * self.YeuSbar[mif3,0] + 1/48 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,0] * self.YeuSbar[mif3,0] + -1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif4,1] * self.YeuSbar[mif3,1] + -1/64 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif4,1] * self.YeuSbar[mif3,1] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif4,1] * self.YeuSbar[mif3,1] + 1/48 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,1] * self.YeuSbar[mif3,1] + -1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif4,2] * self.YeuSbar[mif3,2] + -1/64 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif4,2] * self.YeuSbar[mif3,2] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif4,2] * self.YeuSbar[mif3,2] + 1/48 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,2] * self.YeuSbar[mif3,2] + -1/384 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -1/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + 1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,0] * self.YeuSbar[mif3,0] * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,1] * self.YeuSbar[mif3,1] * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,2] * self.YeuSbar[mif3,2] * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -1/384 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -1/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + 1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,0] * self.YeuSbar[mif3,0] * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,1] * self.YeuSbar[mif3,1] * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,2] * self.YeuSbar[mif3,2] * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -1/384 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -1/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + 1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,0] * self.YeuSbar[mif3,0] * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,1] * self.YeuSbar[mif3,1] * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,2] * self.YeuSbar[mif3,2] * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,0] * self.yl[mif2,mif3] * self.YLQS[mif1,0] * self.yu[0,0] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,0] * self.yl[mif2,mif3] * self.YLQS[mif1,0] * self.yu[0,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,0] * self.yl[mif2,mif3] * self.YLQS[mif1,0] * self.yu[0,0] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,1] * self.yl[mif2,mif3] * self.YLQS[mif1,0] * self.yu[0,1] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,1] * self.yl[mif2,mif3] * self.YLQS[mif1,0] * self.yu[0,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,1] * self.yl[mif2,mif3] * self.YLQS[mif1,0] * self.yu[0,1] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,2] * self.yl[mif2,mif3] * self.YLQS[mif1,0] * self.yu[0,2] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,2] * self.yl[mif2,mif3] * self.YLQS[mif1,0] * self.yu[0,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,2] * self.yl[mif2,mif3] * self.YLQS[mif1,0] * self.yu[0,2] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,0] * self.yl[mif2,mif3] * self.YLQS[mif1,1] * self.yu[1,0] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,0] * self.yl[mif2,mif3] * self.YLQS[mif1,1] * self.yu[1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,0] * self.yl[mif2,mif3] * self.YLQS[mif1,1] * self.yu[1,0] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,1] * self.yl[mif2,mif3] * self.YLQS[mif1,1] * self.yu[1,1] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,1] * self.yl[mif2,mif3] * self.YLQS[mif1,1] * self.yu[1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,1] * self.yl[mif2,mif3] * self.YLQS[mif1,1] * self.yu[1,1] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,2] * self.yl[mif2,mif3] * self.YLQS[mif1,1] * self.yu[1,2] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,2] * self.yl[mif2,mif3] * self.YLQS[mif1,1] * self.yu[1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,2] * self.yl[mif2,mif3] * self.YLQS[mif1,1] * self.yu[1,2] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,0] * self.yl[mif2,mif3] * self.YLQS[mif1,2] * self.yu[2,0] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,0] * self.yl[mif2,mif3] * self.YLQS[mif1,2] * self.yu[2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,0] * self.yl[mif2,mif3] * self.YLQS[mif1,2] * self.yu[2,0] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,1] * self.yl[mif2,mif3] * self.YLQS[mif1,2] * self.yu[2,1] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,1] * self.yl[mif2,mif3] * self.YLQS[mif1,2] * self.yu[2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,1] * self.yl[mif2,mif3] * self.YLQS[mif1,2] * self.yu[2,1] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,2] * self.yl[mif2,mif3] * self.YLQS[mif1,2] * self.yu[2,2] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,2] * self.yl[mif2,mif3] * self.YLQS[mif1,2] * self.yu[2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,2] * self.yl[mif2,mif3] * self.YLQS[mif1,2] * self.yu[2,2] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,0] * self.ylbar[mif1,mif4] * self.YLQSbar[mif2,0] * self.yubar[0,0] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,0] * self.ylbar[mif1,mif4] * self.YLQSbar[mif2,0] * self.yubar[0,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif3,0] * self.ylbar[mif1,mif4] * self.YLQSbar[mif2,0] * self.yubar[0,0] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,1] * self.ylbar[mif1,mif4] * self.YLQSbar[mif2,0] * self.yubar[0,1] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,1] * self.ylbar[mif1,mif4] * self.YLQSbar[mif2,0] * self.yubar[0,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif3,1] * self.ylbar[mif1,mif4] * self.YLQSbar[mif2,0] * self.yubar[0,1] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,2] * self.ylbar[mif1,mif4] * self.YLQSbar[mif2,0] * self.yubar[0,2] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,2] * self.ylbar[mif1,mif4] * self.YLQSbar[mif2,0] * self.yubar[0,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif3,2] * self.ylbar[mif1,mif4] * self.YLQSbar[mif2,0] * self.yubar[0,2] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,0] * self.ylbar[mif1,mif4] * self.YLQSbar[mif2,1] * self.yubar[1,0] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,0] * self.ylbar[mif1,mif4] * self.YLQSbar[mif2,1] * self.yubar[1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif3,0] * self.ylbar[mif1,mif4] * self.YLQSbar[mif2,1] * self.yubar[1,0] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,1] * self.ylbar[mif1,mif4] * self.YLQSbar[mif2,1] * self.yubar[1,1] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,1] * self.ylbar[mif1,mif4] * self.YLQSbar[mif2,1] * self.yubar[1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif3,1] * self.ylbar[mif1,mif4] * self.YLQSbar[mif2,1] * self.yubar[1,1] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,2] * self.ylbar[mif1,mif4] * self.YLQSbar[mif2,1] * self.yubar[1,2] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,2] * self.ylbar[mif1,mif4] * self.YLQSbar[mif2,1] * self.yubar[1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif3,2] * self.ylbar[mif1,mif4] * self.YLQSbar[mif2,1] * self.yubar[1,2] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,0] * self.ylbar[mif1,mif4] * self.YLQSbar[mif2,2] * self.yubar[2,0] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,0] * self.ylbar[mif1,mif4] * self.YLQSbar[mif2,2] * self.yubar[2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif3,0] * self.ylbar[mif1,mif4] * self.YLQSbar[mif2,2] * self.yubar[2,0] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,1] * self.ylbar[mif1,mif4] * self.YLQSbar[mif2,2] * self.yubar[2,1] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,1] * self.ylbar[mif1,mif4] * self.YLQSbar[mif2,2] * self.yubar[2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif3,1] * self.ylbar[mif1,mif4] * self.YLQSbar[mif2,2] * self.yubar[2,1] + -9/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,2] * self.ylbar[mif1,mif4] * self.YLQSbar[mif2,2] * self.yubar[2,2] + -3/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,2] * self.ylbar[mif1,mif4] * self.YLQSbar[mif2,2] * self.yubar[2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif3,2] * self.ylbar[mif1,mif4] * self.YLQSbar[mif2,2] * self.yubar[2,2])

    def alphaOlq1bar(self, mif1,mif2,mif3,mif4):
        return (1/17280 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 25/6912 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[0,mif3] * self.YLQSbar[0,mif4] + 1/256 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[0,mif3] * self.YLQSbar[0,mif4] + 1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[0,mif3] * self.YLQSbar[0,mif4] + -1/192 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif3] * self.YLQSbar[0,mif4] + 25/6912 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[1,mif3] * self.YLQSbar[1,mif4] + 1/256 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[1,mif3] * self.YLQSbar[1,mif4] + 1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[1,mif3] * self.YLQSbar[1,mif4] + -1/192 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif3] * self.YLQSbar[1,mif4] + 25/6912 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[2,mif3] * self.YLQSbar[2,mif4] + 1/256 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[2,mif3] * self.YLQSbar[2,mif4] + 1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[2,mif3] * self.YLQSbar[2,mif4] + -1/192 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif3] * self.YLQSbar[2,mif4] + 1/2304 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + 1/768 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -1/576 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif3] * self.YLQS[mif1,0] * self.YLQSbar[0,mif4] * self.YLQSbar[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQS[mif1,mif3] * self.YLQSbar[0,mif4] * self.YLQSbar[mif2,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQS[mif1,mif3] * self.YLQSbar[0,mif4] * self.YLQSbar[mif2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,0] * self.YLQS[mif1,mif3] * self.YLQSbar[0,mif4] * self.YLQSbar[mif2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif3] * self.YLQS[mif1,0] * self.YLQSbar[1,mif4] * self.YLQSbar[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQS[mif1,mif3] * self.YLQSbar[1,mif4] * self.YLQSbar[mif2,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQS[mif1,mif3] * self.YLQSbar[1,mif4] * self.YLQSbar[mif2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,0] * self.YLQS[mif1,mif3] * self.YLQSbar[1,mif4] * self.YLQSbar[mif2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif3] * self.YLQS[mif1,0] * self.YLQSbar[2,mif4] * self.YLQSbar[mif2,0] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQS[mif1,mif3] * self.YLQSbar[2,mif4] * self.YLQSbar[mif2,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQS[mif1,mif3] * self.YLQSbar[2,mif4] * self.YLQSbar[mif2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,0] * self.YLQS[mif1,mif3] * self.YLQSbar[2,mif4] * self.YLQSbar[mif2,0] + 1/2304 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + 1/768 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -1/576 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif3] * self.YLQS[mif1,1] * self.YLQSbar[0,mif4] * self.YLQSbar[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQS[mif1,mif3] * self.YLQSbar[0,mif4] * self.YLQSbar[mif2,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQS[mif1,mif3] * self.YLQSbar[0,mif4] * self.YLQSbar[mif2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,1] * self.YLQS[mif1,mif3] * self.YLQSbar[0,mif4] * self.YLQSbar[mif2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif3] * self.YLQS[mif1,1] * self.YLQSbar[1,mif4] * self.YLQSbar[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQS[mif1,mif3] * self.YLQSbar[1,mif4] * self.YLQSbar[mif2,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQS[mif1,mif3] * self.YLQSbar[1,mif4] * self.YLQSbar[mif2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,1] * self.YLQS[mif1,mif3] * self.YLQSbar[1,mif4] * self.YLQSbar[mif2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif3] * self.YLQS[mif1,1] * self.YLQSbar[2,mif4] * self.YLQSbar[mif2,1] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQS[mif1,mif3] * self.YLQSbar[2,mif4] * self.YLQSbar[mif2,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQS[mif1,mif3] * self.YLQSbar[2,mif4] * self.YLQSbar[mif2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,1] * self.YLQS[mif1,mif3] * self.YLQSbar[2,mif4] * self.YLQSbar[mif2,1] + 1/2304 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + 1/768 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -1/576 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif3] * self.YLQS[mif1,2] * self.YLQSbar[0,mif4] * self.YLQSbar[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQS[mif1,mif3] * self.YLQSbar[0,mif4] * self.YLQSbar[mif2,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQS[mif1,mif3] * self.YLQSbar[0,mif4] * self.YLQSbar[mif2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,2] * self.YLQS[mif1,mif3] * self.YLQSbar[0,mif4] * self.YLQSbar[mif2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif3] * self.YLQS[mif1,2] * self.YLQSbar[1,mif4] * self.YLQSbar[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQS[mif1,mif3] * self.YLQSbar[1,mif4] * self.YLQSbar[mif2,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQS[mif1,mif3] * self.YLQSbar[1,mif4] * self.YLQSbar[mif2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,2] * self.YLQS[mif1,mif3] * self.YLQSbar[1,mif4] * self.YLQSbar[mif2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif3] * self.YLQS[mif1,2] * self.YLQSbar[2,mif4] * self.YLQSbar[mif2,2] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQS[mif1,mif3] * self.YLQSbar[2,mif4] * self.YLQSbar[mif2,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQS[mif1,mif3] * self.YLQSbar[2,mif4] * self.YLQSbar[mif2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,2] * self.YLQS[mif1,mif3] * self.YLQSbar[2,mif4] * self.YLQSbar[mif2,2] + 1/4 * (self.MS1)**(-2) * self.YLQS[mif1,mif3] * self.YLQSbar[mif2,mif4] + 1/288 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,mif3] * self.YLQSbar[mif2,mif4] + 1/96 * self.aEV * self.epsilonbar * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,mif3] * self.YLQSbar[mif2,mif4] + 3/128 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,mif3] * self.YLQSbar[mif2,mif4] + 9/128 * self.aEV * self.epsilonbar * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,mif3] * self.YLQSbar[mif2,mif4] + 1/96 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,mif3] * self.YLQSbar[mif2,mif4] + 1/32 * self.aEV * self.epsilonbar * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,mif3] * self.YLQSbar[mif2,mif4] + 1/144 * self.aEV * self.epsilonbar * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,mif3] * self.YLQSbar[mif2,mif4] + 3/64 * self.aEV * self.epsilonbar * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,mif3] * self.YLQSbar[mif2,mif4] + 1/48 * self.aEV * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,mif3] * self.YLQSbar[mif2,mif4] + -1/144 * self.aEV * self.epsilonbar * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,mif3] * self.YLQSbar[mif2,mif4] + -3/64 * self.aEV * self.epsilonbar * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,mif3] * self.YLQSbar[mif2,mif4] + -1/48 * self.aEV * self.epsilonbar * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,mif3] * self.YLQSbar[mif2,mif4] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif3] * self.YLQS[mif1,0] * self.YLQSbar[0,0] * self.YLQSbar[mif2,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif3] * self.YLQS[mif1,0] * self.YLQSbar[0,0] * self.YLQSbar[mif2,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif3] * self.YLQS[mif1,0] * self.YLQSbar[0,0] * self.YLQSbar[mif2,mif4] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif3] * self.YLQS[mif1,1] * self.YLQSbar[0,1] * self.YLQSbar[mif2,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif3] * self.YLQS[mif1,1] * self.YLQSbar[0,1] * self.YLQSbar[mif2,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif3] * self.YLQS[mif1,1] * self.YLQSbar[0,1] * self.YLQSbar[mif2,mif4] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif3] * self.YLQS[mif1,2] * self.YLQSbar[0,2] * self.YLQSbar[mif2,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif3] * self.YLQS[mif1,2] * self.YLQSbar[0,2] * self.YLQSbar[mif2,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif3] * self.YLQS[mif1,2] * self.YLQSbar[0,2] * self.YLQSbar[mif2,mif4] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif3] * self.YLQS[mif1,0] * self.YLQSbar[1,0] * self.YLQSbar[mif2,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif3] * self.YLQS[mif1,0] * self.YLQSbar[1,0] * self.YLQSbar[mif2,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif3] * self.YLQS[mif1,0] * self.YLQSbar[1,0] * self.YLQSbar[mif2,mif4] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif3] * self.YLQS[mif1,1] * self.YLQSbar[1,1] * self.YLQSbar[mif2,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif3] * self.YLQS[mif1,1] * self.YLQSbar[1,1] * self.YLQSbar[mif2,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif3] * self.YLQS[mif1,1] * self.YLQSbar[1,1] * self.YLQSbar[mif2,mif4] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif3] * self.YLQS[mif1,2] * self.YLQSbar[1,2] * self.YLQSbar[mif2,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif3] * self.YLQS[mif1,2] * self.YLQSbar[1,2] * self.YLQSbar[mif2,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif3] * self.YLQS[mif1,2] * self.YLQSbar[1,2] * self.YLQSbar[mif2,mif4] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif3] * self.YLQS[mif1,0] * self.YLQSbar[2,0] * self.YLQSbar[mif2,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif3] * self.YLQS[mif1,0] * self.YLQSbar[2,0] * self.YLQSbar[mif2,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif3] * self.YLQS[mif1,0] * self.YLQSbar[2,0] * self.YLQSbar[mif2,mif4] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif3] * self.YLQS[mif1,1] * self.YLQSbar[2,1] * self.YLQSbar[mif2,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif3] * self.YLQS[mif1,1] * self.YLQSbar[2,1] * self.YLQSbar[mif2,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif3] * self.YLQS[mif1,1] * self.YLQSbar[2,1] * self.YLQSbar[mif2,mif4] + -1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif3] * self.YLQS[mif1,2] * self.YLQSbar[2,2] * self.YLQSbar[mif2,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif3] * self.YLQS[mif1,2] * self.YLQSbar[2,2] * self.YLQSbar[mif2,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif3] * self.YLQS[mif1,2] * self.YLQSbar[2,2] * self.YLQSbar[mif2,mif4])

    def alphaOlq3bar(self, mif1,mif2,mif3,mif4):
        return (-7/2304 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[0,mif3] * self.YLQSbar[0,mif4] + -1/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[0,mif3] * self.YLQSbar[0,mif4] + -1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[0,mif3] * self.YLQSbar[0,mif4] + 1/192 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif3] * self.YLQSbar[0,mif4] + -7/2304 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[1,mif3] * self.YLQSbar[1,mif4] + -1/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[1,mif3] * self.YLQSbar[1,mif4] + -1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[1,mif3] * self.YLQSbar[1,mif4] + 1/192 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif3] * self.YLQSbar[1,mif4] + -7/2304 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[2,mif3] * self.YLQSbar[2,mif4] + -1/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[2,mif3] * self.YLQSbar[2,mif4] + -1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YLQS[2,mif3] * self.YLQSbar[2,mif4] + 1/192 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif3] * self.YLQSbar[2,mif4] + -7/768 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -3/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + 1/64 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQS[mif1,mif3] * self.YLQSbar[0,mif4] * self.YLQSbar[mif2,0] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,0] * self.YLQS[mif1,mif3] * self.YLQSbar[0,mif4] * self.YLQSbar[mif2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,0] * self.YLQS[mif1,mif3] * self.YLQSbar[0,mif4] * self.YLQSbar[mif2,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQS[mif1,mif3] * self.YLQSbar[1,mif4] * self.YLQSbar[mif2,0] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,0] * self.YLQS[mif1,mif3] * self.YLQSbar[1,mif4] * self.YLQSbar[mif2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,0] * self.YLQS[mif1,mif3] * self.YLQSbar[1,mif4] * self.YLQSbar[mif2,0] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQS[mif1,mif3] * self.YLQSbar[2,mif4] * self.YLQSbar[mif2,0] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,0] * self.YLQS[mif1,mif3] * self.YLQSbar[2,mif4] * self.YLQSbar[mif2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,0] * self.YLQS[mif1,mif3] * self.YLQSbar[2,mif4] * self.YLQSbar[mif2,0] + -7/768 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -3/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + 1/64 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQS[mif1,mif3] * self.YLQSbar[0,mif4] * self.YLQSbar[mif2,1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,1] * self.YLQS[mif1,mif3] * self.YLQSbar[0,mif4] * self.YLQSbar[mif2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,1] * self.YLQS[mif1,mif3] * self.YLQSbar[0,mif4] * self.YLQSbar[mif2,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQS[mif1,mif3] * self.YLQSbar[1,mif4] * self.YLQSbar[mif2,1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,1] * self.YLQS[mif1,mif3] * self.YLQSbar[1,mif4] * self.YLQSbar[mif2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,1] * self.YLQS[mif1,mif3] * self.YLQSbar[1,mif4] * self.YLQSbar[mif2,1] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQS[mif1,mif3] * self.YLQSbar[2,mif4] * self.YLQSbar[mif2,1] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,1] * self.YLQS[mif1,mif3] * self.YLQSbar[2,mif4] * self.YLQSbar[mif2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,1] * self.YLQS[mif1,mif3] * self.YLQSbar[2,mif4] * self.YLQSbar[mif2,1] + -7/768 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -3/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -1/64 * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + 1/64 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQS[mif1,mif3] * self.YLQSbar[0,mif4] * self.YLQSbar[mif2,2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,2] * self.YLQS[mif1,mif3] * self.YLQSbar[0,mif4] * self.YLQSbar[mif2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,2] * self.YLQS[mif1,mif3] * self.YLQSbar[0,mif4] * self.YLQSbar[mif2,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQS[mif1,mif3] * self.YLQSbar[1,mif4] * self.YLQSbar[mif2,2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,2] * self.YLQS[mif1,mif3] * self.YLQSbar[1,mif4] * self.YLQSbar[mif2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,2] * self.YLQS[mif1,mif3] * self.YLQSbar[1,mif4] * self.YLQSbar[mif2,2] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQS[mif1,mif3] * self.YLQSbar[2,mif4] * self.YLQSbar[mif2,2] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,2] * self.YLQS[mif1,mif3] * self.YLQSbar[2,mif4] * self.YLQSbar[mif2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,2] * self.YLQS[mif1,mif3] * self.YLQSbar[2,mif4] * self.YLQSbar[mif2,2] + -1/4 * (self.MS1)**(-2) * self.YLQS[mif1,mif3] * self.YLQSbar[mif2,mif4] + -1/288 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,mif3] * self.YLQSbar[mif2,mif4] + -1/96 * self.aEV * self.epsilonbar * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,mif3] * self.YLQSbar[mif2,mif4] + 1/128 * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,mif3] * self.YLQSbar[mif2,mif4] + 3/128 * self.aEV * self.epsilonbar * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,mif3] * self.YLQSbar[mif2,mif4] + -1/96 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,mif3] * self.YLQSbar[mif2,mif4] + -1/32 * self.aEV * self.epsilonbar * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,mif3] * self.YLQSbar[mif2,mif4] + -1/144 * self.aEV * self.epsilonbar * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,mif3] * self.YLQSbar[mif2,mif4] + 1/64 * self.aEV * self.epsilonbar * (self.g2)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,mif3] * self.YLQSbar[mif2,mif4] + -1/48 * self.aEV * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,mif3] * self.YLQSbar[mif2,mif4] + 1/144 * self.aEV * self.epsilonbar * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,mif3] * self.YLQSbar[mif2,mif4] + -1/64 * self.aEV * self.epsilonbar * (self.g2)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,mif3] * self.YLQSbar[mif2,mif4] + 1/48 * self.aEV * self.epsilonbar * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,mif3] * self.YLQSbar[mif2,mif4] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif3] * self.YLQS[mif1,0] * self.YLQSbar[0,0] * self.YLQSbar[mif2,mif4] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif3] * self.YLQS[mif1,0] * self.YLQSbar[0,0] * self.YLQSbar[mif2,mif4] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif3] * self.YLQS[mif1,0] * self.YLQSbar[0,0] * self.YLQSbar[mif2,mif4] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif3] * self.YLQS[mif1,1] * self.YLQSbar[0,1] * self.YLQSbar[mif2,mif4] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif3] * self.YLQS[mif1,1] * self.YLQSbar[0,1] * self.YLQSbar[mif2,mif4] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif3] * self.YLQS[mif1,1] * self.YLQSbar[0,1] * self.YLQSbar[mif2,mif4] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif3] * self.YLQS[mif1,2] * self.YLQSbar[0,2] * self.YLQSbar[mif2,mif4] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[0,mif3] * self.YLQS[mif1,2] * self.YLQSbar[0,2] * self.YLQSbar[mif2,mif4] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif3] * self.YLQS[mif1,2] * self.YLQSbar[0,2] * self.YLQSbar[mif2,mif4] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif3] * self.YLQS[mif1,0] * self.YLQSbar[1,0] * self.YLQSbar[mif2,mif4] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif3] * self.YLQS[mif1,0] * self.YLQSbar[1,0] * self.YLQSbar[mif2,mif4] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif3] * self.YLQS[mif1,0] * self.YLQSbar[1,0] * self.YLQSbar[mif2,mif4] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif3] * self.YLQS[mif1,1] * self.YLQSbar[1,1] * self.YLQSbar[mif2,mif4] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif3] * self.YLQS[mif1,1] * self.YLQSbar[1,1] * self.YLQSbar[mif2,mif4] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif3] * self.YLQS[mif1,1] * self.YLQSbar[1,1] * self.YLQSbar[mif2,mif4] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif3] * self.YLQS[mif1,2] * self.YLQSbar[1,2] * self.YLQSbar[mif2,mif4] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[1,mif3] * self.YLQS[mif1,2] * self.YLQSbar[1,2] * self.YLQSbar[mif2,mif4] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif3] * self.YLQS[mif1,2] * self.YLQSbar[1,2] * self.YLQSbar[mif2,mif4] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif3] * self.YLQS[mif1,0] * self.YLQSbar[2,0] * self.YLQSbar[mif2,mif4] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif3] * self.YLQS[mif1,0] * self.YLQSbar[2,0] * self.YLQSbar[mif2,mif4] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif3] * self.YLQS[mif1,0] * self.YLQSbar[2,0] * self.YLQSbar[mif2,mif4] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif3] * self.YLQS[mif1,1] * self.YLQSbar[2,1] * self.YLQSbar[mif2,mif4] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif3] * self.YLQS[mif1,1] * self.YLQSbar[2,1] * self.YLQSbar[mif2,mif4] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif3] * self.YLQS[mif1,1] * self.YLQSbar[2,1] * self.YLQSbar[mif2,mif4] + 1/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif3] * self.YLQS[mif1,2] * self.YLQSbar[2,2] * self.YLQSbar[mif2,mif4] + 1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[2,mif3] * self.YLQS[mif1,2] * self.YLQSbar[2,2] * self.YLQSbar[mif2,mif4] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif3] * self.YLQS[mif1,2] * self.YLQSbar[2,2] * self.YLQSbar[mif2,mif4])

    def alphaOeubar(self, mif1,mif2,mif3,mif4):
        return (1/2160 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 23/1728 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[0,mif4] * self.YeuSbar[0,mif3] + 1/64 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[0,mif4] * self.YeuSbar[0,mif3] + 1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[0,mif4] * self.YeuSbar[0,mif3] + -1/48 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif4] * self.YeuSbar[0,mif3] + 23/1728 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[1,mif4] * self.YeuSbar[1,mif3] + 1/64 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[1,mif4] * self.YeuSbar[1,mif3] + 1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[1,mif4] * self.YeuSbar[1,mif3] + -1/48 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif4] * self.YeuSbar[1,mif3] + 23/1728 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[2,mif4] * self.YeuSbar[2,mif3] + 1/64 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[2,mif4] * self.YeuSbar[2,mif3] + 1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[2,mif4] * self.YeuSbar[2,mif3] + -1/48 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif4] * self.YeuSbar[2,mif3] + 1/72 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif2,0] * self.YeuSbar[mif1,0] + 1/48 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif2,0] * self.YeuSbar[mif1,0] + 1/36 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif2,0] * self.YeuSbar[mif1,0] + -1/36 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YeuSbar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuS[mif2,0] * self.YeuSbar[0,mif3] * self.YeuSbar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuS[mif2,mif4] * self.YeuSbar[0,mif3] * self.YeuSbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,0] * self.YeuS[mif2,mif4] * self.YeuSbar[0,mif3] * self.YeuSbar[mif1,0] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,0] * self.YeuS[mif2,mif4] * self.YeuSbar[0,mif3] * self.YeuSbar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuS[mif2,0] * self.YeuSbar[1,mif3] * self.YeuSbar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuS[mif2,mif4] * self.YeuSbar[1,mif3] * self.YeuSbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,0] * self.YeuS[mif2,mif4] * self.YeuSbar[1,mif3] * self.YeuSbar[mif1,0] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,0] * self.YeuS[mif2,mif4] * self.YeuSbar[1,mif3] * self.YeuSbar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuS[mif2,0] * self.YeuSbar[2,mif3] * self.YeuSbar[mif1,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuS[mif2,mif4] * self.YeuSbar[2,mif3] * self.YeuSbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,0] * self.YeuS[mif2,mif4] * self.YeuSbar[2,mif3] * self.YeuSbar[mif1,0] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,0] * self.YeuS[mif2,mif4] * self.YeuSbar[2,mif3] * self.YeuSbar[mif1,0] + 1/72 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif2,1] * self.YeuSbar[mif1,1] + 1/48 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif2,1] * self.YeuSbar[mif1,1] + 1/36 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif2,1] * self.YeuSbar[mif1,1] + -1/36 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YeuSbar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuS[mif2,1] * self.YeuSbar[0,mif3] * self.YeuSbar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuS[mif2,mif4] * self.YeuSbar[0,mif3] * self.YeuSbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,1] * self.YeuS[mif2,mif4] * self.YeuSbar[0,mif3] * self.YeuSbar[mif1,1] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,1] * self.YeuS[mif2,mif4] * self.YeuSbar[0,mif3] * self.YeuSbar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuS[mif2,1] * self.YeuSbar[1,mif3] * self.YeuSbar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuS[mif2,mif4] * self.YeuSbar[1,mif3] * self.YeuSbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,1] * self.YeuS[mif2,mif4] * self.YeuSbar[1,mif3] * self.YeuSbar[mif1,1] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,1] * self.YeuS[mif2,mif4] * self.YeuSbar[1,mif3] * self.YeuSbar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuS[mif2,1] * self.YeuSbar[2,mif3] * self.YeuSbar[mif1,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuS[mif2,mif4] * self.YeuSbar[2,mif3] * self.YeuSbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,1] * self.YeuS[mif2,mif4] * self.YeuSbar[2,mif3] * self.YeuSbar[mif1,1] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,1] * self.YeuS[mif2,mif4] * self.YeuSbar[2,mif3] * self.YeuSbar[mif1,1] + 1/72 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif2,2] * self.YeuSbar[mif1,2] + 1/48 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif2,2] * self.YeuSbar[mif1,2] + 1/36 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif2,2] * self.YeuSbar[mif1,2] + -1/36 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YeuSbar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuS[mif2,2] * self.YeuSbar[0,mif3] * self.YeuSbar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuS[mif2,mif4] * self.YeuSbar[0,mif3] * self.YeuSbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,2] * self.YeuS[mif2,mif4] * self.YeuSbar[0,mif3] * self.YeuSbar[mif1,2] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,2] * self.YeuS[mif2,mif4] * self.YeuSbar[0,mif3] * self.YeuSbar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuS[mif2,2] * self.YeuSbar[1,mif3] * self.YeuSbar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuS[mif2,mif4] * self.YeuSbar[1,mif3] * self.YeuSbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,2] * self.YeuS[mif2,mif4] * self.YeuSbar[1,mif3] * self.YeuSbar[mif1,2] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,2] * self.YeuS[mif2,mif4] * self.YeuSbar[1,mif3] * self.YeuSbar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuS[mif2,2] * self.YeuSbar[2,mif3] * self.YeuSbar[mif1,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuS[mif2,mif4] * self.YeuSbar[2,mif3] * self.YeuSbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,2] * self.YeuS[mif2,mif4] * self.YeuSbar[2,mif3] * self.YeuSbar[mif1,2] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,2] * self.YeuS[mif2,mif4] * self.YeuSbar[2,mif3] * self.YeuSbar[mif1,2] + 1/2 * (self.MS1)**(-2) * self.YeuS[mif2,mif4] * self.YeuSbar[mif1,mif3] + 25/576 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YeuSbar[mif1,mif3] + 25/192 * self.aEV * self.epsilonbar * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YeuSbar[mif1,mif3] + 1/48 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YeuSbar[mif1,mif3] + 1/16 * self.aEV * self.epsilonbar * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YeuSbar[mif1,mif3] + 25/288 * self.aEV * self.epsilonbar * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YeuSbar[mif1,mif3] + 1/24 * self.aEV * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YeuSbar[mif1,mif3] + -25/288 * self.aEV * self.epsilonbar * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,mif4] * self.YeuSbar[mif1,mif3] + -1/24 * self.aEV * self.epsilonbar * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,mif4] * self.YeuSbar[mif1,mif3] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuS[mif2,0] * self.YeuSbar[0,0] * self.YeuSbar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuS[mif2,0] * self.YeuSbar[0,0] * self.YeuSbar[mif1,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif4] * self.YeuS[mif2,0] * self.YeuSbar[0,0] * self.YeuSbar[mif1,mif3] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuS[mif2,1] * self.YeuSbar[0,1] * self.YeuSbar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuS[mif2,1] * self.YeuSbar[0,1] * self.YeuSbar[mif1,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif4] * self.YeuS[mif2,1] * self.YeuSbar[0,1] * self.YeuSbar[mif1,mif3] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuS[mif2,2] * self.YeuSbar[0,2] * self.YeuSbar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuS[mif2,2] * self.YeuSbar[0,2] * self.YeuSbar[mif1,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif4] * self.YeuS[mif2,2] * self.YeuSbar[0,2] * self.YeuSbar[mif1,mif3] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuS[mif2,0] * self.YeuSbar[1,0] * self.YeuSbar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuS[mif2,0] * self.YeuSbar[1,0] * self.YeuSbar[mif1,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif4] * self.YeuS[mif2,0] * self.YeuSbar[1,0] * self.YeuSbar[mif1,mif3] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuS[mif2,1] * self.YeuSbar[1,1] * self.YeuSbar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuS[mif2,1] * self.YeuSbar[1,1] * self.YeuSbar[mif1,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif4] * self.YeuS[mif2,1] * self.YeuSbar[1,1] * self.YeuSbar[mif1,mif3] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuS[mif2,2] * self.YeuSbar[1,2] * self.YeuSbar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuS[mif2,2] * self.YeuSbar[1,2] * self.YeuSbar[mif1,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif4] * self.YeuS[mif2,2] * self.YeuSbar[1,2] * self.YeuSbar[mif1,mif3] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuS[mif2,0] * self.YeuSbar[2,0] * self.YeuSbar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuS[mif2,0] * self.YeuSbar[2,0] * self.YeuSbar[mif1,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif4] * self.YeuS[mif2,0] * self.YeuSbar[2,0] * self.YeuSbar[mif1,mif3] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuS[mif2,1] * self.YeuSbar[2,1] * self.YeuSbar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuS[mif2,1] * self.YeuSbar[2,1] * self.YeuSbar[mif1,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif4] * self.YeuS[mif2,1] * self.YeuSbar[2,1] * self.YeuSbar[mif1,mif3] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuS[mif2,2] * self.YeuSbar[2,2] * self.YeuSbar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuS[mif2,2] * self.YeuSbar[2,2] * self.YeuSbar[mif1,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif4] * self.YeuS[mif2,2] * self.YeuSbar[2,2] * self.YeuSbar[mif1,mif3])

    def alphaOedbar(self, mif1,mif2,mif3,mif4):
        return (-1/4320 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif2,0] * self.YeuSbar[mif1,0] + -1/96 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif2,0] * self.YeuSbar[mif1,0] + -1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif2,0] * self.YeuSbar[mif1,0] + 1/72 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YeuSbar[mif1,0] + -1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif2,1] * self.YeuSbar[mif1,1] + -1/96 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif2,1] * self.YeuSbar[mif1,1] + -1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif2,1] * self.YeuSbar[mif1,1] + 1/72 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YeuSbar[mif1,1] + -1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif2,2] * self.YeuSbar[mif1,2] + -1/96 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif2,2] * self.YeuSbar[mif1,2] + -1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YeuS[mif2,2] * self.YeuSbar[mif1,2] + 1/72 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YeuSbar[mif1,2])

    def alphaOqebar(self, mif1,mif2,mif3,mif4):
        return (1/8640 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/288 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif4,0] * self.YeuSbar[mif3,0] + 1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif4,0] * self.YeuSbar[mif3,0] + 1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif4,0] * self.YeuSbar[mif3,0] + -1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,0] * self.YeuSbar[mif3,0] + 1/288 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif4,1] * self.YeuSbar[mif3,1] + 1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif4,1] * self.YeuSbar[mif3,1] + 1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif4,1] * self.YeuSbar[mif3,1] + -1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,1] * self.YeuSbar[mif3,1] + 1/288 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif4,2] * self.YeuSbar[mif3,2] + 1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif4,2] * self.YeuSbar[mif3,2] + 1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[mif4,2] * self.YeuSbar[mif3,2] + -1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,2] * self.YeuSbar[mif3,2] + 25/3456 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + 1/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,0] * self.YeuSbar[mif3,0] * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,1] * self.YeuSbar[mif3,1] * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,2] * self.YeuSbar[mif3,2] * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif3] * self.ylbar[0,mif4] * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif3] * self.ylbar[0,mif4] * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,mif3] * self.ylbar[0,mif4] * self.YLQS[0,mif1] * self.YLQSbar[0,mif2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif3] * self.ylbar[0,mif4] * self.YLQS[1,mif1] * self.YLQSbar[0,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif3] * self.ylbar[0,mif4] * self.YLQS[1,mif1] * self.YLQSbar[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,mif3] * self.ylbar[0,mif4] * self.YLQS[1,mif1] * self.YLQSbar[0,mif2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif3] * self.ylbar[0,mif4] * self.YLQS[2,mif1] * self.YLQSbar[0,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif3] * self.ylbar[0,mif4] * self.YLQS[2,mif1] * self.YLQSbar[0,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,mif3] * self.ylbar[0,mif4] * self.YLQS[2,mif1] * self.YLQSbar[0,mif2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif3] * self.ylbar[1,mif4] * self.YLQS[0,mif1] * self.YLQSbar[1,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif3] * self.ylbar[1,mif4] * self.YLQS[0,mif1] * self.YLQSbar[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,mif3] * self.ylbar[1,mif4] * self.YLQS[0,mif1] * self.YLQSbar[1,mif2] + 25/3456 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + 1/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,0] * self.YeuSbar[mif3,0] * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,1] * self.YeuSbar[mif3,1] * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,2] * self.YeuSbar[mif3,2] * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif3] * self.ylbar[1,mif4] * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif3] * self.ylbar[1,mif4] * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,mif3] * self.ylbar[1,mif4] * self.YLQS[1,mif1] * self.YLQSbar[1,mif2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif3] * self.ylbar[1,mif4] * self.YLQS[2,mif1] * self.YLQSbar[1,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif3] * self.ylbar[1,mif4] * self.YLQS[2,mif1] * self.YLQSbar[1,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,mif3] * self.ylbar[1,mif4] * self.YLQS[2,mif1] * self.YLQSbar[1,mif2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif3] * self.ylbar[2,mif4] * self.YLQS[0,mif1] * self.YLQSbar[2,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[0,mif3] * self.ylbar[2,mif4] * self.YLQS[0,mif1] * self.YLQSbar[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[0,mif3] * self.ylbar[2,mif4] * self.YLQS[0,mif1] * self.YLQSbar[2,mif2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif3] * self.ylbar[2,mif4] * self.YLQS[1,mif1] * self.YLQSbar[2,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[1,mif3] * self.ylbar[2,mif4] * self.YLQS[1,mif1] * self.YLQSbar[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[1,mif3] * self.ylbar[2,mif4] * self.YLQS[1,mif1] * self.YLQSbar[2,mif2] + 25/3456 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + 1/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,0] * self.YeuSbar[mif3,0] * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,1] * self.YeuSbar[mif3,1] * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,2] * self.YeuSbar[mif3,2] * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif3] * self.ylbar[2,mif4] * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[2,mif3] * self.ylbar[2,mif4] * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yl[2,mif3] * self.ylbar[2,mif4] * self.YLQS[2,mif1] * self.YLQSbar[2,mif2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,0] * self.yl[0,mif3] * self.YLQS[0,mif1] * self.yu[mif2,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,0] * self.yl[0,mif3] * self.YLQS[0,mif1] * self.yu[mif2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,0] * self.yl[0,mif3] * self.YLQS[0,mif1] * self.yu[mif2,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,0] * self.yl[1,mif3] * self.YLQS[1,mif1] * self.yu[mif2,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,0] * self.yl[1,mif3] * self.YLQS[1,mif1] * self.yu[mif2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,0] * self.yl[1,mif3] * self.YLQS[1,mif1] * self.yu[mif2,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,0] * self.yl[2,mif3] * self.YLQS[2,mif1] * self.yu[mif2,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,0] * self.yl[2,mif3] * self.YLQS[2,mif1] * self.yu[mif2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,0] * self.yl[2,mif3] * self.YLQS[2,mif1] * self.yu[mif2,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,1] * self.yl[0,mif3] * self.YLQS[0,mif1] * self.yu[mif2,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,1] * self.yl[0,mif3] * self.YLQS[0,mif1] * self.yu[mif2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,1] * self.yl[0,mif3] * self.YLQS[0,mif1] * self.yu[mif2,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,1] * self.yl[1,mif3] * self.YLQS[1,mif1] * self.yu[mif2,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,1] * self.yl[1,mif3] * self.YLQS[1,mif1] * self.yu[mif2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,1] * self.yl[1,mif3] * self.YLQS[1,mif1] * self.yu[mif2,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,1] * self.yl[2,mif3] * self.YLQS[2,mif1] * self.yu[mif2,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,1] * self.yl[2,mif3] * self.YLQS[2,mif1] * self.yu[mif2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,1] * self.yl[2,mif3] * self.YLQS[2,mif1] * self.yu[mif2,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,2] * self.yl[0,mif3] * self.YLQS[0,mif1] * self.yu[mif2,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,2] * self.yl[0,mif3] * self.YLQS[0,mif1] * self.yu[mif2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,2] * self.yl[0,mif3] * self.YLQS[0,mif1] * self.yu[mif2,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,2] * self.yl[1,mif3] * self.YLQS[1,mif1] * self.yu[mif2,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,2] * self.yl[1,mif3] * self.YLQS[1,mif1] * self.yu[mif2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,2] * self.yl[1,mif3] * self.YLQS[1,mif1] * self.yu[mif2,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,2] * self.yl[2,mif3] * self.YLQS[2,mif1] * self.yu[mif2,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,2] * self.yl[2,mif3] * self.YLQS[2,mif1] * self.yu[mif2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,2] * self.yl[2,mif3] * self.YLQS[2,mif1] * self.yu[mif2,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,0] * self.ylbar[0,mif4] * self.YLQSbar[0,mif2] * self.yubar[mif1,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,0] * self.ylbar[0,mif4] * self.YLQSbar[0,mif2] * self.yubar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif3,0] * self.ylbar[0,mif4] * self.YLQSbar[0,mif2] * self.yubar[mif1,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,0] * self.ylbar[1,mif4] * self.YLQSbar[1,mif2] * self.yubar[mif1,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,0] * self.ylbar[1,mif4] * self.YLQSbar[1,mif2] * self.yubar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif3,0] * self.ylbar[1,mif4] * self.YLQSbar[1,mif2] * self.yubar[mif1,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,0] * self.ylbar[2,mif4] * self.YLQSbar[2,mif2] * self.yubar[mif1,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,0] * self.ylbar[2,mif4] * self.YLQSbar[2,mif2] * self.yubar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif3,0] * self.ylbar[2,mif4] * self.YLQSbar[2,mif2] * self.yubar[mif1,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,0] * self.YeuSbar[mif3,0] * self.yu[mif2,0] * self.yubar[mif1,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,0] * self.YeuSbar[mif3,0] * self.yu[mif2,0] * self.yubar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,0] * self.YeuSbar[mif3,0] * self.yu[mif2,0] * self.yubar[mif1,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,1] * self.YeuSbar[mif3,0] * self.yu[mif2,1] * self.yubar[mif1,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,1] * self.YeuSbar[mif3,0] * self.yu[mif2,1] * self.yubar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,1] * self.YeuSbar[mif3,0] * self.yu[mif2,1] * self.yubar[mif1,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,2] * self.YeuSbar[mif3,0] * self.yu[mif2,2] * self.yubar[mif1,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,2] * self.YeuSbar[mif3,0] * self.yu[mif2,2] * self.yubar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,2] * self.YeuSbar[mif3,0] * self.yu[mif2,2] * self.yubar[mif1,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,1] * self.ylbar[0,mif4] * self.YLQSbar[0,mif2] * self.yubar[mif1,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,1] * self.ylbar[0,mif4] * self.YLQSbar[0,mif2] * self.yubar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif3,1] * self.ylbar[0,mif4] * self.YLQSbar[0,mif2] * self.yubar[mif1,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,1] * self.ylbar[1,mif4] * self.YLQSbar[1,mif2] * self.yubar[mif1,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,1] * self.ylbar[1,mif4] * self.YLQSbar[1,mif2] * self.yubar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif3,1] * self.ylbar[1,mif4] * self.YLQSbar[1,mif2] * self.yubar[mif1,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,1] * self.ylbar[2,mif4] * self.YLQSbar[2,mif2] * self.yubar[mif1,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,1] * self.ylbar[2,mif4] * self.YLQSbar[2,mif2] * self.yubar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif3,1] * self.ylbar[2,mif4] * self.YLQSbar[2,mif2] * self.yubar[mif1,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,0] * self.YeuSbar[mif3,1] * self.yu[mif2,0] * self.yubar[mif1,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,0] * self.YeuSbar[mif3,1] * self.yu[mif2,0] * self.yubar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,0] * self.YeuSbar[mif3,1] * self.yu[mif2,0] * self.yubar[mif1,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,1] * self.YeuSbar[mif3,1] * self.yu[mif2,1] * self.yubar[mif1,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,1] * self.YeuSbar[mif3,1] * self.yu[mif2,1] * self.yubar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,1] * self.YeuSbar[mif3,1] * self.yu[mif2,1] * self.yubar[mif1,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,2] * self.YeuSbar[mif3,1] * self.yu[mif2,2] * self.yubar[mif1,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,2] * self.YeuSbar[mif3,1] * self.yu[mif2,2] * self.yubar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,2] * self.YeuSbar[mif3,1] * self.yu[mif2,2] * self.yubar[mif1,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,2] * self.ylbar[0,mif4] * self.YLQSbar[0,mif2] * self.yubar[mif1,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,2] * self.ylbar[0,mif4] * self.YLQSbar[0,mif2] * self.yubar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif3,2] * self.ylbar[0,mif4] * self.YLQSbar[0,mif2] * self.yubar[mif1,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,2] * self.ylbar[1,mif4] * self.YLQSbar[1,mif2] * self.yubar[mif1,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,2] * self.ylbar[1,mif4] * self.YLQSbar[1,mif2] * self.yubar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif3,2] * self.ylbar[1,mif4] * self.YLQSbar[1,mif2] * self.yubar[mif1,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,2] * self.ylbar[2,mif4] * self.YLQSbar[2,mif2] * self.yubar[mif1,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[mif3,2] * self.ylbar[2,mif4] * self.YLQSbar[2,mif2] * self.yubar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[mif3,2] * self.ylbar[2,mif4] * self.YLQSbar[2,mif2] * self.yubar[mif1,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,0] * self.YeuSbar[mif3,2] * self.yu[mif2,0] * self.yubar[mif1,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,0] * self.YeuSbar[mif3,2] * self.yu[mif2,0] * self.yubar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,0] * self.YeuSbar[mif3,2] * self.yu[mif2,0] * self.yubar[mif1,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,1] * self.YeuSbar[mif3,2] * self.yu[mif2,1] * self.yubar[mif1,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,1] * self.YeuSbar[mif3,2] * self.yu[mif2,1] * self.yubar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,1] * self.YeuSbar[mif3,2] * self.yu[mif2,1] * self.yubar[mif1,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,2] * self.YeuSbar[mif3,2] * self.yu[mif2,2] * self.yubar[mif1,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif4,2] * self.YeuSbar[mif3,2] * self.yu[mif2,2] * self.yubar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif4,2] * self.YeuSbar[mif3,2] * self.yu[mif2,2] * self.yubar[mif1,2])

    def alphaOlubar(self, mif1,mif2,mif3,mif4):
        return (1/4320 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 23/3456 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[0,mif4] * self.YeuSbar[0,mif3] + 1/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[0,mif4] * self.YeuSbar[0,mif3] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[0,mif4] * self.YeuSbar[0,mif3] + -1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif4] * self.YeuSbar[0,mif3] + 23/3456 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[1,mif4] * self.YeuSbar[1,mif3] + 1/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[1,mif4] * self.YeuSbar[1,mif3] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[1,mif4] * self.YeuSbar[1,mif3] + -1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif4] * self.YeuSbar[1,mif3] + 23/3456 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[2,mif4] * self.YeuSbar[2,mif3] + 1/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[2,mif4] * self.YeuSbar[2,mif3] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.YeuS[2,mif4] * self.YeuSbar[2,mif3] + -1/96 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif4] * self.YeuSbar[2,mif3] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuSbar[0,mif3] * self.yl[mif2,0] * self.ylbar[mif1,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuSbar[0,mif3] * self.yl[mif2,0] * self.ylbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif4] * self.YeuSbar[0,mif3] * self.yl[mif2,0] * self.ylbar[mif1,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuSbar[0,mif3] * self.yl[mif2,1] * self.ylbar[mif1,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuSbar[0,mif3] * self.yl[mif2,1] * self.ylbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif4] * self.YeuSbar[0,mif3] * self.yl[mif2,1] * self.ylbar[mif1,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuSbar[0,mif3] * self.yl[mif2,2] * self.ylbar[mif1,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuSbar[0,mif3] * self.yl[mif2,2] * self.ylbar[mif1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif4] * self.YeuSbar[0,mif3] * self.yl[mif2,2] * self.ylbar[mif1,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuSbar[1,mif3] * self.yl[mif2,0] * self.ylbar[mif1,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuSbar[1,mif3] * self.yl[mif2,0] * self.ylbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif4] * self.YeuSbar[1,mif3] * self.yl[mif2,0] * self.ylbar[mif1,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuSbar[1,mif3] * self.yl[mif2,1] * self.ylbar[mif1,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuSbar[1,mif3] * self.yl[mif2,1] * self.ylbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif4] * self.YeuSbar[1,mif3] * self.yl[mif2,1] * self.ylbar[mif1,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuSbar[1,mif3] * self.yl[mif2,2] * self.ylbar[mif1,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuSbar[1,mif3] * self.yl[mif2,2] * self.ylbar[mif1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif4] * self.YeuSbar[1,mif3] * self.yl[mif2,2] * self.ylbar[mif1,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuSbar[2,mif3] * self.yl[mif2,0] * self.ylbar[mif1,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuSbar[2,mif3] * self.yl[mif2,0] * self.ylbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif4] * self.YeuSbar[2,mif3] * self.yl[mif2,0] * self.ylbar[mif1,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuSbar[2,mif3] * self.yl[mif2,1] * self.ylbar[mif1,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuSbar[2,mif3] * self.yl[mif2,1] * self.ylbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif4] * self.YeuSbar[2,mif3] * self.yl[mif2,1] * self.ylbar[mif1,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuSbar[2,mif3] * self.yl[mif2,2] * self.ylbar[mif1,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuSbar[2,mif3] * self.yl[mif2,2] * self.ylbar[mif1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif4] * self.YeuSbar[2,mif3] * self.yl[mif2,2] * self.ylbar[mif1,2] + 1/576 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + 1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + 1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuSbar[0,mif3] * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuSbar[1,mif3] * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuSbar[2,mif3] * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + 1/576 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + 1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + 1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuSbar[0,mif3] * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuSbar[1,mif3] * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuSbar[2,mif3] * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + 1/576 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + 1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + 1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -1/144 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuSbar[0,mif3] * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuSbar[1,mif3] * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuSbar[2,mif3] * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.yl[mif2,0] * self.YLQS[mif1,0] * self.yu[0,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.yl[mif2,0] * self.YLQS[mif1,0] * self.yu[0,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif4] * self.yl[mif2,0] * self.YLQS[mif1,0] * self.yu[0,mif3] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.yl[mif2,1] * self.YLQS[mif1,0] * self.yu[0,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.yl[mif2,1] * self.YLQS[mif1,0] * self.yu[0,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif4] * self.yl[mif2,1] * self.YLQS[mif1,0] * self.yu[0,mif3] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.yl[mif2,2] * self.YLQS[mif1,0] * self.yu[0,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.yl[mif2,2] * self.YLQS[mif1,0] * self.yu[0,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif4] * self.yl[mif2,2] * self.YLQS[mif1,0] * self.yu[0,mif3] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.yl[mif2,0] * self.YLQS[mif1,1] * self.yu[1,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.yl[mif2,0] * self.YLQS[mif1,1] * self.yu[1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif4] * self.yl[mif2,0] * self.YLQS[mif1,1] * self.yu[1,mif3] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.yl[mif2,1] * self.YLQS[mif1,1] * self.yu[1,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.yl[mif2,1] * self.YLQS[mif1,1] * self.yu[1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif4] * self.yl[mif2,1] * self.YLQS[mif1,1] * self.yu[1,mif3] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.yl[mif2,2] * self.YLQS[mif1,1] * self.yu[1,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.yl[mif2,2] * self.YLQS[mif1,1] * self.yu[1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif4] * self.yl[mif2,2] * self.YLQS[mif1,1] * self.yu[1,mif3] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.yl[mif2,0] * self.YLQS[mif1,2] * self.yu[2,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.yl[mif2,0] * self.YLQS[mif1,2] * self.yu[2,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif4] * self.yl[mif2,0] * self.YLQS[mif1,2] * self.yu[2,mif3] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.yl[mif2,1] * self.YLQS[mif1,2] * self.yu[2,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.yl[mif2,1] * self.YLQS[mif1,2] * self.yu[2,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif4] * self.yl[mif2,1] * self.YLQS[mif1,2] * self.yu[2,mif3] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.yl[mif2,2] * self.YLQS[mif1,2] * self.yu[2,mif3] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.yl[mif2,2] * self.YLQS[mif1,2] * self.yu[2,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif4] * self.yl[mif2,2] * self.YLQS[mif1,2] * self.yu[2,mif3] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif3] * self.ylbar[mif1,0] * self.YLQSbar[mif2,0] * self.yubar[0,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif3] * self.ylbar[mif1,0] * self.YLQSbar[mif2,0] * self.yubar[0,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif3] * self.ylbar[mif1,0] * self.YLQSbar[mif2,0] * self.yubar[0,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif3] * self.ylbar[mif1,1] * self.YLQSbar[mif2,0] * self.yubar[0,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif3] * self.ylbar[mif1,1] * self.YLQSbar[mif2,0] * self.yubar[0,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif3] * self.ylbar[mif1,1] * self.YLQSbar[mif2,0] * self.yubar[0,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif3] * self.ylbar[mif1,2] * self.YLQSbar[mif2,0] * self.yubar[0,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif3] * self.ylbar[mif1,2] * self.YLQSbar[mif2,0] * self.yubar[0,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif3] * self.ylbar[mif1,2] * self.YLQSbar[mif2,0] * self.yubar[0,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] * self.yu[0,mif3] * self.yubar[0,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] * self.yu[0,mif3] * self.yubar[0,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] * self.yu[0,mif3] * self.yubar[0,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] * self.yu[1,mif3] * self.yubar[0,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] * self.yu[1,mif3] * self.yubar[0,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] * self.yu[1,mif3] * self.yubar[0,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] * self.yu[2,mif3] * self.yubar[0,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] * self.yu[2,mif3] * self.yubar[0,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] * self.yu[2,mif3] * self.yubar[0,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif3] * self.ylbar[mif1,0] * self.YLQSbar[mif2,1] * self.yubar[1,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif3] * self.ylbar[mif1,0] * self.YLQSbar[mif2,1] * self.yubar[1,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif3] * self.ylbar[mif1,0] * self.YLQSbar[mif2,1] * self.yubar[1,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif3] * self.ylbar[mif1,1] * self.YLQSbar[mif2,1] * self.yubar[1,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif3] * self.ylbar[mif1,1] * self.YLQSbar[mif2,1] * self.yubar[1,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif3] * self.ylbar[mif1,1] * self.YLQSbar[mif2,1] * self.yubar[1,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif3] * self.ylbar[mif1,2] * self.YLQSbar[mif2,1] * self.yubar[1,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif3] * self.ylbar[mif1,2] * self.YLQSbar[mif2,1] * self.yubar[1,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif3] * self.ylbar[mif1,2] * self.YLQSbar[mif2,1] * self.yubar[1,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] * self.yu[0,mif3] * self.yubar[1,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] * self.yu[0,mif3] * self.yubar[1,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] * self.yu[0,mif3] * self.yubar[1,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] * self.yu[1,mif3] * self.yubar[1,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] * self.yu[1,mif3] * self.yubar[1,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] * self.yu[1,mif3] * self.yubar[1,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] * self.yu[2,mif3] * self.yubar[1,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] * self.yu[2,mif3] * self.yubar[1,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] * self.yu[2,mif3] * self.yubar[1,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif3] * self.ylbar[mif1,0] * self.YLQSbar[mif2,2] * self.yubar[2,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[0,mif3] * self.ylbar[mif1,0] * self.YLQSbar[mif2,2] * self.yubar[2,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[0,mif3] * self.ylbar[mif1,0] * self.YLQSbar[mif2,2] * self.yubar[2,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif3] * self.ylbar[mif1,1] * self.YLQSbar[mif2,2] * self.yubar[2,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[1,mif3] * self.ylbar[mif1,1] * self.YLQSbar[mif2,2] * self.yubar[2,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[1,mif3] * self.ylbar[mif1,1] * self.YLQSbar[mif2,2] * self.yubar[2,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif3] * self.ylbar[mif1,2] * self.YLQSbar[mif2,2] * self.yubar[2,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuSbar[2,mif3] * self.ylbar[mif1,2] * self.YLQSbar[mif2,2] * self.yubar[2,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuSbar[2,mif3] * self.ylbar[mif1,2] * self.YLQSbar[mif2,2] * self.yubar[2,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] * self.yu[0,mif3] * self.yubar[2,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] * self.yu[0,mif3] * self.yubar[2,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] * self.yu[0,mif3] * self.yubar[2,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] * self.yu[1,mif3] * self.yubar[2,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] * self.yu[1,mif3] * self.yubar[2,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] * self.yu[1,mif3] * self.yubar[2,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] * self.yu[2,mif3] * self.yubar[2,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] * self.yu[2,mif3] * self.yubar[2,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] * self.yu[2,mif3] * self.yubar[2,mif4])

    def alphaOldbar(self, mif1,mif2,mif3,mif4):
        return (-1/8640 * (self.g1)**(4) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -1/1152 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -1/384 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + 1/288 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif3] * self.ydbar[0,mif4] * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif3] * self.ydbar[0,mif4] * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,mif3] * self.ydbar[0,mif4] * self.YLQS[mif1,0] * self.YLQSbar[mif2,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif3] * self.ydbar[0,mif4] * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif3] * self.ydbar[0,mif4] * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,mif3] * self.ydbar[0,mif4] * self.YLQS[mif1,1] * self.YLQSbar[mif2,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif3] * self.ydbar[0,mif4] * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif3] * self.ydbar[0,mif4] * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,mif3] * self.ydbar[0,mif4] * self.YLQS[mif1,2] * self.YLQSbar[mif2,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif3] * self.ydbar[1,mif4] * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif3] * self.ydbar[1,mif4] * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,mif3] * self.ydbar[1,mif4] * self.YLQS[mif1,0] * self.YLQSbar[mif2,1] + -1/1152 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -1/384 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + 1/288 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif3] * self.ydbar[1,mif4] * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif3] * self.ydbar[1,mif4] * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,mif3] * self.ydbar[1,mif4] * self.YLQS[mif1,1] * self.YLQSbar[mif2,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif3] * self.ydbar[1,mif4] * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif3] * self.ydbar[1,mif4] * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,mif3] * self.ydbar[1,mif4] * self.YLQS[mif1,2] * self.YLQSbar[mif2,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif3] * self.ydbar[2,mif4] * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif3] * self.ydbar[2,mif4] * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,mif3] * self.ydbar[2,mif4] * self.YLQS[mif1,0] * self.YLQSbar[mif2,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif3] * self.ydbar[2,mif4] * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif3] * self.ydbar[2,mif4] * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,mif3] * self.ydbar[2,mif4] * self.YLQS[mif1,1] * self.YLQSbar[mif2,2] + -1/1152 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -1/384 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + 1/288 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif3] * self.ydbar[2,mif4] * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif3] * self.ydbar[2,mif4] * self.YLQS[mif1,2] * self.YLQSbar[mif2,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,mif3] * self.ydbar[2,mif4] * self.YLQS[mif1,2] * self.YLQSbar[mif2,2])

    def alphaOledqbar(self, mif1,mif2,mif3,mif4):
        return (-3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif3] * self.ylbar[0,mif2] * self.YLQS[mif1,0] * self.YLQSbar[0,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif3] * self.ylbar[0,mif2] * self.YLQS[mif1,0] * self.YLQSbar[0,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,mif3] * self.ylbar[0,mif2] * self.YLQS[mif1,0] * self.YLQSbar[0,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif3] * self.ylbar[0,mif2] * self.YLQS[mif1,1] * self.YLQSbar[0,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif3] * self.ylbar[0,mif2] * self.YLQS[mif1,1] * self.YLQSbar[0,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,mif3] * self.ylbar[0,mif2] * self.YLQS[mif1,1] * self.YLQSbar[0,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif3] * self.ylbar[0,mif2] * self.YLQS[mif1,2] * self.YLQSbar[0,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif3] * self.ylbar[0,mif2] * self.YLQS[mif1,2] * self.YLQSbar[0,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,mif3] * self.ylbar[0,mif2] * self.YLQS[mif1,2] * self.YLQSbar[0,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif3] * self.ylbar[1,mif2] * self.YLQS[mif1,0] * self.YLQSbar[1,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif3] * self.ylbar[1,mif2] * self.YLQS[mif1,0] * self.YLQSbar[1,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,mif3] * self.ylbar[1,mif2] * self.YLQS[mif1,0] * self.YLQSbar[1,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif3] * self.ylbar[1,mif2] * self.YLQS[mif1,1] * self.YLQSbar[1,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif3] * self.ylbar[1,mif2] * self.YLQS[mif1,1] * self.YLQSbar[1,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,mif3] * self.ylbar[1,mif2] * self.YLQS[mif1,1] * self.YLQSbar[1,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif3] * self.ylbar[1,mif2] * self.YLQS[mif1,2] * self.YLQSbar[1,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif3] * self.ylbar[1,mif2] * self.YLQS[mif1,2] * self.YLQSbar[1,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,mif3] * self.ylbar[1,mif2] * self.YLQS[mif1,2] * self.YLQSbar[1,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif3] * self.ylbar[2,mif2] * self.YLQS[mif1,0] * self.YLQSbar[2,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif3] * self.ylbar[2,mif2] * self.YLQS[mif1,0] * self.YLQSbar[2,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,mif3] * self.ylbar[2,mif2] * self.YLQS[mif1,0] * self.YLQSbar[2,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif3] * self.ylbar[2,mif2] * self.YLQS[mif1,1] * self.YLQSbar[2,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif3] * self.ylbar[2,mif2] * self.YLQS[mif1,1] * self.YLQSbar[2,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,mif3] * self.ylbar[2,mif2] * self.YLQS[mif1,1] * self.YLQSbar[2,mif4] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif3] * self.ylbar[2,mif2] * self.YLQS[mif1,2] * self.YLQSbar[2,mif4] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif3] * self.ylbar[2,mif2] * self.YLQS[mif1,2] * self.YLQSbar[2,mif4] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,mif3] * self.ylbar[2,mif2] * self.YLQS[mif1,2] * self.YLQSbar[2,mif4] + 9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif4,mif3] * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif4,mif3] * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[mif4,mif3] * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] + 9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif4,mif3] * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,1] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif4,mif3] * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,1] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[mif4,mif3] * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,1] + 9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif4,mif3] * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,2] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif4,mif3] * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,2] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[mif4,mif3] * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,2] + 9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif4,mif3] * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,0] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif4,mif3] * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,0] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[mif4,mif3] * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,0] + 9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif4,mif3] * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,1] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif4,mif3] * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,1] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[mif4,mif3] * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,1] + 9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif4,mif3] * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,2] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif4,mif3] * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,2] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[mif4,mif3] * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,2] + 9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif4,mif3] * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[2,0] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif4,mif3] * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[2,0] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[mif4,mif3] * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[2,0] + 9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif4,mif3] * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[2,1] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif4,mif3] * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[2,1] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[mif4,mif3] * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[2,1] + 9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif4,mif3] * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[2,2] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif4,mif3] * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[2,2] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[mif4,mif3] * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[2,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif3] * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[mif4,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif3] * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[mif4,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,mif3] * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[mif4,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif3] * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[mif4,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif3] * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[mif4,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,mif3] * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[mif4,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif3] * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[mif4,0] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif3] * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[mif4,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,mif3] * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[mif4,0] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif3] * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[mif4,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif3] * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[mif4,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,mif3] * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[mif4,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif3] * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[mif4,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif3] * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[mif4,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,mif3] * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[mif4,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif3] * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[mif4,1] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif3] * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[mif4,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,mif3] * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[mif4,1] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif3] * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[mif4,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif3] * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[mif4,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[0,mif3] * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[mif4,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif3] * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[mif4,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif3] * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[mif4,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[1,mif3] * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[mif4,2] + -3/128 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif3] * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[mif4,2] + -1/64 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif3] * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[mif4,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.yd[2,mif3] * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[mif4,2])

    def alphaOlequ1bar(self, mif1,mif2,mif3,mif4):
        return (1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[0,0] * self.YLQS[0,mif3] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[0,0] * self.YLQS[0,mif3] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[0,0] * self.YLQS[0,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[1,0] * self.YLQS[0,mif3] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[1,0] * self.YLQS[0,mif3] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[1,0] * self.YLQS[0,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[2,0] * self.YLQS[0,mif3] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[2,0] * self.YLQS[0,mif3] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[2,0] * self.YLQS[0,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.yl[0,0] * self.ylbar[mif1,mif2] * self.YLQS[0,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.yl[0,0] * self.ylbar[mif1,mif2] * self.YLQS[0,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif4] * self.yl[0,0] * self.ylbar[mif1,mif2] * self.YLQS[0,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.yl[0,1] * self.ylbar[mif1,mif2] * self.YLQS[0,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.yl[0,1] * self.ylbar[mif1,mif2] * self.YLQS[0,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif4] * self.yl[0,1] * self.ylbar[mif1,mif2] * self.YLQS[0,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.yl[0,2] * self.ylbar[mif1,mif2] * self.YLQS[0,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.yl[0,2] * self.ylbar[mif1,mif2] * self.YLQS[0,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif4] * self.yl[0,2] * self.ylbar[mif1,mif2] * self.YLQS[0,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[0,1] * self.YLQS[1,mif3] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[0,1] * self.YLQS[1,mif3] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[0,1] * self.YLQS[1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[1,1] * self.YLQS[1,mif3] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[1,1] * self.YLQS[1,mif3] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[1,1] * self.YLQS[1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[2,1] * self.YLQS[1,mif3] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[2,1] * self.YLQS[1,mif3] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[2,1] * self.YLQS[1,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.yl[1,0] * self.ylbar[mif1,mif2] * self.YLQS[1,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.yl[1,0] * self.ylbar[mif1,mif2] * self.YLQS[1,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif4] * self.yl[1,0] * self.ylbar[mif1,mif2] * self.YLQS[1,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.yl[1,1] * self.ylbar[mif1,mif2] * self.YLQS[1,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.yl[1,1] * self.ylbar[mif1,mif2] * self.YLQS[1,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif4] * self.yl[1,1] * self.ylbar[mif1,mif2] * self.YLQS[1,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.yl[1,2] * self.ylbar[mif1,mif2] * self.YLQS[1,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.yl[1,2] * self.ylbar[mif1,mif2] * self.YLQS[1,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif4] * self.yl[1,2] * self.ylbar[mif1,mif2] * self.YLQS[1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[0,2] * self.YLQS[2,mif3] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[0,2] * self.YLQS[2,mif3] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[0,2] * self.YLQS[2,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[1,2] * self.YLQS[2,mif3] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[1,2] * self.YLQS[2,mif3] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[1,2] * self.YLQS[2,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[2,2] * self.YLQS[2,mif3] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[2,2] * self.YLQS[2,mif3] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[2,2] * self.YLQS[2,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.yl[2,0] * self.ylbar[mif1,mif2] * self.YLQS[2,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.yl[2,0] * self.ylbar[mif1,mif2] * self.YLQS[2,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif4] * self.yl[2,0] * self.ylbar[mif1,mif2] * self.YLQS[2,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.yl[2,1] * self.ylbar[mif1,mif2] * self.YLQS[2,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.yl[2,1] * self.ylbar[mif1,mif2] * self.YLQS[2,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif4] * self.yl[2,1] * self.ylbar[mif1,mif2] * self.YLQS[2,mif3] + -3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.yl[2,2] * self.ylbar[mif1,mif2] * self.YLQS[2,mif3] + -1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.yl[2,2] * self.ylbar[mif1,mif2] * self.YLQS[2,mif3] + 1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif4] * self.yl[2,2] * self.ylbar[mif1,mif2] * self.YLQS[2,mif3] + -2 * (self.MS1)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,mif3] + 25/288 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,mif3] + 5/48 * self.epsilonbar * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,mif3] + 5/48 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,mif3] + 1/8 * self.epsilonbar * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,mif3] + 5/48 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,mif3] + 5/72 * self.epsilonbar * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,mif3] + 1/8 * (self.g3)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,mif3] + 1/12 * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,mif3] + -5/48 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,mif4] * self.YLQS[mif1,mif3] + -5/72 * self.epsilonbar * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,mif4] * self.YLQS[mif1,mif3] + -1/8 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,mif4] * self.YLQS[mif1,mif3] + -1/12 * self.epsilonbar * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,mif4] * self.YLQS[mif1,mif3] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuS[mif2,0] * self.YeuSbar[0,0] * self.YLQS[mif1,mif3] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuS[mif2,0] * self.YeuSbar[0,0] * self.YLQS[mif1,mif3] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif4] * self.YeuS[mif2,0] * self.YeuSbar[0,0] * self.YLQS[mif1,mif3] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuS[mif2,1] * self.YeuSbar[0,1] * self.YLQS[mif1,mif3] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuS[mif2,1] * self.YeuSbar[0,1] * self.YLQS[mif1,mif3] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif4] * self.YeuS[mif2,1] * self.YeuSbar[0,1] * self.YLQS[mif1,mif3] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuS[mif2,2] * self.YeuSbar[0,2] * self.YLQS[mif1,mif3] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuS[mif2,2] * self.YeuSbar[0,2] * self.YLQS[mif1,mif3] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif4] * self.YeuS[mif2,2] * self.YeuSbar[0,2] * self.YLQS[mif1,mif3] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuS[mif2,0] * self.YeuSbar[1,0] * self.YLQS[mif1,mif3] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuS[mif2,0] * self.YeuSbar[1,0] * self.YLQS[mif1,mif3] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif4] * self.YeuS[mif2,0] * self.YeuSbar[1,0] * self.YLQS[mif1,mif3] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuS[mif2,1] * self.YeuSbar[1,1] * self.YLQS[mif1,mif3] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuS[mif2,1] * self.YeuSbar[1,1] * self.YLQS[mif1,mif3] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif4] * self.YeuS[mif2,1] * self.YeuSbar[1,1] * self.YLQS[mif1,mif3] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuS[mif2,2] * self.YeuSbar[1,2] * self.YLQS[mif1,mif3] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuS[mif2,2] * self.YeuSbar[1,2] * self.YLQS[mif1,mif3] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif4] * self.YeuS[mif2,2] * self.YeuSbar[1,2] * self.YLQS[mif1,mif3] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuS[mif2,0] * self.YeuSbar[2,0] * self.YLQS[mif1,mif3] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuS[mif2,0] * self.YeuSbar[2,0] * self.YLQS[mif1,mif3] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif4] * self.YeuS[mif2,0] * self.YeuSbar[2,0] * self.YLQS[mif1,mif3] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuS[mif2,1] * self.YeuSbar[2,1] * self.YLQS[mif1,mif3] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuS[mif2,1] * self.YeuSbar[2,1] * self.YLQS[mif1,mif3] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif4] * self.YeuS[mif2,1] * self.YeuSbar[2,1] * self.YLQS[mif1,mif3] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuS[mif2,2] * self.YeuSbar[2,2] * self.YLQS[mif1,mif3] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuS[mif2,2] * self.YeuSbar[2,2] * self.YLQS[mif1,mif3] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif4] * self.YeuS[mif2,2] * self.YeuSbar[2,2] * self.YLQS[mif1,mif3] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[0,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[0,0] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[0,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[0,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[0,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[0,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,0] * self.YLQS[mif3,0] * self.YLQSbar[0,0] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,0] * self.YLQS[mif3,0] * self.YLQSbar[0,0] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,mif4] * self.YLQS[mif1,0] * self.YLQS[mif3,0] * self.YLQSbar[0,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[0,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[0,1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[0,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[0,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[0,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[0,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,0] * self.YLQS[mif3,1] * self.YLQSbar[0,1] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,0] * self.YLQS[mif3,1] * self.YLQSbar[0,1] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,mif4] * self.YLQS[mif1,0] * self.YLQS[mif3,1] * self.YLQSbar[0,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[0,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[0,2] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[0,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[0,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[0,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[0,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,0] * self.YLQS[mif3,2] * self.YLQSbar[0,2] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,0] * self.YLQS[mif3,2] * self.YLQSbar[0,2] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,mif4] * self.YLQS[mif1,0] * self.YLQS[mif3,2] * self.YLQSbar[0,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[1,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[1,0] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[1,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[1,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[1,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[1,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,1] * self.YLQS[mif3,0] * self.YLQSbar[1,0] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,1] * self.YLQS[mif3,0] * self.YLQSbar[1,0] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,mif4] * self.YLQS[mif1,1] * self.YLQS[mif3,0] * self.YLQSbar[1,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[1,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[1,1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[1,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[1,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[1,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[1,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,1] * self.YLQS[mif3,1] * self.YLQSbar[1,1] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,1] * self.YLQS[mif3,1] * self.YLQSbar[1,1] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,mif4] * self.YLQS[mif1,1] * self.YLQS[mif3,1] * self.YLQSbar[1,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[1,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[1,2] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[1,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[1,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[1,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[1,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,1] * self.YLQS[mif3,2] * self.YLQSbar[1,2] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,1] * self.YLQS[mif3,2] * self.YLQSbar[1,2] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,mif4] * self.YLQS[mif1,1] * self.YLQS[mif3,2] * self.YLQSbar[1,2] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[2,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[2,0] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[2,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[2,0] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[2,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[2,0] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,2] * self.YLQS[mif3,0] * self.YLQSbar[2,0] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,2] * self.YLQS[mif3,0] * self.YLQSbar[2,0] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,mif4] * self.YLQS[mif1,2] * self.YLQS[mif3,0] * self.YLQSbar[2,0] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[2,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[2,1] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[2,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[2,1] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[2,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[2,1] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,2] * self.YLQS[mif3,1] * self.YLQSbar[2,1] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,2] * self.YLQS[mif3,1] * self.YLQSbar[2,1] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,mif4] * self.YLQS[mif1,2] * self.YLQS[mif3,1] * self.YLQSbar[2,1] + 1/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[2,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[2,2] + 1/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[2,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[2,2] + -1/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[2,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[2,2] + 3/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,2] * self.YLQS[mif3,2] * self.YLQSbar[2,2] + 3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,2] * self.YLQS[mif3,2] * self.YLQSbar[2,2] + -3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,mif4] * self.YLQS[mif1,2] * self.YLQS[mif3,2] * self.YLQSbar[2,2] + -9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] * self.yubar[mif3,mif4] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] * self.yubar[mif3,mif4] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,0] * self.yu[0,0] * self.yubar[mif3,mif4] + -9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,1] * self.yubar[mif3,mif4] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,1] * self.yubar[mif3,mif4] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,0] * self.yu[0,1] * self.yubar[mif3,mif4] + -9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,2] * self.yubar[mif3,mif4] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,2] * self.yubar[mif3,mif4] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,0] * self.yu[0,2] * self.yubar[mif3,mif4] + -9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,0] * self.yubar[mif3,mif4] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,0] * self.yubar[mif3,mif4] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,1] * self.yu[1,0] * self.yubar[mif3,mif4] + -9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,1] * self.yubar[mif3,mif4] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,1] * self.yubar[mif3,mif4] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,1] * self.yu[1,1] * self.yubar[mif3,mif4] + -9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,2] * self.yubar[mif3,mif4] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,2] * self.yubar[mif3,mif4] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,1] * self.yu[1,2] * self.yubar[mif3,mif4] + -9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[2,0] * self.yubar[mif3,mif4] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[2,0] * self.yubar[mif3,mif4] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[mif1,2] * self.yu[2,0] * self.yubar[mif3,mif4] + -9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[2,1] * self.yubar[mif3,mif4] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[2,1] * self.yubar[mif3,mif4] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[mif1,2] * self.yu[2,1] * self.yubar[mif3,mif4] + -9/64 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[2,2] * self.yubar[mif3,mif4] + -3/32 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[2,2] * self.yubar[mif3,mif4] + 3/32 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[mif1,2] * self.yu[2,2] * self.yubar[mif3,mif4])

    def alphaOlequ3bar(self, mif1,mif2,mif3,mif4):
        return (1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[0,0] * self.YLQS[0,mif3] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[0,0] * self.YLQS[0,mif3] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[0,0] * self.YLQS[0,mif3] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[1,0] * self.YLQS[0,mif3] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[1,0] * self.YLQS[0,mif3] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[1,0] * self.YLQS[0,mif3] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[2,0] * self.YLQS[0,mif3] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[2,0] * self.YLQS[0,mif3] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[2,0] * self.YLQS[0,mif3] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[0,1] * self.YLQS[1,mif3] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[0,1] * self.YLQS[1,mif3] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[0,1] * self.YLQS[1,mif3] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[1,1] * self.YLQS[1,mif3] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[1,1] * self.YLQS[1,mif3] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[1,1] * self.YLQS[1,mif3] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[2,1] * self.YLQS[1,mif3] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[2,1] * self.YLQS[1,mif3] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[2,1] * self.YLQS[1,mif3] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[0,2] * self.YLQS[2,mif3] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[0,2] * self.YLQS[2,mif3] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[0,2] * self.YLQS[2,mif3] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[1,2] * self.YLQS[2,mif3] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[1,2] * self.YLQS[2,mif3] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[1,2] * self.YLQS[2,mif3] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[2,2] * self.YLQS[2,mif3] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[2,2] * self.YLQS[2,mif3] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif1] * self.YeuS[mif2,mif4] * self.YeuSbar[2,2] * self.YLQS[2,mif3] + -1/8 * (self.MS1)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,mif3] + -5/288 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,mif3] + 5/768 * self.epsilonbar * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,mif3] + -1/48 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,mif3] + 1/128 * self.epsilonbar * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,mif3] + -5/576 * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,mif3] + 5/1152 * self.epsilonbar * (self.g1)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,mif3] + -1/96 * (self.g3)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,mif3] + 1/192 * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,mif3] + 5/576 * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,mif4] * self.YLQS[mif1,mif3] + -5/1152 * self.epsilonbar * (self.g1)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,mif4] * self.YLQS[mif1,mif3] + 1/96 * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,mif4] * self.YLQS[mif1,mif3] + -1/192 * self.epsilonbar * (self.g3)**(2) * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,mif4] * self.YLQS[mif1,mif3] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuS[mif2,0] * self.YeuSbar[0,0] * self.YLQS[mif1,mif3] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuS[mif2,0] * self.YeuSbar[0,0] * self.YLQS[mif1,mif3] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif4] * self.YeuS[mif2,0] * self.YeuSbar[0,0] * self.YLQS[mif1,mif3] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuS[mif2,1] * self.YeuSbar[0,1] * self.YLQS[mif1,mif3] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuS[mif2,1] * self.YeuSbar[0,1] * self.YLQS[mif1,mif3] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif4] * self.YeuS[mif2,1] * self.YeuSbar[0,1] * self.YLQS[mif1,mif3] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuS[mif2,2] * self.YeuSbar[0,2] * self.YLQS[mif1,mif3] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[0,mif4] * self.YeuS[mif2,2] * self.YeuSbar[0,2] * self.YLQS[mif1,mif3] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[0,mif4] * self.YeuS[mif2,2] * self.YeuSbar[0,2] * self.YLQS[mif1,mif3] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuS[mif2,0] * self.YeuSbar[1,0] * self.YLQS[mif1,mif3] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuS[mif2,0] * self.YeuSbar[1,0] * self.YLQS[mif1,mif3] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif4] * self.YeuS[mif2,0] * self.YeuSbar[1,0] * self.YLQS[mif1,mif3] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuS[mif2,1] * self.YeuSbar[1,1] * self.YLQS[mif1,mif3] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuS[mif2,1] * self.YeuSbar[1,1] * self.YLQS[mif1,mif3] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif4] * self.YeuS[mif2,1] * self.YeuSbar[1,1] * self.YLQS[mif1,mif3] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuS[mif2,2] * self.YeuSbar[1,2] * self.YLQS[mif1,mif3] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[1,mif4] * self.YeuS[mif2,2] * self.YeuSbar[1,2] * self.YLQS[mif1,mif3] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[1,mif4] * self.YeuS[mif2,2] * self.YeuSbar[1,2] * self.YLQS[mif1,mif3] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuS[mif2,0] * self.YeuSbar[2,0] * self.YLQS[mif1,mif3] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuS[mif2,0] * self.YeuSbar[2,0] * self.YLQS[mif1,mif3] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif4] * self.YeuS[mif2,0] * self.YeuSbar[2,0] * self.YLQS[mif1,mif3] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuS[mif2,1] * self.YeuSbar[2,1] * self.YLQS[mif1,mif3] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuS[mif2,1] * self.YeuSbar[2,1] * self.YLQS[mif1,mif3] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif4] * self.YeuS[mif2,1] * self.YeuSbar[2,1] * self.YLQS[mif1,mif3] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuS[mif2,2] * self.YeuSbar[2,2] * self.YLQS[mif1,mif3] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[2,mif4] * self.YeuS[mif2,2] * self.YeuSbar[2,2] * self.YLQS[mif1,mif3] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[2,mif4] * self.YeuS[mif2,2] * self.YeuSbar[2,2] * self.YLQS[mif1,mif3] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[0,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[0,0] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[0,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[0,0] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[0,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[0,0] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,0] * self.YLQS[mif3,0] * self.YLQSbar[0,0] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,0] * self.YLQS[mif3,0] * self.YLQSbar[0,0] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,mif4] * self.YLQS[mif1,0] * self.YLQS[mif3,0] * self.YLQSbar[0,0] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[0,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[0,1] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[0,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[0,1] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[0,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[0,1] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,0] * self.YLQS[mif3,1] * self.YLQSbar[0,1] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,0] * self.YLQS[mif3,1] * self.YLQSbar[0,1] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,mif4] * self.YLQS[mif1,0] * self.YLQS[mif3,1] * self.YLQSbar[0,1] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[0,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[0,2] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[0,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[0,2] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[0,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[0,2] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,0] * self.YLQS[mif3,2] * self.YLQSbar[0,2] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,0] * self.YLQS[mif3,2] * self.YLQSbar[0,2] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,mif4] * self.YLQS[mif1,0] * self.YLQS[mif3,2] * self.YLQSbar[0,2] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[1,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[1,0] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[1,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[1,0] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[1,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[1,0] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,1] * self.YLQS[mif3,0] * self.YLQSbar[1,0] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,1] * self.YLQS[mif3,0] * self.YLQSbar[1,0] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,mif4] * self.YLQS[mif1,1] * self.YLQS[mif3,0] * self.YLQSbar[1,0] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[1,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[1,1] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[1,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[1,1] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[1,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[1,1] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,1] * self.YLQS[mif3,1] * self.YLQSbar[1,1] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,1] * self.YLQS[mif3,1] * self.YLQSbar[1,1] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,mif4] * self.YLQS[mif1,1] * self.YLQS[mif3,1] * self.YLQSbar[1,1] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[1,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[1,2] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[1,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[1,2] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[1,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[1,2] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,1] * self.YLQS[mif3,2] * self.YLQSbar[1,2] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,1] * self.YLQS[mif3,2] * self.YLQSbar[1,2] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,mif4] * self.YLQS[mif1,1] * self.YLQS[mif3,2] * self.YLQSbar[1,2] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[2,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[2,0] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,0] * self.YLQS[2,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[2,0] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,0] * self.YLQS[2,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[2,0] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,2] * self.YLQS[mif3,0] * self.YLQSbar[2,0] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,2] * self.YLQS[mif3,0] * self.YLQSbar[2,0] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,mif4] * self.YLQS[mif1,2] * self.YLQS[mif3,0] * self.YLQSbar[2,0] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[2,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[2,1] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,1] * self.YLQS[2,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[2,1] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,1] * self.YLQS[2,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[2,1] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,2] * self.YLQS[mif3,1] * self.YLQSbar[2,1] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,2] * self.YLQS[mif3,1] * self.YLQSbar[2,1] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,mif4] * self.YLQS[mif1,2] * self.YLQS[mif3,1] * self.YLQSbar[2,1] + 1/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[2,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[2,2] + 1/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,2] * self.YLQS[2,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[2,2] + -1/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,2] * self.YLQS[2,mif4] * self.YLQS[mif1,mif3] * self.YLQSbar[2,2] + 3/1024 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,2] * self.YLQS[mif3,2] * self.YLQSbar[2,2] + 3/512 * self.invepsilonbar * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.YeuS[mif2,mif4] * self.YLQS[mif1,2] * self.YLQS[mif3,2] * self.YLQSbar[2,2] + -3/512 * (self.MS1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MS1)**(2) * (self.mu)**(-2)) * self.YeuS[mif2,mif4] * self.YLQS[mif1,2] * self.YLQS[mif3,2] * self.YLQSbar[2,2])

    def alphaWeinberg(self, mif1,mif2):
        return 0

    def alphaWeinbergbar(self, mif1,mif2):
        return 0
