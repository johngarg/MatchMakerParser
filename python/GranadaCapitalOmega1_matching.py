## Symbols used:
# ydbar
# yd
# aEV
# MOmega1
# iCPV
# yl
# ylbar
# yudOmega1
# g1
# yudOmega1bar
# yqqOmega1
# muH
# g2
# epsilonbar
# invepsilonbar
# yqqOmega1bar
# lam
# mu
# g3
# yubar
# onelooporder
# lambdaHatOmega1
# yu

import python.matchingresult
import numpy as np

class GranadaOmega1MatchingResult(python.matchingresult.GenericMatchingResult):
    def __init__(self, name='GranadaOmega1', scale=91.1876):
        super().__init__(name, scale)
        self.MOmega1 = 1
        self.yudOmega1 = np.ones((3, 3))
        self.yudOmega1bar = np.ones((3, 3))
        self.yqqOmega1 = np.ones((3, 3))
        self.yqqOmega1bar = np.ones((3, 3))
        self.lambdaHatOmega1 = 1
        self.lambdaHatOmega1bar = 1
        self.nonvanishing = ['alphaO3G', 'alphaOHG', 'alphaOHB', 'alphaOHBox', 'alphaOHD', 'alphaOH', 'alphaOuG', 'alphaOuW', 'alphaOuB', 'alphaOdG', 'alphaOdW', 'alphaOdB', 'alphaOHq1', 'alphaOHq3', 'alphaOHu', 'alphaOHd', 'alphaOHud', 'alphaOHl1', 'alphaOHe', 'alphaOuH', 'alphaOdH', 'alphaOqq1', 'alphaOqq3', 'alphaOuu', 'alphaOdd', 'alphaOud1', 'alphaOud8', 'alphaOqu1', 'alphaOqu8', 'alphaOqd1', 'alphaOqd8', 'alphaOquqd1', 'alphaOquqd8', 'alphaOll', 'alphaOee', 'alphaOle', 'alphaOlq1', 'alphaOlq3', 'alphaOeu', 'alphaOed', 'alphaOqe', 'alphaOlu', 'alphaOld', 'alphaOledq', 'alphaOlequ1']

    def alphaO3G(self, ):
        return 1/1152 * (self.g3)**(3) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2)

    def alphaO3Gt(self, ):
        return 0

    def alphaO3W(self, ):
        return 0

    def alphaO3Wt(self, ):
        return 0

    def alphaOHG(self, ):
        return -5/384 * (self.g3)**(2) * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2)

    def alphaOHGt(self, ):
        return 0

    def alphaOHW(self, ):
        return 0

    def alphaOHWt(self, ):
        return 0

    def alphaOHB(self, ):
        return -1/288 * (self.g1)**(2) * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2)

    def alphaOHBt(self, ):
        return 0

    def alphaOHWB(self, ):
        return 0

    def alphaOHWBt(self, ):
        return 0

    def alphaOHBox(self, ):
        return (-1/5760 * (self.g1)**(4) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) + -1/32 * (self.lambdaHatOmega1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2))

    def alphaOHD(self, ):
        return -1/1440 * (self.g1)**(4) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2)

    def alphaOH(self, ):
        return 1/16 * (self.lambdaHatOmega1)**(3) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2)

    def alphaOuG(self, mif1,mif2):
        return (-1/48 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif1] * self.yu[0,mif2] + -1/64 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif1] * self.yu[0,mif2] + -1/48 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif1] * self.yu[0,mif2] + -1/64 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif1] * self.yu[0,mif2] + -1/48 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif1] * self.yu[0,mif2] + -1/64 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif1] * self.yu[0,mif2] + -1/48 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif1] * self.yu[1,mif2] + -1/64 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif1] * self.yu[1,mif2] + -1/48 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif1] * self.yu[1,mif2] + -1/64 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif1] * self.yu[1,mif2] + -1/48 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif1] * self.yu[1,mif2] + -1/64 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif1] * self.yu[1,mif2] + -1/48 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif1] * self.yu[2,mif2] + -1/64 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif1] * self.yu[2,mif2] + -1/48 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif1] * self.yu[2,mif2] + -1/64 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif1] * self.yu[2,mif2] + -1/48 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif1] * self.yu[2,mif2] + -1/64 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif1] * self.yu[2,mif2] + 1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + -1/32 * self.g3 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + 1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + 1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + -1/32 * self.g3 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + 1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + 1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + -1/32 * self.g3 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + 1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + 1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + -1/32 * self.g3 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + 1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + 1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + -1/32 * self.g3 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + 1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + 1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + -1/32 * self.g3 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + 1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + 1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + -1/32 * self.g3 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + 1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + 1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + -1/32 * self.g3 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + 1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + 1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + -1/32 * self.g3 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + 1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + -1/192 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[0,0] + -1/256 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[0,0] + -1/192 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yudOmega1[mif2,1] * self.yudOmega1bar[0,1] + -1/256 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yudOmega1[mif2,1] * self.yudOmega1bar[0,1] + -1/192 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yudOmega1[mif2,2] * self.yudOmega1bar[0,2] + -1/256 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yudOmega1[mif2,2] * self.yudOmega1bar[0,2] + -1/192 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yudOmega1[mif2,0] * self.yudOmega1bar[1,0] + -1/256 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yudOmega1[mif2,0] * self.yudOmega1bar[1,0] + -1/192 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[1,1] + -1/256 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[1,1] + -1/192 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yudOmega1[mif2,2] * self.yudOmega1bar[1,2] + -1/256 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yudOmega1[mif2,2] * self.yudOmega1bar[1,2] + -1/192 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yudOmega1[mif2,0] * self.yudOmega1bar[2,0] + -1/256 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yudOmega1[mif2,0] * self.yudOmega1bar[2,0] + -1/192 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yudOmega1[mif2,1] * self.yudOmega1bar[2,1] + -1/256 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yudOmega1[mif2,1] * self.yudOmega1bar[2,1] + -1/192 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[2,2] + -1/256 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[2,2])

    def alphaOuW(self, mif1,mif2):
        return (-1/96 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif1] * self.yu[0,mif2] + 1/32 * self.g2 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif1] * self.yu[0,mif2] + -1/96 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif1] * self.yu[0,mif2] + 1/32 * self.g2 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif1] * self.yu[0,mif2] + -1/96 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif1] * self.yu[0,mif2] + 1/32 * self.g2 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif1] * self.yu[0,mif2] + -1/96 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif1] * self.yu[1,mif2] + 1/32 * self.g2 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif1] * self.yu[1,mif2] + -1/96 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif1] * self.yu[1,mif2] + 1/32 * self.g2 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif1] * self.yu[1,mif2] + -1/96 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif1] * self.yu[1,mif2] + 1/32 * self.g2 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif1] * self.yu[1,mif2] + -1/96 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif1] * self.yu[2,mif2] + 1/32 * self.g2 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif1] * self.yu[2,mif2] + -1/96 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif1] * self.yu[2,mif2] + 1/32 * self.g2 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif1] * self.yu[2,mif2] + -1/96 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif1] * self.yu[2,mif2] + 1/32 * self.g2 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif1] * self.yu[2,mif2] + 3/64 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + 1/32 * self.g2 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + -1/32 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + 3/64 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + 1/32 * self.g2 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + -1/32 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + 3/64 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + 1/32 * self.g2 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + -1/32 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + 3/64 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + 1/32 * self.g2 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + -1/32 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + 3/64 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + 1/32 * self.g2 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + -1/32 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + 3/64 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + 1/32 * self.g2 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + -1/32 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + 3/64 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + 1/32 * self.g2 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + -1/32 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + 3/64 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + 1/32 * self.g2 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + -1/32 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + 3/64 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + 1/32 * self.g2 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + -1/32 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2])

    def alphaOuB(self, mif1,mif2):
        return (-1/288 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif1] * self.yu[0,mif2] + -1/96 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif1] * self.yu[0,mif2] + -1/288 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif1] * self.yu[0,mif2] + -1/96 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif1] * self.yu[0,mif2] + -1/288 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif1] * self.yu[0,mif2] + -1/96 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif1] * self.yu[0,mif2] + -1/288 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif1] * self.yu[1,mif2] + -1/96 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif1] * self.yu[1,mif2] + -1/288 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif1] * self.yu[1,mif2] + -1/96 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif1] * self.yu[1,mif2] + -1/288 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif1] * self.yu[1,mif2] + -1/96 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif1] * self.yu[1,mif2] + -1/288 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif1] * self.yu[2,mif2] + -1/96 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif1] * self.yu[2,mif2] + -1/288 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif1] * self.yu[2,mif2] + -1/96 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif1] * self.yu[2,mif2] + -1/288 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif1] * self.yu[2,mif2] + -1/96 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif1] * self.yu[2,mif2] + 7/192 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + 1/96 * self.g1 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + -1/96 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + 7/192 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + 1/96 * self.g1 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + -1/96 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + 7/192 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + 1/96 * self.g1 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + -1/96 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + 7/192 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + 1/96 * self.g1 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + -1/96 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + 7/192 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + 1/96 * self.g1 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + -1/96 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + 7/192 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + 1/96 * self.g1 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + -1/96 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + 7/192 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + 1/96 * self.g1 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + -1/96 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + 7/192 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + 1/96 * self.g1 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + -1/96 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + 7/192 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + 1/96 * self.g1 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + -1/96 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + -1/288 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[0,0] + 1/192 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[0,0] + -1/288 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yudOmega1[mif2,1] * self.yudOmega1bar[0,1] + 1/192 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yudOmega1[mif2,1] * self.yudOmega1bar[0,1] + -1/288 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yudOmega1[mif2,2] * self.yudOmega1bar[0,2] + 1/192 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yudOmega1[mif2,2] * self.yudOmega1bar[0,2] + -1/288 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yudOmega1[mif2,0] * self.yudOmega1bar[1,0] + 1/192 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yudOmega1[mif2,0] * self.yudOmega1bar[1,0] + -1/288 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[1,1] + 1/192 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[1,1] + -1/288 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yudOmega1[mif2,2] * self.yudOmega1bar[1,2] + 1/192 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yudOmega1[mif2,2] * self.yudOmega1bar[1,2] + -1/288 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yudOmega1[mif2,0] * self.yudOmega1bar[2,0] + 1/192 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yudOmega1[mif2,0] * self.yudOmega1bar[2,0] + -1/288 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yudOmega1[mif2,1] * self.yudOmega1bar[2,1] + 1/192 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yudOmega1[mif2,1] * self.yudOmega1bar[2,1] + -1/288 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[2,2] + 1/192 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[2,2])

    def alphaOdG(self, mif1,mif2):
        return (-1/48 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif1] + -1/64 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif1] + -1/48 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif1] + -1/64 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif1] + -1/48 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif1] + -1/64 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif1] + -1/48 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif1] + -1/64 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif1] + -1/48 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif1] + -1/64 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif1] + -1/48 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif1] + -1/64 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif1] + -1/48 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif1] + -1/64 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif1] + -1/48 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif1] + -1/64 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif1] + -1/48 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif1] + -1/64 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif1] + -1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,mif2] + 1/32 * self.g3 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,mif2] + -1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,mif2] + -1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,mif2] + 1/32 * self.g3 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,mif2] + -1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,mif2] + -1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/32 * self.g3 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,mif2] + -1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,mif2] + -1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,mif2] + 1/32 * self.g3 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,mif2] + -1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,mif2] + -1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,mif2] + 1/32 * self.g3 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,mif2] + -1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,mif2] + -1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/32 * self.g3 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,mif2] + -1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,mif2] + -1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,mif2] + 1/32 * self.g3 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,mif2] + -1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,mif2] + -1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,mif2] + 1/32 * self.g3 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,mif2] + -1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,mif2] + -1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/32 * self.g3 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,mif2] + -1/32 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,mif2] + -1/192 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,0] + -1/256 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,0] + -1/192 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,1] + -1/256 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,1] + -1/192 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,2] + -1/256 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,2] + -1/192 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,0] + -1/256 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,0] + -1/192 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,1] + -1/256 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,1] + -1/192 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,2] + -1/256 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,2] + -1/192 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,0] + -1/256 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,0] + -1/192 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,1] + -1/256 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,1] + -1/192 * self.g3 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,2] + -1/256 * self.g3 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,2])

    def alphaOdW(self, mif1,mif2):
        return (-1/96 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif1] + 1/32 * self.g2 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif1] + -1/96 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif1] + 1/32 * self.g2 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif1] + -1/96 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif1] + 1/32 * self.g2 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif1] + -1/96 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif1] + 1/32 * self.g2 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif1] + -1/96 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif1] + 1/32 * self.g2 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif1] + -1/96 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif1] + 1/32 * self.g2 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif1] + -1/96 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif1] + 1/32 * self.g2 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif1] + -1/96 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif1] + 1/32 * self.g2 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif1] + -1/96 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif1] + 1/32 * self.g2 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif1] + -3/64 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,mif2] + -1/32 * self.g2 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,mif2] + 1/32 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,mif2] + -3/64 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,mif2] + -1/32 * self.g2 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,mif2] + 1/32 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,mif2] + -3/64 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,mif2] + -1/32 * self.g2 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/32 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,mif2] + -3/64 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,mif2] + -1/32 * self.g2 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,mif2] + 1/32 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,mif2] + -3/64 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,mif2] + -1/32 * self.g2 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,mif2] + 1/32 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,mif2] + -3/64 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,mif2] + -1/32 * self.g2 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/32 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,mif2] + -3/64 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,mif2] + -1/32 * self.g2 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,mif2] + 1/32 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,mif2] + -3/64 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,mif2] + -1/32 * self.g2 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,mif2] + 1/32 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,mif2] + -3/64 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,mif2] + -1/32 * self.g2 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/32 * self.g2 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,mif2])

    def alphaOdB(self, mif1,mif2):
        return (-1/288 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif1] + -1/96 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif1] + -1/288 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif1] + -1/96 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif1] + -1/288 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif1] + -1/96 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif1] + -1/288 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif1] + -1/96 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif1] + -1/288 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif1] + -1/96 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif1] + -1/288 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif1] + -1/96 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif1] + -1/288 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif1] + -1/96 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif1] + -1/288 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif1] + -1/96 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif1] + -1/288 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif1] + -1/96 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif1] + 11/192 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,mif2] + 5/96 * self.g1 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,mif2] + -5/96 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,mif2] + 11/192 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,mif2] + 5/96 * self.g1 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,mif2] + -5/96 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,mif2] + 11/192 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 5/96 * self.g1 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,mif2] + -5/96 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 11/192 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,mif2] + 5/96 * self.g1 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,mif2] + -5/96 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,mif2] + 11/192 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,mif2] + 5/96 * self.g1 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,mif2] + -5/96 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,mif2] + 11/192 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 5/96 * self.g1 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,mif2] + -5/96 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 11/192 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,mif2] + 5/96 * self.g1 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,mif2] + -5/96 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,mif2] + 11/192 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,mif2] + 5/96 * self.g1 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,mif2] + -5/96 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,mif2] + 11/192 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 5/96 * self.g1 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,mif2] + -5/96 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/576 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,0] + -1/96 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,0] + 1/576 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,1] + -1/96 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,1] + 1/576 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,2] + -1/96 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,2] + 1/576 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,0] + -1/96 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,0] + 1/576 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,1] + -1/96 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,1] + 1/576 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,2] + -1/96 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,2] + 1/576 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,0] + -1/96 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,0] + 1/576 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,1] + -1/96 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,1] + 1/576 * self.g1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,2] + -1/96 * self.g1 * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,2])

    def alphaOeW(self, mif1,mif2):
        return 0

    def alphaOeB(self, mif1,mif2):
        return 0

    def alphaOHq1(self, mif1,mif2):
        return (-1/8640 * (self.g1)**(4) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 11/864 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + 1/96 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + 1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -1/72 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[0,0] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[0,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[0,2] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[0,0] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[0,1] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[0,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[1,0] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[1,1] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[1,2] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] + 11/864 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + 1/96 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + 1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -1/72 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,2] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[1,0] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[1,1] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[1,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[2,0] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[2,1] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[2,2] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[2,0] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[2,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[2,2] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] + 11/864 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + 1/96 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + 1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + -1/72 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,1] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[0,0] * self.yubar[0,0] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[0,0] * self.yubar[0,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[0,0] * self.yubar[0,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[1,0] * self.yubar[0,0] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[1,0] * self.yubar[0,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[1,0] * self.yubar[0,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[2,0] * self.yubar[0,0] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[2,0] * self.yubar[0,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[2,0] * self.yubar[0,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[0,1] * self.yubar[0,1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[0,1] * self.yubar[0,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[0,1] * self.yubar[0,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[1,1] * self.yubar[0,1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[1,1] * self.yubar[0,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[1,1] * self.yubar[0,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[2,1] * self.yubar[0,1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[2,1] * self.yubar[0,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[2,1] * self.yubar[0,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[0,2] * self.yubar[0,2] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[0,2] * self.yubar[0,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[0,2] * self.yubar[0,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[1,2] * self.yubar[0,2] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[1,2] * self.yubar[0,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[1,2] * self.yubar[0,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[2,2] * self.yubar[0,2] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[2,2] * self.yubar[0,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[2,2] * self.yubar[0,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[0,0] * self.yubar[1,0] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[0,0] * self.yubar[1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[0,0] * self.yubar[1,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[1,0] * self.yubar[1,0] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[1,0] * self.yubar[1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[1,0] * self.yubar[1,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[2,0] * self.yubar[1,0] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[2,0] * self.yubar[1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[2,0] * self.yubar[1,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[0,1] * self.yubar[1,1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[0,1] * self.yubar[1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[0,1] * self.yubar[1,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[1,1] * self.yubar[1,1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[1,1] * self.yubar[1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[1,1] * self.yubar[1,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[2,1] * self.yubar[1,1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[2,1] * self.yubar[1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[2,1] * self.yubar[1,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[0,2] * self.yubar[1,2] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[0,2] * self.yubar[1,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[0,2] * self.yubar[1,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[1,2] * self.yubar[1,2] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[1,2] * self.yubar[1,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[1,2] * self.yubar[1,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[2,2] * self.yubar[1,2] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[2,2] * self.yubar[1,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[2,2] * self.yubar[1,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[0,0] * self.yubar[2,0] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[0,0] * self.yubar[2,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[0,0] * self.yubar[2,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[1,0] * self.yubar[2,0] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[1,0] * self.yubar[2,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[1,0] * self.yubar[2,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[2,0] * self.yubar[2,0] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[2,0] * self.yubar[2,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[2,0] * self.yubar[2,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[0,1] * self.yubar[2,1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[0,1] * self.yubar[2,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[0,1] * self.yubar[2,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[1,1] * self.yubar[2,1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[1,1] * self.yubar[2,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[1,1] * self.yubar[2,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[2,1] * self.yubar[2,1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[2,1] * self.yubar[2,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[2,1] * self.yubar[2,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[0,2] * self.yubar[2,2] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[0,2] * self.yubar[2,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[0,2] * self.yubar[2,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[1,2] * self.yubar[2,2] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[1,2] * self.yubar[2,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[1,2] * self.yubar[2,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[2,2] * self.yubar[2,2] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[2,2] * self.yubar[2,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[2,2] * self.yubar[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yqqOmega1[0,mif2] * self.yu[0,0] * self.yudOmega1bar[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yqqOmega1[1,mif2] * self.yu[1,0] * self.yudOmega1bar[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yqqOmega1[2,mif2] * self.yu[2,0] * self.yudOmega1bar[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yqqOmega1[0,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yqqOmega1[1,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yqqOmega1[2,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,0] * self.yudOmega1[0,0] * self.yudOmega1bar[0,0] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,0] * self.yudOmega1[0,0] * self.yudOmega1bar[0,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,1] * self.yudOmega1[0,1] * self.yudOmega1bar[0,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,2] * self.yudOmega1[0,2] * self.yudOmega1bar[0,0] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,1] * self.yudOmega1[1,0] * self.yudOmega1bar[0,0] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,2] * self.yudOmega1[2,0] * self.yudOmega1bar[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yqqOmega1[0,mif2] * self.yu[0,0] * self.yudOmega1bar[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yqqOmega1[1,mif2] * self.yu[1,0] * self.yudOmega1bar[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yqqOmega1[2,mif2] * self.yu[2,0] * self.yudOmega1bar[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yqqOmega1[0,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yqqOmega1[1,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yqqOmega1[2,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,0] * self.yudOmega1[0,0] * self.yudOmega1bar[0,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,1] * self.yudOmega1[0,1] * self.yudOmega1bar[0,1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,0] * self.yudOmega1[0,1] * self.yudOmega1bar[0,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,2] * self.yudOmega1[0,2] * self.yudOmega1bar[0,1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,1] * self.yudOmega1[1,1] * self.yudOmega1bar[0,1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,2] * self.yudOmega1[2,1] * self.yudOmega1bar[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yqqOmega1[0,mif2] * self.yu[0,0] * self.yudOmega1bar[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yqqOmega1[1,mif2] * self.yu[1,0] * self.yudOmega1bar[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yqqOmega1[2,mif2] * self.yu[2,0] * self.yudOmega1bar[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yqqOmega1[0,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yqqOmega1[1,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yqqOmega1[2,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,2] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,0] * self.yudOmega1[0,0] * self.yudOmega1bar[0,2] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,1] * self.yudOmega1[0,1] * self.yudOmega1bar[0,2] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,2] * self.yudOmega1[0,2] * self.yudOmega1bar[0,2] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,0] * self.yudOmega1[0,2] * self.yudOmega1bar[0,2] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,1] * self.yudOmega1[1,2] * self.yudOmega1bar[0,2] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,2] * self.yudOmega1[2,2] * self.yudOmega1bar[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yqqOmega1[0,mif2] * self.yu[0,1] * self.yudOmega1bar[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yqqOmega1[1,mif2] * self.yu[1,1] * self.yudOmega1bar[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yqqOmega1[2,mif2] * self.yu[2,1] * self.yudOmega1bar[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yqqOmega1[0,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yqqOmega1[1,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yqqOmega1[2,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,0] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,0] * self.yudOmega1[0,0] * self.yudOmega1bar[1,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,0] * self.yudOmega1[1,0] * self.yudOmega1bar[1,0] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,1] * self.yudOmega1[1,0] * self.yudOmega1bar[1,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,1] * self.yudOmega1[1,1] * self.yudOmega1bar[1,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,2] * self.yudOmega1[1,2] * self.yudOmega1bar[1,0] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,2] * self.yudOmega1[2,0] * self.yudOmega1bar[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yqqOmega1[0,mif2] * self.yu[0,1] * self.yudOmega1bar[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yqqOmega1[1,mif2] * self.yu[1,1] * self.yudOmega1bar[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yqqOmega1[2,mif2] * self.yu[2,1] * self.yudOmega1bar[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yqqOmega1[0,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yqqOmega1[1,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yqqOmega1[2,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,0] * self.yudOmega1[0,1] * self.yudOmega1bar[1,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,0] * self.yudOmega1[1,0] * self.yudOmega1bar[1,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,1] * self.yudOmega1[1,1] * self.yudOmega1bar[1,1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,1] * self.yudOmega1[1,1] * self.yudOmega1bar[1,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,2] * self.yudOmega1[1,2] * self.yudOmega1bar[1,1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,2] * self.yudOmega1[2,1] * self.yudOmega1bar[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yqqOmega1[0,mif2] * self.yu[0,1] * self.yudOmega1bar[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yqqOmega1[1,mif2] * self.yu[1,1] * self.yudOmega1bar[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yqqOmega1[2,mif2] * self.yu[2,1] * self.yudOmega1bar[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yqqOmega1[0,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yqqOmega1[1,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yqqOmega1[2,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,2] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,0] * self.yudOmega1[0,2] * self.yudOmega1bar[1,2] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,0] * self.yudOmega1[1,0] * self.yudOmega1bar[1,2] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,1] * self.yudOmega1[1,1] * self.yudOmega1bar[1,2] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,2] * self.yudOmega1[1,2] * self.yudOmega1bar[1,2] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,1] * self.yudOmega1[1,2] * self.yudOmega1bar[1,2] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,2] * self.yudOmega1[2,2] * self.yudOmega1bar[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yqqOmega1[0,mif2] * self.yu[0,2] * self.yudOmega1bar[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yqqOmega1[1,mif2] * self.yu[1,2] * self.yudOmega1bar[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yqqOmega1[2,mif2] * self.yu[2,2] * self.yudOmega1bar[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yqqOmega1[0,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yqqOmega1[1,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yqqOmega1[2,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,0] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,0] * self.yudOmega1[0,0] * self.yudOmega1bar[2,0] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,1] * self.yudOmega1[1,0] * self.yudOmega1bar[2,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,0] * self.yudOmega1[2,0] * self.yudOmega1bar[2,0] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,2] * self.yudOmega1[2,0] * self.yudOmega1bar[2,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,1] * self.yudOmega1[2,1] * self.yudOmega1bar[2,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,2] * self.yudOmega1[2,2] * self.yudOmega1bar[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yqqOmega1[0,mif2] * self.yu[0,2] * self.yudOmega1bar[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yqqOmega1[1,mif2] * self.yu[1,2] * self.yudOmega1bar[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yqqOmega1[2,mif2] * self.yu[2,2] * self.yudOmega1bar[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yqqOmega1[0,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yqqOmega1[1,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yqqOmega1[2,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,0] * self.yudOmega1[0,1] * self.yudOmega1bar[2,1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,1] * self.yudOmega1[1,1] * self.yudOmega1bar[2,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,0] * self.yudOmega1[2,0] * self.yudOmega1bar[2,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,1] * self.yudOmega1[2,1] * self.yudOmega1bar[2,1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,2] * self.yudOmega1[2,1] * self.yudOmega1bar[2,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,2] * self.yudOmega1[2,2] * self.yudOmega1bar[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yqqOmega1[0,mif2] * self.yu[0,2] * self.yudOmega1bar[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yqqOmega1[1,mif2] * self.yu[1,2] * self.yudOmega1bar[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yqqOmega1[2,mif2] * self.yu[2,2] * self.yudOmega1bar[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yqqOmega1[0,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yqqOmega1[1,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yqqOmega1[2,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,2] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,0] * self.yudOmega1[0,2] * self.yudOmega1bar[2,2] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,1] * self.yudOmega1[1,2] * self.yudOmega1bar[2,2] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,0] * self.yudOmega1[2,0] * self.yudOmega1bar[2,2] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,1] * self.yudOmega1[2,1] * self.yudOmega1bar[2,2] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,2] * self.yudOmega1[2,2] * self.yudOmega1bar[2,2] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,2] * self.yudOmega1[2,2] * self.yudOmega1bar[2,2])

    def alphaOHq3(self, mif1,mif2):
        return (-7/288 * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -1/32 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -1/24 * (self.g2)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + 1/24 * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[0,0] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[0,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[0,2] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[0,0] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[0,1] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[0,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[1,0] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[1,1] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[1,2] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] + -7/288 * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -1/32 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -1/24 * (self.g2)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + 1/24 * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,2] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[1,0] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[1,1] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[1,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[2,0] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[2,1] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[2,2] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[2,0] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[2,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[2,2] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] + -7/288 * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + -1/32 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + -1/24 * (self.g2)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + 1/24 * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,1] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[0,0] * self.yubar[0,0] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[0,0] * self.yubar[0,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[0,0] * self.yubar[0,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[1,0] * self.yubar[0,0] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[1,0] * self.yubar[0,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[1,0] * self.yubar[0,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[2,0] * self.yubar[0,0] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[2,0] * self.yubar[0,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[2,0] * self.yubar[0,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[0,1] * self.yubar[0,1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[0,1] * self.yubar[0,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[0,1] * self.yubar[0,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[1,1] * self.yubar[0,1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[1,1] * self.yubar[0,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[1,1] * self.yubar[0,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[2,1] * self.yubar[0,1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[2,1] * self.yubar[0,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[2,1] * self.yubar[0,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[0,2] * self.yubar[0,2] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[0,2] * self.yubar[0,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[0,2] * self.yubar[0,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[1,2] * self.yubar[0,2] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[1,2] * self.yubar[0,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[1,2] * self.yubar[0,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[2,2] * self.yubar[0,2] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[2,2] * self.yubar[0,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[2,2] * self.yubar[0,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[0,0] * self.yubar[1,0] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[0,0] * self.yubar[1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[0,0] * self.yubar[1,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[1,0] * self.yubar[1,0] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[1,0] * self.yubar[1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[1,0] * self.yubar[1,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[2,0] * self.yubar[1,0] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[2,0] * self.yubar[1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[2,0] * self.yubar[1,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[0,1] * self.yubar[1,1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[0,1] * self.yubar[1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[0,1] * self.yubar[1,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[1,1] * self.yubar[1,1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[1,1] * self.yubar[1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[1,1] * self.yubar[1,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[2,1] * self.yubar[1,1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[2,1] * self.yubar[1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[2,1] * self.yubar[1,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[0,2] * self.yubar[1,2] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[0,2] * self.yubar[1,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[0,2] * self.yubar[1,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[1,2] * self.yubar[1,2] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[1,2] * self.yubar[1,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[1,2] * self.yubar[1,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[2,2] * self.yubar[1,2] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[2,2] * self.yubar[1,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[2,2] * self.yubar[1,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[0,0] * self.yubar[2,0] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[0,0] * self.yubar[2,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[0,0] * self.yubar[2,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[1,0] * self.yubar[2,0] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[1,0] * self.yubar[2,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[1,0] * self.yubar[2,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[2,0] * self.yubar[2,0] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[2,0] * self.yubar[2,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[2,0] * self.yubar[2,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[0,1] * self.yubar[2,1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[0,1] * self.yubar[2,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[0,1] * self.yubar[2,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[1,1] * self.yubar[2,1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[1,1] * self.yubar[2,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[1,1] * self.yubar[2,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[2,1] * self.yubar[2,1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[2,1] * self.yubar[2,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[2,1] * self.yubar[2,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[0,2] * self.yubar[2,2] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[0,2] * self.yubar[2,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[0,2] * self.yubar[2,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[1,2] * self.yubar[2,2] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[1,2] * self.yubar[2,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[1,2] * self.yubar[2,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[2,2] * self.yubar[2,2] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[2,2] * self.yubar[2,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[2,2] * self.yubar[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,0] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,0] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,0] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,1] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,1] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,1] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,2] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,2] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,2] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,0] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,0] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,0] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,1] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,1] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,1] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,2] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,2] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,2] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,0] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,0] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,0] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,1] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,1] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,1] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,2] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,2] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,2] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yqqOmega1[0,mif2] * self.yu[0,0] * self.yudOmega1bar[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yqqOmega1[1,mif2] * self.yu[1,0] * self.yudOmega1bar[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yqqOmega1[2,mif2] * self.yu[2,0] * self.yudOmega1bar[0,0] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yqqOmega1[0,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,0] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yqqOmega1[1,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,0] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yqqOmega1[2,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,0] * self.yudOmega1[0,0] * self.yudOmega1bar[0,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,0] * self.yudOmega1[0,0] * self.yudOmega1bar[0,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,1] * self.yudOmega1[0,1] * self.yudOmega1bar[0,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,2] * self.yudOmega1[0,2] * self.yudOmega1bar[0,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,1] * self.yudOmega1[1,0] * self.yudOmega1bar[0,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,2] * self.yudOmega1[2,0] * self.yudOmega1bar[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yqqOmega1[0,mif2] * self.yu[0,0] * self.yudOmega1bar[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yqqOmega1[1,mif2] * self.yu[1,0] * self.yudOmega1bar[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yqqOmega1[2,mif2] * self.yu[2,0] * self.yudOmega1bar[0,1] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yqqOmega1[0,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,1] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yqqOmega1[1,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,1] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yqqOmega1[2,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,0] * self.yudOmega1[0,0] * self.yudOmega1bar[0,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,1] * self.yudOmega1[0,1] * self.yudOmega1bar[0,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,0] * self.yudOmega1[0,1] * self.yudOmega1bar[0,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,2] * self.yudOmega1[0,2] * self.yudOmega1bar[0,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,1] * self.yudOmega1[1,1] * self.yudOmega1bar[0,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,2] * self.yudOmega1[2,1] * self.yudOmega1bar[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yqqOmega1[0,mif2] * self.yu[0,0] * self.yudOmega1bar[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yqqOmega1[1,mif2] * self.yu[1,0] * self.yudOmega1bar[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yqqOmega1[2,mif2] * self.yu[2,0] * self.yudOmega1bar[0,2] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yqqOmega1[0,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,2] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yqqOmega1[1,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,2] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yqqOmega1[2,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,2] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,0] * self.yudOmega1[0,0] * self.yudOmega1bar[0,2] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,1] * self.yudOmega1[0,1] * self.yudOmega1bar[0,2] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,2] * self.yudOmega1[0,2] * self.yudOmega1bar[0,2] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,0] * self.yudOmega1[0,2] * self.yudOmega1bar[0,2] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,1] * self.yudOmega1[1,2] * self.yudOmega1bar[0,2] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,2] * self.yudOmega1[2,2] * self.yudOmega1bar[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yqqOmega1[0,mif2] * self.yu[0,1] * self.yudOmega1bar[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yqqOmega1[1,mif2] * self.yu[1,1] * self.yudOmega1bar[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yqqOmega1[2,mif2] * self.yu[2,1] * self.yudOmega1bar[1,0] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yqqOmega1[0,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,0] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yqqOmega1[1,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,0] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yqqOmega1[2,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,0] * self.yudOmega1[0,0] * self.yudOmega1bar[1,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,0] * self.yudOmega1[1,0] * self.yudOmega1bar[1,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,1] * self.yudOmega1[1,0] * self.yudOmega1bar[1,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,1] * self.yudOmega1[1,1] * self.yudOmega1bar[1,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,2] * self.yudOmega1[1,2] * self.yudOmega1bar[1,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,2] * self.yudOmega1[2,0] * self.yudOmega1bar[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yqqOmega1[0,mif2] * self.yu[0,1] * self.yudOmega1bar[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yqqOmega1[1,mif2] * self.yu[1,1] * self.yudOmega1bar[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yqqOmega1[2,mif2] * self.yu[2,1] * self.yudOmega1bar[1,1] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yqqOmega1[0,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,1] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yqqOmega1[1,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,1] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yqqOmega1[2,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,0] * self.yudOmega1[0,1] * self.yudOmega1bar[1,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,0] * self.yudOmega1[1,0] * self.yudOmega1bar[1,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,1] * self.yudOmega1[1,1] * self.yudOmega1bar[1,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,1] * self.yudOmega1[1,1] * self.yudOmega1bar[1,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,2] * self.yudOmega1[1,2] * self.yudOmega1bar[1,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,2] * self.yudOmega1[2,1] * self.yudOmega1bar[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yqqOmega1[0,mif2] * self.yu[0,1] * self.yudOmega1bar[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yqqOmega1[1,mif2] * self.yu[1,1] * self.yudOmega1bar[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yqqOmega1[2,mif2] * self.yu[2,1] * self.yudOmega1bar[1,2] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yqqOmega1[0,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,2] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yqqOmega1[1,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,2] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yqqOmega1[2,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,2] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,0] * self.yudOmega1[0,2] * self.yudOmega1bar[1,2] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,0] * self.yudOmega1[1,0] * self.yudOmega1bar[1,2] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,1] * self.yudOmega1[1,1] * self.yudOmega1bar[1,2] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,2] * self.yudOmega1[1,2] * self.yudOmega1bar[1,2] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,1] * self.yudOmega1[1,2] * self.yudOmega1bar[1,2] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,2] * self.yudOmega1[2,2] * self.yudOmega1bar[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yqqOmega1[0,mif2] * self.yu[0,2] * self.yudOmega1bar[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yqqOmega1[1,mif2] * self.yu[1,2] * self.yudOmega1bar[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yqqOmega1[2,mif2] * self.yu[2,2] * self.yudOmega1bar[2,0] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yqqOmega1[0,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,0] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yqqOmega1[1,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,0] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yqqOmega1[2,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,0] * self.yudOmega1[0,0] * self.yudOmega1bar[2,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,1] * self.yudOmega1[1,0] * self.yudOmega1bar[2,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,0] * self.yudOmega1[2,0] * self.yudOmega1bar[2,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,2] * self.yudOmega1[2,0] * self.yudOmega1bar[2,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,1] * self.yudOmega1[2,1] * self.yudOmega1bar[2,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,2] * self.yudOmega1[2,2] * self.yudOmega1bar[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yqqOmega1[0,mif2] * self.yu[0,2] * self.yudOmega1bar[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yqqOmega1[1,mif2] * self.yu[1,2] * self.yudOmega1bar[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yqqOmega1[2,mif2] * self.yu[2,2] * self.yudOmega1bar[2,1] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yqqOmega1[0,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,1] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yqqOmega1[1,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,1] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yqqOmega1[2,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,0] * self.yudOmega1[0,1] * self.yudOmega1bar[2,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,1] * self.yudOmega1[1,1] * self.yudOmega1bar[2,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,0] * self.yudOmega1[2,0] * self.yudOmega1bar[2,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,1] * self.yudOmega1[2,1] * self.yudOmega1bar[2,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,2] * self.yudOmega1[2,1] * self.yudOmega1bar[2,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,2] * self.yudOmega1[2,2] * self.yudOmega1bar[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yqqOmega1[0,mif2] * self.yu[0,2] * self.yudOmega1bar[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yqqOmega1[1,mif2] * self.yu[1,2] * self.yudOmega1bar[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yqqOmega1[2,mif2] * self.yu[2,2] * self.yudOmega1bar[2,2] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yqqOmega1[0,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,2] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yqqOmega1[1,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,2] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yqqOmega1[2,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,2] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,0] * self.yudOmega1[0,2] * self.yudOmega1bar[2,2] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,1] * self.yudOmega1[1,2] * self.yudOmega1bar[2,2] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,0] * self.yudOmega1[2,0] * self.yudOmega1bar[2,2] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,1] * self.yudOmega1[2,1] * self.yudOmega1bar[2,2] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,2] * self.yudOmega1[2,2] * self.yudOmega1bar[2,2] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,2] * self.yudOmega1[2,2] * self.yudOmega1bar[2,2])

    def alphaOHu(self, mif1,mif2):
        return (-1/2160 * (self.g1)**(4) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,0] * self.yu[0,mif2] * self.yubar[0,mif1] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,0] * self.yu[0,mif2] * self.yubar[0,mif1] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,0] * self.yu[0,mif2] * self.yubar[0,mif1] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,0] * self.yu[1,mif2] * self.yubar[0,mif1] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,0] * self.yu[1,mif2] * self.yubar[0,mif1] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,0] * self.yu[1,mif2] * self.yubar[0,mif1] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,0] * self.yu[2,mif2] * self.yubar[0,mif1] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,0] * self.yu[2,mif2] * self.yubar[0,mif1] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,0] * self.yu[2,mif2] * self.yubar[0,mif1] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,1] * self.yu[0,mif2] * self.yubar[1,mif1] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,1] * self.yu[0,mif2] * self.yubar[1,mif1] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,1] * self.yu[0,mif2] * self.yubar[1,mif1] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,1] * self.yu[1,mif2] * self.yubar[1,mif1] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,1] * self.yu[1,mif2] * self.yubar[1,mif1] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,1] * self.yu[1,mif2] * self.yubar[1,mif1] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,1] * self.yu[2,mif2] * self.yubar[1,mif1] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,1] * self.yu[2,mif2] * self.yubar[1,mif1] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,1] * self.yu[2,mif2] * self.yubar[1,mif1] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,2] * self.yu[0,mif2] * self.yubar[2,mif1] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,2] * self.yu[0,mif2] * self.yubar[2,mif1] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,2] * self.yu[0,mif2] * self.yubar[2,mif1] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,2] * self.yu[1,mif2] * self.yubar[2,mif1] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,2] * self.yu[1,mif2] * self.yubar[2,mif1] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,2] * self.yu[1,mif2] * self.yubar[2,mif1] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,2] * self.yu[2,mif2] * self.yubar[2,mif1] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,2] * self.yu[2,mif2] * self.yubar[2,mif1] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,2] * self.yu[2,mif2] * self.yubar[2,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,0] * self.yubar[0,mif1] * self.yudOmega1[mif2,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,0] * self.yubar[0,mif1] * self.yudOmega1[mif2,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,0] * self.yubar[0,mif1] * self.yudOmega1[mif2,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,1] * self.yubar[1,mif1] * self.yudOmega1[mif2,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,1] * self.yubar[1,mif1] * self.yudOmega1[mif2,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,1] * self.yubar[1,mif1] * self.yudOmega1[mif2,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,2] * self.yubar[2,mif1] * self.yudOmega1[mif2,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,2] * self.yubar[2,mif1] * self.yudOmega1[mif2,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,2] * self.yubar[2,mif1] * self.yudOmega1[mif2,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,0] * self.yubar[0,mif1] * self.yudOmega1[mif2,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,0] * self.yubar[0,mif1] * self.yudOmega1[mif2,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,0] * self.yubar[0,mif1] * self.yudOmega1[mif2,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,1] * self.yubar[1,mif1] * self.yudOmega1[mif2,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,1] * self.yubar[1,mif1] * self.yudOmega1[mif2,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,1] * self.yubar[1,mif1] * self.yudOmega1[mif2,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,2] * self.yubar[2,mif1] * self.yudOmega1[mif2,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,2] * self.yubar[2,mif1] * self.yudOmega1[mif2,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,2] * self.yubar[2,mif1] * self.yudOmega1[mif2,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,0] * self.yubar[0,mif1] * self.yudOmega1[mif2,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,0] * self.yubar[0,mif1] * self.yudOmega1[mif2,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,0] * self.yubar[0,mif1] * self.yudOmega1[mif2,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,1] * self.yubar[1,mif1] * self.yudOmega1[mif2,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,1] * self.yubar[1,mif1] * self.yudOmega1[mif2,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,1] * self.yubar[1,mif1] * self.yudOmega1[mif2,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,2] * self.yubar[2,mif1] * self.yudOmega1[mif2,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,2] * self.yubar[2,mif1] * self.yudOmega1[mif2,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,2] * self.yubar[2,mif1] * self.yudOmega1[mif2,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yqqOmega1[0,0] * self.yu[0,mif2] * self.yudOmega1bar[mif1,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yqqOmega1[1,0] * self.yu[0,mif2] * self.yudOmega1bar[mif1,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yqqOmega1[2,0] * self.yu[0,mif2] * self.yudOmega1bar[mif1,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yqqOmega1[0,1] * self.yu[1,mif2] * self.yudOmega1bar[mif1,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yqqOmega1[1,1] * self.yu[1,mif2] * self.yudOmega1bar[mif1,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yqqOmega1[2,1] * self.yu[1,mif2] * self.yudOmega1bar[mif1,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yqqOmega1[0,2] * self.yu[2,mif2] * self.yudOmega1bar[mif1,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yqqOmega1[1,2] * self.yu[2,mif2] * self.yudOmega1bar[mif1,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yqqOmega1[2,2] * self.yu[2,mif2] * self.yudOmega1bar[mif1,0] + -5/1728 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,0] + -1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,0] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,0] + 1/144 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,0] + 1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,0] + 1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,0] + 1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,0] + 1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,0] + 1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,0] + 1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,0] + 1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,0] + 1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,0] + 1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yqqOmega1[0,0] * self.yu[0,mif2] * self.yudOmega1bar[mif1,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yqqOmega1[1,0] * self.yu[0,mif2] * self.yudOmega1bar[mif1,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yqqOmega1[2,0] * self.yu[0,mif2] * self.yudOmega1bar[mif1,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yqqOmega1[0,1] * self.yu[1,mif2] * self.yudOmega1bar[mif1,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yqqOmega1[1,1] * self.yu[1,mif2] * self.yudOmega1bar[mif1,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yqqOmega1[2,1] * self.yu[1,mif2] * self.yudOmega1bar[mif1,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yqqOmega1[0,2] * self.yu[2,mif2] * self.yudOmega1bar[mif1,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yqqOmega1[1,2] * self.yu[2,mif2] * self.yudOmega1bar[mif1,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yqqOmega1[2,2] * self.yu[2,mif2] * self.yudOmega1bar[mif1,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,1] + 1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,1] + 1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,1] + 1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,1] + -5/1728 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,1] + -1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,1] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,1] + 1/144 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,1] + 1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,1] + 1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,1] + 1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,1] + 1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,1] + 1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,1] + 1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yqqOmega1[0,0] * self.yu[0,mif2] * self.yudOmega1bar[mif1,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yqqOmega1[1,0] * self.yu[0,mif2] * self.yudOmega1bar[mif1,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yqqOmega1[2,0] * self.yu[0,mif2] * self.yudOmega1bar[mif1,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yqqOmega1[0,1] * self.yu[1,mif2] * self.yudOmega1bar[mif1,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yqqOmega1[1,1] * self.yu[1,mif2] * self.yudOmega1bar[mif1,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yqqOmega1[2,1] * self.yu[1,mif2] * self.yudOmega1bar[mif1,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yqqOmega1[0,2] * self.yu[2,mif2] * self.yudOmega1bar[mif1,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yqqOmega1[1,2] * self.yu[2,mif2] * self.yudOmega1bar[mif1,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yqqOmega1[2,2] * self.yu[2,mif2] * self.yudOmega1bar[mif1,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,2] + 1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,2] + 1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,2] + 1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,2] + 1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,2] + 1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,2] + 1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,2] + -5/1728 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,2] + -1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,2] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,2] + 1/144 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,2] + 1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,2] + 1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,2] + 1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,2])

    def alphaOHd(self, mif1,mif2):
        return (1/4320 * (self.g1)**(4) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,mif1] * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[0,mif1] * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[0,mif1] * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[1,mif1] * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,mif1] * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[1,mif1] * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[2,mif1] * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[2,mif1] * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,mif1] * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,mif1] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[0,mif1] * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[0,mif1] * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[1,mif1] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,mif1] * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[1,mif1] * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[2,mif1] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[2,mif1] * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,mif1] * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,mif1] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[0,mif1] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[0,mif1] * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[1,mif1] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,mif1] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[1,mif1] * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[2,mif1] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[2,mif1] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,mif1] * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif1] * self.yqqOmega1bar[0,0] * self.yubar[0,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif1] * self.yqqOmega1bar[0,1] * self.yubar[0,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif1] * self.yqqOmega1bar[0,2] * self.yubar[0,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif1] * self.yqqOmega1bar[1,0] * self.yubar[1,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif1] * self.yqqOmega1bar[1,1] * self.yubar[1,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif1] * self.yqqOmega1bar[1,2] * self.yubar[1,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif1] * self.yqqOmega1bar[2,0] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif1] * self.yqqOmega1bar[2,1] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif1] * self.yqqOmega1bar[2,2] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif1] * self.yqqOmega1bar[0,0] * self.yubar[0,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif1] * self.yqqOmega1bar[0,1] * self.yubar[0,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif1] * self.yqqOmega1bar[0,2] * self.yubar[0,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif1] * self.yqqOmega1bar[1,0] * self.yubar[1,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif1] * self.yqqOmega1bar[1,1] * self.yubar[1,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif1] * self.yqqOmega1bar[1,2] * self.yubar[1,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif1] * self.yqqOmega1bar[2,0] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif1] * self.yqqOmega1bar[2,1] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif1] * self.yqqOmega1bar[2,2] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif1] * self.yqqOmega1bar[0,0] * self.yubar[0,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif1] * self.yqqOmega1bar[0,1] * self.yubar[0,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif1] * self.yqqOmega1bar[0,2] * self.yubar[0,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif1] * self.yqqOmega1bar[1,0] * self.yubar[1,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif1] * self.yqqOmega1bar[1,1] * self.yubar[1,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif1] * self.yqqOmega1bar[1,2] * self.yubar[1,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif1] * self.yqqOmega1bar[2,0] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif1] * self.yqqOmega1bar[2,1] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif1] * self.yqqOmega1bar[2,2] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[0,0] * self.yu[0,0] * self.yudOmega1bar[0,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[0,1] * self.yu[0,0] * self.yudOmega1bar[0,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[0,2] * self.yu[0,0] * self.yudOmega1bar[0,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[1,0] * self.yu[1,0] * self.yudOmega1bar[0,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[1,1] * self.yu[1,0] * self.yudOmega1bar[0,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[1,2] * self.yu[1,0] * self.yudOmega1bar[0,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[2,0] * self.yu[2,0] * self.yudOmega1bar[0,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[2,1] * self.yu[2,0] * self.yudOmega1bar[0,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[2,2] * self.yu[2,0] * self.yudOmega1bar[0,mif1] + 1/108 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,mif1] + 1/96 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,mif1] + 1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,mif1] + -1/72 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,mif1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[0,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[0,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[0,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,mif1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[1,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[1,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[1,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,mif1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[2,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[2,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[2,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,mif1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[0,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[0,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[0,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[0,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[0,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[0,mif1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[1,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[0,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[1,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[0,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[1,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[0,mif1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[2,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[0,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[2,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[0,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[2,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[0,mif1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[0,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[0,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[0,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[0,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[0,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[0,mif1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[1,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[0,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[1,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[0,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[1,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[0,mif1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[2,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[0,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[2,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[0,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[2,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[0,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[0,0] * self.yu[0,1] * self.yudOmega1bar[1,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[0,1] * self.yu[0,1] * self.yudOmega1bar[1,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[0,2] * self.yu[0,1] * self.yudOmega1bar[1,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[1,0] * self.yu[1,1] * self.yudOmega1bar[1,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[1,1] * self.yu[1,1] * self.yudOmega1bar[1,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[1,2] * self.yu[1,1] * self.yudOmega1bar[1,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[2,0] * self.yu[2,1] * self.yudOmega1bar[1,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[2,1] * self.yu[2,1] * self.yudOmega1bar[1,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[2,2] * self.yu[2,1] * self.yudOmega1bar[1,mif1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[0,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[1,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[0,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[1,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[0,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[1,mif1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[1,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[1,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[1,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[1,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[1,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[1,mif1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[2,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[1,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[2,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[1,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[2,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[1,mif1] + 1/108 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,mif1] + 1/96 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,mif1] + 1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,mif1] + -1/72 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,mif1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[0,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[0,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[0,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,mif1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[1,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[1,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[1,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,mif1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[2,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[2,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[2,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,mif1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[0,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[1,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[0,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[1,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[0,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[1,mif1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[1,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[1,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[1,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[1,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[1,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[1,mif1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[2,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[1,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[2,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[1,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[2,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[1,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[0,0] * self.yu[0,2] * self.yudOmega1bar[2,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[0,1] * self.yu[0,2] * self.yudOmega1bar[2,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[0,2] * self.yu[0,2] * self.yudOmega1bar[2,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[1,0] * self.yu[1,2] * self.yudOmega1bar[2,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[1,1] * self.yu[1,2] * self.yudOmega1bar[2,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[1,2] * self.yu[1,2] * self.yudOmega1bar[2,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[2,0] * self.yu[2,2] * self.yudOmega1bar[2,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[2,1] * self.yu[2,2] * self.yudOmega1bar[2,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[2,2] * self.yu[2,2] * self.yudOmega1bar[2,mif1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[0,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[2,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[0,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[2,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[0,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[2,mif1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[1,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[2,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[1,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[2,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[1,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[2,mif1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[2,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[2,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[2,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[2,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[2,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[2,mif1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[0,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[2,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[0,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[2,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[0,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[2,mif1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[1,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[2,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[1,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[2,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[1,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[2,mif1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[2,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[2,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[2,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[2,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[2,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[2,mif1] + 1/108 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,mif1] + 1/96 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,mif1] + 1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,mif1] + -1/72 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,mif1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[0,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[0,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[0,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,mif1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[1,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[1,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[1,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,mif1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[2,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[2,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[2,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,mif1])

    def alphaOHud(self, mif1,mif2):
        return (1/12 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,0] * self.yubar[0,mif1] + 1/12 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,0] * self.yubar[0,mif1] + 1/12 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,0] * self.yubar[0,mif1] + 1/12 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,0] * self.yubar[0,mif1] + 1/12 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,0] * self.yubar[0,mif1] + 1/12 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,0] * self.yubar[0,mif1] + 1/12 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,0] * self.yubar[0,mif1] + 1/12 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,0] * self.yubar[0,mif1] + 1/12 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,0] * self.yubar[0,mif1] + 1/12 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,1] * self.yubar[1,mif1] + 1/12 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,1] * self.yubar[1,mif1] + 1/12 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,1] * self.yubar[1,mif1] + 1/12 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,1] * self.yubar[1,mif1] + 1/12 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,1] * self.yubar[1,mif1] + 1/12 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,1] * self.yubar[1,mif1] + 1/12 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,1] * self.yubar[1,mif1] + 1/12 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,1] * self.yubar[1,mif1] + 1/12 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,1] * self.yubar[1,mif1] + 1/12 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,2] * self.yubar[2,mif1] + 1/12 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,2] * self.yubar[2,mif1] + 1/12 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,2] * self.yubar[2,mif1] + 1/12 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,2] * self.yubar[2,mif1] + 1/12 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,2] * self.yubar[2,mif1] + 1/12 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,2] * self.yubar[2,mif1] + 1/12 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,2] * self.yubar[2,mif1] + 1/12 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,2] * self.yubar[2,mif1] + 1/12 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,2] * self.yubar[2,mif1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,0] * self.yubar[0,0] * self.yubar[0,mif1] * self.yudOmega1[0,mif2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,0] * self.yubar[0,mif1] * self.yubar[1,0] * self.yudOmega1[0,mif2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,1] * self.yubar[0,0] * self.yubar[1,mif1] * self.yudOmega1[0,mif2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,1] * self.yubar[1,0] * self.yubar[1,mif1] * self.yudOmega1[0,mif2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,0] * self.yubar[0,mif1] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,1] * self.yubar[1,mif1] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,2] * self.yubar[0,0] * self.yubar[2,mif1] * self.yudOmega1[0,mif2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,2] * self.yubar[1,0] * self.yubar[2,mif1] * self.yudOmega1[0,mif2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,2] * self.yubar[2,0] * self.yubar[2,mif1] * self.yudOmega1[0,mif2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,0] * self.yubar[0,1] * self.yubar[0,mif1] * self.yudOmega1[1,mif2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,0] * self.yubar[0,mif1] * self.yubar[1,1] * self.yudOmega1[1,mif2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,1] * self.yubar[0,1] * self.yubar[1,mif1] * self.yudOmega1[1,mif2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,1] * self.yubar[1,1] * self.yubar[1,mif1] * self.yudOmega1[1,mif2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,0] * self.yubar[0,mif1] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,1] * self.yubar[1,mif1] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,2] * self.yubar[0,1] * self.yubar[2,mif1] * self.yudOmega1[1,mif2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,2] * self.yubar[1,1] * self.yubar[2,mif1] * self.yudOmega1[1,mif2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,2] * self.yubar[2,1] * self.yubar[2,mif1] * self.yudOmega1[1,mif2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,0] * self.yubar[0,2] * self.yubar[0,mif1] * self.yudOmega1[2,mif2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,0] * self.yubar[0,mif1] * self.yubar[1,2] * self.yudOmega1[2,mif2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,1] * self.yubar[0,2] * self.yubar[1,mif1] * self.yudOmega1[2,mif2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,1] * self.yubar[1,2] * self.yubar[1,mif1] * self.yudOmega1[2,mif2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,0] * self.yubar[0,mif1] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,1] * self.yubar[1,mif1] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,2] * self.yubar[0,2] * self.yubar[2,mif1] * self.yudOmega1[2,mif2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,2] * self.yubar[1,2] * self.yubar[2,mif1] * self.yudOmega1[2,mif2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,2] * self.yubar[2,2] * self.yubar[2,mif1] * self.yudOmega1[2,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[0,mif2] * self.yqqOmega1[0,0] * self.yudOmega1bar[mif1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[1,mif2] * self.yqqOmega1[0,1] * self.yudOmega1bar[mif1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[2,mif2] * self.yqqOmega1[0,2] * self.yudOmega1bar[mif1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,0] * self.yqqOmega1[1,0] * self.yudOmega1bar[mif1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[1,mif2] * self.yqqOmega1[1,1] * self.yudOmega1bar[mif1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[2,mif2] * self.yqqOmega1[1,2] * self.yudOmega1bar[mif1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,0] * self.yqqOmega1[2,0] * self.yudOmega1bar[mif1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,0] * self.yqqOmega1[2,1] * self.yudOmega1bar[mif1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yd[2,mif2] * self.yqqOmega1[2,2] * self.yudOmega1bar[mif1,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yubar[0,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[mif1,0] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yubar[0,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[mif1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yubar[0,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[mif1,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yubar[1,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[mif1,0] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yubar[1,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[mif1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yubar[1,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[mif1,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yubar[2,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[mif1,0] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yubar[2,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[mif1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yubar[2,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[mif1,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yubar[0,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[mif1,0] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yubar[0,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[mif1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yubar[0,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[mif1,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yubar[1,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[mif1,0] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yubar[1,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[mif1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yubar[1,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[mif1,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yubar[2,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[mif1,0] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yubar[2,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[mif1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yubar[2,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[mif1,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yubar[0,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[mif1,0] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yubar[0,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[mif1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yubar[0,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[mif1,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yubar[1,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[mif1,0] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yubar[1,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[mif1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yubar[1,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[mif1,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yubar[2,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[mif1,0] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yubar[2,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[mif1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yubar[2,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[mif1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[0,mif2] * self.yqqOmega1[0,0] * self.yudOmega1bar[mif1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[1,mif2] * self.yqqOmega1[0,1] * self.yudOmega1bar[mif1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[2,mif2] * self.yqqOmega1[0,2] * self.yudOmega1bar[mif1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,1] * self.yqqOmega1[1,0] * self.yudOmega1bar[mif1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[1,mif2] * self.yqqOmega1[1,1] * self.yudOmega1bar[mif1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[2,mif2] * self.yqqOmega1[1,2] * self.yudOmega1bar[mif1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,1] * self.yqqOmega1[2,0] * self.yudOmega1bar[mif1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,1] * self.yqqOmega1[2,1] * self.yudOmega1bar[mif1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yd[2,mif2] * self.yqqOmega1[2,2] * self.yudOmega1bar[mif1,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yubar[0,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[mif1,1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yubar[0,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[mif1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yubar[0,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[mif1,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yubar[1,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[mif1,1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yubar[1,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[mif1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yubar[1,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[mif1,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yubar[2,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[mif1,1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yubar[2,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[mif1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.yubar[2,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[mif1,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yubar[0,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[mif1,1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yubar[0,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[mif1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yubar[0,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[mif1,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yubar[1,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[mif1,1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yubar[1,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[mif1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yubar[1,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[mif1,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yubar[2,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[mif1,1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yubar[2,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[mif1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.yubar[2,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[mif1,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yubar[0,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[mif1,1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yubar[0,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[mif1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yubar[0,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[mif1,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yubar[1,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[mif1,1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yubar[1,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[mif1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yubar[1,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[mif1,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yubar[2,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[mif1,1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yubar[2,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[mif1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.yubar[2,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[mif1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[0,mif2] * self.yqqOmega1[0,0] * self.yudOmega1bar[mif1,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[1,mif2] * self.yqqOmega1[0,1] * self.yudOmega1bar[mif1,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[2,mif2] * self.yqqOmega1[0,2] * self.yudOmega1bar[mif1,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,2] * self.yqqOmega1[1,0] * self.yudOmega1bar[mif1,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[1,mif2] * self.yqqOmega1[1,1] * self.yudOmega1bar[mif1,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[2,mif2] * self.yqqOmega1[1,2] * self.yudOmega1bar[mif1,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,2] * self.yqqOmega1[2,0] * self.yudOmega1bar[mif1,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,2] * self.yqqOmega1[2,1] * self.yudOmega1bar[mif1,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yd[2,mif2] * self.yqqOmega1[2,2] * self.yudOmega1bar[mif1,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yubar[0,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[mif1,2] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yubar[0,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[mif1,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yubar[0,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[mif1,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yubar[1,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[mif1,2] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yubar[1,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[mif1,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yubar[1,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[mif1,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yubar[2,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[mif1,2] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yubar[2,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[mif1,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.yubar[2,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[mif1,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yubar[0,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[mif1,2] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yubar[0,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[mif1,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yubar[0,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[mif1,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yubar[1,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[mif1,2] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yubar[1,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[mif1,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yubar[1,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[mif1,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yubar[2,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[mif1,2] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yubar[2,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[mif1,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.yubar[2,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[mif1,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yubar[0,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[mif1,2] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yubar[0,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[mif1,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yubar[0,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[mif1,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yubar[1,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[mif1,2] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yubar[1,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[mif1,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yubar[1,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[mif1,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yubar[2,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[mif1,2] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yubar[2,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[mif1,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.yubar[2,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[mif1,2])

    def alphaOHl1(self, mif1,mif2):
        return 1/2880 * (self.g1)**(4) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2)

    def alphaOHl3(self, mif1,mif2):
        return 0

    def alphaOHe(self, mif1,mif2):
        return 1/1440 * (self.g1)**(4) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2)

    def alphaOuH(self, mif1,mif2):
        return (1/8 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif1] * self.yu[0,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif1] * self.yu[0,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif1] * self.yu[0,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif1] * self.yu[0,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yqqOmega1[1,0] * self.yqqOmega1bar[0,mif1] * self.yu[0,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yqqOmega1[1,0] * self.yqqOmega1bar[0,mif1] * self.yu[0,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[0,mif1] * self.yu[0,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yqqOmega1[2,0] * self.yqqOmega1bar[0,mif1] * self.yu[0,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yqqOmega1[2,0] * self.yqqOmega1bar[0,mif1] * self.yu[0,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[0,mif1] * self.yu[0,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yqqOmega1[0,0] * self.yqqOmega1bar[1,mif1] * self.yu[0,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yqqOmega1[0,0] * self.yqqOmega1bar[1,mif1] * self.yu[0,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yqqOmega1[0,0] * self.yqqOmega1bar[1,mif1] * self.yu[0,mif2] + 1/8 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif1] * self.yu[0,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif1] * self.yu[0,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif1] * self.yu[0,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif1] * self.yu[0,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yqqOmega1[2,0] * self.yqqOmega1bar[1,mif1] * self.yu[0,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yqqOmega1[2,0] * self.yqqOmega1bar[1,mif1] * self.yu[0,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[1,mif1] * self.yu[0,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yqqOmega1[0,0] * self.yqqOmega1bar[2,mif1] * self.yu[0,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yqqOmega1[0,0] * self.yqqOmega1bar[2,mif1] * self.yu[0,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yqqOmega1[0,0] * self.yqqOmega1bar[2,mif1] * self.yu[0,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yqqOmega1[1,0] * self.yqqOmega1bar[2,mif1] * self.yu[0,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yqqOmega1[1,0] * self.yqqOmega1bar[2,mif1] * self.yu[0,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[2,mif1] * self.yu[0,mif2] + 1/8 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif1] * self.yu[0,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif1] * self.yu[0,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif1] * self.yu[0,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif1] * self.yu[0,mif2] + 1/8 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif1] * self.yu[1,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif1] * self.yu[1,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif1] * self.yu[1,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif1] * self.yu[1,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yqqOmega1[1,1] * self.yqqOmega1bar[0,mif1] * self.yu[1,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yqqOmega1[1,1] * self.yqqOmega1bar[0,mif1] * self.yu[1,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yqqOmega1[1,1] * self.yqqOmega1bar[0,mif1] * self.yu[1,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yqqOmega1[2,1] * self.yqqOmega1bar[0,mif1] * self.yu[1,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yqqOmega1[2,1] * self.yqqOmega1bar[0,mif1] * self.yu[1,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[0,mif1] * self.yu[1,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yqqOmega1[0,1] * self.yqqOmega1bar[1,mif1] * self.yu[1,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yqqOmega1[0,1] * self.yqqOmega1bar[1,mif1] * self.yu[1,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yqqOmega1[0,1] * self.yqqOmega1bar[1,mif1] * self.yu[1,mif2] + 1/8 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif1] * self.yu[1,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif1] * self.yu[1,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif1] * self.yu[1,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif1] * self.yu[1,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yqqOmega1[2,1] * self.yqqOmega1bar[1,mif1] * self.yu[1,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yqqOmega1[2,1] * self.yqqOmega1bar[1,mif1] * self.yu[1,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[1,mif1] * self.yu[1,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yqqOmega1[0,1] * self.yqqOmega1bar[2,mif1] * self.yu[1,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yqqOmega1[0,1] * self.yqqOmega1bar[2,mif1] * self.yu[1,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yqqOmega1[0,1] * self.yqqOmega1bar[2,mif1] * self.yu[1,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yqqOmega1[1,1] * self.yqqOmega1bar[2,mif1] * self.yu[1,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yqqOmega1[1,1] * self.yqqOmega1bar[2,mif1] * self.yu[1,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yqqOmega1[1,1] * self.yqqOmega1bar[2,mif1] * self.yu[1,mif2] + 1/8 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif1] * self.yu[1,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif1] * self.yu[1,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif1] * self.yu[1,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif1] * self.yu[1,mif2] + 1/8 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif1] * self.yu[2,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif1] * self.yu[2,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif1] * self.yu[2,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif1] * self.yu[2,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yqqOmega1[1,2] * self.yqqOmega1bar[0,mif1] * self.yu[2,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yqqOmega1[1,2] * self.yqqOmega1bar[0,mif1] * self.yu[2,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yqqOmega1[1,2] * self.yqqOmega1bar[0,mif1] * self.yu[2,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yqqOmega1[2,2] * self.yqqOmega1bar[0,mif1] * self.yu[2,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yqqOmega1[2,2] * self.yqqOmega1bar[0,mif1] * self.yu[2,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yqqOmega1[2,2] * self.yqqOmega1bar[0,mif1] * self.yu[2,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yqqOmega1[0,2] * self.yqqOmega1bar[1,mif1] * self.yu[2,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yqqOmega1[0,2] * self.yqqOmega1bar[1,mif1] * self.yu[2,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yqqOmega1[0,2] * self.yqqOmega1bar[1,mif1] * self.yu[2,mif2] + 1/8 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif1] * self.yu[2,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif1] * self.yu[2,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif1] * self.yu[2,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif1] * self.yu[2,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yqqOmega1[2,2] * self.yqqOmega1bar[1,mif1] * self.yu[2,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yqqOmega1[2,2] * self.yqqOmega1bar[1,mif1] * self.yu[2,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yqqOmega1[2,2] * self.yqqOmega1bar[1,mif1] * self.yu[2,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yqqOmega1[0,2] * self.yqqOmega1bar[2,mif1] * self.yu[2,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yqqOmega1[0,2] * self.yqqOmega1bar[2,mif1] * self.yu[2,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yqqOmega1[0,2] * self.yqqOmega1bar[2,mif1] * self.yu[2,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yqqOmega1[1,2] * self.yqqOmega1bar[2,mif1] * self.yu[2,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yqqOmega1[1,2] * self.yqqOmega1bar[2,mif1] * self.yu[2,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yqqOmega1[1,2] * self.yqqOmega1bar[2,mif1] * self.yu[2,mif2] + 1/8 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif1] * self.yu[2,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif1] * self.yu[2,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif1] * self.yu[2,mif2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif1] * self.yu[2,mif2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,0] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,0] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,0] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,0] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,0] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,0] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,0] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,0] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,0] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,0] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,0] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,0] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,0] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,0] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,0] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,0] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,0] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,0] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,1] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,1] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,1] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,1] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,1] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,1] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,1] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,1] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,1] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,1] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,1] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,1] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,1] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,1] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,1] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,1] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,1] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,1] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,2] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,2] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,2] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,2] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,2] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,2] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,2] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,2] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,2] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,2] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,2] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,2] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,2] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,2] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,2] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,2] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,2] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,2] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yu[0,mif2] * self.yubar[0,0] * self.yudOmega1[0,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yu[0,mif2] * self.yubar[0,0] * self.yudOmega1[0,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yu[0,mif2] * self.yubar[0,0] * self.yudOmega1[0,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yu[1,mif2] * self.yubar[1,0] * self.yudOmega1[0,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yu[1,mif2] * self.yubar[1,0] * self.yudOmega1[0,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yu[1,mif2] * self.yubar[1,0] * self.yudOmega1[0,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yu[2,mif2] * self.yubar[2,0] * self.yudOmega1[0,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yu[2,mif2] * self.yubar[2,0] * self.yudOmega1[0,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yu[2,mif2] * self.yubar[2,0] * self.yudOmega1[0,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yu[0,mif2] * self.yubar[0,0] * self.yudOmega1[0,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yu[0,mif2] * self.yubar[0,0] * self.yudOmega1[0,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yu[0,mif2] * self.yubar[0,0] * self.yudOmega1[0,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yu[1,mif2] * self.yubar[1,0] * self.yudOmega1[0,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yu[1,mif2] * self.yubar[1,0] * self.yudOmega1[0,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yu[1,mif2] * self.yubar[1,0] * self.yudOmega1[0,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yu[2,mif2] * self.yubar[2,0] * self.yudOmega1[0,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yu[2,mif2] * self.yubar[2,0] * self.yudOmega1[0,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yu[2,mif2] * self.yubar[2,0] * self.yudOmega1[0,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yu[0,mif2] * self.yubar[0,0] * self.yudOmega1[0,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yu[0,mif2] * self.yubar[0,0] * self.yudOmega1[0,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yu[0,mif2] * self.yubar[0,0] * self.yudOmega1[0,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yu[1,mif2] * self.yubar[1,0] * self.yudOmega1[0,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yu[1,mif2] * self.yubar[1,0] * self.yudOmega1[0,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yu[1,mif2] * self.yubar[1,0] * self.yudOmega1[0,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yu[2,mif2] * self.yubar[2,0] * self.yudOmega1[0,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yu[2,mif2] * self.yubar[2,0] * self.yudOmega1[0,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yu[2,mif2] * self.yubar[2,0] * self.yudOmega1[0,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yu[0,mif2] * self.yubar[0,1] * self.yudOmega1[1,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yu[0,mif2] * self.yubar[0,1] * self.yudOmega1[1,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yu[0,mif2] * self.yubar[0,1] * self.yudOmega1[1,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yu[1,mif2] * self.yubar[1,1] * self.yudOmega1[1,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yu[1,mif2] * self.yubar[1,1] * self.yudOmega1[1,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yu[1,mif2] * self.yubar[1,1] * self.yudOmega1[1,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yu[2,mif2] * self.yubar[2,1] * self.yudOmega1[1,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yu[2,mif2] * self.yubar[2,1] * self.yudOmega1[1,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yu[2,mif2] * self.yubar[2,1] * self.yudOmega1[1,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yu[0,mif2] * self.yubar[0,1] * self.yudOmega1[1,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yu[0,mif2] * self.yubar[0,1] * self.yudOmega1[1,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yu[0,mif2] * self.yubar[0,1] * self.yudOmega1[1,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yu[1,mif2] * self.yubar[1,1] * self.yudOmega1[1,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yu[1,mif2] * self.yubar[1,1] * self.yudOmega1[1,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yu[1,mif2] * self.yubar[1,1] * self.yudOmega1[1,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yu[2,mif2] * self.yubar[2,1] * self.yudOmega1[1,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yu[2,mif2] * self.yubar[2,1] * self.yudOmega1[1,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yu[2,mif2] * self.yubar[2,1] * self.yudOmega1[1,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yu[0,mif2] * self.yubar[0,1] * self.yudOmega1[1,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yu[0,mif2] * self.yubar[0,1] * self.yudOmega1[1,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yu[0,mif2] * self.yubar[0,1] * self.yudOmega1[1,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yu[1,mif2] * self.yubar[1,1] * self.yudOmega1[1,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yu[1,mif2] * self.yubar[1,1] * self.yudOmega1[1,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yu[1,mif2] * self.yubar[1,1] * self.yudOmega1[1,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yu[2,mif2] * self.yubar[2,1] * self.yudOmega1[1,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yu[2,mif2] * self.yubar[2,1] * self.yudOmega1[1,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yu[2,mif2] * self.yubar[2,1] * self.yudOmega1[1,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yu[0,mif2] * self.yubar[0,2] * self.yudOmega1[2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yu[0,mif2] * self.yubar[0,2] * self.yudOmega1[2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yu[0,mif2] * self.yubar[0,2] * self.yudOmega1[2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yu[1,mif2] * self.yubar[1,2] * self.yudOmega1[2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yu[1,mif2] * self.yubar[1,2] * self.yudOmega1[2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yu[1,mif2] * self.yubar[1,2] * self.yudOmega1[2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yu[2,mif2] * self.yubar[2,2] * self.yudOmega1[2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yu[2,mif2] * self.yubar[2,2] * self.yudOmega1[2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yu[2,mif2] * self.yubar[2,2] * self.yudOmega1[2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yu[0,mif2] * self.yubar[0,2] * self.yudOmega1[2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yu[0,mif2] * self.yubar[0,2] * self.yudOmega1[2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yu[0,mif2] * self.yubar[0,2] * self.yudOmega1[2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yu[1,mif2] * self.yubar[1,2] * self.yudOmega1[2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yu[1,mif2] * self.yubar[1,2] * self.yudOmega1[2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yu[1,mif2] * self.yubar[1,2] * self.yudOmega1[2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yu[2,mif2] * self.yubar[2,2] * self.yudOmega1[2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yu[2,mif2] * self.yubar[2,2] * self.yudOmega1[2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yu[2,mif2] * self.yubar[2,2] * self.yudOmega1[2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yu[0,mif2] * self.yubar[0,2] * self.yudOmega1[2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yu[0,mif2] * self.yubar[0,2] * self.yudOmega1[2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yu[0,mif2] * self.yubar[0,2] * self.yudOmega1[2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yu[1,mif2] * self.yubar[1,2] * self.yudOmega1[2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yu[1,mif2] * self.yubar[1,2] * self.yudOmega1[2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yu[1,mif2] * self.yubar[1,2] * self.yudOmega1[2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yu[2,mif2] * self.yubar[2,2] * self.yudOmega1[2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yu[2,mif2] * self.yubar[2,2] * self.yudOmega1[2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yu[2,mif2] * self.yubar[2,2] * self.yudOmega1[2,2] + 3/8 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + 1/4 * self.invepsilonbar * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * (self.ydbar[0,0])**(2) * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * (self.ydbar[0,0])**(2) * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * (self.ydbar[0,0])**(2) * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + 3/8 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + 1/4 * self.invepsilonbar * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * (self.ydbar[1,0])**(2) * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * (self.ydbar[1,0])**(2) * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * (self.ydbar[1,0])**(2) * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + 3/8 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + 1/4 * self.invepsilonbar * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * (self.ydbar[2,0])**(2) * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * (self.ydbar[2,0])**(2) * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * (self.ydbar[2,0])**(2) * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,0] * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,0] * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,0] * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,0] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,0] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,0] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,0] * self.yu[mif1,0] * self.yubar[0,0] * self.yudOmega1[mif2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,0] * self.yu[mif1,0] * self.yubar[0,0] * self.yudOmega1[mif2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,0] * self.yu[mif1,0] * self.yubar[0,0] * self.yudOmega1[mif2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,0] * self.yu[mif1,1] * self.yubar[0,1] * self.yudOmega1[mif2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,0] * self.yu[mif1,1] * self.yubar[0,1] * self.yudOmega1[mif2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,0] * self.yu[mif1,1] * self.yubar[0,1] * self.yudOmega1[mif2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,0] * self.yu[mif1,2] * self.yubar[0,2] * self.yudOmega1[mif2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,0] * self.yu[mif1,2] * self.yubar[0,2] * self.yudOmega1[mif2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,0] * self.yu[mif1,2] * self.yubar[0,2] * self.yudOmega1[mif2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,1] * self.yu[mif1,0] * self.yubar[1,0] * self.yudOmega1[mif2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,1] * self.yu[mif1,0] * self.yubar[1,0] * self.yudOmega1[mif2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,1] * self.yu[mif1,0] * self.yubar[1,0] * self.yudOmega1[mif2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,1] * self.yu[mif1,1] * self.yubar[1,1] * self.yudOmega1[mif2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,1] * self.yu[mif1,1] * self.yubar[1,1] * self.yudOmega1[mif2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,1] * self.yu[mif1,1] * self.yubar[1,1] * self.yudOmega1[mif2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,1] * self.yu[mif1,2] * self.yubar[1,2] * self.yudOmega1[mif2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,1] * self.yu[mif1,2] * self.yubar[1,2] * self.yudOmega1[mif2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,1] * self.yu[mif1,2] * self.yubar[1,2] * self.yudOmega1[mif2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,2] * self.yu[mif1,0] * self.yubar[2,0] * self.yudOmega1[mif2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,2] * self.yu[mif1,0] * self.yubar[2,0] * self.yudOmega1[mif2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,2] * self.yu[mif1,0] * self.yubar[2,0] * self.yudOmega1[mif2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,2] * self.yu[mif1,1] * self.yubar[2,1] * self.yudOmega1[mif2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,2] * self.yu[mif1,1] * self.yubar[2,1] * self.yudOmega1[mif2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,2] * self.yu[mif1,1] * self.yubar[2,1] * self.yudOmega1[mif2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,2] * self.yu[mif1,2] * self.yubar[2,2] * self.yudOmega1[mif2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,2] * self.yu[mif1,2] * self.yubar[2,2] * self.yudOmega1[mif2,0] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,2] * self.yu[mif1,2] * self.yubar[2,2] * self.yudOmega1[mif2,0] + 3/8 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + 1/4 * self.invepsilonbar * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * (self.ydbar[0,1])**(2) * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * (self.ydbar[0,1])**(2) * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * (self.ydbar[0,1])**(2) * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,1] * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,1] * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,1] * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + 3/8 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + 1/4 * self.invepsilonbar * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * (self.ydbar[1,1])**(2) * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * (self.ydbar[1,1])**(2) * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * (self.ydbar[1,1])**(2) * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,1] * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,1] * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,1] * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,1] * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,1] * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,1] * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + 3/8 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + 1/4 * self.invepsilonbar * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * (self.ydbar[2,1])**(2) * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * (self.ydbar[2,1])**(2) * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * (self.ydbar[2,1])**(2) * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,1] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,1] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,1] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,0] * self.yu[mif1,0] * self.yubar[0,0] * self.yudOmega1[mif2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,0] * self.yu[mif1,0] * self.yubar[0,0] * self.yudOmega1[mif2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,0] * self.yu[mif1,0] * self.yubar[0,0] * self.yudOmega1[mif2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,0] * self.yu[mif1,1] * self.yubar[0,1] * self.yudOmega1[mif2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,0] * self.yu[mif1,1] * self.yubar[0,1] * self.yudOmega1[mif2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,0] * self.yu[mif1,1] * self.yubar[0,1] * self.yudOmega1[mif2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,0] * self.yu[mif1,2] * self.yubar[0,2] * self.yudOmega1[mif2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,0] * self.yu[mif1,2] * self.yubar[0,2] * self.yudOmega1[mif2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,0] * self.yu[mif1,2] * self.yubar[0,2] * self.yudOmega1[mif2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,1] * self.yu[mif1,0] * self.yubar[1,0] * self.yudOmega1[mif2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,1] * self.yu[mif1,0] * self.yubar[1,0] * self.yudOmega1[mif2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,1] * self.yu[mif1,0] * self.yubar[1,0] * self.yudOmega1[mif2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,1] * self.yu[mif1,1] * self.yubar[1,1] * self.yudOmega1[mif2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,1] * self.yu[mif1,1] * self.yubar[1,1] * self.yudOmega1[mif2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,1] * self.yu[mif1,1] * self.yubar[1,1] * self.yudOmega1[mif2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,1] * self.yu[mif1,2] * self.yubar[1,2] * self.yudOmega1[mif2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,1] * self.yu[mif1,2] * self.yubar[1,2] * self.yudOmega1[mif2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,1] * self.yu[mif1,2] * self.yubar[1,2] * self.yudOmega1[mif2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,2] * self.yu[mif1,0] * self.yubar[2,0] * self.yudOmega1[mif2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,2] * self.yu[mif1,0] * self.yubar[2,0] * self.yudOmega1[mif2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,2] * self.yu[mif1,0] * self.yubar[2,0] * self.yudOmega1[mif2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,2] * self.yu[mif1,1] * self.yubar[2,1] * self.yudOmega1[mif2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,2] * self.yu[mif1,1] * self.yubar[2,1] * self.yudOmega1[mif2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,2] * self.yu[mif1,1] * self.yubar[2,1] * self.yudOmega1[mif2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,2] * self.yu[mif1,2] * self.yubar[2,2] * self.yudOmega1[mif2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,2] * self.yu[mif1,2] * self.yubar[2,2] * self.yudOmega1[mif2,1] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,2] * self.yu[mif1,2] * self.yubar[2,2] * self.yudOmega1[mif2,1] + 3/8 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + 1/4 * self.invepsilonbar * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * (self.ydbar[0,2])**(2) * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * (self.ydbar[0,2])**(2) * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * (self.ydbar[0,2])**(2) * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,2] * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,2] * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,2] * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,2] * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,2] * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,2] * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + 3/8 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + 1/4 * self.invepsilonbar * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * (self.ydbar[1,2])**(2) * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * (self.ydbar[1,2])**(2) * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * (self.ydbar[1,2])**(2) * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,2] * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,2] * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,2] * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,2] * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,2] * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,2] * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,2] * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,2] * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,2] * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,2] * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,2] * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,2] * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + 3/8 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + 1/4 * self.invepsilonbar * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,2] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,1] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * (self.ydbar[2,2])**(2) * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * (self.ydbar[2,2])**(2) * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * (self.ydbar[2,2])**(2) * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,0] * self.yu[mif1,0] * self.yubar[0,0] * self.yudOmega1[mif2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,0] * self.yu[mif1,0] * self.yubar[0,0] * self.yudOmega1[mif2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,0] * self.yu[mif1,0] * self.yubar[0,0] * self.yudOmega1[mif2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,0] * self.yu[mif1,1] * self.yubar[0,1] * self.yudOmega1[mif2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,0] * self.yu[mif1,1] * self.yubar[0,1] * self.yudOmega1[mif2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,0] * self.yu[mif1,1] * self.yubar[0,1] * self.yudOmega1[mif2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,0] * self.yu[mif1,2] * self.yubar[0,2] * self.yudOmega1[mif2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,0] * self.yu[mif1,2] * self.yubar[0,2] * self.yudOmega1[mif2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,0] * self.yu[mif1,2] * self.yubar[0,2] * self.yudOmega1[mif2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,1] * self.yu[mif1,0] * self.yubar[1,0] * self.yudOmega1[mif2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,1] * self.yu[mif1,0] * self.yubar[1,0] * self.yudOmega1[mif2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,1] * self.yu[mif1,0] * self.yubar[1,0] * self.yudOmega1[mif2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,1] * self.yu[mif1,1] * self.yubar[1,1] * self.yudOmega1[mif2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,1] * self.yu[mif1,1] * self.yubar[1,1] * self.yudOmega1[mif2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,1] * self.yu[mif1,1] * self.yubar[1,1] * self.yudOmega1[mif2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,1] * self.yu[mif1,2] * self.yubar[1,2] * self.yudOmega1[mif2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,1] * self.yu[mif1,2] * self.yubar[1,2] * self.yudOmega1[mif2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,1] * self.yu[mif1,2] * self.yubar[1,2] * self.yudOmega1[mif2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,2] * self.yu[mif1,0] * self.yubar[2,0] * self.yudOmega1[mif2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,2] * self.yu[mif1,0] * self.yubar[2,0] * self.yudOmega1[mif2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,2] * self.yu[mif1,0] * self.yubar[2,0] * self.yudOmega1[mif2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,2] * self.yu[mif1,1] * self.yubar[2,1] * self.yudOmega1[mif2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,2] * self.yu[mif1,1] * self.yubar[2,1] * self.yudOmega1[mif2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,2] * self.yu[mif1,1] * self.yubar[2,1] * self.yudOmega1[mif2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,2] * self.yu[mif1,2] * self.yubar[2,2] * self.yudOmega1[mif2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,2] * self.yu[mif1,2] * self.yubar[2,2] * self.yudOmega1[mif2,2] + -1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,2] * self.yu[mif1,2] * self.yubar[2,2] * self.yudOmega1[mif2,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] * self.yudOmega1[0,0] * self.yudOmega1bar[0,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] * self.yudOmega1[0,0] * self.yudOmega1bar[0,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] * self.yudOmega1[0,0] * self.yudOmega1bar[0,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,1] * self.yudOmega1[1,0] * self.yudOmega1bar[0,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,1] * self.yudOmega1[1,0] * self.yudOmega1bar[0,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,1] * self.yudOmega1[1,0] * self.yudOmega1bar[0,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,2] * self.yudOmega1[2,0] * self.yudOmega1bar[0,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,2] * self.yudOmega1[2,0] * self.yudOmega1bar[0,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,2] * self.yudOmega1[2,0] * self.yudOmega1bar[0,0] + 1/32 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yu[mif1,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yu[mif1,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yu[mif1,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,1] * self.yu[mif1,0] * self.yudOmega1[mif2,1] * self.yudOmega1bar[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,1] * self.yu[mif1,0] * self.yudOmega1[mif2,1] * self.yudOmega1bar[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,1] * self.yu[mif1,0] * self.yudOmega1[mif2,1] * self.yudOmega1bar[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,2] * self.yu[mif1,0] * self.yudOmega1[mif2,2] * self.yudOmega1bar[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,2] * self.yu[mif1,0] * self.yudOmega1[mif2,2] * self.yudOmega1bar[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,2] * self.yu[mif1,0] * self.yudOmega1[mif2,2] * self.yudOmega1bar[0,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] * self.yudOmega1[0,1] * self.yudOmega1bar[0,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] * self.yudOmega1[0,1] * self.yudOmega1bar[0,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] * self.yudOmega1[0,1] * self.yudOmega1bar[0,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,1] * self.yudOmega1[1,1] * self.yudOmega1bar[0,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,1] * self.yudOmega1[1,1] * self.yudOmega1bar[0,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,1] * self.yudOmega1[1,1] * self.yudOmega1bar[0,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,2] * self.yudOmega1[2,1] * self.yudOmega1bar[0,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,2] * self.yudOmega1[2,1] * self.yudOmega1bar[0,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,2] * self.yudOmega1[2,1] * self.yudOmega1bar[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,0] * self.yu[mif1,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,0] * self.yu[mif1,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,0] * self.yu[mif1,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[0,1] + 1/32 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yudOmega1[mif2,1] * self.yudOmega1bar[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yu[mif1,0] * self.yudOmega1[mif2,1] * self.yudOmega1bar[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yu[mif1,0] * self.yudOmega1[mif2,1] * self.yudOmega1bar[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yu[mif1,0] * self.yudOmega1[mif2,1] * self.yudOmega1bar[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,2] * self.yu[mif1,0] * self.yudOmega1[mif2,2] * self.yudOmega1bar[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,2] * self.yu[mif1,0] * self.yudOmega1[mif2,2] * self.yudOmega1bar[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,2] * self.yu[mif1,0] * self.yudOmega1[mif2,2] * self.yudOmega1bar[0,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] * self.yudOmega1[0,2] * self.yudOmega1bar[0,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] * self.yudOmega1[0,2] * self.yudOmega1bar[0,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] * self.yudOmega1[0,2] * self.yudOmega1bar[0,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,1] * self.yudOmega1[1,2] * self.yudOmega1bar[0,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,1] * self.yudOmega1[1,2] * self.yudOmega1bar[0,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,1] * self.yudOmega1[1,2] * self.yudOmega1bar[0,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,2] * self.yudOmega1[2,2] * self.yudOmega1bar[0,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,2] * self.yudOmega1[2,2] * self.yudOmega1bar[0,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,2] * self.yudOmega1[2,2] * self.yudOmega1bar[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,0] * self.yu[mif1,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,0] * self.yu[mif1,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,0] * self.yu[mif1,0] * self.yudOmega1[mif2,0] * self.yudOmega1bar[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,1] * self.yu[mif1,0] * self.yudOmega1[mif2,1] * self.yudOmega1bar[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,1] * self.yu[mif1,0] * self.yudOmega1[mif2,1] * self.yudOmega1bar[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,1] * self.yu[mif1,0] * self.yudOmega1[mif2,1] * self.yudOmega1bar[0,2] + 1/32 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yudOmega1[mif2,2] * self.yudOmega1bar[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yu[mif1,0] * self.yudOmega1[mif2,2] * self.yudOmega1bar[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yu[mif1,0] * self.yudOmega1[mif2,2] * self.yudOmega1bar[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yu[mif1,0] * self.yudOmega1[mif2,2] * self.yudOmega1bar[0,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,0] * self.yudOmega1[0,0] * self.yudOmega1bar[1,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,0] * self.yudOmega1[0,0] * self.yudOmega1bar[1,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,0] * self.yudOmega1[0,0] * self.yudOmega1bar[1,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] * self.yudOmega1[1,0] * self.yudOmega1bar[1,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] * self.yudOmega1[1,0] * self.yudOmega1bar[1,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] * self.yudOmega1[1,0] * self.yudOmega1bar[1,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,2] * self.yudOmega1[2,0] * self.yudOmega1bar[1,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,2] * self.yudOmega1[2,0] * self.yudOmega1bar[1,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,2] * self.yudOmega1[2,0] * self.yudOmega1bar[1,0] + 1/32 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yudOmega1[mif2,0] * self.yudOmega1bar[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yu[mif1,1] * self.yudOmega1[mif2,0] * self.yudOmega1bar[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yu[mif1,1] * self.yudOmega1[mif2,0] * self.yudOmega1bar[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yu[mif1,1] * self.yudOmega1[mif2,0] * self.yudOmega1bar[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,1] * self.yu[mif1,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,1] * self.yu[mif1,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,1] * self.yu[mif1,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,2] * self.yu[mif1,1] * self.yudOmega1[mif2,2] * self.yudOmega1bar[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,2] * self.yu[mif1,1] * self.yudOmega1[mif2,2] * self.yudOmega1bar[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,2] * self.yu[mif1,1] * self.yudOmega1[mif2,2] * self.yudOmega1bar[1,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,0] * self.yudOmega1[0,1] * self.yudOmega1bar[1,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,0] * self.yudOmega1[0,1] * self.yudOmega1bar[1,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,0] * self.yudOmega1[0,1] * self.yudOmega1bar[1,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] * self.yudOmega1[1,1] * self.yudOmega1bar[1,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] * self.yudOmega1[1,1] * self.yudOmega1bar[1,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] * self.yudOmega1[1,1] * self.yudOmega1bar[1,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,2] * self.yudOmega1[2,1] * self.yudOmega1bar[1,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,2] * self.yudOmega1[2,1] * self.yudOmega1bar[1,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,2] * self.yudOmega1[2,1] * self.yudOmega1bar[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,0] * self.yu[mif1,1] * self.yudOmega1[mif2,0] * self.yudOmega1bar[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,0] * self.yu[mif1,1] * self.yudOmega1[mif2,0] * self.yudOmega1bar[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,0] * self.yu[mif1,1] * self.yudOmega1[mif2,0] * self.yudOmega1bar[1,1] + 1/32 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yu[mif1,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yu[mif1,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yu[mif1,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,2] * self.yu[mif1,1] * self.yudOmega1[mif2,2] * self.yudOmega1bar[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,2] * self.yu[mif1,1] * self.yudOmega1[mif2,2] * self.yudOmega1bar[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,2] * self.yu[mif1,1] * self.yudOmega1[mif2,2] * self.yudOmega1bar[1,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,0] * self.yudOmega1[0,2] * self.yudOmega1bar[1,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,0] * self.yudOmega1[0,2] * self.yudOmega1bar[1,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,0] * self.yudOmega1[0,2] * self.yudOmega1bar[1,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] * self.yudOmega1[1,2] * self.yudOmega1bar[1,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] * self.yudOmega1[1,2] * self.yudOmega1bar[1,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] * self.yudOmega1[1,2] * self.yudOmega1bar[1,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,2] * self.yudOmega1[2,2] * self.yudOmega1bar[1,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,2] * self.yudOmega1[2,2] * self.yudOmega1bar[1,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,2] * self.yudOmega1[2,2] * self.yudOmega1bar[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,0] * self.yu[mif1,1] * self.yudOmega1[mif2,0] * self.yudOmega1bar[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,0] * self.yu[mif1,1] * self.yudOmega1[mif2,0] * self.yudOmega1bar[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,0] * self.yu[mif1,1] * self.yudOmega1[mif2,0] * self.yudOmega1bar[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,1] * self.yu[mif1,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,1] * self.yu[mif1,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,1] * self.yu[mif1,1] * self.yudOmega1[mif2,1] * self.yudOmega1bar[1,2] + 1/32 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yudOmega1[mif2,2] * self.yudOmega1bar[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yu[mif1,1] * self.yudOmega1[mif2,2] * self.yudOmega1bar[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yu[mif1,1] * self.yudOmega1[mif2,2] * self.yudOmega1bar[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yu[mif1,1] * self.yudOmega1[mif2,2] * self.yudOmega1bar[1,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,0] * self.yudOmega1[0,0] * self.yudOmega1bar[2,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,0] * self.yudOmega1[0,0] * self.yudOmega1bar[2,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,0] * self.yudOmega1[0,0] * self.yudOmega1bar[2,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,1] * self.yudOmega1[1,0] * self.yudOmega1bar[2,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,1] * self.yudOmega1[1,0] * self.yudOmega1bar[2,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,1] * self.yudOmega1[1,0] * self.yudOmega1bar[2,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] * self.yudOmega1[2,0] * self.yudOmega1bar[2,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] * self.yudOmega1[2,0] * self.yudOmega1bar[2,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] * self.yudOmega1[2,0] * self.yudOmega1bar[2,0] + 1/32 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yudOmega1[mif2,0] * self.yudOmega1bar[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yu[mif1,2] * self.yudOmega1[mif2,0] * self.yudOmega1bar[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yu[mif1,2] * self.yudOmega1[mif2,0] * self.yudOmega1bar[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yu[mif1,2] * self.yudOmega1[mif2,0] * self.yudOmega1bar[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,1] * self.yu[mif1,2] * self.yudOmega1[mif2,1] * self.yudOmega1bar[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,1] * self.yu[mif1,2] * self.yudOmega1[mif2,1] * self.yudOmega1bar[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,1] * self.yu[mif1,2] * self.yudOmega1[mif2,1] * self.yudOmega1bar[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,2] * self.yu[mif1,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,2] * self.yu[mif1,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,2] * self.yu[mif1,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[2,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,0] * self.yudOmega1[0,1] * self.yudOmega1bar[2,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,0] * self.yudOmega1[0,1] * self.yudOmega1bar[2,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,0] * self.yudOmega1[0,1] * self.yudOmega1bar[2,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,1] * self.yudOmega1[1,1] * self.yudOmega1bar[2,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,1] * self.yudOmega1[1,1] * self.yudOmega1bar[2,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,1] * self.yudOmega1[1,1] * self.yudOmega1bar[2,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] * self.yudOmega1[2,1] * self.yudOmega1bar[2,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] * self.yudOmega1[2,1] * self.yudOmega1bar[2,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] * self.yudOmega1[2,1] * self.yudOmega1bar[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,0] * self.yu[mif1,2] * self.yudOmega1[mif2,0] * self.yudOmega1bar[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,0] * self.yu[mif1,2] * self.yudOmega1[mif2,0] * self.yudOmega1bar[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,0] * self.yu[mif1,2] * self.yudOmega1[mif2,0] * self.yudOmega1bar[2,1] + 1/32 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yudOmega1[mif2,1] * self.yudOmega1bar[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yu[mif1,2] * self.yudOmega1[mif2,1] * self.yudOmega1bar[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yu[mif1,2] * self.yudOmega1[mif2,1] * self.yudOmega1bar[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yu[mif1,2] * self.yudOmega1[mif2,1] * self.yudOmega1bar[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,2] * self.yu[mif1,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,2] * self.yu[mif1,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,2] * self.yu[mif1,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[2,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,0] * self.yudOmega1[0,2] * self.yudOmega1bar[2,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,0] * self.yudOmega1[0,2] * self.yudOmega1bar[2,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,0] * self.yudOmega1[0,2] * self.yudOmega1bar[2,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,1] * self.yudOmega1[1,2] * self.yudOmega1bar[2,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,1] * self.yudOmega1[1,2] * self.yudOmega1bar[2,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,1] * self.yudOmega1[1,2] * self.yudOmega1bar[2,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] * self.yudOmega1[2,2] * self.yudOmega1bar[2,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] * self.yudOmega1[2,2] * self.yudOmega1bar[2,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] * self.yudOmega1[2,2] * self.yudOmega1bar[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,0] * self.yu[mif1,2] * self.yudOmega1[mif2,0] * self.yudOmega1bar[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,0] * self.yu[mif1,2] * self.yudOmega1[mif2,0] * self.yudOmega1bar[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,0] * self.yu[mif1,2] * self.yudOmega1[mif2,0] * self.yudOmega1bar[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,1] * self.yu[mif1,2] * self.yudOmega1[mif2,1] * self.yudOmega1bar[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,1] * self.yu[mif1,2] * self.yudOmega1[mif2,1] * self.yudOmega1bar[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,1] * self.yu[mif1,2] * self.yudOmega1[mif2,1] * self.yudOmega1bar[2,2] + 1/32 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yu[mif1,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yu[mif1,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yu[mif1,2] * self.yudOmega1[mif2,2] * self.yudOmega1bar[2,2])

    def alphaOdH(self, mif1,mif2):
        return (1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,2] + 1/8 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif1] + 1/8 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif1] + 1/8 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,2] + 1/8 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif1] + 1/8 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif1] + 1/8 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,0] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,1] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,2] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,2] + 1/8 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif1] + 1/8 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif1] + 1/8 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif1] * self.yu[0,0] * self.yubar[0,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif1] * self.yu[0,0] * self.yubar[0,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif1] * self.yu[0,0] * self.yubar[0,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[0,mif1] * self.yu[1,0] * self.yubar[0,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[1,1] * self.yqqOmega1bar[0,mif1] * self.yu[1,0] * self.yubar[0,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[1,2] * self.yqqOmega1bar[0,mif1] * self.yu[1,0] * self.yubar[0,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[0,mif1] * self.yu[2,0] * self.yubar[0,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[0,mif1] * self.yu[2,0] * self.yubar[0,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[2,2] * self.yqqOmega1bar[0,mif1] * self.yu[2,0] * self.yubar[0,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif1] * self.yu[0,1] * self.yubar[0,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif1] * self.yu[0,1] * self.yubar[0,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif1] * self.yu[0,1] * self.yubar[0,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[0,mif1] * self.yu[1,1] * self.yubar[0,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[1,1] * self.yqqOmega1bar[0,mif1] * self.yu[1,1] * self.yubar[0,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[1,2] * self.yqqOmega1bar[0,mif1] * self.yu[1,1] * self.yubar[0,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[0,mif1] * self.yu[2,1] * self.yubar[0,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[0,mif1] * self.yu[2,1] * self.yubar[0,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[2,2] * self.yqqOmega1bar[0,mif1] * self.yu[2,1] * self.yubar[0,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif1] * self.yu[0,2] * self.yubar[0,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif1] * self.yu[0,2] * self.yubar[0,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif1] * self.yu[0,2] * self.yubar[0,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[0,mif1] * self.yu[1,2] * self.yubar[0,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[1,1] * self.yqqOmega1bar[0,mif1] * self.yu[1,2] * self.yubar[0,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[1,2] * self.yqqOmega1bar[0,mif1] * self.yu[1,2] * self.yubar[0,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[0,mif1] * self.yu[2,2] * self.yubar[0,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[0,mif1] * self.yu[2,2] * self.yubar[0,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[2,2] * self.yqqOmega1bar[0,mif1] * self.yu[2,2] * self.yubar[0,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[0,0] * self.yqqOmega1bar[1,mif1] * self.yu[0,0] * self.yubar[1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[0,1] * self.yqqOmega1bar[1,mif1] * self.yu[0,0] * self.yubar[1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[0,2] * self.yqqOmega1bar[1,mif1] * self.yu[0,0] * self.yubar[1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif1] * self.yu[1,0] * self.yubar[1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif1] * self.yu[1,0] * self.yubar[1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif1] * self.yu[1,0] * self.yubar[1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[1,mif1] * self.yu[2,0] * self.yubar[1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[1,mif1] * self.yu[2,0] * self.yubar[1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[2,2] * self.yqqOmega1bar[1,mif1] * self.yu[2,0] * self.yubar[1,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[0,0] * self.yqqOmega1bar[1,mif1] * self.yu[0,1] * self.yubar[1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[0,1] * self.yqqOmega1bar[1,mif1] * self.yu[0,1] * self.yubar[1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[0,2] * self.yqqOmega1bar[1,mif1] * self.yu[0,1] * self.yubar[1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif1] * self.yu[1,1] * self.yubar[1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif1] * self.yu[1,1] * self.yubar[1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif1] * self.yu[1,1] * self.yubar[1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[1,mif1] * self.yu[2,1] * self.yubar[1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[1,mif1] * self.yu[2,1] * self.yubar[1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[2,2] * self.yqqOmega1bar[1,mif1] * self.yu[2,1] * self.yubar[1,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[0,0] * self.yqqOmega1bar[1,mif1] * self.yu[0,2] * self.yubar[1,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[0,1] * self.yqqOmega1bar[1,mif1] * self.yu[0,2] * self.yubar[1,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[0,2] * self.yqqOmega1bar[1,mif1] * self.yu[0,2] * self.yubar[1,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif1] * self.yu[1,2] * self.yubar[1,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif1] * self.yu[1,2] * self.yubar[1,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif1] * self.yu[1,2] * self.yubar[1,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[1,mif1] * self.yu[2,2] * self.yubar[1,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[1,mif1] * self.yu[2,2] * self.yubar[1,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[2,2] * self.yqqOmega1bar[1,mif1] * self.yu[2,2] * self.yubar[1,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[0,0] * self.yqqOmega1bar[2,mif1] * self.yu[0,0] * self.yubar[2,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[0,1] * self.yqqOmega1bar[2,mif1] * self.yu[0,0] * self.yubar[2,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[0,2] * self.yqqOmega1bar[2,mif1] * self.yu[0,0] * self.yubar[2,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[2,mif1] * self.yu[1,0] * self.yubar[2,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[1,1] * self.yqqOmega1bar[2,mif1] * self.yu[1,0] * self.yubar[2,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[1,2] * self.yqqOmega1bar[2,mif1] * self.yu[1,0] * self.yubar[2,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif1] * self.yu[2,0] * self.yubar[2,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif1] * self.yu[2,0] * self.yubar[2,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif1] * self.yu[2,0] * self.yubar[2,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[0,0] * self.yqqOmega1bar[2,mif1] * self.yu[0,1] * self.yubar[2,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[0,1] * self.yqqOmega1bar[2,mif1] * self.yu[0,1] * self.yubar[2,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[0,2] * self.yqqOmega1bar[2,mif1] * self.yu[0,1] * self.yubar[2,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[2,mif1] * self.yu[1,1] * self.yubar[2,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[1,1] * self.yqqOmega1bar[2,mif1] * self.yu[1,1] * self.yubar[2,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[1,2] * self.yqqOmega1bar[2,mif1] * self.yu[1,1] * self.yubar[2,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif1] * self.yu[2,1] * self.yubar[2,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif1] * self.yu[2,1] * self.yubar[2,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif1] * self.yu[2,1] * self.yubar[2,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[0,0] * self.yqqOmega1bar[2,mif1] * self.yu[0,2] * self.yubar[2,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[0,1] * self.yqqOmega1bar[2,mif1] * self.yu[0,2] * self.yubar[2,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[0,2] * self.yqqOmega1bar[2,mif1] * self.yu[0,2] * self.yubar[2,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[2,mif1] * self.yu[1,2] * self.yubar[2,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[1,1] * self.yqqOmega1bar[2,mif1] * self.yu[1,2] * self.yubar[2,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[1,2] * self.yqqOmega1bar[2,mif1] * self.yu[1,2] * self.yubar[2,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif1] * self.yu[2,2] * self.yubar[2,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif1] * self.yu[2,2] * self.yubar[2,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif1] * self.yu[2,2] * self.yubar[2,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,0] * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,0] * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,0] * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,0] * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,0] * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,0] * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,1] * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,1] * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,1] * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,1] * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,1] * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,1] * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,2] * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,2] * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,2] * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,2] * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,2] * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,2] * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[0,0] * self.yqqOmega1bar[0,0] * self.yubar[0,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[0,1] * self.yqqOmega1bar[0,0] * self.yubar[0,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[0,2] * self.yqqOmega1bar[0,0] * self.yubar[0,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[1,0] * self.yqqOmega1bar[0,1] * self.yubar[0,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[1,1] * self.yqqOmega1bar[0,1] * self.yubar[0,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[1,2] * self.yqqOmega1bar[0,1] * self.yubar[0,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[2,0] * self.yqqOmega1bar[0,2] * self.yubar[0,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[2,1] * self.yqqOmega1bar[0,2] * self.yubar[0,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[2,2] * self.yqqOmega1bar[0,2] * self.yubar[0,0] * self.yudOmega1[0,mif2] + -3/8 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,mif2] + -1/4 * self.invepsilonbar * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,mif2] + 1/4 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,mif2] + 1/4 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[0,0] * (self.yubar[0,0])**(2) * self.yudOmega1[0,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[0,0] * (self.yubar[0,0])**(2) * self.yudOmega1[0,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yu[0,0] * (self.yubar[0,0])**(2) * self.yudOmega1[0,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[0,1] * self.yubar[0,0] * self.yubar[0,1] * self.yudOmega1[0,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[0,1] * self.yubar[0,0] * self.yubar[0,1] * self.yudOmega1[0,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yu[0,1] * self.yubar[0,0] * self.yubar[0,1] * self.yudOmega1[0,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[0,2] * self.yubar[0,0] * self.yubar[0,2] * self.yudOmega1[0,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[0,2] * self.yubar[0,0] * self.yubar[0,2] * self.yudOmega1[0,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yu[0,2] * self.yubar[0,0] * self.yubar[0,2] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[0,0] * self.yqqOmega1bar[1,0] * self.yubar[1,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[0,1] * self.yqqOmega1bar[1,0] * self.yubar[1,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[0,2] * self.yqqOmega1bar[1,0] * self.yubar[1,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[1,0] * self.yqqOmega1bar[1,1] * self.yubar[1,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[1,1] * self.yqqOmega1bar[1,1] * self.yubar[1,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[1,2] * self.yqqOmega1bar[1,1] * self.yubar[1,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[2,0] * self.yqqOmega1bar[1,2] * self.yubar[1,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[2,1] * self.yqqOmega1bar[1,2] * self.yubar[1,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[2,2] * self.yqqOmega1bar[1,2] * self.yubar[1,0] * self.yudOmega1[0,mif2] + -3/8 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,mif2] + -1/4 * self.invepsilonbar * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,mif2] + 1/4 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,mif2] + 1/4 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[0,0] * self.yubar[0,0] * self.yubar[1,0] * self.yudOmega1[0,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[0,0] * self.yubar[0,0] * self.yubar[1,0] * self.yudOmega1[0,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yu[0,0] * self.yubar[0,0] * self.yubar[1,0] * self.yudOmega1[0,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[1,0] * self.yubar[0,0] * self.yubar[1,0] * self.yudOmega1[0,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[1,0] * self.yubar[0,0] * self.yubar[1,0] * self.yudOmega1[0,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yu[1,0] * self.yubar[0,0] * self.yubar[1,0] * self.yudOmega1[0,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[1,1] * self.yubar[0,1] * self.yubar[1,0] * self.yudOmega1[0,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[1,1] * self.yubar[0,1] * self.yubar[1,0] * self.yudOmega1[0,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yu[1,1] * self.yubar[0,1] * self.yubar[1,0] * self.yudOmega1[0,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[1,2] * self.yubar[0,2] * self.yubar[1,0] * self.yudOmega1[0,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[1,2] * self.yubar[0,2] * self.yubar[1,0] * self.yudOmega1[0,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yu[1,2] * self.yubar[0,2] * self.yubar[1,0] * self.yudOmega1[0,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[1,0] * (self.yubar[1,0])**(2) * self.yudOmega1[0,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[1,0] * (self.yubar[1,0])**(2) * self.yudOmega1[0,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yu[1,0] * (self.yubar[1,0])**(2) * self.yudOmega1[0,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[0,1] * self.yubar[0,0] * self.yubar[1,1] * self.yudOmega1[0,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[0,1] * self.yubar[0,0] * self.yubar[1,1] * self.yudOmega1[0,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yu[0,1] * self.yubar[0,0] * self.yubar[1,1] * self.yudOmega1[0,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[1,1] * self.yubar[1,0] * self.yubar[1,1] * self.yudOmega1[0,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[1,1] * self.yubar[1,0] * self.yubar[1,1] * self.yudOmega1[0,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yu[1,1] * self.yubar[1,0] * self.yubar[1,1] * self.yudOmega1[0,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[0,2] * self.yubar[0,0] * self.yubar[1,2] * self.yudOmega1[0,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[0,2] * self.yubar[0,0] * self.yubar[1,2] * self.yudOmega1[0,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yu[0,2] * self.yubar[0,0] * self.yubar[1,2] * self.yudOmega1[0,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[1,2] * self.yubar[1,0] * self.yubar[1,2] * self.yudOmega1[0,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[1,2] * self.yubar[1,0] * self.yubar[1,2] * self.yudOmega1[0,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yu[1,2] * self.yubar[1,0] * self.yubar[1,2] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[0,0] * self.yqqOmega1bar[2,0] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[0,1] * self.yqqOmega1bar[2,0] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[0,2] * self.yqqOmega1bar[2,0] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[1,0] * self.yqqOmega1bar[2,1] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[1,1] * self.yqqOmega1bar[2,1] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[1,2] * self.yqqOmega1bar[2,1] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[2,0] * self.yqqOmega1bar[2,2] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[2,1] * self.yqqOmega1bar[2,2] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[2,2] * self.yqqOmega1bar[2,2] * self.yubar[2,0] * self.yudOmega1[0,mif2] + -3/8 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,mif2] + -1/4 * self.invepsilonbar * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/4 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/4 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[0,0] * self.yubar[0,0] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[0,0] * self.yubar[0,0] * self.yubar[2,0] * self.yudOmega1[0,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yu[0,0] * self.yubar[0,0] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[2,0] * self.yubar[0,0] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[2,0] * self.yubar[0,0] * self.yubar[2,0] * self.yudOmega1[0,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yu[2,0] * self.yubar[0,0] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[2,1] * self.yubar[0,1] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[2,1] * self.yubar[0,1] * self.yubar[2,0] * self.yudOmega1[0,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yu[2,1] * self.yubar[0,1] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[2,2] * self.yubar[0,2] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[2,2] * self.yubar[0,2] * self.yubar[2,0] * self.yudOmega1[0,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yu[2,2] * self.yubar[0,2] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[1,0] * self.yubar[1,0] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[1,0] * self.yubar[1,0] * self.yubar[2,0] * self.yudOmega1[0,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yu[1,0] * self.yubar[1,0] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[2,0] * self.yubar[1,0] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[2,0] * self.yubar[1,0] * self.yubar[2,0] * self.yudOmega1[0,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yu[2,0] * self.yubar[1,0] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[2,1] * self.yubar[1,1] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[2,1] * self.yubar[1,1] * self.yubar[2,0] * self.yudOmega1[0,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yu[2,1] * self.yubar[1,1] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[2,2] * self.yubar[1,2] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[2,2] * self.yubar[1,2] * self.yubar[2,0] * self.yudOmega1[0,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yu[2,2] * self.yubar[1,2] * self.yubar[2,0] * self.yudOmega1[0,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[2,0] * (self.yubar[2,0])**(2) * self.yudOmega1[0,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[2,0] * (self.yubar[2,0])**(2) * self.yudOmega1[0,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yu[2,0] * (self.yubar[2,0])**(2) * self.yudOmega1[0,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[0,1] * self.yubar[0,0] * self.yubar[2,1] * self.yudOmega1[0,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[0,1] * self.yubar[0,0] * self.yubar[2,1] * self.yudOmega1[0,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yu[0,1] * self.yubar[0,0] * self.yubar[2,1] * self.yudOmega1[0,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[1,1] * self.yubar[1,0] * self.yubar[2,1] * self.yudOmega1[0,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[1,1] * self.yubar[1,0] * self.yubar[2,1] * self.yudOmega1[0,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yu[1,1] * self.yubar[1,0] * self.yubar[2,1] * self.yudOmega1[0,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[2,1] * self.yubar[2,0] * self.yubar[2,1] * self.yudOmega1[0,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[2,1] * self.yubar[2,0] * self.yubar[2,1] * self.yudOmega1[0,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yu[2,1] * self.yubar[2,0] * self.yubar[2,1] * self.yudOmega1[0,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[0,2] * self.yubar[0,0] * self.yubar[2,2] * self.yudOmega1[0,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[0,2] * self.yubar[0,0] * self.yubar[2,2] * self.yudOmega1[0,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yu[0,2] * self.yubar[0,0] * self.yubar[2,2] * self.yudOmega1[0,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[1,2] * self.yubar[1,0] * self.yubar[2,2] * self.yudOmega1[0,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[1,2] * self.yubar[1,0] * self.yubar[2,2] * self.yudOmega1[0,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yu[1,2] * self.yubar[1,0] * self.yubar[2,2] * self.yudOmega1[0,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[2,2] * self.yubar[2,0] * self.yubar[2,2] * self.yudOmega1[0,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[2,2] * self.yubar[2,0] * self.yubar[2,2] * self.yudOmega1[0,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yu[2,2] * self.yubar[2,0] * self.yubar[2,2] * self.yudOmega1[0,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,0] * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,0] * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,0] * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,0] * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,0] * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,0] * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,1] * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,1] * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,1] * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,1] * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,1] * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,1] * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,2] * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,2] * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,2] * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,2] * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,2] * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,2] * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[0,0] * self.yqqOmega1bar[0,0] * self.yubar[0,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[0,1] * self.yqqOmega1bar[0,0] * self.yubar[0,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[0,2] * self.yqqOmega1bar[0,0] * self.yubar[0,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[1,0] * self.yqqOmega1bar[0,1] * self.yubar[0,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[1,1] * self.yqqOmega1bar[0,1] * self.yubar[0,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[1,2] * self.yqqOmega1bar[0,1] * self.yubar[0,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[2,0] * self.yqqOmega1bar[0,2] * self.yubar[0,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[2,1] * self.yqqOmega1bar[0,2] * self.yubar[0,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[2,2] * self.yqqOmega1bar[0,2] * self.yubar[0,1] * self.yudOmega1[1,mif2] + -3/8 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,mif2] + -1/4 * self.invepsilonbar * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,mif2] + 1/4 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,mif2] + 1/4 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[0,0] * self.yubar[0,0] * self.yubar[0,1] * self.yudOmega1[1,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[0,0] * self.yubar[0,0] * self.yubar[0,1] * self.yudOmega1[1,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yu[0,0] * self.yubar[0,0] * self.yubar[0,1] * self.yudOmega1[1,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[0,1] * (self.yubar[0,1])**(2) * self.yudOmega1[1,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[0,1] * (self.yubar[0,1])**(2) * self.yudOmega1[1,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yu[0,1] * (self.yubar[0,1])**(2) * self.yudOmega1[1,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[0,2] * self.yubar[0,1] * self.yubar[0,2] * self.yudOmega1[1,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[0,2] * self.yubar[0,1] * self.yubar[0,2] * self.yudOmega1[1,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yu[0,2] * self.yubar[0,1] * self.yubar[0,2] * self.yudOmega1[1,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[0,0] * self.yubar[0,1] * self.yubar[1,0] * self.yudOmega1[1,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[0,0] * self.yubar[0,1] * self.yubar[1,0] * self.yudOmega1[1,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yu[0,0] * self.yubar[0,1] * self.yubar[1,0] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[0,0] * self.yqqOmega1bar[1,0] * self.yubar[1,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[0,1] * self.yqqOmega1bar[1,0] * self.yubar[1,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[0,2] * self.yqqOmega1bar[1,0] * self.yubar[1,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[1,0] * self.yqqOmega1bar[1,1] * self.yubar[1,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[1,1] * self.yqqOmega1bar[1,1] * self.yubar[1,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[1,2] * self.yqqOmega1bar[1,1] * self.yubar[1,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[2,0] * self.yqqOmega1bar[1,2] * self.yubar[1,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[2,1] * self.yqqOmega1bar[1,2] * self.yubar[1,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[2,2] * self.yqqOmega1bar[1,2] * self.yubar[1,1] * self.yudOmega1[1,mif2] + -3/8 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,mif2] + -1/4 * self.invepsilonbar * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,mif2] + 1/4 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,mif2] + 1/4 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[1,0] * self.yubar[0,0] * self.yubar[1,1] * self.yudOmega1[1,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[1,0] * self.yubar[0,0] * self.yubar[1,1] * self.yudOmega1[1,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yu[1,0] * self.yubar[0,0] * self.yubar[1,1] * self.yudOmega1[1,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[0,1] * self.yubar[0,1] * self.yubar[1,1] * self.yudOmega1[1,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[0,1] * self.yubar[0,1] * self.yubar[1,1] * self.yudOmega1[1,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yu[0,1] * self.yubar[0,1] * self.yubar[1,1] * self.yudOmega1[1,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[1,1] * self.yubar[0,1] * self.yubar[1,1] * self.yudOmega1[1,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[1,1] * self.yubar[0,1] * self.yubar[1,1] * self.yudOmega1[1,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yu[1,1] * self.yubar[0,1] * self.yubar[1,1] * self.yudOmega1[1,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[1,2] * self.yubar[0,2] * self.yubar[1,1] * self.yudOmega1[1,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[1,2] * self.yubar[0,2] * self.yubar[1,1] * self.yudOmega1[1,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yu[1,2] * self.yubar[0,2] * self.yubar[1,1] * self.yudOmega1[1,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[1,0] * self.yubar[1,0] * self.yubar[1,1] * self.yudOmega1[1,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[1,0] * self.yubar[1,0] * self.yubar[1,1] * self.yudOmega1[1,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yu[1,0] * self.yubar[1,0] * self.yubar[1,1] * self.yudOmega1[1,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[1,1] * (self.yubar[1,1])**(2) * self.yudOmega1[1,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[1,1] * (self.yubar[1,1])**(2) * self.yudOmega1[1,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yu[1,1] * (self.yubar[1,1])**(2) * self.yudOmega1[1,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[0,2] * self.yubar[0,1] * self.yubar[1,2] * self.yudOmega1[1,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[0,2] * self.yubar[0,1] * self.yubar[1,2] * self.yudOmega1[1,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yu[0,2] * self.yubar[0,1] * self.yubar[1,2] * self.yudOmega1[1,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[1,2] * self.yubar[1,1] * self.yubar[1,2] * self.yudOmega1[1,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[1,2] * self.yubar[1,1] * self.yubar[1,2] * self.yudOmega1[1,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yu[1,2] * self.yubar[1,1] * self.yubar[1,2] * self.yudOmega1[1,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[0,0] * self.yubar[0,1] * self.yubar[2,0] * self.yudOmega1[1,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[0,0] * self.yubar[0,1] * self.yubar[2,0] * self.yudOmega1[1,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yu[0,0] * self.yubar[0,1] * self.yubar[2,0] * self.yudOmega1[1,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[1,0] * self.yubar[1,1] * self.yubar[2,0] * self.yudOmega1[1,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[1,0] * self.yubar[1,1] * self.yubar[2,0] * self.yudOmega1[1,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yu[1,0] * self.yubar[1,1] * self.yubar[2,0] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[0,0] * self.yqqOmega1bar[2,0] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[0,1] * self.yqqOmega1bar[2,0] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[0,2] * self.yqqOmega1bar[2,0] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[1,0] * self.yqqOmega1bar[2,1] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[1,1] * self.yqqOmega1bar[2,1] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[1,2] * self.yqqOmega1bar[2,1] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[2,0] * self.yqqOmega1bar[2,2] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[2,1] * self.yqqOmega1bar[2,2] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[2,2] * self.yqqOmega1bar[2,2] * self.yubar[2,1] * self.yudOmega1[1,mif2] + -3/8 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,mif2] + -1/4 * self.invepsilonbar * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/4 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/4 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[2,0] * self.yubar[0,0] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[2,0] * self.yubar[0,0] * self.yubar[2,1] * self.yudOmega1[1,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yu[2,0] * self.yubar[0,0] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[0,1] * self.yubar[0,1] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[0,1] * self.yubar[0,1] * self.yubar[2,1] * self.yudOmega1[1,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yu[0,1] * self.yubar[0,1] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[2,1] * self.yubar[0,1] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[2,1] * self.yubar[0,1] * self.yubar[2,1] * self.yudOmega1[1,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yu[2,1] * self.yubar[0,1] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[2,2] * self.yubar[0,2] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[2,2] * self.yubar[0,2] * self.yubar[2,1] * self.yudOmega1[1,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yu[2,2] * self.yubar[0,2] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[2,0] * self.yubar[1,0] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[2,0] * self.yubar[1,0] * self.yubar[2,1] * self.yudOmega1[1,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yu[2,0] * self.yubar[1,0] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[1,1] * self.yubar[1,1] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[1,1] * self.yubar[1,1] * self.yubar[2,1] * self.yudOmega1[1,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yu[1,1] * self.yubar[1,1] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[2,1] * self.yubar[1,1] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[2,1] * self.yubar[1,1] * self.yubar[2,1] * self.yudOmega1[1,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yu[2,1] * self.yubar[1,1] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[2,2] * self.yubar[1,2] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[2,2] * self.yubar[1,2] * self.yubar[2,1] * self.yudOmega1[1,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yu[2,2] * self.yubar[1,2] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[2,0] * self.yubar[2,0] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[2,0] * self.yubar[2,0] * self.yubar[2,1] * self.yudOmega1[1,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yu[2,0] * self.yubar[2,0] * self.yubar[2,1] * self.yudOmega1[1,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[2,1] * (self.yubar[2,1])**(2) * self.yudOmega1[1,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[2,1] * (self.yubar[2,1])**(2) * self.yudOmega1[1,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yu[2,1] * (self.yubar[2,1])**(2) * self.yudOmega1[1,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[0,2] * self.yubar[0,1] * self.yubar[2,2] * self.yudOmega1[1,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[0,2] * self.yubar[0,1] * self.yubar[2,2] * self.yudOmega1[1,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yu[0,2] * self.yubar[0,1] * self.yubar[2,2] * self.yudOmega1[1,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[1,2] * self.yubar[1,1] * self.yubar[2,2] * self.yudOmega1[1,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[1,2] * self.yubar[1,1] * self.yubar[2,2] * self.yudOmega1[1,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yu[1,2] * self.yubar[1,1] * self.yubar[2,2] * self.yudOmega1[1,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[2,2] * self.yubar[2,1] * self.yubar[2,2] * self.yudOmega1[1,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[2,2] * self.yubar[2,1] * self.yubar[2,2] * self.yudOmega1[1,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yu[2,2] * self.yubar[2,1] * self.yubar[2,2] * self.yudOmega1[1,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,0] * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,0] * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,0] * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,0] * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,0] * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,0] * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,1] * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,1] * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,1] * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,1] * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,1] * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,1] * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,2] * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,2] * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,2] * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,2] * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,2] * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,2] * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[0,0] * self.yqqOmega1bar[0,0] * self.yubar[0,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[0,1] * self.yqqOmega1bar[0,0] * self.yubar[0,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[0,2] * self.yqqOmega1bar[0,0] * self.yubar[0,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[1,0] * self.yqqOmega1bar[0,1] * self.yubar[0,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[1,1] * self.yqqOmega1bar[0,1] * self.yubar[0,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[1,2] * self.yqqOmega1bar[0,1] * self.yubar[0,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[2,0] * self.yqqOmega1bar[0,2] * self.yubar[0,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[2,1] * self.yqqOmega1bar[0,2] * self.yubar[0,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[2,2] * self.yqqOmega1bar[0,2] * self.yubar[0,2] * self.yudOmega1[2,mif2] + -3/8 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,mif2] + -1/4 * self.invepsilonbar * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,mif2] + 1/4 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,mif2] + 1/4 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[0,0] * self.yubar[0,0] * self.yubar[0,2] * self.yudOmega1[2,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[0,0] * self.yubar[0,0] * self.yubar[0,2] * self.yudOmega1[2,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yu[0,0] * self.yubar[0,0] * self.yubar[0,2] * self.yudOmega1[2,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[0,1] * self.yubar[0,1] * self.yubar[0,2] * self.yudOmega1[2,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[0,1] * self.yubar[0,1] * self.yubar[0,2] * self.yudOmega1[2,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yu[0,1] * self.yubar[0,1] * self.yubar[0,2] * self.yudOmega1[2,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[0,2] * (self.yubar[0,2])**(2) * self.yudOmega1[2,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[0,2] * (self.yubar[0,2])**(2) * self.yudOmega1[2,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yu[0,2] * (self.yubar[0,2])**(2) * self.yudOmega1[2,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[0,0] * self.yubar[0,2] * self.yubar[1,0] * self.yudOmega1[2,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[0,0] * self.yubar[0,2] * self.yubar[1,0] * self.yudOmega1[2,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yu[0,0] * self.yubar[0,2] * self.yubar[1,0] * self.yudOmega1[2,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[0,1] * self.yubar[0,2] * self.yubar[1,1] * self.yudOmega1[2,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[0,1] * self.yubar[0,2] * self.yubar[1,1] * self.yudOmega1[2,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yu[0,1] * self.yubar[0,2] * self.yubar[1,1] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[0,0] * self.yqqOmega1bar[1,0] * self.yubar[1,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[0,1] * self.yqqOmega1bar[1,0] * self.yubar[1,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[0,2] * self.yqqOmega1bar[1,0] * self.yubar[1,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[1,0] * self.yqqOmega1bar[1,1] * self.yubar[1,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[1,1] * self.yqqOmega1bar[1,1] * self.yubar[1,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[1,2] * self.yqqOmega1bar[1,1] * self.yubar[1,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[2,0] * self.yqqOmega1bar[1,2] * self.yubar[1,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[2,1] * self.yqqOmega1bar[1,2] * self.yubar[1,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[2,2] * self.yqqOmega1bar[1,2] * self.yubar[1,2] * self.yudOmega1[2,mif2] + -3/8 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,mif2] + -1/4 * self.invepsilonbar * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,mif2] + 1/4 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,mif2] + 1/4 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[1,0] * self.yubar[0,0] * self.yubar[1,2] * self.yudOmega1[2,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[1,0] * self.yubar[0,0] * self.yubar[1,2] * self.yudOmega1[2,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yu[1,0] * self.yubar[0,0] * self.yubar[1,2] * self.yudOmega1[2,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[1,1] * self.yubar[0,1] * self.yubar[1,2] * self.yudOmega1[2,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[1,1] * self.yubar[0,1] * self.yubar[1,2] * self.yudOmega1[2,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yu[1,1] * self.yubar[0,1] * self.yubar[1,2] * self.yudOmega1[2,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[0,2] * self.yubar[0,2] * self.yubar[1,2] * self.yudOmega1[2,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[0,2] * self.yubar[0,2] * self.yubar[1,2] * self.yudOmega1[2,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yu[0,2] * self.yubar[0,2] * self.yubar[1,2] * self.yudOmega1[2,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[1,2] * self.yubar[0,2] * self.yubar[1,2] * self.yudOmega1[2,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[1,2] * self.yubar[0,2] * self.yubar[1,2] * self.yudOmega1[2,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yu[1,2] * self.yubar[0,2] * self.yubar[1,2] * self.yudOmega1[2,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[1,0] * self.yubar[1,0] * self.yubar[1,2] * self.yudOmega1[2,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[1,0] * self.yubar[1,0] * self.yubar[1,2] * self.yudOmega1[2,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yu[1,0] * self.yubar[1,0] * self.yubar[1,2] * self.yudOmega1[2,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[1,1] * self.yubar[1,1] * self.yubar[1,2] * self.yudOmega1[2,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[1,1] * self.yubar[1,1] * self.yubar[1,2] * self.yudOmega1[2,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yu[1,1] * self.yubar[1,1] * self.yubar[1,2] * self.yudOmega1[2,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[1,2] * (self.yubar[1,2])**(2) * self.yudOmega1[2,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[1,2] * (self.yubar[1,2])**(2) * self.yudOmega1[2,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yu[1,2] * (self.yubar[1,2])**(2) * self.yudOmega1[2,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[0,0] * self.yubar[0,2] * self.yubar[2,0] * self.yudOmega1[2,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[0,0] * self.yubar[0,2] * self.yubar[2,0] * self.yudOmega1[2,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yu[0,0] * self.yubar[0,2] * self.yubar[2,0] * self.yudOmega1[2,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[1,0] * self.yubar[1,2] * self.yubar[2,0] * self.yudOmega1[2,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[1,0] * self.yubar[1,2] * self.yubar[2,0] * self.yudOmega1[2,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yu[1,0] * self.yubar[1,2] * self.yubar[2,0] * self.yudOmega1[2,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[0,1] * self.yubar[0,2] * self.yubar[2,1] * self.yudOmega1[2,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[0,1] * self.yubar[0,2] * self.yubar[2,1] * self.yudOmega1[2,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yu[0,1] * self.yubar[0,2] * self.yubar[2,1] * self.yudOmega1[2,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[1,1] * self.yubar[1,2] * self.yubar[2,1] * self.yudOmega1[2,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[1,1] * self.yubar[1,2] * self.yubar[2,1] * self.yudOmega1[2,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yu[1,1] * self.yubar[1,2] * self.yubar[2,1] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[0,0] * self.yqqOmega1bar[2,0] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[0,1] * self.yqqOmega1bar[2,0] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[0,2] * self.yqqOmega1bar[2,0] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[1,0] * self.yqqOmega1bar[2,1] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[1,1] * self.yqqOmega1bar[2,1] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[1,2] * self.yqqOmega1bar[2,1] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[2,0] * self.yqqOmega1bar[2,2] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[2,1] * self.yqqOmega1bar[2,2] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[2,2] * self.yqqOmega1bar[2,2] * self.yubar[2,2] * self.yudOmega1[2,mif2] + -3/8 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,mif2] + -1/4 * self.invepsilonbar * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/4 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/4 * self.lam * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[2,0] * self.yubar[0,0] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[2,0] * self.yubar[0,0] * self.yubar[2,2] * self.yudOmega1[2,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yu[2,0] * self.yubar[0,0] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[2,1] * self.yubar[0,1] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[2,1] * self.yubar[0,1] * self.yubar[2,2] * self.yudOmega1[2,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yu[2,1] * self.yubar[0,1] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[0,2] * self.yubar[0,2] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[0,2] * self.yubar[0,2] * self.yubar[2,2] * self.yudOmega1[2,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yu[0,2] * self.yubar[0,2] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[2,2] * self.yubar[0,2] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yu[2,2] * self.yubar[0,2] * self.yubar[2,2] * self.yudOmega1[2,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yu[2,2] * self.yubar[0,2] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[2,0] * self.yubar[1,0] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[2,0] * self.yubar[1,0] * self.yubar[2,2] * self.yudOmega1[2,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yu[2,0] * self.yubar[1,0] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[2,1] * self.yubar[1,1] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[2,1] * self.yubar[1,1] * self.yubar[2,2] * self.yudOmega1[2,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yu[2,1] * self.yubar[1,1] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[1,2] * self.yubar[1,2] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[1,2] * self.yubar[1,2] * self.yubar[2,2] * self.yudOmega1[2,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yu[1,2] * self.yubar[1,2] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[2,2] * self.yubar[1,2] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yu[2,2] * self.yubar[1,2] * self.yubar[2,2] * self.yudOmega1[2,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yu[2,2] * self.yubar[1,2] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[2,0] * self.yubar[2,0] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[2,0] * self.yubar[2,0] * self.yubar[2,2] * self.yudOmega1[2,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yu[2,0] * self.yubar[2,0] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[2,1] * self.yubar[2,1] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[2,1] * self.yubar[2,1] * self.yubar[2,2] * self.yudOmega1[2,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yu[2,1] * self.yubar[2,1] * self.yubar[2,2] * self.yudOmega1[2,mif2] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[2,2] * (self.yubar[2,2])**(2) * self.yudOmega1[2,mif2] + 1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yu[2,2] * (self.yubar[2,2])**(2) * self.yudOmega1[2,mif2] + -1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yu[2,2] * (self.yubar[2,2])**(2) * self.yudOmega1[2,mif2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yudOmega1[0,0] * self.yudOmega1bar[0,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yudOmega1[0,0] * self.yudOmega1bar[0,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yudOmega1[0,0] * self.yudOmega1bar[0,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,1] * self.yudOmega1[0,1] * self.yudOmega1bar[0,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,1] * self.yudOmega1[0,1] * self.yudOmega1bar[0,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,1] * self.yudOmega1[0,1] * self.yudOmega1bar[0,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,2] * self.yudOmega1[0,2] * self.yudOmega1bar[0,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,2] * self.yudOmega1[0,2] * self.yudOmega1bar[0,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,2] * self.yudOmega1[0,2] * self.yudOmega1bar[0,0] + 1/32 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yu[0,0] * self.yubar[0,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yu[1,0] * self.yubar[1,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yu[2,0] * self.yubar[2,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yu[0,0] * self.yubar[0,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yu[1,0] * self.yubar[1,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yu[2,0] * self.yubar[2,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yu[0,0] * self.yubar[0,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yu[1,0] * self.yubar[1,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yu[2,0] * self.yubar[2,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[0,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,0] * self.yudOmega1[0,0] * self.yudOmega1bar[0,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,0] * self.yudOmega1[0,0] * self.yudOmega1bar[0,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,0] * self.yudOmega1[0,0] * self.yudOmega1bar[0,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yudOmega1[0,1] * self.yudOmega1bar[0,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yudOmega1[0,1] * self.yudOmega1bar[0,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yudOmega1[0,1] * self.yudOmega1bar[0,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,2] * self.yudOmega1[0,2] * self.yudOmega1bar[0,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,2] * self.yudOmega1[0,2] * self.yudOmega1bar[0,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,2] * self.yudOmega1[0,2] * self.yudOmega1bar[0,1] + 1/32 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yu[0,0] * self.yubar[0,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yu[1,0] * self.yubar[1,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yu[2,0] * self.yubar[2,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yu[0,0] * self.yubar[0,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yu[1,0] * self.yubar[1,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yu[2,0] * self.yubar[2,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yu[0,0] * self.yubar[0,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yu[1,0] * self.yubar[1,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yu[2,0] * self.yubar[2,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[0,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,0] * self.yudOmega1[0,0] * self.yudOmega1bar[0,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,0] * self.yudOmega1[0,0] * self.yudOmega1bar[0,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,0] * self.yudOmega1[0,0] * self.yudOmega1bar[0,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,1] * self.yudOmega1[0,1] * self.yudOmega1bar[0,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,1] * self.yudOmega1[0,1] * self.yudOmega1bar[0,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,1] * self.yudOmega1[0,1] * self.yudOmega1bar[0,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yudOmega1[0,2] * self.yudOmega1bar[0,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yudOmega1[0,2] * self.yudOmega1bar[0,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yudOmega1[0,2] * self.yudOmega1bar[0,2] + 1/32 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yu[0,0] * self.yubar[0,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yu[1,0] * self.yubar[1,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yu[2,0] * self.yubar[2,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yu[0,0] * self.yubar[0,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yu[1,0] * self.yubar[1,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yu[2,0] * self.yubar[2,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yu[0,0] * self.yubar[0,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yu[1,0] * self.yubar[1,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yu[2,0] * self.yubar[2,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yu[0,1] * self.yubar[0,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yu[1,1] * self.yubar[1,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yu[2,1] * self.yubar[2,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[1,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yudOmega1[1,0] * self.yudOmega1bar[1,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yudOmega1[1,0] * self.yudOmega1bar[1,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yudOmega1[1,0] * self.yudOmega1bar[1,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,1] * self.yudOmega1[1,1] * self.yudOmega1bar[1,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,1] * self.yudOmega1[1,1] * self.yudOmega1bar[1,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,1] * self.yudOmega1[1,1] * self.yudOmega1bar[1,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,2] * self.yudOmega1[1,2] * self.yudOmega1bar[1,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,2] * self.yudOmega1[1,2] * self.yudOmega1bar[1,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,2] * self.yudOmega1[1,2] * self.yudOmega1bar[1,0] + 1/32 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yu[0,1] * self.yubar[0,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yu[1,1] * self.yubar[1,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yu[2,1] * self.yubar[2,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yu[0,1] * self.yubar[0,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yu[1,1] * self.yubar[1,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yu[2,1] * self.yubar[2,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yu[0,1] * self.yubar[0,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yu[1,1] * self.yubar[1,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yu[2,1] * self.yubar[2,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[1,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,0] * self.yudOmega1[1,0] * self.yudOmega1bar[1,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,0] * self.yudOmega1[1,0] * self.yudOmega1bar[1,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,0] * self.yudOmega1[1,0] * self.yudOmega1bar[1,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yudOmega1[1,1] * self.yudOmega1bar[1,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yudOmega1[1,1] * self.yudOmega1bar[1,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yudOmega1[1,1] * self.yudOmega1bar[1,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,2] * self.yudOmega1[1,2] * self.yudOmega1bar[1,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,2] * self.yudOmega1[1,2] * self.yudOmega1bar[1,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,2] * self.yudOmega1[1,2] * self.yudOmega1bar[1,1] + 1/32 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yu[0,1] * self.yubar[0,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yu[1,1] * self.yubar[1,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yu[2,1] * self.yubar[2,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yu[0,1] * self.yubar[0,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yu[1,1] * self.yubar[1,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yu[2,1] * self.yubar[2,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yu[0,1] * self.yubar[0,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yu[1,1] * self.yubar[1,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yu[2,1] * self.yubar[2,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[1,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,0] * self.yudOmega1[1,0] * self.yudOmega1bar[1,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,0] * self.yudOmega1[1,0] * self.yudOmega1bar[1,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,0] * self.yudOmega1[1,0] * self.yudOmega1bar[1,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,1] * self.yudOmega1[1,1] * self.yudOmega1bar[1,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,1] * self.yudOmega1[1,1] * self.yudOmega1bar[1,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,1] * self.yudOmega1[1,1] * self.yudOmega1bar[1,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yudOmega1[1,2] * self.yudOmega1bar[1,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yudOmega1[1,2] * self.yudOmega1bar[1,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yudOmega1[1,2] * self.yudOmega1bar[1,2] + 1/32 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yu[0,1] * self.yubar[0,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yu[1,1] * self.yubar[1,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yu[2,1] * self.yubar[2,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yu[0,1] * self.yubar[0,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yu[1,1] * self.yubar[1,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yu[2,1] * self.yubar[2,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yu[0,2] * self.yubar[0,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yu[1,2] * self.yubar[1,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yu[2,2] * self.yubar[2,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yu[0,2] * self.yubar[0,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yu[1,2] * self.yubar[1,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yu[2,2] * self.yubar[2,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[2,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yudOmega1[2,0] * self.yudOmega1bar[2,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yudOmega1[2,0] * self.yudOmega1bar[2,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yudOmega1[2,0] * self.yudOmega1bar[2,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,1] * self.yudOmega1[2,1] * self.yudOmega1bar[2,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,1] * self.yudOmega1[2,1] * self.yudOmega1bar[2,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,1] * self.yudOmega1[2,1] * self.yudOmega1bar[2,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,2] * self.yudOmega1[2,2] * self.yudOmega1bar[2,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,2] * self.yudOmega1[2,2] * self.yudOmega1bar[2,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,2] * self.yudOmega1[2,2] * self.yudOmega1bar[2,0] + 1/32 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yu[0,2] * self.yubar[0,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yu[1,2] * self.yubar[1,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yu[2,2] * self.yubar[2,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yu[0,2] * self.yubar[0,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yu[1,2] * self.yubar[1,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yu[2,2] * self.yubar[2,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yu[0,2] * self.yubar[0,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yu[1,2] * self.yubar[1,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yu[2,2] * self.yubar[2,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[2,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,0] * self.yudOmega1[2,0] * self.yudOmega1bar[2,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,0] * self.yudOmega1[2,0] * self.yudOmega1bar[2,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,0] * self.yudOmega1[2,0] * self.yudOmega1bar[2,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yudOmega1[2,1] * self.yudOmega1bar[2,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yudOmega1[2,1] * self.yudOmega1bar[2,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yudOmega1[2,1] * self.yudOmega1bar[2,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,2] * self.yudOmega1[2,2] * self.yudOmega1bar[2,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,2] * self.yudOmega1[2,2] * self.yudOmega1bar[2,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,2] * self.yudOmega1[2,2] * self.yudOmega1bar[2,1] + 1/32 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yu[0,2] * self.yubar[0,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yu[1,2] * self.yubar[1,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yu[2,2] * self.yubar[2,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yu[0,2] * self.yubar[0,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yu[1,2] * self.yubar[1,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yu[2,2] * self.yubar[2,0] * self.yudOmega1[0,mif2] * self.yudOmega1bar[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yu[0,2] * self.yubar[0,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yu[1,2] * self.yubar[1,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yu[2,2] * self.yubar[2,1] * self.yudOmega1[1,mif2] * self.yudOmega1bar[2,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,0] * self.yudOmega1[2,0] * self.yudOmega1bar[2,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,0] * self.yudOmega1[2,0] * self.yudOmega1bar[2,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,0] * self.yudOmega1[2,0] * self.yudOmega1bar[2,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,1] * self.yudOmega1[2,1] * self.yudOmega1bar[2,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,1] * self.yudOmega1[2,1] * self.yudOmega1bar[2,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,1] * self.yudOmega1[2,1] * self.yudOmega1bar[2,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yudOmega1[2,2] * self.yudOmega1bar[2,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yudOmega1[2,2] * self.yudOmega1bar[2,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yudOmega1[2,2] * self.yudOmega1bar[2,2] + 1/32 * self.lambdaHatOmega1 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yu[0,2] * self.yubar[0,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yu[1,2] * self.yubar[1,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yu[2,2] * self.yubar[2,2] * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,2])

    def alphaOeH(self, mif1,mif2):
        return 0

    def alphaOqq1(self, mif1,mif2,mif3,mif4):
        return (-1/1536 * (self.g3)**(4) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -1/51840 * (self.g1)**(4) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/2304 * (self.g3)**(4) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 11/5184 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -17/3456 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + 1/576 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -1/384 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + 1/432 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -1/288 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -1/432 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + 1/288 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + 17/2304 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,mif1] + 1/256 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,mif1] + 1/192 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,mif1] + -1/192 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,mif1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[0,mif1] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[0,mif1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[0,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[0,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[0,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[0,mif1] + 17/2304 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif3] + 1/256 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif3] + 1/192 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif3] + -1/192 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif3] + 11/5184 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,mif3] + -17/3456 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,mif3] + 1/576 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,mif3] + -1/384 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,mif3] + 1/432 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,mif3] + -1/288 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,mif3] + -1/432 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,mif3] + 1/288 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,mif3] + -7/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[0,mif3] + 5/384 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[0,mif3] + 5/192 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[0,mif3] + -5/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[0,mif3] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[1,0] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[1,0] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[1,0] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[1,0] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[1,0] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[1,0] + 11/5184 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -17/3456 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + 1/576 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -1/384 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + 1/432 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -1/288 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -1/432 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + 1/288 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + 17/2304 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,mif1] + 1/256 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,mif1] + 1/192 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,mif1] + -1/192 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,mif1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[1,mif1] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[1,mif1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[1,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[1,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[1,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[1,mif1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif4] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[1,mif1] + -5/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[1,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[1,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[1,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[1,mif1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[1,mif1] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[1,mif1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[1,mif1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[1,mif1] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[1,mif1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[1,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[1,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[1,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[1,mif1] + 17/2304 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif3] + 1/256 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif3] + 1/192 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif3] + -1/192 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif3] + 11/5184 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,mif3] + -17/3456 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,mif3] + 1/576 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,mif3] + -1/384 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,mif3] + 1/432 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,mif3] + -1/288 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,mif3] + -1/432 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,mif3] + 1/288 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,mif3] + -5/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif4] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[1,mif3] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[1,mif3] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[1,mif3] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[1,mif3] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[1,mif3] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[1,mif3] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[1,mif3] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[1,mif3] + -7/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[1,mif3] + 5/384 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[1,mif3] + 5/192 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[1,mif3] + -5/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[1,mif3] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[2,0] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[2,0] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[2,0] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[2,0] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[2,0] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[2,0] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[2,1] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[2,1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[2,1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[2,1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[2,1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[2,1] + 11/5184 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + -17/3456 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + 1/576 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + -1/384 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + 1/432 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + -1/288 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + -1/432 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + 1/288 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + 17/2304 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,mif1] + 1/256 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,mif1] + 1/192 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,mif1] + -1/192 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,mif1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[2,mif1] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[2,mif1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[2,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[2,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[2,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[2,mif1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif4] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[2,mif1] + -5/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[2,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[2,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[2,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[2,mif1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[2,mif1] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[2,mif1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[2,mif1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[2,mif1] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[2,mif1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[2,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[2,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[2,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[2,mif1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif4] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif3] * self.yqqOmega1bar[2,mif1] + -5/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[1,mif3] * self.yqqOmega1bar[2,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif3] * self.yqqOmega1bar[2,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif3] * self.yqqOmega1bar[2,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif3] * self.yqqOmega1bar[2,mif1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif3] * self.yqqOmega1bar[2,mif1] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif3] * self.yqqOmega1bar[2,mif1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif3] * self.yqqOmega1bar[2,mif1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[2,mif1] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[2,mif1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[2,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[2,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[2,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[2,mif1] + 17/2304 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif3] + 1/256 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif3] + 1/192 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif3] + -1/192 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif3] + 11/5184 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,mif3] + -17/3456 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,mif3] + 1/576 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,mif3] + -1/384 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,mif3] + 1/432 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,mif3] + -1/288 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,mif3] + -1/432 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,mif3] + 1/288 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,mif3] + -5/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif4] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[2,mif3] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[2,mif3] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[2,mif3] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[2,mif3] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[2,mif3] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[2,mif3] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[2,mif3] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[2,mif3] + -5/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif4] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[2,mif3] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[2,mif3] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[2,mif3] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[2,mif3] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[2,mif3] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[2,mif3] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[2,mif3] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[2,mif3] + -7/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[2,mif3] + 5/384 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[2,mif3] + 5/192 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[2,mif3] + -5/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[2,mif3] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[mif1,0] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[mif1,0] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[mif1,0] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,0] * self.yqqOmega1bar[mif1,0] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,0] * self.yqqOmega1bar[mif1,0] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,0] * self.yqqOmega1bar[mif1,0] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,0] * self.yqqOmega1bar[mif1,0] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,0] * self.yqqOmega1bar[mif1,0] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,0] * self.yqqOmega1bar[mif1,0] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[mif1,1] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[mif1,1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[mif1,1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[mif1,1] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[mif1,1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[mif1,1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,1] * self.yqqOmega1bar[mif1,1] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,1] * self.yqqOmega1bar[mif1,1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,1] * self.yqqOmega1bar[mif1,1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[mif1,2] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[mif1,2] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[mif1,2] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[mif1,2] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[mif1,2] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[mif1,2] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[mif1,2] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[mif1,2] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[mif1,2] + -1/12 * (self.MOmega1)**(-2) * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[mif1,mif3] + -1/384 * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[mif1,mif3] + -1/128 * self.aEV * self.epsilonbar * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[mif1,mif3] + -5/96 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[mif1,mif3] + -5/32 * self.aEV * self.epsilonbar * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[mif1,mif3] + -1/192 * self.aEV * self.epsilonbar * (self.g2)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[mif1,mif3] + -5/48 * self.aEV * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[mif1,mif3] + 1/192 * self.aEV * self.epsilonbar * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[mif1,mif3] + 5/48 * self.aEV * self.epsilonbar * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[mif1,mif3] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[mif1,mif3] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[mif1,mif3] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[mif1,mif3] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[mif1,mif3] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[mif1,mif3] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[mif1,mif3] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[mif1,mif3] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[mif1,mif3] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[mif1,mif3] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif1,mif3] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif1,mif3] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,0] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif1,mif3] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif1,mif3] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif1,mif3] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif1,mif3] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif1,mif3] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif1,mif3] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif1,mif3] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[1,0] * self.yqqOmega1bar[mif1,mif3] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[1,0] * self.yqqOmega1bar[mif1,mif3] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[1,0] * self.yqqOmega1bar[mif1,mif3] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[mif1,mif3] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[mif1,mif3] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[mif1,mif3] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[mif1,mif3] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[mif1,mif3] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[mif1,mif3] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif1,mif3] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif1,mif3] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif1,mif3] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif1,mif3] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif1,mif3] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif1,mif3] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif1,mif3] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif1,mif3] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif1,mif3] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[2,0] * self.yqqOmega1bar[mif1,mif3] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[2,0] * self.yqqOmega1bar[mif1,mif3] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[2,0] * self.yqqOmega1bar[mif1,mif3] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[2,1] * self.yqqOmega1bar[mif1,mif3] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[2,1] * self.yqqOmega1bar[mif1,mif3] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[2,1] * self.yqqOmega1bar[mif1,mif3] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[mif1,mif3] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[mif1,mif3] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[mif1,mif3] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif1,mif3] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif1,mif3] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif1,mif3] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif1,mif3] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif1,mif3] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif1,mif3] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif1,mif3] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif1,mif3] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif1,mif3] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[mif3,0] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[mif3,0] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[mif3,0] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,0] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,0] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,0] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,0] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,0] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,0] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,0] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,0] * self.yqqOmega1bar[mif3,0] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,0] * self.yqqOmega1bar[mif3,0] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,0] * self.yqqOmega1bar[mif3,0] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,0] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,0] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,0] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,0] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,0] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,0] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,0] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,0] * self.yqqOmega1bar[mif3,0] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,0] * self.yqqOmega1bar[mif3,0] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,0] * self.yqqOmega1bar[mif3,0] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,0] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,0] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,0] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,0] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,0] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,0] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,0] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[mif3,1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[mif3,1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[mif3,1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,1] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,1] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[mif3,1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[mif3,1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[mif3,1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,1] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,1] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,1] * self.yqqOmega1bar[mif3,1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,1] * self.yqqOmega1bar[mif3,1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,1] * self.yqqOmega1bar[mif3,1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,1] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,1] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[mif3,2] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[mif3,2] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[mif3,2] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,2] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,2] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,2] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,2] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,2] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,2] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,2] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[mif3,2] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[mif3,2] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[mif3,2] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,2] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,2] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,2] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,2] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,2] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,2] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,2] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[mif3,2] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[mif3,2] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[mif3,2] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,2] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,2] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,2] * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,2] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,2] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,2] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,2] + -1/12 * (self.MOmega1)**(-2) * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[mif3,mif1] + -1/384 * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[mif3,mif1] + -1/128 * self.aEV * self.epsilonbar * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[mif3,mif1] + -5/96 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[mif3,mif1] + -5/32 * self.aEV * self.epsilonbar * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[mif3,mif1] + -1/192 * self.aEV * self.epsilonbar * (self.g2)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[mif3,mif1] + -5/48 * self.aEV * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/192 * self.aEV * self.epsilonbar * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[mif3,mif1] + 5/48 * self.aEV * self.epsilonbar * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[mif2,mif4] * self.yqqOmega1bar[mif3,mif1] + -1/4 * (self.MOmega1)**(-2) * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[mif3,mif1] + -1/128 * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[mif3,mif1] + -3/128 * self.aEV * self.epsilonbar * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/32 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[mif3,mif1] + 3/32 * self.aEV * self.epsilonbar * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[mif3,mif1] + -1/64 * self.aEV * self.epsilonbar * (self.g2)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/16 * self.aEV * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.aEV * self.epsilonbar * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[mif3,mif1] + -1/16 * self.aEV * self.epsilonbar * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[mif3,mif1] + 5/384 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[mif3,mif1] + 5/192 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[mif3,mif1] + -5/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif4] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif4] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif4] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[mif3,mif1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[mif3,mif1] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[mif3,mif1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif4] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif4] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif4] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[mif3,mif1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[mif3,mif1] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[mif3,mif1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,0] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,1] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,0] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1[mif2,0] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1[mif2,0] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif3,mif1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,0] * self.yqqOmega1[mif2,0] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1[mif2,1] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1[mif2,1] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif3,mif1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,1] * self.yqqOmega1[mif2,1] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1[mif2,2] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1[mif2,2] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif3,mif1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,2] * self.yqqOmega1[mif2,2] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif4] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,0] * self.yqqOmega1bar[mif3,mif1] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif4] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,0] * self.yqqOmega1bar[mif3,mif1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif4] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,0] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,0] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,0] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,0] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[1,0] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[1,0] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[1,0] * self.yqqOmega1bar[mif3,mif1] + 5/384 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[mif3,mif1] + 5/192 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[mif3,mif1] + -5/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif4] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif4] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif4] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[mif3,mif1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[mif3,mif1] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[mif3,mif1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,0] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,1] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1[mif2,0] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1[mif2,0] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif3,mif1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,0] * self.yqqOmega1[mif2,0] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1[mif2,1] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1[mif2,1] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif3,mif1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,1] * self.yqqOmega1[mif2,1] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1[mif2,2] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1[mif2,2] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif3,mif1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,2] * self.yqqOmega1[mif2,2] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif4] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,0] * self.yqqOmega1bar[mif3,mif1] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif4] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,0] * self.yqqOmega1bar[mif3,mif1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif4] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,0] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,0] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,0] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,0] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[2,0] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[2,0] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[2,0] * self.yqqOmega1bar[mif3,mif1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif4] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,1] * self.yqqOmega1bar[mif3,mif1] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif4] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,1] * self.yqqOmega1bar[mif3,mif1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif4] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,1] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,1] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,1] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,1] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[2,1] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[2,1] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[2,1] * self.yqqOmega1bar[mif3,mif1] + 5/384 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[mif3,mif1] + 5/192 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[mif3,mif1] + -5/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,0] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,1] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1[mif2,0] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1[mif2,0] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif3,mif1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,0] * self.yqqOmega1[mif2,0] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1[mif2,1] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1[mif2,1] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif3,mif1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,1] * self.yqqOmega1[mif2,1] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1[mif2,2] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1[mif2,2] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif3,mif1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,2] * self.yqqOmega1[mif2,2] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif3,mif1])

    def alphaOqq3(self, mif1,mif2,mif3,mif4):
        return (-1/1536 * (self.g3)**(4) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -7/576 * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -1/64 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -1/48 * (self.g2)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + 1/48 * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + 17/2304 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,mif1] + 1/256 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,mif1] + 1/192 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,mif1] + -1/192 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[0,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[0,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[0,mif1] + 17/2304 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif3] + 1/256 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif3] + 1/192 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif3] + -1/192 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif3] + -7/576 * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,mif3] + -1/64 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,mif3] + -1/48 * (self.g2)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,mif3] + 1/48 * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,mif3] + -5/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[0,mif3] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[0,mif3] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[0,mif3] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[0,mif3] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[1,0] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[1,0] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[1,0] + -7/576 * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -1/64 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -1/48 * (self.g2)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + 1/48 * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + 17/2304 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,mif1] + 1/256 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,mif1] + 1/192 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,mif1] + -1/192 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[1,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[1,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[1,mif1] + -5/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[1,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[1,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[1,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[1,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[1,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[1,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[1,mif1] + 17/2304 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif3] + 1/256 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif3] + 1/192 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif3] + -1/192 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif3] + -7/576 * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,mif3] + -1/64 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,mif3] + -1/48 * (self.g2)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,mif3] + 1/48 * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,mif3] + -5/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif4] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[1,mif3] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[1,mif3] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[1,mif3] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[1,mif3] + -5/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[1,mif3] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[1,mif3] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[1,mif3] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[1,mif3] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[2,0] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[2,0] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[2,0] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[2,1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[2,1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[2,1] + -7/576 * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + -1/64 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + -1/48 * (self.g2)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + 1/48 * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + 17/2304 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,mif1] + 1/256 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,mif1] + 1/192 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,mif1] + -1/192 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[2,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[2,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[2,mif1] + -5/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[2,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[2,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[2,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[2,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[2,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[2,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[2,mif1] + -5/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[1,mif3] * self.yqqOmega1bar[2,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif3] * self.yqqOmega1bar[2,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif3] * self.yqqOmega1bar[2,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif3] * self.yqqOmega1bar[2,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[2,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[2,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif3] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[2,mif1] + 17/2304 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif3] + 1/256 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif3] + 1/192 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif3] + -1/192 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif3] + -7/576 * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,mif3] + -1/64 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,mif3] + -1/48 * (self.g2)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,mif3] + 1/48 * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,mif3] + -5/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif4] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[2,mif3] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[2,mif3] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[2,mif3] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[2,mif3] + -5/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif4] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[2,mif3] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[2,mif3] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[2,mif3] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[2,mif3] + -5/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[2,mif3] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[2,mif3] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[2,mif3] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[2,mif3] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[mif3,0] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[mif3,0] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[mif3,0] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,0] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,0] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,0] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,0] * self.yqqOmega1bar[mif3,0] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,0] * self.yqqOmega1bar[mif3,0] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,0] * self.yqqOmega1bar[mif3,0] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,0] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,0] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,0] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,0] * self.yqqOmega1bar[mif3,0] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,0] * self.yqqOmega1bar[mif3,0] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,0] * self.yqqOmega1bar[mif3,0] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,0] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,0] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,0] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,0] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[mif3,1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[mif3,1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[mif3,1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[mif3,1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[mif3,1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[mif3,1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,1] * self.yqqOmega1bar[mif3,1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,1] * self.yqqOmega1bar[mif3,1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,1] * self.yqqOmega1bar[mif3,1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[mif3,2] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[mif3,2] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[mif3,2] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,2] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,2] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,2] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[mif3,2] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[mif3,2] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[mif3,2] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,2] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,2] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,2] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[mif3,2] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[mif3,2] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif1] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[mif3,2] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,2] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,2] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,2] * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,2] + -1/4 * (self.MOmega1)**(-2) * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[mif3,mif1] + -1/128 * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[mif3,mif1] + -3/128 * self.aEV * self.epsilonbar * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/32 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[mif3,mif1] + 3/32 * self.aEV * self.epsilonbar * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[mif3,mif1] + -1/64 * self.aEV * self.epsilonbar * (self.g2)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/16 * self.aEV * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.aEV * self.epsilonbar * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[mif3,mif1] + -1/16 * self.aEV * self.epsilonbar * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[mif4,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[0,0] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif4] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif4] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif4] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[0,1] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif4] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif4] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif4] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[0,2] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,0] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,1] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,0] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,0] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,0] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,0] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[1,0] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[1,0] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[1,0] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[1,1] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif4] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif4] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif4] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[1,2] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,0] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,1] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,1] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,0] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,0] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,0] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[2,0] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[2,0] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[2,0] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,1] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,1] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,1] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[2,1] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[2,1] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[2,1] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[2,2] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,0] * self.yqqOmega1[mif4,0] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,1] * self.yqqOmega1[mif4,1] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,2] * self.yqqOmega1[mif4,2] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif3,mif1] + 1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif3,mif1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,2] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif4] * self.yqqOmega1bar[mif3,mif1])

    def alphaOuu(self, mif1,mif2,mif3,mif4):
        return (-1/768 * (self.g3)**(4) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -1/3240 * (self.g1)**(4) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/2304 * (self.g3)**(4) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -5/2592 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,0] + -17/13824 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,0] + -1/288 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,0] + -1/1536 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,0] + -1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,0] + -1/1152 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,0] + 1/216 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,0] + 1/1152 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,0] + 17/4608 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif1,0] + 1/512 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif1,0] + 1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif1,0] + -1/384 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif1,0] + -5/2592 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,1] + -17/13824 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,1] + -1/288 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,1] + -1/1536 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,1] + -1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,1] + -1/1152 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,1] + 1/216 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,1] + 1/1152 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,1] + 17/4608 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif1,1] + 1/512 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif1,1] + 1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif1,1] + -1/384 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif1,1] + -5/2592 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,2] + -17/13824 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,2] + -1/288 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,2] + -1/1536 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,2] + -1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,2] + -1/1152 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,2] + 1/216 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,2] + 1/1152 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,2] + 17/4608 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif1,2] + 1/512 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif1,2] + 1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif1,2] + -1/384 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif1,2] + 17/4608 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif3,0] + 1/512 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif3,0] + 1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif3,0] + -1/384 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif3,0] + -5/2592 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + -17/13824 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + -1/288 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + -1/1536 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + -1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + -1/1152 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + 1/216 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + 1/1152 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + -3/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,0] * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif1,0] * self.yudOmega1bar[mif3,0] + -1/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,1] * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif1,1] * self.yudOmega1bar[mif3,0] + -5/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,0] * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif1,1] * self.yudOmega1bar[mif3,0] + -1/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,2] * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif1,2] * self.yudOmega1bar[mif3,0] + -5/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,0] * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif1,2] * self.yudOmega1bar[mif3,0] + 17/4608 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif3,1] + 1/512 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif3,1] + 1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif3,1] + -1/384 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif3,1] + -5/2592 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + -17/13824 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + -1/288 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + -1/1536 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + -1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + -1/1152 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + 1/216 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + 1/1152 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + -5/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,1] * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif1,0] * self.yudOmega1bar[mif3,1] + -1/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,0] * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif1,0] * self.yudOmega1bar[mif3,1] + -3/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,1] * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif1,1] * self.yudOmega1bar[mif3,1] + -1/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,2] * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif1,2] * self.yudOmega1bar[mif3,1] + -5/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,1] * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif1,2] * self.yudOmega1bar[mif3,1] + 17/4608 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif3,2] + 1/512 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif3,2] + 1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif3,2] + -1/384 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif3,2] + -5/2592 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2] + -17/13824 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2] + -1/288 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2] + -1/1536 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2] + -1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2] + -1/1152 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2] + 1/216 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2] + 1/1152 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2] + -5/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,2] * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif1,0] * self.yudOmega1bar[mif3,2] + -1/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,0] * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif1,0] * self.yudOmega1bar[mif3,2] + -5/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,2] * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif1,1] * self.yudOmega1bar[mif3,2] + -1/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,1] * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif1,1] * self.yudOmega1bar[mif3,2] + -3/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,2] * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif1,2] * self.yudOmega1bar[mif3,2])

    def alphaOdd(self, mif1,mif2,mif3,mif4):
        return (-1/768 * (self.g3)**(4) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -1/12960 * (self.g1)**(4) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/2304 * (self.g3)**(4) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -1/324 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,mif1] + -17/13824 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,mif1] + -1/288 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,mif1] + -1/1536 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,mif1] + -1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,mif1] + -1/1152 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,mif1] + 1/216 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,mif1] + 1/1152 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,mif1] + 17/4608 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif1] + 1/512 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif1] + 1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif1] + -1/384 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif1] + 17/4608 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,mif3] + 1/512 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,mif3] + 1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,mif3] + -1/384 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[0,mif2] * self.yudOmega1bar[0,mif3] + -1/324 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + -17/13824 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + -1/288 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + -1/1536 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + -1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + -1/1152 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + 1/216 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + 1/1152 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + -3/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,mif2] * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif1] * self.yudOmega1bar[0,mif3] + -1/324 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,mif1] + -17/13824 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,mif1] + -1/288 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,mif1] + -1/1536 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,mif1] + -1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,mif1] + -1/1152 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,mif1] + 1/216 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,mif1] + 1/1152 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,mif1] + 17/4608 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif1] + 1/512 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif1] + 1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif1] + -1/384 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif1] + -1/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,mif4] * self.yudOmega1[1,mif2] * self.yudOmega1bar[0,mif3] * self.yudOmega1bar[1,mif1] + -5/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,mif2] * self.yudOmega1[1,mif4] * self.yudOmega1bar[0,mif3] * self.yudOmega1bar[1,mif1] + 17/4608 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,mif3] + 1/512 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,mif3] + 1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,mif3] + -1/384 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[1,mif2] * self.yudOmega1bar[1,mif3] + -1/324 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + -17/13824 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + -1/288 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + -1/1536 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + -1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + -1/1152 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + 1/216 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + 1/1152 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + -5/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,mif4] * self.yudOmega1[1,mif2] * self.yudOmega1bar[0,mif1] * self.yudOmega1bar[1,mif3] + -1/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,mif2] * self.yudOmega1[1,mif4] * self.yudOmega1bar[0,mif1] * self.yudOmega1bar[1,mif3] + -3/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,mif2] * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif1] * self.yudOmega1bar[1,mif3] + -1/324 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,mif1] + -17/13824 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,mif1] + -1/288 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,mif1] + -1/1536 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,mif1] + -1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,mif1] + -1/1152 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,mif1] + 1/216 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,mif1] + 1/1152 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,mif1] + 17/4608 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif1] + 1/512 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif1] + 1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif1] + -1/384 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif1] + -1/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,mif4] * self.yudOmega1[2,mif2] * self.yudOmega1bar[0,mif3] * self.yudOmega1bar[2,mif1] + -5/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,mif2] * self.yudOmega1[2,mif4] * self.yudOmega1bar[0,mif3] * self.yudOmega1bar[2,mif1] + -1/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,mif4] * self.yudOmega1[2,mif2] * self.yudOmega1bar[1,mif3] * self.yudOmega1bar[2,mif1] + -5/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,mif2] * self.yudOmega1[2,mif4] * self.yudOmega1bar[1,mif3] * self.yudOmega1bar[2,mif1] + 17/4608 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,mif3] + 1/512 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,mif3] + 1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,mif3] + -1/384 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[2,mif2] * self.yudOmega1bar[2,mif3] + -1/324 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + -17/13824 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + -1/288 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + -1/1536 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + -1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + -1/1152 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + 1/216 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + 1/1152 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + -5/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,mif4] * self.yudOmega1[2,mif2] * self.yudOmega1bar[0,mif1] * self.yudOmega1bar[2,mif3] + -1/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,mif2] * self.yudOmega1[2,mif4] * self.yudOmega1bar[0,mif1] * self.yudOmega1bar[2,mif3] + -5/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,mif4] * self.yudOmega1[2,mif2] * self.yudOmega1bar[1,mif1] * self.yudOmega1bar[2,mif3] + -1/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,mif2] * self.yudOmega1[2,mif4] * self.yudOmega1bar[1,mif1] * self.yudOmega1bar[2,mif3] + -3/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,mif2] * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif1] * self.yudOmega1bar[2,mif3])

    def alphaOud1(self, mif1,mif2,mif3,mif4):
        return (1/3240 * (self.g1)**(4) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/81 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + 1/72 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + 1/54 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + -1/54 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + 1/81 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + 1/72 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + 1/54 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + -1/54 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + 1/81 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + 1/72 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + 1/54 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + -1/54 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + 5/2592 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,0] + 1/288 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,0] + 1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,0] + -1/216 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,0] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[0,mif3] * self.yudOmega1bar[mif1,0] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,mif3] * self.yudOmega1bar[mif1,0] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,mif3] * self.yudOmega1bar[mif1,0] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[0,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,mif3] * self.yudOmega1bar[mif1,0] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[1,mif3] * self.yudOmega1bar[mif1,0] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,mif3] * self.yudOmega1bar[mif1,0] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,mif3] * self.yudOmega1bar[mif1,0] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[1,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,mif3] * self.yudOmega1bar[mif1,0] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[2,mif3] * self.yudOmega1bar[mif1,0] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,mif3] * self.yudOmega1bar[mif1,0] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,mif3] * self.yudOmega1bar[mif1,0] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[2,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,mif3] * self.yudOmega1bar[mif1,0] + 5/2592 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,1] + 1/288 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,1] + 1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,1] + -1/216 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[0,mif3] * self.yudOmega1bar[mif1,1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,mif3] * self.yudOmega1bar[mif1,1] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,mif3] * self.yudOmega1bar[mif1,1] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[0,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,mif3] * self.yudOmega1bar[mif1,1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[1,mif3] * self.yudOmega1bar[mif1,1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,mif3] * self.yudOmega1bar[mif1,1] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,mif3] * self.yudOmega1bar[mif1,1] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[1,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,mif3] * self.yudOmega1bar[mif1,1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[2,mif3] * self.yudOmega1bar[mif1,1] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,mif3] * self.yudOmega1bar[mif1,1] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,mif3] * self.yudOmega1bar[mif1,1] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[2,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,mif3] * self.yudOmega1bar[mif1,1] + 5/2592 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,2] + 1/288 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,2] + 1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,2] + -1/216 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,2] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[0,mif3] * self.yudOmega1bar[mif1,2] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,mif3] * self.yudOmega1bar[mif1,2] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,mif3] * self.yudOmega1bar[mif1,2] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[0,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,mif3] * self.yudOmega1bar[mif1,2] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[1,mif3] * self.yudOmega1bar[mif1,2] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,mif3] * self.yudOmega1bar[mif1,2] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,mif3] * self.yudOmega1bar[mif1,2] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[1,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,mif3] * self.yudOmega1bar[mif1,2] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[2,mif3] * self.yudOmega1bar[mif1,2] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,mif3] * self.yudOmega1bar[mif1,2] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,mif3] * self.yudOmega1bar[mif1,2] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[2,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,mif3] * self.yudOmega1bar[mif1,2] + 1/3 * (self.MOmega1)**(-2) * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[mif1,mif3] + 1/96 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[mif1,mif3] + 1/32 * self.aEV * self.epsilonbar * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[mif1,mif3] + 1/48 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[mif1,mif3] + 1/16 * self.aEV * self.epsilonbar * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[mif1,mif3] + 1/48 * self.aEV * self.epsilonbar * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[mif1,mif3] + 1/24 * self.aEV * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[mif1,mif3] + -1/48 * self.aEV * self.epsilonbar * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[mif1,mif3] + -1/24 * self.aEV * self.epsilonbar * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[mif1,mif3] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[0,0] * self.yudOmega1bar[mif1,mif3] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[0,0] * self.yudOmega1bar[mif1,mif3] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[0,0] * self.yudOmega1bar[mif1,mif3] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[0,1] * self.yudOmega1bar[mif1,mif3] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[0,1] * self.yudOmega1bar[mif1,mif3] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[0,1] * self.yudOmega1bar[mif1,mif3] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[0,2] * self.yudOmega1bar[mif1,mif3] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[0,2] * self.yudOmega1bar[mif1,mif3] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[0,2] * self.yudOmega1bar[mif1,mif3] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[1,0] * self.yudOmega1bar[mif1,mif3] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[1,0] * self.yudOmega1bar[mif1,mif3] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[1,0] * self.yudOmega1bar[mif1,mif3] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[1,1] * self.yudOmega1bar[mif1,mif3] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[1,1] * self.yudOmega1bar[mif1,mif3] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[1,1] * self.yudOmega1bar[mif1,mif3] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[1,2] * self.yudOmega1bar[mif1,mif3] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[1,2] * self.yudOmega1bar[mif1,mif3] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[1,2] * self.yudOmega1bar[mif1,mif3] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[2,0] * self.yudOmega1bar[mif1,mif3] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[2,0] * self.yudOmega1bar[mif1,mif3] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[2,0] * self.yudOmega1bar[mif1,mif3] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[2,1] * self.yudOmega1bar[mif1,mif3] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[2,1] * self.yudOmega1bar[mif1,mif3] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[2,1] * self.yudOmega1bar[mif1,mif3] + -1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[2,2] * self.yudOmega1bar[mif1,mif3] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[2,2] * self.yudOmega1bar[mif1,mif3] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[2,2] * self.yudOmega1bar[mif1,mif3])

    def alphaOud8(self, mif1,mif2,mif3,mif4):
        return (-1/192 * (self.g3)**(4) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 17/1152 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + 1/128 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + 1/96 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + -1/96 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + 17/1152 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + 1/128 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + 1/96 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + -1/96 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + 17/1152 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + 1/128 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + 1/96 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + -1/96 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + 17/1152 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,0] + 1/128 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,0] + 1/96 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,0] + -1/96 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif2,0] * self.yudOmega1bar[mif1,0] + -5/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[0,mif3] * self.yudOmega1bar[mif1,0] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,mif3] * self.yudOmega1bar[mif1,0] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,mif3] * self.yudOmega1bar[mif1,0] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[0,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,mif3] * self.yudOmega1bar[mif1,0] + -5/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[1,mif3] * self.yudOmega1bar[mif1,0] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,mif3] * self.yudOmega1bar[mif1,0] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,mif3] * self.yudOmega1bar[mif1,0] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[1,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,mif3] * self.yudOmega1bar[mif1,0] + -5/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[2,mif3] * self.yudOmega1bar[mif1,0] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,mif3] * self.yudOmega1bar[mif1,0] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,mif3] * self.yudOmega1bar[mif1,0] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[2,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,mif3] * self.yudOmega1bar[mif1,0] + 17/1152 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,1] + 1/128 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,1] + 1/96 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,1] + -1/96 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif2,1] * self.yudOmega1bar[mif1,1] + -5/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[0,mif3] * self.yudOmega1bar[mif1,1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,mif3] * self.yudOmega1bar[mif1,1] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,mif3] * self.yudOmega1bar[mif1,1] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[0,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,mif3] * self.yudOmega1bar[mif1,1] + -5/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[1,mif3] * self.yudOmega1bar[mif1,1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,mif3] * self.yudOmega1bar[mif1,1] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,mif3] * self.yudOmega1bar[mif1,1] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[1,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,mif3] * self.yudOmega1bar[mif1,1] + -5/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[2,mif3] * self.yudOmega1bar[mif1,1] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,mif3] * self.yudOmega1bar[mif1,1] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,mif3] * self.yudOmega1bar[mif1,1] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[2,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,mif3] * self.yudOmega1bar[mif1,1] + 17/1152 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,2] + 1/128 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,2] + 1/96 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,2] + -1/96 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif2,2] * self.yudOmega1bar[mif1,2] + -5/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[0,mif3] * self.yudOmega1bar[mif1,2] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,mif3] * self.yudOmega1bar[mif1,2] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,mif3] * self.yudOmega1bar[mif1,2] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[0,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,mif3] * self.yudOmega1bar[mif1,2] + -5/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[1,mif3] * self.yudOmega1bar[mif1,2] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,mif3] * self.yudOmega1bar[mif1,2] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,mif3] * self.yudOmega1bar[mif1,2] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[1,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,mif3] * self.yudOmega1bar[mif1,2] + -5/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[2,mif3] * self.yudOmega1bar[mif1,2] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,mif3] * self.yudOmega1bar[mif1,2] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,mif3] * self.yudOmega1bar[mif1,2] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[2,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,mif3] * self.yudOmega1bar[mif1,2] + 1/2 * (self.MOmega1)**(-2) * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[mif1,mif3] + 1/64 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[mif1,mif3] + 3/64 * self.aEV * self.epsilonbar * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[mif1,mif3] + -1/16 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[mif1,mif3] + -3/16 * self.aEV * self.epsilonbar * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[mif1,mif3] + 1/32 * self.aEV * self.epsilonbar * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[mif1,mif3] + -1/8 * self.aEV * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[mif1,mif3] + -1/32 * self.aEV * self.epsilonbar * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[mif1,mif3] + 1/8 * self.aEV * self.epsilonbar * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[mif1,mif3] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[0,0] * self.yudOmega1bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[0,0] * self.yudOmega1bar[mif1,mif3] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[0,0] * self.yudOmega1bar[mif1,mif3] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[0,1] * self.yudOmega1bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[0,1] * self.yudOmega1bar[mif1,mif3] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[0,1] * self.yudOmega1bar[mif1,mif3] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[0,2] * self.yudOmega1bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[0,2] * self.yudOmega1bar[mif1,mif3] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[0,2] * self.yudOmega1bar[mif1,mif3] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[1,0] * self.yudOmega1bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[1,0] * self.yudOmega1bar[mif1,mif3] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[1,0] * self.yudOmega1bar[mif1,mif3] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[1,1] * self.yudOmega1bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[1,1] * self.yudOmega1bar[mif1,mif3] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[1,1] * self.yudOmega1bar[mif1,mif3] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[1,2] * self.yudOmega1bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[1,2] * self.yudOmega1bar[mif1,mif3] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[1,2] * self.yudOmega1bar[mif1,mif3] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[2,0] * self.yudOmega1bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[2,0] * self.yudOmega1bar[mif1,mif3] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[2,0] * self.yudOmega1bar[mif1,mif3] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[2,1] * self.yudOmega1bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[2,1] * self.yudOmega1bar[mif1,mif3] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[2,1] * self.yudOmega1bar[mif1,mif3] + -1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[2,2] * self.yudOmega1bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[2,2] * self.yudOmega1bar[mif1,mif3] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[2,2] * self.yudOmega1bar[mif1,mif3])

    def alphaOqu1(self, mif1,mif2,mif3,mif4):
        return (-1/6480 * (self.g1)**(4) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 11/648 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + 1/72 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + 1/54 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -1/54 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + 11/648 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + 1/72 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + 1/54 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -1/54 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + 11/648 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + 1/72 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + 1/54 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + -1/54 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + -9/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[0,mif4] * self.yubar[0,mif3] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[0,mif4] * self.yubar[0,mif3] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[0,mif4] * self.yubar[0,mif3] + -9/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[1,mif4] * self.yubar[0,mif3] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[1,mif4] * self.yubar[0,mif3] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[1,mif4] * self.yubar[0,mif3] + -9/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[2,mif4] * self.yubar[0,mif3] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[2,mif4] * self.yubar[0,mif3] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[2,mif4] * self.yubar[0,mif3] + -9/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[0,mif4] * self.yubar[1,mif3] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[0,mif4] * self.yubar[1,mif3] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[0,mif4] * self.yubar[1,mif3] + -9/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[1,mif4] * self.yubar[1,mif3] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[1,mif4] * self.yubar[1,mif3] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[1,mif4] * self.yubar[1,mif3] + -9/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[2,mif4] * self.yubar[1,mif3] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[2,mif4] * self.yubar[1,mif3] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[2,mif4] * self.yubar[1,mif3] + -9/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[0,mif4] * self.yubar[2,mif3] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[0,mif4] * self.yubar[2,mif3] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[0,mif4] * self.yubar[2,mif3] + -9/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[1,mif4] * self.yubar[2,mif3] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[1,mif4] * self.yubar[2,mif3] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[1,mif4] * self.yubar[2,mif3] + -9/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[2,mif4] * self.yubar[2,mif3] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[2,mif4] * self.yubar[2,mif3] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[2,mif4] * self.yubar[2,mif3] + 9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.yqqOmega1bar[0,mif1] * self.yubar[0,mif3] * self.yudOmega1[mif4,0] + 3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.yqqOmega1bar[0,mif1] * self.yubar[0,mif3] * self.yudOmega1[mif4,0] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,0] * self.yqqOmega1bar[0,mif1] * self.yubar[0,mif3] * self.yudOmega1[mif4,0] + 9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.yqqOmega1bar[1,mif1] * self.yubar[1,mif3] * self.yudOmega1[mif4,0] + 3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.yqqOmega1bar[1,mif1] * self.yubar[1,mif3] * self.yudOmega1[mif4,0] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,0] * self.yqqOmega1bar[1,mif1] * self.yubar[1,mif3] * self.yudOmega1[mif4,0] + 9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.yqqOmega1bar[2,mif1] * self.yubar[2,mif3] * self.yudOmega1[mif4,0] + 3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.yqqOmega1bar[2,mif1] * self.yubar[2,mif3] * self.yudOmega1[mif4,0] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,0] * self.yqqOmega1bar[2,mif1] * self.yubar[2,mif3] * self.yudOmega1[mif4,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,0] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,0] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,0] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,0] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,0] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,0] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,0] + 9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.yqqOmega1bar[0,mif1] * self.yubar[0,mif3] * self.yudOmega1[mif4,1] + 3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.yqqOmega1bar[0,mif1] * self.yubar[0,mif3] * self.yudOmega1[mif4,1] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,1] * self.yqqOmega1bar[0,mif1] * self.yubar[0,mif3] * self.yudOmega1[mif4,1] + 9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.yqqOmega1bar[1,mif1] * self.yubar[1,mif3] * self.yudOmega1[mif4,1] + 3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.yqqOmega1bar[1,mif1] * self.yubar[1,mif3] * self.yudOmega1[mif4,1] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,1] * self.yqqOmega1bar[1,mif1] * self.yubar[1,mif3] * self.yudOmega1[mif4,1] + 9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.yqqOmega1bar[2,mif1] * self.yubar[2,mif3] * self.yudOmega1[mif4,1] + 3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.yqqOmega1bar[2,mif1] * self.yubar[2,mif3] * self.yudOmega1[mif4,1] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,1] * self.yqqOmega1bar[2,mif1] * self.yubar[2,mif3] * self.yudOmega1[mif4,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,1] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,1] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,1] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,1] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,1] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,1] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,1] + 9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.yqqOmega1bar[0,mif1] * self.yubar[0,mif3] * self.yudOmega1[mif4,2] + 3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.yqqOmega1bar[0,mif1] * self.yubar[0,mif3] * self.yudOmega1[mif4,2] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,2] * self.yqqOmega1bar[0,mif1] * self.yubar[0,mif3] * self.yudOmega1[mif4,2] + 9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.yqqOmega1bar[1,mif1] * self.yubar[1,mif3] * self.yudOmega1[mif4,2] + 3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.yqqOmega1bar[1,mif1] * self.yubar[1,mif3] * self.yudOmega1[mif4,2] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,2] * self.yqqOmega1bar[1,mif1] * self.yubar[1,mif3] * self.yudOmega1[mif4,2] + 9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.yqqOmega1bar[2,mif1] * self.yubar[2,mif3] * self.yudOmega1[mif4,2] + 3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.yqqOmega1bar[2,mif1] * self.yubar[2,mif3] * self.yudOmega1[mif4,2] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,2] * self.yqqOmega1bar[2,mif1] * self.yubar[2,mif3] * self.yudOmega1[mif4,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,2] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,2] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,2] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,2] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,2] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,2] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,2] + 9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yqqOmega1[0,mif2] * self.yu[0,mif4] * self.yudOmega1bar[mif3,0] + 3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yqqOmega1[0,mif2] * self.yu[0,mif4] * self.yudOmega1bar[mif3,0] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.yqqOmega1[0,mif2] * self.yu[0,mif4] * self.yudOmega1bar[mif3,0] + 9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yqqOmega1[1,mif2] * self.yu[1,mif4] * self.yudOmega1bar[mif3,0] + 3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yqqOmega1[1,mif2] * self.yu[1,mif4] * self.yudOmega1bar[mif3,0] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.yqqOmega1[1,mif2] * self.yu[1,mif4] * self.yudOmega1bar[mif3,0] + 9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yqqOmega1[2,mif2] * self.yu[2,mif4] * self.yudOmega1bar[mif3,0] + 3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yqqOmega1[2,mif2] * self.yu[2,mif4] * self.yudOmega1bar[mif3,0] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.yqqOmega1[2,mif2] * self.yu[2,mif4] * self.yudOmega1bar[mif3,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yqqOmega1[0,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,0] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yqqOmega1[0,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,0] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yqqOmega1[0,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yqqOmega1[1,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,0] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yqqOmega1[1,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,0] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yqqOmega1[1,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yqqOmega1[2,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,0] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yqqOmega1[2,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,0] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yqqOmega1[2,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,0] + -5/5184 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + -1/576 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + -1/432 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + 1/432 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + -9/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,0] * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + -3/256 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,0] * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + 3/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[mif2,0] * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + -9/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,1] * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,0] + -3/256 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,1] * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,0] + 3/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[mif2,1] * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,0] + -9/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,2] * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,0] + -3/256 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,2] * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,0] + 3/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[mif2,2] * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,0] + 9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yqqOmega1[0,mif2] * self.yu[0,mif4] * self.yudOmega1bar[mif3,1] + 3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yqqOmega1[0,mif2] * self.yu[0,mif4] * self.yudOmega1bar[mif3,1] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.yqqOmega1[0,mif2] * self.yu[0,mif4] * self.yudOmega1bar[mif3,1] + 9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yqqOmega1[1,mif2] * self.yu[1,mif4] * self.yudOmega1bar[mif3,1] + 3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yqqOmega1[1,mif2] * self.yu[1,mif4] * self.yudOmega1bar[mif3,1] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.yqqOmega1[1,mif2] * self.yu[1,mif4] * self.yudOmega1bar[mif3,1] + 9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yqqOmega1[2,mif2] * self.yu[2,mif4] * self.yudOmega1bar[mif3,1] + 3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yqqOmega1[2,mif2] * self.yu[2,mif4] * self.yudOmega1bar[mif3,1] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.yqqOmega1[2,mif2] * self.yu[2,mif4] * self.yudOmega1bar[mif3,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yqqOmega1[0,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,1] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yqqOmega1[0,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,1] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yqqOmega1[0,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yqqOmega1[1,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,1] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yqqOmega1[1,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,1] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yqqOmega1[1,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yqqOmega1[2,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,1] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yqqOmega1[2,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,1] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.yqqOmega1[2,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,1] + -9/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,0] * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,1] + -3/256 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,0] * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,1] + 3/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[mif2,0] * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,1] + -5/5184 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + -1/576 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + -1/432 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + 1/432 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + -9/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,1] * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + -3/256 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,1] * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + 3/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[mif2,1] * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + -9/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,2] * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,1] + -3/256 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,2] * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,1] + 3/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[mif2,2] * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,1] + 9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yqqOmega1[0,mif2] * self.yu[0,mif4] * self.yudOmega1bar[mif3,2] + 3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yqqOmega1[0,mif2] * self.yu[0,mif4] * self.yudOmega1bar[mif3,2] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.yqqOmega1[0,mif2] * self.yu[0,mif4] * self.yudOmega1bar[mif3,2] + 9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yqqOmega1[1,mif2] * self.yu[1,mif4] * self.yudOmega1bar[mif3,2] + 3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yqqOmega1[1,mif2] * self.yu[1,mif4] * self.yudOmega1bar[mif3,2] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.yqqOmega1[1,mif2] * self.yu[1,mif4] * self.yudOmega1bar[mif3,2] + 9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yqqOmega1[2,mif2] * self.yu[2,mif4] * self.yudOmega1bar[mif3,2] + 3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yqqOmega1[2,mif2] * self.yu[2,mif4] * self.yudOmega1bar[mif3,2] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.yqqOmega1[2,mif2] * self.yu[2,mif4] * self.yudOmega1bar[mif3,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yqqOmega1[0,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,2] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yqqOmega1[0,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,2] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yqqOmega1[0,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yqqOmega1[1,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,2] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yqqOmega1[1,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,2] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yqqOmega1[1,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yqqOmega1[2,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,2] + -1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yqqOmega1[2,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,2] + 1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.yqqOmega1[2,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,2] + -9/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,0] * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,2] + -3/256 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,0] * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,2] + 3/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[mif2,0] * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,2] + -9/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,1] * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,2] + -3/256 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,1] * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,2] + 3/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[mif2,1] * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,2] + -5/5184 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2] + -1/576 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2] + -1/432 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2] + 1/432 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2] + -9/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,2] * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2] + -3/256 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,2] * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2] + 3/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[mif2,2] * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2])

    def alphaOqu8(self, mif1,mif2,mif3,mif4):
        return (-1/192 * (self.g3)**(4) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 17/288 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + 1/32 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + 1/24 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -1/24 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + 17/288 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + 1/32 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + 1/24 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -1/24 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + 17/288 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + 1/32 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + 1/24 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + -1/24 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[0,mif4] * self.yubar[0,mif3] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[0,mif4] * self.yubar[0,mif3] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[0,mif4] * self.yubar[0,mif3] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[1,mif4] * self.yubar[0,mif3] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[1,mif4] * self.yubar[0,mif3] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[1,mif4] * self.yubar[0,mif3] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[2,mif4] * self.yubar[0,mif3] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[2,mif4] * self.yubar[0,mif3] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] * self.yu[2,mif4] * self.yubar[0,mif3] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[0,mif4] * self.yubar[1,mif3] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[0,mif4] * self.yubar[1,mif3] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[0,mif4] * self.yubar[1,mif3] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[1,mif4] * self.yubar[1,mif3] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[1,mif4] * self.yubar[1,mif3] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[1,mif4] * self.yubar[1,mif3] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[2,mif4] * self.yubar[1,mif3] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[2,mif4] * self.yubar[1,mif3] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] * self.yu[2,mif4] * self.yubar[1,mif3] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[0,mif4] * self.yubar[2,mif3] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[0,mif4] * self.yubar[2,mif3] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[0,mif4] * self.yubar[2,mif3] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[1,mif4] * self.yubar[2,mif3] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[1,mif4] * self.yubar[2,mif3] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[1,mif4] * self.yubar[2,mif3] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[2,mif4] * self.yubar[2,mif3] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[2,mif4] * self.yubar[2,mif3] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yu[2,mif4] * self.yubar[2,mif3] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.yqqOmega1bar[0,mif1] * self.yubar[0,mif3] * self.yudOmega1[mif4,0] + 1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.yqqOmega1bar[0,mif1] * self.yubar[0,mif3] * self.yudOmega1[mif4,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,0] * self.yqqOmega1bar[0,mif1] * self.yubar[0,mif3] * self.yudOmega1[mif4,0] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.yqqOmega1bar[1,mif1] * self.yubar[1,mif3] * self.yudOmega1[mif4,0] + 1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.yqqOmega1bar[1,mif1] * self.yubar[1,mif3] * self.yudOmega1[mif4,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,0] * self.yqqOmega1bar[1,mif1] * self.yubar[1,mif3] * self.yudOmega1[mif4,0] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.yqqOmega1bar[2,mif1] * self.yubar[2,mif3] * self.yudOmega1[mif4,0] + 1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.yqqOmega1bar[2,mif1] * self.yubar[2,mif3] * self.yudOmega1[mif4,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,0] * self.yqqOmega1bar[2,mif1] * self.yubar[2,mif3] * self.yudOmega1[mif4,0] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,0] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,0] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,0] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,0] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,0] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,0] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.yqqOmega1bar[0,mif1] * self.yubar[0,mif3] * self.yudOmega1[mif4,1] + 1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.yqqOmega1bar[0,mif1] * self.yubar[0,mif3] * self.yudOmega1[mif4,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,1] * self.yqqOmega1bar[0,mif1] * self.yubar[0,mif3] * self.yudOmega1[mif4,1] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.yqqOmega1bar[1,mif1] * self.yubar[1,mif3] * self.yudOmega1[mif4,1] + 1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.yqqOmega1bar[1,mif1] * self.yubar[1,mif3] * self.yudOmega1[mif4,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,1] * self.yqqOmega1bar[1,mif1] * self.yubar[1,mif3] * self.yudOmega1[mif4,1] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.yqqOmega1bar[2,mif1] * self.yubar[2,mif3] * self.yudOmega1[mif4,1] + 1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.yqqOmega1bar[2,mif1] * self.yubar[2,mif3] * self.yudOmega1[mif4,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,1] * self.yqqOmega1bar[2,mif1] * self.yubar[2,mif3] * self.yudOmega1[mif4,1] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,1] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,1] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,1] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.yqqOmega1bar[0,mif1] * self.yubar[0,mif3] * self.yudOmega1[mif4,2] + 1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.yqqOmega1bar[0,mif1] * self.yubar[0,mif3] * self.yudOmega1[mif4,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,2] * self.yqqOmega1bar[0,mif1] * self.yubar[0,mif3] * self.yudOmega1[mif4,2] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.yqqOmega1bar[1,mif1] * self.yubar[1,mif3] * self.yudOmega1[mif4,2] + 1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.yqqOmega1bar[1,mif1] * self.yubar[1,mif3] * self.yudOmega1[mif4,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,2] * self.yqqOmega1bar[1,mif1] * self.yubar[1,mif3] * self.yudOmega1[mif4,2] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.yqqOmega1bar[2,mif1] * self.yubar[2,mif3] * self.yudOmega1[mif4,2] + 1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.yqqOmega1bar[2,mif1] * self.yubar[2,mif3] * self.yudOmega1[mif4,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,2] * self.yqqOmega1bar[2,mif1] * self.yubar[2,mif3] * self.yudOmega1[mif4,2] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,2] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,2] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,2] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,2] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,2] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,mif3] * self.yudOmega1[mif4,2] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yqqOmega1[0,mif2] * self.yu[0,mif4] * self.yudOmega1bar[mif3,0] + 1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yqqOmega1[0,mif2] * self.yu[0,mif4] * self.yudOmega1bar[mif3,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.yqqOmega1[0,mif2] * self.yu[0,mif4] * self.yudOmega1bar[mif3,0] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yqqOmega1[1,mif2] * self.yu[1,mif4] * self.yudOmega1bar[mif3,0] + 1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yqqOmega1[1,mif2] * self.yu[1,mif4] * self.yudOmega1bar[mif3,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.yqqOmega1[1,mif2] * self.yu[1,mif4] * self.yudOmega1bar[mif3,0] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yqqOmega1[2,mif2] * self.yu[2,mif4] * self.yudOmega1bar[mif3,0] + 1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yqqOmega1[2,mif2] * self.yu[2,mif4] * self.yudOmega1bar[mif3,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.yqqOmega1[2,mif2] * self.yu[2,mif4] * self.yudOmega1bar[mif3,0] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yqqOmega1[0,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,0] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yqqOmega1[0,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.yqqOmega1[0,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,0] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yqqOmega1[1,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,0] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yqqOmega1[1,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.yqqOmega1[1,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,0] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yqqOmega1[2,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,0] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yqqOmega1[2,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.yqqOmega1[2,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,0] + 17/1152 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + 1/128 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + 1/96 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + -1/96 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,0] * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + -1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,0] * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + 1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[mif2,0] * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + -5/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + -5/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + -5/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,1] * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,0] + -1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,1] * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,0] + 1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[mif2,1] * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,0] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,2] * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,0] + -1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,2] * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,0] + 1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[mif2,2] * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,0] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yqqOmega1[0,mif2] * self.yu[0,mif4] * self.yudOmega1bar[mif3,1] + 1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yqqOmega1[0,mif2] * self.yu[0,mif4] * self.yudOmega1bar[mif3,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.yqqOmega1[0,mif2] * self.yu[0,mif4] * self.yudOmega1bar[mif3,1] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yqqOmega1[1,mif2] * self.yu[1,mif4] * self.yudOmega1bar[mif3,1] + 1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yqqOmega1[1,mif2] * self.yu[1,mif4] * self.yudOmega1bar[mif3,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.yqqOmega1[1,mif2] * self.yu[1,mif4] * self.yudOmega1bar[mif3,1] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yqqOmega1[2,mif2] * self.yu[2,mif4] * self.yudOmega1bar[mif3,1] + 1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yqqOmega1[2,mif2] * self.yu[2,mif4] * self.yudOmega1bar[mif3,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.yqqOmega1[2,mif2] * self.yu[2,mif4] * self.yudOmega1bar[mif3,1] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yqqOmega1[0,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yqqOmega1[0,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.yqqOmega1[0,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,1] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yqqOmega1[1,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yqqOmega1[1,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.yqqOmega1[1,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,1] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yqqOmega1[2,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yqqOmega1[2,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.yqqOmega1[2,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,1] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,0] * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,1] + -1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,0] * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,1] + 1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[mif2,0] * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,1] + 17/1152 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + 1/128 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + 1/96 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + -1/96 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,1] * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + -1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,1] * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + 1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[mif2,1] * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + -5/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + -5/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + -5/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,2] * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,1] + -1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,2] * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,1] + 1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[mif2,2] * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,1] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yqqOmega1[0,mif2] * self.yu[0,mif4] * self.yudOmega1bar[mif3,2] + 1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yqqOmega1[0,mif2] * self.yu[0,mif4] * self.yudOmega1bar[mif3,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.yqqOmega1[0,mif2] * self.yu[0,mif4] * self.yudOmega1bar[mif3,2] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yqqOmega1[1,mif2] * self.yu[1,mif4] * self.yudOmega1bar[mif3,2] + 1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yqqOmega1[1,mif2] * self.yu[1,mif4] * self.yudOmega1bar[mif3,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.yqqOmega1[1,mif2] * self.yu[1,mif4] * self.yudOmega1bar[mif3,2] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yqqOmega1[2,mif2] * self.yu[2,mif4] * self.yudOmega1bar[mif3,2] + 1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yqqOmega1[2,mif2] * self.yu[2,mif4] * self.yudOmega1bar[mif3,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.yqqOmega1[2,mif2] * self.yu[2,mif4] * self.yudOmega1bar[mif3,2] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yqqOmega1[0,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,2] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yqqOmega1[0,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.yqqOmega1[0,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,2] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yqqOmega1[1,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,2] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yqqOmega1[1,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.yqqOmega1[1,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,2] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yqqOmega1[2,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,2] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yqqOmega1[2,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.yqqOmega1[2,mif2] * self.yu[mif1,mif4] * self.yudOmega1bar[mif3,2] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,0] * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,2] + -1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,0] * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,2] + 1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[mif2,0] * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,2] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,1] * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,2] + -1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,1] * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,2] + 1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[mif2,1] * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,2] + 17/1152 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2] + 1/128 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2] + 1/96 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2] + -1/96 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,2] * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2] + -1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,2] * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2] + 1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[mif2,2] * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2] + -5/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2] + -5/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2] + -5/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2])

    def alphaOqd1(self, mif1,mif2,mif3,mif4):
        return (1/12960 * (self.g1)**(4) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -11/1296 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -1/144 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -1/108 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + 1/108 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -9/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -9/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] + -9/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] + -9/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] + -11/1296 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -1/144 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -1/108 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + 1/108 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -9/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -9/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] + -9/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] + -9/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] + -11/1296 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + -1/144 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + -1/108 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + 1/108 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + -9/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,mif4] + 1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,mif4] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,mif4] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,mif4] + 1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,mif4] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,mif4] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,mif4] + 1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,mif4] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,mif4] + -9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] + -3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] + 3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[0,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] + -9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] + -3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] + 3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[1,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] + -9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] + -3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] + 3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,mif4] + 1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,mif4] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,mif4] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,mif4] + 1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,mif4] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,mif4] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,mif4] + 1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,mif4] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,mif4] + -9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] + -3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] + 3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[0,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] + -9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] + -3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] + 3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[1,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] + -9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] + -3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] + 3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,mif4] + 1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,mif4] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,mif4] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,mif4] + 1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,mif4] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,mif4] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,mif4] + 1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,mif4] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,mif4] + -9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] + -3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] + 3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[0,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] + -9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] + -3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] + 3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[1,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] + -9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] + -3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] + 3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[0,mif2] * self.yu[0,0] * self.yudOmega1bar[0,mif3] + 1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[0,mif2] * self.yu[0,0] * self.yudOmega1bar[0,mif3] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.yqqOmega1[0,mif2] * self.yu[0,0] * self.yudOmega1bar[0,mif3] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[1,mif2] * self.yu[1,0] * self.yudOmega1bar[0,mif3] + 1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[1,mif2] * self.yu[1,0] * self.yudOmega1bar[0,mif3] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.yqqOmega1[1,mif2] * self.yu[1,0] * self.yudOmega1bar[0,mif3] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[2,mif2] * self.yu[2,0] * self.yudOmega1bar[0,mif3] + 1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[2,mif2] * self.yu[2,0] * self.yudOmega1bar[0,mif3] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.yqqOmega1[2,mif2] * self.yu[2,0] * self.yudOmega1bar[0,mif3] + -9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.yqqOmega1[0,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,mif3] + -3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.yqqOmega1[0,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,mif3] + 3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.yqqOmega1[0,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,mif3] + -9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.yqqOmega1[1,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,mif3] + -3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.yqqOmega1[1,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,mif3] + 3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.yqqOmega1[1,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,mif3] + -9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.yqqOmega1[2,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,mif3] + -3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.yqqOmega1[2,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,mif3] + 3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.yqqOmega1[2,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,mif3] + 1/324 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + 1/288 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + 1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + -1/216 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + -9/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + -3/256 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + 3/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[mif1,0] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + -9/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] * self.yudOmega1bar[0,mif3] + -3/256 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] * self.yudOmega1bar[0,mif3] + 3/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[mif1,0] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] * self.yudOmega1bar[0,mif3] + -9/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] * self.yudOmega1bar[0,mif3] + -3/256 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] * self.yudOmega1bar[0,mif3] + 3/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[mif1,0] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] * self.yudOmega1bar[0,mif3] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[0,mif2] * self.yu[0,1] * self.yudOmega1bar[1,mif3] + 1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[0,mif2] * self.yu[0,1] * self.yudOmega1bar[1,mif3] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.yqqOmega1[0,mif2] * self.yu[0,1] * self.yudOmega1bar[1,mif3] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[1,mif2] * self.yu[1,1] * self.yudOmega1bar[1,mif3] + 1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[1,mif2] * self.yu[1,1] * self.yudOmega1bar[1,mif3] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.yqqOmega1[1,mif2] * self.yu[1,1] * self.yudOmega1bar[1,mif3] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[2,mif2] * self.yu[2,1] * self.yudOmega1bar[1,mif3] + 1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[2,mif2] * self.yu[2,1] * self.yudOmega1bar[1,mif3] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.yqqOmega1[2,mif2] * self.yu[2,1] * self.yudOmega1bar[1,mif3] + -9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.yqqOmega1[0,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,mif3] + -3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.yqqOmega1[0,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,mif3] + 3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.yqqOmega1[0,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,mif3] + -9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.yqqOmega1[1,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,mif3] + -3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.yqqOmega1[1,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,mif3] + 3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.yqqOmega1[1,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,mif3] + -9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.yqqOmega1[2,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,mif3] + -3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.yqqOmega1[2,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,mif3] + 3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.yqqOmega1[2,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,mif3] + -9/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] * self.yudOmega1bar[1,mif3] + -3/256 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] * self.yudOmega1bar[1,mif3] + 3/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[mif1,1] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] * self.yudOmega1bar[1,mif3] + 1/324 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + 1/288 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + 1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + -1/216 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + -9/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + -3/256 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + 3/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[mif1,1] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + -9/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] * self.yudOmega1bar[1,mif3] + -3/256 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] * self.yudOmega1bar[1,mif3] + 3/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[mif1,1] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] * self.yudOmega1bar[1,mif3] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[0,mif2] * self.yu[0,2] * self.yudOmega1bar[2,mif3] + 1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[0,mif2] * self.yu[0,2] * self.yudOmega1bar[2,mif3] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.yqqOmega1[0,mif2] * self.yu[0,2] * self.yudOmega1bar[2,mif3] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[1,mif2] * self.yu[1,2] * self.yudOmega1bar[2,mif3] + 1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[1,mif2] * self.yu[1,2] * self.yudOmega1bar[2,mif3] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.yqqOmega1[1,mif2] * self.yu[1,2] * self.yudOmega1bar[2,mif3] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[2,mif2] * self.yu[2,2] * self.yudOmega1bar[2,mif3] + 1/48 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[2,mif2] * self.yu[2,2] * self.yudOmega1bar[2,mif3] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.yqqOmega1[2,mif2] * self.yu[2,2] * self.yudOmega1bar[2,mif3] + -9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.yqqOmega1[0,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,mif3] + -3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.yqqOmega1[0,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,mif3] + 3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.yqqOmega1[0,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,mif3] + -9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.yqqOmega1[1,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,mif3] + -3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.yqqOmega1[1,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,mif3] + 3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.yqqOmega1[1,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,mif3] + -9/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.yqqOmega1[2,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,mif3] + -3/128 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.yqqOmega1[2,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,mif3] + 3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.yqqOmega1[2,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,mif3] + -9/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] * self.yudOmega1bar[2,mif3] + -3/256 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] * self.yudOmega1bar[2,mif3] + 3/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[mif1,2] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] * self.yudOmega1bar[2,mif3] + -9/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] * self.yudOmega1bar[2,mif3] + -3/256 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] * self.yudOmega1bar[2,mif3] + 3/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[mif1,2] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] * self.yudOmega1bar[2,mif3] + 1/324 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + 1/288 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + 1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + -1/216 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + -1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + -9/512 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + -3/256 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + 3/256 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[mif1,2] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3])

    def alphaOqd8(self, mif1,mif2,mif3,mif4):
        return (-1/192 * (self.g3)**(4) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 17/288 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + 1/32 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + 1/24 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -1/24 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[0,mif1] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[0,mif1] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[1,mif1] + 17/288 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + 1/32 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + 1/24 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -1/24 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[1,mif1] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[2,mif1] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[2,mif1] + 17/288 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + 1/32 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + 1/24 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + -1/24 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,mif4] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,mif4] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[0,0] * self.yudOmega1[0,mif4] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,mif4] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,mif4] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[1,0] * self.yudOmega1[0,mif4] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,mif4] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,mif4] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[2,0] * self.yudOmega1[0,mif4] + -3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[0,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] + -3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[1,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] + -3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,mif4] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,mif4] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[0,1] * self.yudOmega1[1,mif4] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,mif4] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,mif4] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[1,1] * self.yudOmega1[1,mif4] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,mif4] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,mif4] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[2,1] * self.yudOmega1[1,mif4] + -3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[0,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] + -3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[1,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] + -3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,mif4] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,mif4] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[0,2] * self.yudOmega1[2,mif4] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,mif4] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,mif4] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[1,2] * self.yudOmega1[2,mif4] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,mif4] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,mif4] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[2,2] * self.yudOmega1[2,mif4] + -3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[0,mif3] * self.yqqOmega1bar[0,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] + -3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[1,mif3] * self.yqqOmega1bar[1,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] + -3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[2,mif3] * self.yqqOmega1bar[2,mif1] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[0,mif2] * self.yu[0,0] * self.yudOmega1bar[0,mif3] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[0,mif2] * self.yu[0,0] * self.yudOmega1bar[0,mif3] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.yqqOmega1[0,mif2] * self.yu[0,0] * self.yudOmega1bar[0,mif3] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[1,mif2] * self.yu[1,0] * self.yudOmega1bar[0,mif3] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[1,mif2] * self.yu[1,0] * self.yudOmega1bar[0,mif3] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.yqqOmega1[1,mif2] * self.yu[1,0] * self.yudOmega1bar[0,mif3] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[2,mif2] * self.yu[2,0] * self.yudOmega1bar[0,mif3] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[2,mif2] * self.yu[2,0] * self.yudOmega1bar[0,mif3] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.yqqOmega1[2,mif2] * self.yu[2,0] * self.yudOmega1bar[0,mif3] + -3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.yqqOmega1[0,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,mif3] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.yqqOmega1[0,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,mif3] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.yqqOmega1[0,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,mif3] + -3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.yqqOmega1[1,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,mif3] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.yqqOmega1[1,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,mif3] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.yqqOmega1[1,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,mif3] + -3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.yqqOmega1[2,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,mif3] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.yqqOmega1[2,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,mif3] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.yqqOmega1[2,mif2] * self.yu[mif1,0] * self.yudOmega1bar[0,mif3] + 17/1152 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + 1/128 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + 1/96 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + -1/96 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + -5/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + -5/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + -5/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + -1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + 1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[mif1,0] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] * self.yudOmega1bar[0,mif3] + -1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] * self.yudOmega1bar[0,mif3] + 1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[mif1,0] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] * self.yudOmega1bar[0,mif3] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] * self.yudOmega1bar[0,mif3] + -1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] * self.yudOmega1bar[0,mif3] + 1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[mif1,0] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] * self.yudOmega1bar[0,mif3] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[0,mif2] * self.yu[0,1] * self.yudOmega1bar[1,mif3] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[0,mif2] * self.yu[0,1] * self.yudOmega1bar[1,mif3] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.yqqOmega1[0,mif2] * self.yu[0,1] * self.yudOmega1bar[1,mif3] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[1,mif2] * self.yu[1,1] * self.yudOmega1bar[1,mif3] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[1,mif2] * self.yu[1,1] * self.yudOmega1bar[1,mif3] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.yqqOmega1[1,mif2] * self.yu[1,1] * self.yudOmega1bar[1,mif3] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[2,mif2] * self.yu[2,1] * self.yudOmega1bar[1,mif3] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[2,mif2] * self.yu[2,1] * self.yudOmega1bar[1,mif3] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.yqqOmega1[2,mif2] * self.yu[2,1] * self.yudOmega1bar[1,mif3] + -3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.yqqOmega1[0,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,mif3] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.yqqOmega1[0,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,mif3] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.yqqOmega1[0,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,mif3] + -3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.yqqOmega1[1,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,mif3] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.yqqOmega1[1,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,mif3] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.yqqOmega1[1,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,mif3] + -3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.yqqOmega1[2,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,mif3] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.yqqOmega1[2,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,mif3] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.yqqOmega1[2,mif2] * self.yu[mif1,1] * self.yudOmega1bar[1,mif3] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] * self.yudOmega1bar[1,mif3] + -1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] * self.yudOmega1bar[1,mif3] + 1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[mif1,1] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] * self.yudOmega1bar[1,mif3] + 17/1152 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + 1/128 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + 1/96 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + -1/96 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + -5/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + -5/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + -5/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + -1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + 1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[mif1,1] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] * self.yudOmega1bar[1,mif3] + -1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] * self.yudOmega1bar[1,mif3] + 1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[mif1,1] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] * self.yudOmega1bar[1,mif3] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[0,mif2] * self.yu[0,2] * self.yudOmega1bar[2,mif3] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[0,mif2] * self.yu[0,2] * self.yudOmega1bar[2,mif3] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.yqqOmega1[0,mif2] * self.yu[0,2] * self.yudOmega1bar[2,mif3] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[1,mif2] * self.yu[1,2] * self.yudOmega1bar[2,mif3] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[1,mif2] * self.yu[1,2] * self.yudOmega1bar[2,mif3] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.yqqOmega1[1,mif2] * self.yu[1,2] * self.yudOmega1bar[2,mif3] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[2,mif2] * self.yu[2,2] * self.yudOmega1bar[2,mif3] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.yqqOmega1[2,mif2] * self.yu[2,2] * self.yudOmega1bar[2,mif3] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.yqqOmega1[2,mif2] * self.yu[2,2] * self.yudOmega1bar[2,mif3] + -3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.yqqOmega1[0,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,mif3] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.yqqOmega1[0,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,mif3] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.yqqOmega1[0,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,mif3] + -3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.yqqOmega1[1,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,mif3] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.yqqOmega1[1,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,mif3] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.yqqOmega1[1,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,mif3] + -3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.yqqOmega1[2,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,mif3] + -1/32 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.yqqOmega1[2,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,mif3] + 1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.yqqOmega1[2,mif2] * self.yu[mif1,2] * self.yudOmega1bar[2,mif3] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] * self.yudOmega1bar[2,mif3] + -1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] * self.yudOmega1bar[2,mif3] + 1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[mif1,2] * self.yubar[mif2,0] * self.yudOmega1[0,mif4] * self.yudOmega1bar[2,mif3] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] * self.yudOmega1bar[2,mif3] + -1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] * self.yudOmega1bar[2,mif3] + 1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[mif1,2] * self.yubar[mif2,1] * self.yudOmega1[1,mif4] * self.yudOmega1bar[2,mif3] + 17/1152 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + 1/128 * (self.g3)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + 1/96 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + -1/96 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + -5/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + -5/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + -5/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + -1/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + 1/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yu[mif1,2] * self.yubar[mif2,2] * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3])

    def alphaOquqd1(self, mif1,mif2,mif3,mif4):
        return (-1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] + -1/24 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] + -1/24 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] + -1/24 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[0,mif4] + -3/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[0,mif4] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[0,mif4] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[0,mif4] + -3/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[0,mif4] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[0,mif4] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[0,mif4] + -3/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[0,mif4] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[0,mif4] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif3] * self.yu[mif1,mif2] * self.yubar[0,0] * self.yudOmega1[0,mif4] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif3] * self.yu[mif1,mif2] * self.yubar[0,0] * self.yudOmega1[0,mif4] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif3] * self.yu[mif1,mif2] * self.yubar[0,0] * self.yudOmega1[0,mif4] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif3] * self.yu[mif1,mif2] * self.yubar[1,0] * self.yudOmega1[0,mif4] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif3] * self.yu[mif1,mif2] * self.yubar[1,0] * self.yudOmega1[0,mif4] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif3] * self.yu[mif1,mif2] * self.yubar[1,0] * self.yudOmega1[0,mif4] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif3] * self.yu[mif1,mif2] * self.yubar[2,0] * self.yudOmega1[0,mif4] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif3] * self.yu[mif1,mif2] * self.yubar[2,0] * self.yudOmega1[0,mif4] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif3] * self.yu[mif1,mif2] * self.yubar[2,0] * self.yudOmega1[0,mif4] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] + -1/24 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] + -1/24 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] + -1/24 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[1,mif4] + -3/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[1,mif4] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[1,mif4] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[1,mif4] + -3/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[1,mif4] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[1,mif4] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[1,mif4] + -3/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[1,mif4] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[1,mif4] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif3] * self.yu[mif1,mif2] * self.yubar[0,1] * self.yudOmega1[1,mif4] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif3] * self.yu[mif1,mif2] * self.yubar[0,1] * self.yudOmega1[1,mif4] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif3] * self.yu[mif1,mif2] * self.yubar[0,1] * self.yudOmega1[1,mif4] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif3] * self.yu[mif1,mif2] * self.yubar[1,1] * self.yudOmega1[1,mif4] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif3] * self.yu[mif1,mif2] * self.yubar[1,1] * self.yudOmega1[1,mif4] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif3] * self.yu[mif1,mif2] * self.yubar[1,1] * self.yudOmega1[1,mif4] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif3] * self.yu[mif1,mif2] * self.yubar[2,1] * self.yudOmega1[1,mif4] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif3] * self.yu[mif1,mif2] * self.yubar[2,1] * self.yudOmega1[1,mif4] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif3] * self.yu[mif1,mif2] * self.yubar[2,1] * self.yudOmega1[1,mif4] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] + -1/24 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] + -1/24 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] + -1/24 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[2,mif4] + -3/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[2,mif4] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[2,mif4] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[2,mif4] + -3/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[2,mif4] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[2,mif4] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[2,mif4] + -3/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[2,mif4] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[2,mif4] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif3] * self.yu[mif1,mif2] * self.yubar[0,2] * self.yudOmega1[2,mif4] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif3] * self.yu[mif1,mif2] * self.yubar[0,2] * self.yudOmega1[2,mif4] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif3] * self.yu[mif1,mif2] * self.yubar[0,2] * self.yudOmega1[2,mif4] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif3] * self.yu[mif1,mif2] * self.yubar[1,2] * self.yudOmega1[2,mif4] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif3] * self.yu[mif1,mif2] * self.yubar[1,2] * self.yudOmega1[2,mif4] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif3] * self.yu[mif1,mif2] * self.yubar[1,2] * self.yudOmega1[2,mif4] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif3] * self.yu[mif1,mif2] * self.yubar[2,2] * self.yudOmega1[2,mif4] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif3] * self.yu[mif1,mif2] * self.yubar[2,2] * self.yudOmega1[2,mif4] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif3] * self.yu[mif1,mif2] * self.yubar[2,2] * self.yudOmega1[2,mif4] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif3,mif4] * self.ydbar[0,0] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,0] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif3,mif4] * self.ydbar[1,0] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,0] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif3,mif4] * self.ydbar[2,0] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,0] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif3,mif4] * self.ydbar[0,1] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,1] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif3,mif4] * self.ydbar[1,1] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,1] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif3,mif4] * self.ydbar[2,1] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,1] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif3,mif4] * self.ydbar[0,2] * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,2] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif3,mif4] * self.ydbar[1,2] * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,2] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + 1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yd[mif3,mif4] * self.ydbar[2,2] * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,2] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[mif1,0] * self.yudOmega1[mif2,mif4] + -1/24 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[mif1,0] * self.yudOmega1[mif2,mif4] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[mif1,0] * self.yudOmega1[mif2,mif4] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif3] * self.yqqOmega1bar[mif1,0] * self.yudOmega1[mif2,mif4] + -1/24 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif3] * self.yqqOmega1bar[mif1,0] * self.yudOmega1[mif2,mif4] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif3] * self.yqqOmega1bar[mif1,0] * self.yudOmega1[mif2,mif4] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif3] * self.yqqOmega1bar[mif1,0] * self.yudOmega1[mif2,mif4] + -1/24 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif3] * self.yqqOmega1bar[mif1,0] * self.yudOmega1[mif2,mif4] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif3] * self.yqqOmega1bar[mif1,0] * self.yudOmega1[mif2,mif4] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[mif1,1] * self.yudOmega1[mif2,mif4] + -1/24 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[mif1,1] * self.yudOmega1[mif2,mif4] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[mif1,1] * self.yudOmega1[mif2,mif4] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif3] * self.yqqOmega1bar[mif1,1] * self.yudOmega1[mif2,mif4] + -1/24 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif3] * self.yqqOmega1bar[mif1,1] * self.yudOmega1[mif2,mif4] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif3] * self.yqqOmega1bar[mif1,1] * self.yudOmega1[mif2,mif4] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif3] * self.yqqOmega1bar[mif1,1] * self.yudOmega1[mif2,mif4] + -1/24 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif3] * self.yqqOmega1bar[mif1,1] * self.yudOmega1[mif2,mif4] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif3] * self.yqqOmega1bar[mif1,1] * self.yudOmega1[mif2,mif4] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[mif1,2] * self.yudOmega1[mif2,mif4] + -1/24 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[mif1,2] * self.yudOmega1[mif2,mif4] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[mif1,2] * self.yudOmega1[mif2,mif4] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif3] * self.yqqOmega1bar[mif1,2] * self.yudOmega1[mif2,mif4] + -1/24 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif3] * self.yqqOmega1bar[mif1,2] * self.yudOmega1[mif2,mif4] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif3] * self.yqqOmega1bar[mif1,2] * self.yudOmega1[mif2,mif4] + -1/48 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif3] * self.yqqOmega1bar[mif1,2] * self.yudOmega1[mif2,mif4] + -1/24 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif3] * self.yqqOmega1bar[mif1,2] * self.yudOmega1[mif2,mif4] + 1/24 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif3] * self.yqqOmega1bar[mif1,2] * self.yudOmega1[mif2,mif4] + 1/3 * (self.MOmega1)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[mif2,mif4] + 1/6 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[mif2,mif4] + -1/16 * self.epsilonbar * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[mif2,mif4] + 1/12 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[mif2,mif4] + -1/24 * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[mif2,mif4] + -1/12 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[mif2,mif4] + 1/24 * self.epsilonbar * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[mif2,mif4] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,0] * self.yudOmega1[mif2,mif4] + -3/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,0] * self.yudOmega1[mif2,mif4] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,0] * self.yudOmega1[mif2,mif4] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,0] * self.yudOmega1[mif2,mif4] + -3/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,0] * self.yudOmega1[mif2,mif4] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,0] * self.yudOmega1[mif2,mif4] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,0] * self.yudOmega1[mif2,mif4] + -3/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,0] * self.yudOmega1[mif2,mif4] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,0] * self.yudOmega1[mif2,mif4] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,1] * self.yudOmega1[mif2,mif4] + -3/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,1] * self.yudOmega1[mif2,mif4] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,1] * self.yudOmega1[mif2,mif4] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,1] * self.yudOmega1[mif2,mif4] + -3/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,1] * self.yudOmega1[mif2,mif4] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,1] * self.yudOmega1[mif2,mif4] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,1] * self.yudOmega1[mif2,mif4] + -3/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,1] * self.yudOmega1[mif2,mif4] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,1] * self.yudOmega1[mif2,mif4] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,2] * self.yudOmega1[mif2,mif4] + -3/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,2] * self.yudOmega1[mif2,mif4] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif1] * self.yqqOmega1bar[mif3,2] * self.yudOmega1[mif2,mif4] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,2] * self.yudOmega1[mif2,mif4] + -3/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,2] * self.yudOmega1[mif2,mif4] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif1] * self.yqqOmega1bar[mif3,2] * self.yudOmega1[mif2,mif4] + -3/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,2] * self.yudOmega1[mif2,mif4] + -3/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,2] * self.yudOmega1[mif2,mif4] + 3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif1] * self.yqqOmega1bar[mif3,2] * self.yudOmega1[mif2,mif4] + 3/2 * (self.MOmega1)**(-2) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[mif2,mif4] + -9/16 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[mif2,mif4] + -9/32 * self.epsilonbar * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[mif2,mif4] + -1/2 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[mif2,mif4] + -3/16 * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[mif2,mif4] + 1/2 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[mif2,mif4] + 3/16 * self.epsilonbar * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[mif2,mif4] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[0,0] + -1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[0,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[0,0] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[0,0] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[0,0] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[0,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif3] * self.yudOmega1[mif1,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,0] + -1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif3] * self.yudOmega1[mif1,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif3] * self.yudOmega1[mif1,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,0] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,mif4] * self.yudOmega1[mif3,0] * self.yudOmega1bar[0,0] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,mif4] * self.yudOmega1[mif3,0] * self.yudOmega1bar[0,0] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,mif4] * self.yudOmega1[mif3,0] * self.yudOmega1bar[0,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[0,1] + -1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[0,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[0,1] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[0,1] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[0,1] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[0,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif3] * self.yudOmega1[mif1,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,1] + -1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif3] * self.yudOmega1[mif1,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif3] * self.yudOmega1[mif1,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,1] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,mif4] * self.yudOmega1[mif3,1] * self.yudOmega1bar[0,1] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,mif4] * self.yudOmega1[mif3,1] * self.yudOmega1bar[0,1] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,mif4] * self.yudOmega1[mif3,1] * self.yudOmega1bar[0,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[0,2] + -1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[0,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[0,2] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[0,2] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[0,2] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[0,2] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif3] * self.yudOmega1[mif1,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,2] + -1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif3] * self.yudOmega1[mif1,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif3] * self.yudOmega1[mif1,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,2] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,mif4] * self.yudOmega1[mif3,2] * self.yudOmega1bar[0,2] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,mif4] * self.yudOmega1[mif3,2] * self.yudOmega1bar[0,2] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif1] * self.yudOmega1[mif2,mif4] * self.yudOmega1[mif3,2] * self.yudOmega1bar[0,2] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[1,0] + -1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[1,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[1,0] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[1,0] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[1,0] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[1,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif3] * self.yudOmega1[mif1,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,0] + -1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif3] * self.yudOmega1[mif1,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif3] * self.yudOmega1[mif1,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,0] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,mif4] * self.yudOmega1[mif3,0] * self.yudOmega1bar[1,0] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,mif4] * self.yudOmega1[mif3,0] * self.yudOmega1bar[1,0] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,mif4] * self.yudOmega1[mif3,0] * self.yudOmega1bar[1,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[1,1] + -1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[1,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[1,1] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[1,1] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[1,1] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[1,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif3] * self.yudOmega1[mif1,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,1] + -1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif3] * self.yudOmega1[mif1,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif3] * self.yudOmega1[mif1,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,1] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,mif4] * self.yudOmega1[mif3,1] * self.yudOmega1bar[1,1] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,mif4] * self.yudOmega1[mif3,1] * self.yudOmega1bar[1,1] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,mif4] * self.yudOmega1[mif3,1] * self.yudOmega1bar[1,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[1,2] + -1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[1,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[1,2] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[1,2] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[1,2] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[1,2] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif3] * self.yudOmega1[mif1,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,2] + -1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif3] * self.yudOmega1[mif1,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif3] * self.yudOmega1[mif1,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,2] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,mif4] * self.yudOmega1[mif3,2] * self.yudOmega1bar[1,2] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,mif4] * self.yudOmega1[mif3,2] * self.yudOmega1bar[1,2] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif1] * self.yudOmega1[mif2,mif4] * self.yudOmega1[mif3,2] * self.yudOmega1bar[1,2] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[2,0] + -1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[2,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[2,0] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[2,0] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[2,0] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[2,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif3] * self.yudOmega1[mif1,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,0] + -1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif3] * self.yudOmega1[mif1,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,0] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif3] * self.yudOmega1[mif1,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,0] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,mif4] * self.yudOmega1[mif3,0] * self.yudOmega1bar[2,0] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,mif4] * self.yudOmega1[mif3,0] * self.yudOmega1bar[2,0] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,mif4] * self.yudOmega1[mif3,0] * self.yudOmega1bar[2,0] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[2,1] + -1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[2,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[2,1] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[2,1] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[2,1] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[2,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif3] * self.yudOmega1[mif1,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,1] + -1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif3] * self.yudOmega1[mif1,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,1] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif3] * self.yudOmega1[mif1,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,1] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,mif4] * self.yudOmega1[mif3,1] * self.yudOmega1bar[2,1] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,mif4] * self.yudOmega1[mif3,1] * self.yudOmega1bar[2,1] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,mif4] * self.yudOmega1[mif3,1] * self.yudOmega1bar[2,1] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[2,2] + -1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[2,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[2,2] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[2,2] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[2,2] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif3,mif1] * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[2,2] + -1/192 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif3] * self.yudOmega1[mif1,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,2] + -1/96 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif3] * self.yudOmega1[mif1,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,2] + 1/96 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif3] * self.yudOmega1[mif1,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,2] + -3/128 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,mif4] * self.yudOmega1[mif3,2] * self.yudOmega1bar[2,2] + -3/64 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,mif4] * self.yudOmega1[mif3,2] * self.yudOmega1bar[2,2] + 3/64 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif1] * self.yudOmega1[mif2,mif4] * self.yudOmega1[mif3,2] * self.yudOmega1bar[2,2])

    def alphaOquqd8(self, mif1,mif2,mif3,mif4):
        return (-1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif2] * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[mif1,0] * self.yudOmega1[mif2,mif4] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[mif1,0] * self.yudOmega1[mif2,mif4] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,0] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[mif1,0] * self.yudOmega1[mif2,mif4] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif3] * self.yqqOmega1bar[mif1,0] * self.yudOmega1[mif2,mif4] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif3] * self.yqqOmega1bar[mif1,0] * self.yudOmega1[mif2,mif4] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,0] * self.yqqOmega1bar[1,mif3] * self.yqqOmega1bar[mif1,0] * self.yudOmega1[mif2,mif4] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif3] * self.yqqOmega1bar[mif1,0] * self.yudOmega1[mif2,mif4] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif3] * self.yqqOmega1bar[mif1,0] * self.yudOmega1[mif2,mif4] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,0] * self.yqqOmega1bar[2,mif3] * self.yqqOmega1bar[mif1,0] * self.yudOmega1[mif2,mif4] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[mif1,1] * self.yudOmega1[mif2,mif4] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[mif1,1] * self.yudOmega1[mif2,mif4] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,1] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[mif1,1] * self.yudOmega1[mif2,mif4] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif3] * self.yqqOmega1bar[mif1,1] * self.yudOmega1[mif2,mif4] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif3] * self.yqqOmega1bar[mif1,1] * self.yudOmega1[mif2,mif4] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,1] * self.yqqOmega1bar[1,mif3] * self.yqqOmega1bar[mif1,1] * self.yudOmega1[mif2,mif4] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif3] * self.yqqOmega1bar[mif1,1] * self.yudOmega1[mif2,mif4] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif3] * self.yqqOmega1bar[mif1,1] * self.yudOmega1[mif2,mif4] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,1] * self.yqqOmega1bar[2,mif3] * self.yqqOmega1bar[mif1,1] * self.yudOmega1[mif2,mif4] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[mif1,2] * self.yudOmega1[mif2,mif4] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[mif1,2] * self.yudOmega1[mif2,mif4] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,2] * self.yqqOmega1bar[0,mif3] * self.yqqOmega1bar[mif1,2] * self.yudOmega1[mif2,mif4] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif3] * self.yqqOmega1bar[mif1,2] * self.yudOmega1[mif2,mif4] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif3] * self.yqqOmega1bar[mif1,2] * self.yudOmega1[mif2,mif4] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,2] * self.yqqOmega1bar[1,mif3] * self.yqqOmega1bar[mif1,2] * self.yudOmega1[mif2,mif4] + -1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif3] * self.yqqOmega1bar[mif1,2] * self.yudOmega1[mif2,mif4] + -1/4 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif3] * self.yqqOmega1bar[mif1,2] * self.yudOmega1[mif2,mif4] + 1/4 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,2] * self.yqqOmega1bar[2,mif3] * self.yqqOmega1bar[mif1,2] * self.yudOmega1[mif2,mif4] + 2 * (self.MOmega1)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[mif2,mif4] + (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[mif2,mif4] + -3/8 * self.epsilonbar * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[mif2,mif4] + 1/2 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[mif2,mif4] + -1/4 * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[mif2,mif4] + -1/2 * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[mif2,mif4] + 1/4 * self.epsilonbar * (self.g3)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[mif2,mif4] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[0,0] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[0,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif3] * self.yudOmega1[mif1,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,0] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif3] * self.yudOmega1[mif1,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif3] * self.yudOmega1[mif1,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[0,1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[0,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif3] * self.yudOmega1[mif1,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif3] * self.yudOmega1[mif1,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif3] * self.yudOmega1[mif1,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[0,2] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[0,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[0,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif3] * self.yudOmega1[mif1,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,2] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[0,mif3] * self.yudOmega1[mif1,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[0,mif3] * self.yudOmega1[mif1,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[0,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[1,0] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[1,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif3] * self.yudOmega1[mif1,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,0] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif3] * self.yudOmega1[mif1,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif3] * self.yudOmega1[mif1,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[1,1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[1,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif3] * self.yudOmega1[mif1,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif3] * self.yudOmega1[mif1,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif3] * self.yudOmega1[mif1,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[1,2] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[1,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[1,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif3] * self.yudOmega1[mif1,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,2] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[1,mif3] * self.yudOmega1[mif1,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[1,mif3] * self.yudOmega1[mif1,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[1,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[2,0] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[2,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,0] * self.yudOmega1bar[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif3] * self.yudOmega1[mif1,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,0] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif3] * self.yudOmega1[mif1,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,0] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif3] * self.yudOmega1[mif1,0] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,0] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[2,1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[2,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,1] * self.yudOmega1bar[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif3] * self.yudOmega1[mif1,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,1] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif3] * self.yudOmega1[mif1,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,1] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif3] * self.yudOmega1[mif1,1] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,1] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[2,2] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[2,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[mif1,mif3] * self.yudOmega1[2,mif4] * self.yudOmega1[mif2,2] * self.yudOmega1bar[2,2] + -1/32 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif3] * self.yudOmega1[mif1,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,2] + -1/16 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yqqOmega1bar[2,mif3] * self.yudOmega1[mif1,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,2] + 1/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1bar[2,mif3] * self.yudOmega1[mif1,2] * self.yudOmega1[mif2,mif4] * self.yudOmega1bar[2,2])

    def alphaOll(self, mif1,mif2,mif3,mif4):
        return -1/5760 * (self.g1)**(4) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4)

    def alphaOee(self, mif1,mif2,mif3,mif4):
        return -1/1440 * (self.g1)**(4) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4)

    def alphaOle(self, mif1,mif2,mif3,mif4):
        return -1/1440 * (self.g1)**(4) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4)

    def alphaOlq1(self, mif1,mif2,mif3,mif4):
        return (1/8640 * (self.g1)**(4) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -11/864 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,mif3] + -1/96 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,mif3] + -1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,mif3] + 1/72 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,mif3] + -11/864 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,mif3] + -1/96 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,mif3] + -1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,mif3] + 1/72 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,mif3] + -11/864 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,mif3] + -1/96 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,mif3] + -1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,mif3] + 1/72 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,mif3])

    def alphaOlq3(self, mif1,mif2,mif3,mif4):
        return (-7/288 * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,mif3] + -1/32 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,mif3] + -1/24 * (self.g2)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,mif3] + 1/24 * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif4] * self.yqqOmega1bar[0,mif3] + -7/288 * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,mif3] + -1/32 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,mif3] + -1/24 * (self.g2)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,mif3] + 1/24 * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif4] * self.yqqOmega1bar[1,mif3] + -7/288 * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,mif3] + -1/32 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,mif3] + -1/24 * (self.g2)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,mif3] + 1/24 * (self.g2)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif4] * self.yqqOmega1bar[2,mif3])

    def alphaOeu(self, mif1,mif2,mif3,mif4):
        return (1/1080 * (self.g1)**(4) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 5/864 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + 1/96 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + 1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + -1/72 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + 5/864 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + 1/96 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + 1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + -1/72 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + 5/864 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2] + 1/96 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2] + 1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2] + -1/72 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2])

    def alphaOed(self, mif1,mif2,mif3,mif4):
        return (-1/2160 * (self.g1)**(4) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -1/54 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + -1/48 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + -1/36 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + 1/36 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + -1/54 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + -1/48 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + -1/36 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + 1/36 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + -1/54 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + -1/48 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + -1/36 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + 1/36 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3])

    def alphaOqe(self, mif1,mif2,mif3,mif4):
        return (1/4320 * (self.g1)**(4) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -11/432 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -1/48 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -1/36 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + 1/36 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[0,mif2] * self.yqqOmega1bar[0,mif1] + -11/432 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -1/48 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -1/36 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + 1/36 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[1,mif2] * self.yqqOmega1bar[1,mif1] + -11/432 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + -1/48 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + -1/36 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1] + 1/36 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yqqOmega1[2,mif2] * self.yqqOmega1bar[2,mif1])

    def alphaOlu(self, mif1,mif2,mif3,mif4):
        return (1/2160 * (self.g1)**(4) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 5/1728 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + 1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + 1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + -1/144 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif4,0] * self.yudOmega1bar[mif3,0] + 5/1728 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + 1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + 1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + -1/144 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif4,1] * self.yudOmega1bar[mif3,1] + 5/1728 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2] + 1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2] + 1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2] + -1/144 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[mif4,2] * self.yudOmega1bar[mif3,2])

    def alphaOld(self, mif1,mif2,mif3,mif4):
        return (-1/4320 * (self.g1)**(4) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -1/108 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + -1/96 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + -1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + 1/72 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[0,mif4] * self.yudOmega1bar[0,mif3] + -1/108 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + -1/96 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + -1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + 1/72 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[1,mif4] * self.yudOmega1bar[1,mif3] + -1/108 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + -1/96 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + -1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3] + 1/72 * (self.g1)**(2) * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yudOmega1[2,mif4] * self.yudOmega1bar[2,mif3])

    def alphaOledq(self, mif1,mif2,mif3,mif4):
        return (-3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] * self.yqqOmega1[0,mif4] * self.yu[0,0] * self.yudOmega1bar[0,mif3] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] * self.yqqOmega1[0,mif4] * self.yu[0,0] * self.yudOmega1bar[0,mif3] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yqqOmega1[0,mif4] * self.yu[0,0] * self.yudOmega1bar[0,mif3] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] * self.yqqOmega1[1,mif4] * self.yu[1,0] * self.yudOmega1bar[0,mif3] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] * self.yqqOmega1[1,mif4] * self.yu[1,0] * self.yudOmega1bar[0,mif3] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yqqOmega1[1,mif4] * self.yu[1,0] * self.yudOmega1bar[0,mif3] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] * self.yqqOmega1[2,mif4] * self.yu[2,0] * self.yudOmega1bar[0,mif3] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] * self.yqqOmega1[2,mif4] * self.yu[2,0] * self.yudOmega1bar[0,mif3] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yqqOmega1[2,mif4] * self.yu[2,0] * self.yudOmega1bar[0,mif3] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] * self.yqqOmega1[0,mif4] * self.yu[0,1] * self.yudOmega1bar[1,mif3] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] * self.yqqOmega1[0,mif4] * self.yu[0,1] * self.yudOmega1bar[1,mif3] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yqqOmega1[0,mif4] * self.yu[0,1] * self.yudOmega1bar[1,mif3] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] * self.yqqOmega1[1,mif4] * self.yu[1,1] * self.yudOmega1bar[1,mif3] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] * self.yqqOmega1[1,mif4] * self.yu[1,1] * self.yudOmega1bar[1,mif3] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yqqOmega1[1,mif4] * self.yu[1,1] * self.yudOmega1bar[1,mif3] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] * self.yqqOmega1[2,mif4] * self.yu[2,1] * self.yudOmega1bar[1,mif3] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] * self.yqqOmega1[2,mif4] * self.yu[2,1] * self.yudOmega1bar[1,mif3] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yqqOmega1[2,mif4] * self.yu[2,1] * self.yudOmega1bar[1,mif3] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] * self.yqqOmega1[0,mif4] * self.yu[0,2] * self.yudOmega1bar[2,mif3] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] * self.yqqOmega1[0,mif4] * self.yu[0,2] * self.yudOmega1bar[2,mif3] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yqqOmega1[0,mif4] * self.yu[0,2] * self.yudOmega1bar[2,mif3] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] * self.yqqOmega1[1,mif4] * self.yu[1,2] * self.yudOmega1bar[2,mif3] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] * self.yqqOmega1[1,mif4] * self.yu[1,2] * self.yudOmega1bar[2,mif3] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yqqOmega1[1,mif4] * self.yu[1,2] * self.yudOmega1bar[2,mif3] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] * self.yqqOmega1[2,mif4] * self.yu[2,2] * self.yudOmega1bar[2,mif3] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] * self.yqqOmega1[2,mif4] * self.yu[2,2] * self.yudOmega1bar[2,mif3] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yqqOmega1[2,mif4] * self.yu[2,2] * self.yudOmega1bar[2,mif3])

    def alphaOlequ1(self, mif1,mif2,mif3,mif4):
        return (-3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yl[mif1,mif2] * self.yqqOmega1bar[0,mif3] * self.yudOmega1[mif4,0] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.yl[mif1,mif2] * self.yqqOmega1bar[0,mif3] * self.yudOmega1[mif4,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[0,0] * self.yl[mif1,mif2] * self.yqqOmega1bar[0,mif3] * self.yudOmega1[mif4,0] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yl[mif1,mif2] * self.yqqOmega1bar[1,mif3] * self.yudOmega1[mif4,0] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.yl[mif1,mif2] * self.yqqOmega1bar[1,mif3] * self.yudOmega1[mif4,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[1,0] * self.yl[mif1,mif2] * self.yqqOmega1bar[1,mif3] * self.yudOmega1[mif4,0] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yl[mif1,mif2] * self.yqqOmega1bar[2,mif3] * self.yudOmega1[mif4,0] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.yl[mif1,mif2] * self.yqqOmega1bar[2,mif3] * self.yudOmega1[mif4,0] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[2,0] * self.yl[mif1,mif2] * self.yqqOmega1bar[2,mif3] * self.yudOmega1[mif4,0] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yl[mif1,mif2] * self.yqqOmega1bar[0,mif3] * self.yudOmega1[mif4,1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.yl[mif1,mif2] * self.yqqOmega1bar[0,mif3] * self.yudOmega1[mif4,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[0,1] * self.yl[mif1,mif2] * self.yqqOmega1bar[0,mif3] * self.yudOmega1[mif4,1] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yl[mif1,mif2] * self.yqqOmega1bar[1,mif3] * self.yudOmega1[mif4,1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.yl[mif1,mif2] * self.yqqOmega1bar[1,mif3] * self.yudOmega1[mif4,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[1,1] * self.yl[mif1,mif2] * self.yqqOmega1bar[1,mif3] * self.yudOmega1[mif4,1] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yl[mif1,mif2] * self.yqqOmega1bar[2,mif3] * self.yudOmega1[mif4,1] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.yl[mif1,mif2] * self.yqqOmega1bar[2,mif3] * self.yudOmega1[mif4,1] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[2,1] * self.yl[mif1,mif2] * self.yqqOmega1bar[2,mif3] * self.yudOmega1[mif4,1] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yl[mif1,mif2] * self.yqqOmega1bar[0,mif3] * self.yudOmega1[mif4,2] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.yl[mif1,mif2] * self.yqqOmega1bar[0,mif3] * self.yudOmega1[mif4,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[0,2] * self.yl[mif1,mif2] * self.yqqOmega1bar[0,mif3] * self.yudOmega1[mif4,2] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yl[mif1,mif2] * self.yqqOmega1bar[1,mif3] * self.yudOmega1[mif4,2] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.yl[mif1,mif2] * self.yqqOmega1bar[1,mif3] * self.yudOmega1[mif4,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[1,2] * self.yl[mif1,mif2] * self.yqqOmega1bar[1,mif3] * self.yudOmega1[mif4,2] + -3/16 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yl[mif1,mif2] * self.yqqOmega1bar[2,mif3] * self.yudOmega1[mif4,2] + -1/8 * self.invepsilonbar * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.yl[mif1,mif2] * self.yqqOmega1bar[2,mif3] * self.yudOmega1[mif4,2] + 1/8 * (self.MOmega1)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega1)**(2) * (self.mu)**(-2)) * self.ydbar[2,2] * self.yl[mif1,mif2] * self.yqqOmega1bar[2,mif3] * self.yudOmega1[mif4,2])

    def alphaOlequ3(self, mif1,mif2,mif3,mif4):
        return 0

    def alphaWeinberg(self, mif1,mif2):
        return 0
