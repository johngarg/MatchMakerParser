## Symbols used:
# ydbar
# MSigma
# yd
# MDelta1
# iCPV
# lambdaSigma
# yl
# ylbar
# g1
# lambdaSigmabar
# muH
# g2
# lambdaHatSigmaDelta1bar
# invepsilonbar
# lambdaHatSigmaDelta1
# lambdaDelta1
# lambdaDelta1bar
# lam
# mu
# yubar
# onelooporder
# yu

import python.matchingresult
import numpy as np

class GranadaSigma_GranadaDelta1MatchingResult(python.matchingresult.GenericMatchingResult):
    def __init__(self, name='GranadaSigma_GranadaDelta1', scale=91.1876):
        super().__init__(name, scale)
        self.MGranadaDelta1 = 1
        self.MGranadaSigma = 1
        self.lambdaDelta1 = np.ones((3))
        self.lambdaDelta1bar = np.ones((3))
        self.lambdaSigma = np.ones((3))
        self.lambdaSigmabar = np.ones((3))
        self.lambdaSigmaDelta1 = 1
        self.lambdaSigmaDelta1bar = 1
        self.lambdaHatSigmaDelta1 = 1
        self.lambdaHatSigmaDelta1bar = 1
        self.nonvanishing = ['alphaO3W', 'alphaOHW', 'alphaOHB', 'alphaOHWB', 'alphaOHBox', 'alphaOHD', 'alphaOH', 'alphaOeW', 'alphaOeB', 'alphaOHq1', 'alphaOHq3', 'alphaOHu', 'alphaOHd', 'alphaOHl1', 'alphaOHl3', 'alphaOHe', 'alphaOuH', 'alphaOdH', 'alphaOeH', 'alphaOqq1', 'alphaOqq3', 'alphaOuu', 'alphaOdd', 'alphaOud1', 'alphaOqu1', 'alphaOqu8', 'alphaOqd1', 'alphaOqd8', 'alphaOquqd1', 'alphaOll', 'alphaOee', 'alphaOle', 'alphaOlq1', 'alphaOlq3', 'alphaOeu', 'alphaOed', 'alphaOqe', 'alphaOlu', 'alphaOld', 'alphaOledq', 'alphaOlequ1', 'alphaWeinberg']

    def alphaO3G(self, ):
        return 0

    def alphaO3Gt(self, ):
        return 0

    def alphaO3W(self, ):
        return (-1/2880 * (self.g2)**(3) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) + -1/1440 * (self.g2)**(3) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2))

    def alphaO3Wt(self, ):
        return 0

    def alphaOHG(self, ):
        return 0

    def alphaOHGt(self, ):
        return 0

    def alphaOHW(self, ):
        return (1/384 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * ((-1 * (self.MDelta1)**(2) + (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 35/1536 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * ((-1 * (self.MDelta1)**(2) + (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -15/512 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(4) * ((-1 * (self.MDelta1)**(2) + (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 5/1536 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * ((-1 * (self.MDelta1)**(2) + (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 1/1536 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * ((-1 * (self.MDelta1)**(2) + (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 35/1536 * (self.g2)**(2) * (self.MDelta1)**(8) * ((-1 * (self.MDelta1)**(2) + (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -7/1536 * (self.g2)**(2) * (self.MDelta1)**(10) * (self.MSigma)**(-2) * ((-1 * (self.MDelta1)**(2) + (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -35/768 * (self.g2)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * ((-1 * (self.MDelta1)**(2) + (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 35/768 * (self.g2)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(4) * ((-1 * (self.MDelta1)**(2) + (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -35/1536 * (self.g2)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(6) * ((-1 * (self.MDelta1)**(2) + (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 7/1536 * (self.g2)**(2) * (self.MSigma)**(8) * ((-1 * (self.MDelta1)**(2) + (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 35/1536 * (self.g2)**(2) * (self.MDelta1)**(8) * ((-1 * (self.MDelta1)**(2) + (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -7/1536 * (self.g2)**(2) * (self.MDelta1)**(10) * (self.MSigma)**(-2) * ((-1 * (self.MDelta1)**(2) + (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -35/768 * (self.g2)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * ((-1 * (self.MDelta1)**(2) + (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 35/768 * (self.g2)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(4) * ((-1 * (self.MDelta1)**(2) + (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -35/1536 * (self.g2)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(6) * ((-1 * (self.MDelta1)**(2) + (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 7/1536 * (self.g2)**(2) * (self.MSigma)**(8) * ((-1 * (self.MDelta1)**(2) + (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 35/1536 * (self.g2)**(2) * (self.MDelta1)**(8) * ((-1 * (self.MDelta1)**(2) + (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -7/1536 * (self.g2)**(2) * (self.MDelta1)**(10) * (self.MSigma)**(-2) * ((-1 * (self.MDelta1)**(2) + (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -35/768 * (self.g2)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * ((-1 * (self.MDelta1)**(2) + (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 35/768 * (self.g2)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(4) * ((-1 * (self.MDelta1)**(2) + (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -35/1536 * (self.g2)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(6) * ((-1 * (self.MDelta1)**(2) + (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 7/1536 * (self.g2)**(2) * (self.MSigma)**(8) * ((-1 * (self.MDelta1)**(2) + (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/64 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * ((-1 * (self.MDelta1)**(2) + (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -3/256 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(4) * ((-1 * (self.MDelta1)**(2) + (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/256 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * ((-1 * (self.MDelta1)**(2) + (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/64 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * ((-1 * (self.MDelta1)**(2) + (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/256 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(4) * ((-1 * (self.MDelta1)**(2) + (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/256 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * ((-1 * (self.MDelta1)**(2) + (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)))

    def alphaOHWt(self, ):
        return 0

    def alphaOHB(self, ):
        return (-1/512 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -9/512 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 9/512 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 1/512 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 1/64 * (self.g1)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -5/64 * (self.g1)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 5/32 * (self.g1)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -5/32 * (self.g1)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 5/64 * (self.g1)**(2) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -1/64 * (self.g1)**(2) * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 1/64 * (self.g1)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -5/64 * (self.g1)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 5/32 * (self.g1)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -5/32 * (self.g1)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 5/64 * (self.g1)**(2) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -1/64 * (self.g1)**(2) * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 1/64 * (self.g1)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -5/64 * (self.g1)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 5/32 * (self.g1)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -5/32 * (self.g1)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 5/64 * (self.g1)**(2) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -1/64 * (self.g1)**(2) * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -5/512 * (self.g1)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 1/512 * (self.g1)**(2) * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 5/256 * (self.g1)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -5/256 * (self.g1)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 5/512 * (self.g1)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/512 * (self.g1)**(2) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -5/512 * (self.g1)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 1/512 * (self.g1)**(2) * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 5/256 * (self.g1)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -5/256 * (self.g1)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 5/512 * (self.g1)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/512 * (self.g1)**(2) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -5/512 * (self.g1)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/512 * (self.g1)**(2) * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 5/256 * (self.g1)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -5/256 * (self.g1)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 5/512 * (self.g1)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/512 * (self.g1)**(2) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 3/256 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/256 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -3/256 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/256 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)))

    def alphaOHBt(self, ):
        return 0

    def alphaOHWB(self, ):
        return (-1/384 * self.g1 * self.g2 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -19/768 * self.g1 * self.g2 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 3/256 * self.g1 * self.g2 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 11/768 * self.g1 * self.g2 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 1/768 * self.g1 * self.g2 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -1/192 * self.g1 * self.g2 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 5/192 * self.g1 * self.g2 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -5/96 * self.g1 * self.g2 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 5/96 * self.g1 * self.g2 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -5/192 * self.g1 * self.g2 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 1/192 * self.g1 * self.g2 * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -1/192 * self.g1 * self.g2 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 5/192 * self.g1 * self.g2 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -5/96 * self.g1 * self.g2 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 5/96 * self.g1 * self.g2 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -5/192 * self.g1 * self.g2 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 1/192 * self.g1 * self.g2 * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -1/192 * self.g1 * self.g2 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 5/192 * self.g1 * self.g2 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -5/96 * self.g1 * self.g2 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 5/96 * self.g1 * self.g2 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -5/192 * self.g1 * self.g2 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 1/192 * self.g1 * self.g2 * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 5/256 * self.g1 * self.g2 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/256 * self.g1 * self.g2 * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -5/128 * self.g1 * self.g2 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 5/128 * self.g1 * self.g2 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -5/256 * self.g1 * self.g2 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 1/256 * self.g1 * self.g2 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 5/256 * self.g1 * self.g2 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/256 * self.g1 * self.g2 * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -5/128 * self.g1 * self.g2 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 5/128 * self.g1 * self.g2 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -5/256 * self.g1 * self.g2 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 1/256 * self.g1 * self.g2 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 5/256 * self.g1 * self.g2 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/256 * self.g1 * self.g2 * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -5/128 * self.g1 * self.g2 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 5/128 * self.g1 * self.g2 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -5/256 * self.g1 * self.g2 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/256 * self.g1 * self.g2 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/64 * self.g1 * self.g2 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/128 * self.g1 * self.g2 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/128 * self.g1 * self.g2 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/64 * self.g1 * self.g2 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/128 * self.g1 * self.g2 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/128 * self.g1 * self.g2 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)))

    def alphaOHWBt(self, ):
        return 0

    def alphaOHBox(self, ):
        return (-1/960 * (self.g1)**(4) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) + -1/320 * (self.g2)**(4) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) + -1/160 * (self.g2)**(4) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) + 11/384 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 11/384 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 1/64 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 1/64 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 15/256 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 5/128 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 11/192 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 1/32 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 3/64 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 1/32 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -11/768 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -11/256 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -1/128 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -3/128 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -11/768 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -11/256 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -1/128 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -3/128 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -27/256 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -9/128 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -103/1536 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + 49/1536 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -11/256 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + 5/256 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -103/1024 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -43/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -9/256 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -3/128 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -23/1024 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -9/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -27/256 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -9/128 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -9/512 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -45/512 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -3/256 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -15/256 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -93/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -19/128 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + 21/512 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + -39/512 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + 9/256 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + -15/256 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + 17/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + 11/256 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + -1/256 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + -1/128 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + -15/256 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + -9/128 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + -63/1024 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + -39/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + -1/256 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) + 5/256 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) + 1/384 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) + 1/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) + -1/32 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) + 5/1536 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) + 1/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) + -1/256 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) + 1/256 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) + -7/576 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 1/96 * (self.g2)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 3/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -3/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -5/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 3/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 15/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 1/768 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * (self.lambdaDelta1bar[0])**(2) + -7/576 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 1/96 * (self.g2)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 3/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -3/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -5/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 3/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 15/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 1/768 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * (self.lambdaDelta1bar[1])**(2) + -7/576 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 1/96 * (self.g2)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 3/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -3/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -5/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 3/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 15/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 1/768 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * (self.lambdaDelta1bar[2])**(2) + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -5/1536 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 7/512 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/256 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 1/256 * (self.g2)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -3/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -15/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 9/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 15/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -3/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 15/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 9/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -15/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -7/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -9/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -11/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) + -1/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -5/1536 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 7/512 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/256 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 1/256 * (self.g2)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -3/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -15/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 9/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 15/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -3/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 15/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 9/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -15/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -7/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -9/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -11/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] + -1/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] + -11/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) + -1/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -5/1536 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 7/512 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/256 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/256 * (self.g2)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -3/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -15/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 9/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 15/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -3/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 15/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 9/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -15/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -7/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -9/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -11/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] + -1/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] + -11/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] + -1/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] + -11/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) + -1/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) + -1/64 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/64 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -5/128 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/32 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/32 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 11/256 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -5/256 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 43/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/128 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 9/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -9/256 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 15/256 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -11/256 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/128 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/256 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/256 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/256 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/256 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/96 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -9/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/96 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -9/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/96 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -9/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 5/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -5/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 5/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -5/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 5/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -5/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/128 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/128 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/128 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/128 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 9/128 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 9/128 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/256 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 15/256 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 19/128 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 9/128 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 39/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/64 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/32 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/256 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/256 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -9/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/256 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/256 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -9/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/256 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/256 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -9/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -7/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + -5/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + -9/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + 9/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + 5/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + -7/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + -5/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + 3/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] + -3/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] + 5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] + -3/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] + -5/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] + 5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] + -7/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + -5/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + -9/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + 9/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + 5/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + -7/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + -5/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + 3/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] + -3/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] + 5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] + -3/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] + -5/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] + 5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] + -7/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + -5/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + -9/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + 9/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + 5/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + -7/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + -5/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + 3/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] + -3/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] + 5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] + -3/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] + -5/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] + 5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] + -7/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + -5/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + -9/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + 9/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + 5/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + -7/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + -5/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + 3/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] + -3/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] + 5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] + -3/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] + -5/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] + 5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] + -7/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + -5/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + -9/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + 9/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + 5/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + -7/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + -5/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + 3/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] + -3/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] + 5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] + -3/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] + -5/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] + 5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] + -7/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + -5/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + -9/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + 9/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + 5/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + -7/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + -5/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + 3/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] + -3/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] + 5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] + -3/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] + -5/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] + 5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] + -7/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + -5/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + -9/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + 9/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + 5/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + -7/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + -5/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + 3/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] + -3/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] + 5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] + -3/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] + -5/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] + 5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] + -7/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + -5/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + -9/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + 9/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + 5/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + -7/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + -5/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + 3/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] + -3/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] + 5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] + -3/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] + -5/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] + 5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] + -7/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + -5/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + -9/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + 9/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + 5/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + -7/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + -5/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + 3/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] + -3/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] + 5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] + -3/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] + -5/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] + 5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + -9/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 9/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + -3/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,0] + -11/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,0] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,0] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,0] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,0] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,0] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,0] + -11/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,0] + -11/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,0] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + -9/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 9/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + -3/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,1] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,1] + -11/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,1] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,1] + -11/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,1] + -11/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,1] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + -9/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 9/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + -3/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,2] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,2] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,2] + -11/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,2] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] + -11/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,2] + -11/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + -9/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 9/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + -3/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + -11/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[1,0] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[1,0] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[1,0] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,0] + -11/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,0] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,0] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,0] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,0] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,0] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,0] + -11/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,0] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + -9/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 9/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + -3/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + -11/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[1,1] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[1,1] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[1,1] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,1] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,1] + -11/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,1] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,1] + -11/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,1] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + -9/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 9/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + -3/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + -11/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[1,2] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[1,2] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[1,2] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,2] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,2] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,2] + -11/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,2] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,2] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,2] + -11/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + -9/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 9/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + -3/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + -11/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,0] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,0] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[2,0] + -11/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,0] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,0] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[2,0] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,0] + -11/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,0] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,0] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,0] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,0] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + -9/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 9/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + -3/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + -11/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,1] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,1] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[2,1] + -11/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,1] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,1] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[2,1] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,1] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,1] + -11/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,1] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,1] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,1] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,1] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + -9/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 9/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + -3/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + -11/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,2] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,2] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[2,2] + -11/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,2] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,2] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[2,2] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,2] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,2] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,2] + -11/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,2] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,2] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,2])

    def alphaOHD(self, ):
        return (-1/240 * (self.g1)**(4) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) + 11/96 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 1/16 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 15/128 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 5/64 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -15/128 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -5/64 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -11/192 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -1/32 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -11/192 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -1/32 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -103/384 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -11/64 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -97/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -37/256 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + 5/64 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + 9/128 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -9/128 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -3/64 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -3/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -1/256 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + 21/128 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + 9/64 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + 31/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + 13/256 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + -1/128 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + -1/64 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + 3/256 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + 3/128 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + -1/64 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) + 1/768 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) + 1/64 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) + -1/768 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) + 7/256 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) + -1/64 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) + -7/144 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -1/24 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 3/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -3/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -5/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -1/8 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 3/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 15/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 9/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 1/384 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -1/24 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * (self.lambdaDelta1bar[0])**(2) + -7/144 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -1/24 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 3/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -3/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -5/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -1/8 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 3/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 15/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 9/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 1/384 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -1/12 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] + -1/24 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * (self.lambdaDelta1bar[1])**(2) + -7/144 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -1/24 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 3/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -3/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -5/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -1/8 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 3/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 15/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 9/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 1/384 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -1/12 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] + -1/12 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] + -1/24 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * (self.lambdaDelta1bar[2])**(2) + 1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -5/384 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/64 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -3/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 3/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 15/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 5/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -3/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -9/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) + -1/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) + 1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -5/384 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/64 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -3/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 3/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 15/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 5/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -3/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -9/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] + -1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] + -9/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) + -1/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) + 1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -5/384 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/64 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -3/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 3/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 15/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 5/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -3/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -9/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] + -1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] + -9/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] + -1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] + -9/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) + -1/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) + -1/16 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -5/64 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 5/64 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 11/64 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 37/256 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -9/128 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -9/64 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -13/256 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/64 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/64 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/64 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/256 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/64 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/24 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -9/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/24 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -9/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/24 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -9/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -5/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -5/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -5/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/32 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/32 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/64 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/256 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/128 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/128 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/64 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 7/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/64 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 7/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/64 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 7/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + -9/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + 9/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + 3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + 3/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + -5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + 3/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] + -3/64 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] + 3/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] + -3/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] + -3/64 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] + 3/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] + -5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + -9/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + 9/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + 3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + 3/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + -5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + 3/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] + -3/64 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] + 3/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] + -3/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] + -3/64 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] + 3/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] + -5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + -9/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + 9/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + 3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + 3/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + -5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + 3/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] + -3/64 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] + 3/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] + -3/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] + -3/64 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] + 3/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] + -5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + -9/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + 9/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + 3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + 3/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + -5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + 3/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] + -3/64 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] + 3/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] + -3/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] + -3/64 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] + 3/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] + -5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + -9/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + 9/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + 3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + 3/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + -5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + 3/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] + -3/64 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] + 3/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] + -3/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] + -3/64 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] + 3/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] + -5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + -9/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + 9/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + 3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + 3/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + -5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + 3/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] + -3/64 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] + 3/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] + -3/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] + -3/64 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] + 3/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] + -5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + -9/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + 9/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + 3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + 3/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + -5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + 3/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] + -3/64 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] + 3/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] + -3/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] + -3/64 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] + 3/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] + -5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + -9/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + 9/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + 3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + 3/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + -5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + 3/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] + -3/64 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] + 3/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] + -3/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] + -3/64 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] + 3/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] + -5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + -9/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + 9/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + 3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + 3/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + -5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + 3/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] + -3/64 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] + 3/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] + -3/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] + -3/64 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] + 3/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + -9/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 9/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 3/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 3/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + -3/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + -3/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + -1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + 3/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,0] + 1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,0] + -11/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,0] + -3/64 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] + 3/64 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] + 3/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,0] + 1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,0] + 3/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,0] + 1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,0] + -11/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] + -3/64 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] + 3/64 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,0] + -11/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] + -3/64 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] + 3/64 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,0] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + -9/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 9/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 3/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 3/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + -3/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + -3/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + -1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + 3/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,1] + 1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,1] + 3/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,1] + 1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,1] + -11/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,1] + -3/64 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] + 3/64 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] + 3/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,1] + 1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,1] + -11/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] + -3/64 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] + 3/64 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,1] + -11/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] + -3/64 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] + 3/64 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,1] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + -9/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 9/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 3/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 3/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + -3/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + -3/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + -1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + 3/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,2] + 1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,2] + 3/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,2] + 1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,2] + 3/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,2] + 1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,2] + -11/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,2] + -3/64 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] + 3/64 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] + -11/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] + -3/64 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] + 3/64 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,2] + -11/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] + -3/64 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] + 3/64 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,2] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + -9/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 9/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 3/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 3/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + -3/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + -3/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + -1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + -11/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[1,0] + -3/64 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[1,0] + 3/64 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[1,0] + 3/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,0] + 1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,0] + -11/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,0] + -3/64 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] + 3/64 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] + 3/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,0] + 1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,0] + 3/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,0] + 1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,0] + -11/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] + -3/64 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] + 3/64 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,0] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + -9/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 9/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 3/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 3/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + -3/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + -3/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + -1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + -11/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[1,1] + -3/64 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[1,1] + 3/64 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[1,1] + 3/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,1] + 1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,1] + 3/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,1] + 1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,1] + -11/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,1] + -3/64 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] + 3/64 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] + 3/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,1] + 1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,1] + -11/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] + -3/64 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] + 3/64 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,1] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + -9/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 9/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 3/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 3/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + -3/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + -3/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + -1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + -11/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[1,2] + -3/64 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[1,2] + 3/64 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[1,2] + 3/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,2] + 1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,2] + 3/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,2] + 1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,2] + 3/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,2] + 1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,2] + -11/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,2] + -3/64 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,2] + 3/64 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,2] + -11/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] + -3/64 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] + 3/64 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,2] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + -9/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 9/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 3/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 3/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + -3/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + -3/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + -1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + -11/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,0] + -3/64 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,0] + 3/64 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[2,0] + -11/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,0] + -3/64 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,0] + 3/64 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[2,0] + 3/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,0] + 1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,0] + -11/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] + -3/64 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] + 3/64 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] + 3/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,0] + 1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,0] + 3/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,0] + 1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,0] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + -9/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 9/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 3/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 3/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + -3/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + -3/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + -1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + -11/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,1] + -3/64 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,1] + 3/64 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[2,1] + -11/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,1] + -3/64 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,1] + 3/64 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[2,1] + 3/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,1] + 1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,1] + 3/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,1] + 1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,1] + -11/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,1] + -3/64 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,1] + 3/64 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,1] + 3/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,1] + 1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,1] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + -9/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + -3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 9/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 3/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 3/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + -3/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + -3/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + -1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + -11/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,2] + -3/64 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,2] + 3/64 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[2,2] + -11/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,2] + -3/64 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,2] + 3/64 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[2,2] + 3/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,2] + 1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,2] + 3/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,2] + 1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,2] + 3/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,2] + 1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,2] + -11/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,2] + -3/64 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,2] + 3/64 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,2])

    def alphaOH(self, ):
        return (-1/120 * (self.g2)**(4) * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) + -1/60 * (self.g2)**(4) * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) + 11/144 * (self.g2)**(2) * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 1/24 * (self.g2)**(2) * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -11/8 * (self.lam)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -3/4 * self.invepsilonbar * (self.lam)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 15/32 * self.lam * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 5/16 * self.invepsilonbar * self.lam * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -9/256 * (self.lambdaHatSigmaDelta1)**(3) * (self.lambdaHatSigmaDelta1bar)**(3) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -9/256 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(3) * (self.lambdaHatSigmaDelta1bar)**(3) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 11/72 * (self.g2)**(2) * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 1/12 * (self.g2)**(2) * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 9/32 * self.lam * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 3/16 * self.invepsilonbar * self.lam * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -3/256 * (self.lambdaHatSigmaDelta1)**(3) * (self.lambdaHatSigmaDelta1bar)**(3) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -3/256 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(3) * (self.lambdaHatSigmaDelta1bar)**(3) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -11/96 * (self.g2)**(2) * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -1/16 * (self.g2)**(2) * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -55/48 * (self.lam)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -5/8 * self.invepsilonbar * (self.lam)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -11/96 * (self.g2)**(2) * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -1/16 * (self.g2)**(2) * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 121/48 * (self.lam)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 11/8 * self.invepsilonbar * (self.lam)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -3/4 * self.lam * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + -1/2 * self.invepsilonbar * self.lam * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 3/64 * (self.lambdaHatSigmaDelta1)**(3) * (self.lambdaHatSigmaDelta1bar)**(3) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 3/64 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(3) * (self.lambdaHatSigmaDelta1bar)**(3) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) + 49/576 * (self.g2)**(2) * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + 5/96 * (self.g2)**(2) * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + 19/8 * (self.lam)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + 3/2 * self.invepsilonbar * (self.lam)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -203/256 * self.lam * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -83/128 * self.invepsilonbar * self.lam * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + 27/512 * (self.lambdaHatSigmaDelta1)**(3) * (self.lambdaHatSigmaDelta1bar)**(3) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + 9/128 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(3) * (self.lambdaHatSigmaDelta1bar)**(3) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -3/32 * (self.g2)**(2) * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -1/16 * (self.g2)**(2) * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -49/256 * self.lam * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -21/128 * self.invepsilonbar * self.lam * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + 3/256 * (self.lambdaHatSigmaDelta1)**(3) * (self.lambdaHatSigmaDelta1bar)**(3) * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + 9/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(3) * (self.lambdaHatSigmaDelta1bar)**(3) * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -9/32 * (self.g2)**(2) * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -3/16 * (self.g2)**(2) * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -45/64 * (self.lam)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -15/32 * self.invepsilonbar * (self.lam)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -15/64 * (self.g2)**(2) * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -5/32 * (self.g2)**(2) * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + 811/192 * (self.lam)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + 83/32 * self.invepsilonbar * (self.lam)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -79/64 * self.lam * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -1 * self.invepsilonbar * self.lam * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + 33/512 * (self.lambdaHatSigmaDelta1)**(3) * (self.lambdaHatSigmaDelta1bar)**(3) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + 45/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(3) * (self.lambdaHatSigmaDelta1bar)**(3) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) + -13/64 * (self.g2)**(2) * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + -5/32 * (self.g2)**(2) * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + -15/16 * (self.lam)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + -3/4 * self.invepsilonbar * (self.lam)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + 37/128 * self.lam * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + 21/64 * self.invepsilonbar * self.lam * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + -15/1024 * (self.lambdaHatSigmaDelta1)**(3) * (self.lambdaHatSigmaDelta1bar)**(3) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + -9/256 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(3) * (self.lambdaHatSigmaDelta1bar)**(3) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + -1/1024 * (self.lambdaHatSigmaDelta1)**(3) * (self.lambdaHatSigmaDelta1bar)**(3) * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + -3/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(3) * (self.lambdaHatSigmaDelta1bar)**(3) * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + -5/32 * (self.g2)**(2) * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + -3/16 * (self.g2)**(2) * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + 105/64 * (self.lam)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + 39/32 * self.invepsilonbar * (self.lam)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + -111/256 * self.lam * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + -63/128 * self.invepsilonbar * self.lam * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + 1/64 * (self.lambdaHatSigmaDelta1)**(3) * (self.lambdaHatSigmaDelta1bar)**(3) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + 21/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(3) * (self.lambdaHatSigmaDelta1bar)**(3) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) + 5/96 * (self.g2)**(2) * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) + -1/384 * self.lam * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) + 1/128 * self.invepsilonbar * self.lam * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) + -1/12 * (self.g2)**(2) * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) + -1/384 * self.lam * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) + 1/128 * self.invepsilonbar * self.lam * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) + 1/96 * (self.g2)**(2) * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) + 1/36 * (self.g2)**(2) * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 1/12 * (self.lam)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 15/32 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 5/16 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -3/32 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -3/32 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -15/32 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -5/16 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 3/32 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 3/32 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -3/4 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -5/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 1/8 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 3/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -11/32 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -5/16 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 1/16 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 3/32 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 15/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 9/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -1/64 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -3/32 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 1/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -7/192 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -5/48 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * (self.lambdaDelta1bar[0])**(2) + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * (self.lambdaDelta1bar[0])**(2) + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * (self.lambdaDelta1bar[0])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * (self.lambdaDelta1bar[0])**(2) + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * (self.lambdaDelta1bar[0])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * (self.lambdaDelta1bar[0])**(2) + 1/8 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * (self.lambdaDelta1bar[0])**(2) + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * (self.lambdaDelta1bar[0])**(2) + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * (self.lambdaDelta1bar[0])**(2) + 1/48 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(3) * (self.lambdaDelta1bar[0])**(3) + 1/36 * (self.g2)**(2) * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 1/12 * (self.lam)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 15/32 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 5/16 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -3/32 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -3/32 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -15/32 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -5/16 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 3/32 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 3/32 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -3/4 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -5/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 1/8 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 3/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -11/32 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -5/16 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 1/16 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 3/32 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 15/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 9/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -1/64 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -3/32 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 1/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -7/192 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -5/24 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] + -1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] + -1/8 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] + 1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] + 1/8 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] + 1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] + 1/4 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] + -1/8 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * self.lambdaDelta1[1] * (self.lambdaDelta1bar[0])**(2) * self.lambdaDelta1bar[1] + -5/48 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * (self.lambdaDelta1bar[1])**(2) + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * (self.lambdaDelta1bar[1])**(2) + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * (self.lambdaDelta1bar[1])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * (self.lambdaDelta1bar[1])**(2) + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * (self.lambdaDelta1bar[1])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * (self.lambdaDelta1bar[1])**(2) + 1/8 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * (self.lambdaDelta1bar[1])**(2) + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * (self.lambdaDelta1bar[1])**(2) + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * (self.lambdaDelta1bar[1])**(2) + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * (self.lambdaDelta1[1])**(2) * self.lambdaDelta1bar[0] * (self.lambdaDelta1bar[1])**(2) + 1/48 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(3) * (self.lambdaDelta1bar[1])**(3) + 1/36 * (self.g2)**(2) * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 1/12 * (self.lam)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 15/32 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 5/16 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -3/32 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -3/32 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -15/32 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -5/16 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 3/32 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 3/32 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -3/4 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -5/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 1/8 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 3/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -11/32 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -5/16 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 1/16 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 3/32 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 15/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 9/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -1/64 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -3/32 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 1/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -7/192 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -5/24 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] + -1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] + -1/8 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] + 1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] + 1/8 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] + 1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] + 1/4 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] + -1/8 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * self.lambdaDelta1[2] * (self.lambdaDelta1bar[0])**(2) * self.lambdaDelta1bar[2] + -5/24 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] + -1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] + -1/8 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] + 1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] + 1/8 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] + 1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] + 1/4 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] + -1/8 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * self.lambdaDelta1[2] * (self.lambdaDelta1bar[1])**(2) * self.lambdaDelta1bar[2] + -5/48 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * (self.lambdaDelta1bar[2])**(2) + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * (self.lambdaDelta1bar[2])**(2) + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * (self.lambdaDelta1bar[2])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * (self.lambdaDelta1bar[2])**(2) + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * (self.lambdaDelta1bar[2])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * (self.lambdaDelta1bar[2])**(2) + 1/8 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * (self.lambdaDelta1bar[2])**(2) + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * (self.lambdaDelta1bar[2])**(2) + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * (self.lambdaDelta1bar[2])**(2) + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * (self.lambdaDelta1[2])**(2) * self.lambdaDelta1bar[0] * (self.lambdaDelta1bar[2])**(2) + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * (self.lambdaDelta1[2])**(2) * self.lambdaDelta1bar[1] * (self.lambdaDelta1bar[2])**(2) + 1/48 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(3) * (self.lambdaDelta1bar[2])**(3) + 1/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 7/192 * (self.g2)**(2) * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 1/96 * (self.g2)**(2) * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 1/16 * (self.lam)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -33/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -11/64 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 27/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 27/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -21/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -7/64 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 9/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 9/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 27/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 9/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -9/128 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -9/128 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 35/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 15/64 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -9/256 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -27/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 1/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 1/64 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -3/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -3/256 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 69/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 31/64 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -21/256 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -33/256 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 1/256 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 1/128 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 5/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 9/64 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -3/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -15/256 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/256 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/128 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 1/256 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -9/128 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 1/256 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/128 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -13/256 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) + -1/128 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) + -9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) + -9/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) + -3/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) + -3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) + 3/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) + 9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) + 21/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) + -3/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) + 9/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(3) * (self.lambdaSigmabar[0])**(3) + 1/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 7/192 * (self.g2)**(2) * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 1/96 * (self.g2)**(2) * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 1/16 * (self.lam)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -33/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -11/64 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 27/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 27/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -21/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -7/64 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 9/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 9/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 27/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 9/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -9/128 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -9/128 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 35/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 15/64 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -9/256 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -27/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 1/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 1/64 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -3/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -3/256 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 69/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 31/64 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -21/256 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -33/256 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 1/256 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 1/128 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 5/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 9/64 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -3/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -15/256 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/256 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/128 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 1/256 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -9/128 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 1/256 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/128 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -13/128 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] + -1/64 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] + -9/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] + -9/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] + -3/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] + -3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] + 3/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] + 3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] + 9/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] + 21/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] + -3/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] + 9/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] + 3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * self.lambdaSigma[1] * (self.lambdaSigmabar[0])**(2) * self.lambdaSigmabar[1] + -13/256 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) + -1/128 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) + -9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) + -9/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) + -3/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) + -3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) + 3/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) + 9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) + 21/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) + -3/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) + 9/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) + 3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[0] * (self.lambdaSigmabar[1])**(2) + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(3) * (self.lambdaSigmabar[1])**(3) + 1/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 7/192 * (self.g2)**(2) * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/96 * (self.g2)**(2) * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/16 * (self.lam)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -33/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -11/64 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 27/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 27/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -21/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -7/64 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 9/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 9/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 27/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 9/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -9/128 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -9/128 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 35/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 15/64 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -9/256 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -27/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/64 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -3/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -3/256 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 69/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 31/64 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -21/256 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -33/256 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/256 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/128 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 5/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 9/64 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -3/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -15/256 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/256 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/128 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/256 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -9/128 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/256 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/128 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -13/128 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] + -1/64 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] + -9/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] + -9/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] + -3/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] + -3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] + 3/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] + 3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] + 9/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] + 21/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] + -3/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] + 9/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] + 3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * self.lambdaSigma[2] * (self.lambdaSigmabar[0])**(2) * self.lambdaSigmabar[2] + -13/128 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] + -1/64 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] + -9/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] + -9/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] + -3/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] + -3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] + 3/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] + 3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] + 9/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] + 21/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] + -3/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] + 9/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] + 3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] + 3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * self.lambdaSigma[2] * (self.lambdaSigmabar[1])**(2) * self.lambdaSigmabar[2] + -13/256 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) + -1/128 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) + -9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) + -9/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) + -3/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) + -3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) + 3/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) + 9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) + 21/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) + -3/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) + 9/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) + 3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[0] * (self.lambdaSigmabar[2])**(2) + 3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[1] * (self.lambdaSigmabar[2])**(2) + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(3) * (self.lambdaSigmabar[2])**(3) + -1/24 * (self.g2)**(2) * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/4 * (self.lam)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -5/16 * self.lam * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 9/256 * (self.lambdaHatSigmaDelta1)**(3) * (self.lambdaHatSigmaDelta1bar)**(3) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/12 * (self.g2)**(2) * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -3/16 * self.lam * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/256 * (self.lambdaHatSigmaDelta1)**(3) * (self.lambdaHatSigmaDelta1bar)**(3) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -5/96 * (self.g2)**(2) * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -3/2 * (self.lam)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 83/128 * self.lam * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -9/128 * (self.lambdaHatSigmaDelta1)**(3) * (self.lambdaHatSigmaDelta1bar)**(3) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/16 * (self.g2)**(2) * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 21/128 * self.lam * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -9/512 * (self.lambdaHatSigmaDelta1)**(3) * (self.lambdaHatSigmaDelta1bar)**(3) * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 5/32 * (self.g2)**(2) * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/4 * (self.lam)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -21/64 * self.lam * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 9/256 * (self.lambdaHatSigmaDelta1)**(3) * (self.lambdaHatSigmaDelta1bar)**(3) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/512 * (self.lambdaHatSigmaDelta1)**(3) * (self.lambdaHatSigmaDelta1bar)**(3) * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/96 * (self.g2)**(2) * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/128 * self.lam * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/128 * self.lam * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/96 * (self.g2)**(2) * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -5/16 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/32 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 5/8 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -3/16 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -9/32 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/32 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * (self.lambdaDelta1bar[0])**(2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * (self.lambdaDelta1bar[0])**(2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * (self.lambdaDelta1bar[0])**(2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -5/16 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/32 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 5/8 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -3/16 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -9/32 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/32 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/4 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * (self.lambdaDelta1bar[1])**(2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * (self.lambdaDelta1bar[1])**(2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * (self.lambdaDelta1bar[1])**(2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -5/16 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/32 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 5/8 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -3/16 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -9/32 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/32 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/4 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/4 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * (self.lambdaDelta1bar[2])**(2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * (self.lambdaDelta1bar[2])**(2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * (self.lambdaDelta1bar[2])**(2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 11/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -27/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 7/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -9/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -15/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 27/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/256 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 11/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -27/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 7/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -9/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -15/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 27/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/256 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 9/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 11/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -27/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 7/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -9/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -15/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 27/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/256 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 9/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 9/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/16 * (self.g2)**(2) * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 5/8 * (self.lam)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/16 * (self.g2)**(2) * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -11/8 * (self.lam)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/2 * self.lam * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/64 * (self.lambdaHatSigmaDelta1)**(3) * (self.lambdaHatSigmaDelta1bar)**(3) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/16 * (self.g2)**(2) * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 15/32 * (self.lam)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 5/32 * (self.g2)**(2) * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -83/32 * (self.lam)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + self.lam * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -45/512 * (self.lambdaHatSigmaDelta1)**(3) * (self.lambdaHatSigmaDelta1bar)**(3) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/16 * (self.g2)**(2) * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -39/32 * (self.lam)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 63/128 * self.lam * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -21/512 * (self.lambdaHatSigmaDelta1)**(3) * (self.lambdaHatSigmaDelta1bar)**(3) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/24 * (self.g2)**(2) * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/12 * (self.g2)**(2) * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 5/16 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/32 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 5/16 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/32 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * (self.lambdaDelta1bar[0])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 5/16 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/32 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 5/16 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/32 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * (self.lambdaDelta1bar[1])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 5/16 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/32 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 5/16 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/32 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * (self.lambdaDelta1bar[2])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/96 * (self.g2)**(2) * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -9/32 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 9/128 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -31/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 33/256 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/8 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 15/256 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 9/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/128 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -21/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/96 * (self.g2)**(2) * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -9/32 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 9/128 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -31/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 33/256 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/8 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 15/256 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 9/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -21/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -9/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/128 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -21/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/96 * (self.g2)**(2) * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -9/32 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 9/128 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -31/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 33/256 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/8 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 15/256 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 9/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -21/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -9/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -21/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -9/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/128 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -21/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + -1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + 3/16 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + 1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + -3/16 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + -1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + -11/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + -5/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + 1/32 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + -5/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + -3/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + 1/32 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + 1/16 * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + 1/16 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + -3/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + -1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * (self.lambdaDelta1bar[0])**(2) * self.lambdaSigma[0] * self.yl[0,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * (self.lambdaDelta1bar[0])**(2) * self.lambdaSigma[0] * self.yl[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * (self.lambdaDelta1bar[0])**(2) * self.lambdaSigma[0] * self.yl[0,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * (self.lambdaDelta1bar[0])**(2) * self.lambdaSigma[0] * self.yl[0,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * (self.lambdaDelta1bar[0])**(2) * self.lambdaSigma[0] * self.yl[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,0] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * self.yl[0,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * self.yl[0,0] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * self.yl[0,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * self.yl[0,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * self.yl[0,0] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,0] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,0] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,0] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,0] + -1/8 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] + 5/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] + 1/32 * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * (self.lambdaDelta1bar[0])**(2) * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * (self.lambdaDelta1bar[0])**(2) * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] + 1/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] + 1/8 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] + 3/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] + -3/32 * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] + 1/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * (self.lambdaDelta1bar[0])**(2) * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] + 1/32 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] + 1/32 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] + 1/32 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] + -3/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + -1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + 3/16 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + 1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + -3/16 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + -1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + -11/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + -5/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + 1/32 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + -5/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + -3/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + 1/32 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + 1/16 * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + 1/16 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + -3/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + -1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * (self.lambdaDelta1bar[1])**(2) * self.lambdaSigma[0] * self.yl[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * (self.lambdaDelta1bar[1])**(2) * self.lambdaSigma[0] * self.yl[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * (self.lambdaDelta1bar[1])**(2) * self.lambdaSigma[0] * self.yl[0,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * (self.lambdaDelta1bar[1])**(2) * self.lambdaSigma[0] * self.yl[0,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * (self.lambdaDelta1bar[1])**(2) * self.lambdaSigma[0] * self.yl[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,1] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * self.yl[0,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * self.yl[0,1] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * self.yl[0,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * self.yl[0,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * self.yl[0,1] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,1] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,1] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,1] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,1] + -1/8 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] + 5/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] + 1/32 * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * (self.lambdaDelta1bar[1])**(2) * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * (self.lambdaDelta1bar[1])**(2) * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] + 1/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] + 1/8 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] + 3/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] + -3/32 * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] + 1/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * (self.lambdaDelta1bar[1])**(2) * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] + 1/32 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] + 1/32 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] + 1/32 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] + -3/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + -1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + 3/16 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + 1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + -3/16 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + -1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + -11/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + -5/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + 1/32 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + -5/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + -3/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + 1/32 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + 1/16 * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + 1/16 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + -3/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + -1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * (self.lambdaDelta1bar[2])**(2) * self.lambdaSigma[0] * self.yl[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * (self.lambdaDelta1bar[2])**(2) * self.lambdaSigma[0] * self.yl[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * (self.lambdaDelta1bar[2])**(2) * self.lambdaSigma[0] * self.yl[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * (self.lambdaDelta1bar[2])**(2) * self.lambdaSigma[0] * self.yl[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * (self.lambdaDelta1bar[2])**(2) * self.lambdaSigma[0] * self.yl[0,2] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * self.yl[0,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * self.yl[0,2] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * self.yl[0,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * self.yl[0,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * self.yl[0,2] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,2] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,2] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,2] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,2] + -1/8 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] + 5/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] + 1/32 * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * (self.lambdaDelta1bar[2])**(2) * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * (self.lambdaDelta1bar[2])**(2) * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] + 1/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] + 1/8 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] + 3/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] + -3/32 * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] + 1/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * (self.lambdaDelta1bar[2])**(2) * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] + 1/32 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] + 1/32 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] + 1/32 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] + -3/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + -1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + 3/16 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + 1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + -3/16 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + -1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + -11/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + -5/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + 1/32 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + -5/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + -3/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + 1/32 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + 1/16 * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + 1/16 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + -3/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + -1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * (self.lambdaDelta1bar[0])**(2) * self.lambdaSigma[1] * self.yl[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * (self.lambdaDelta1bar[0])**(2) * self.lambdaSigma[1] * self.yl[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * (self.lambdaDelta1bar[0])**(2) * self.lambdaSigma[1] * self.yl[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * (self.lambdaDelta1bar[0])**(2) * self.lambdaSigma[1] * self.yl[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * (self.lambdaDelta1bar[0])**(2) * self.lambdaSigma[1] * self.yl[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,0] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * self.yl[1,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * self.yl[1,0] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * self.yl[1,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * self.yl[1,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * self.yl[1,0] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,0] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,0] + -1/8 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] + 5/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] + 1/32 * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * (self.lambdaDelta1bar[0])**(2) * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * (self.lambdaDelta1bar[0])**(2) * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] + 1/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] + 1/8 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] + 3/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] + -3/32 * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] + 1/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * (self.lambdaDelta1bar[0])**(2) * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] + 1/32 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] + 1/32 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] + 1/32 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] + -3/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + -1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + 3/16 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + 1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + -3/16 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + -1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + -11/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + -5/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + 1/32 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + -5/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + -3/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + 1/32 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + 1/16 * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + 1/16 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + -3/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + -1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * (self.lambdaDelta1bar[1])**(2) * self.lambdaSigma[1] * self.yl[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * (self.lambdaDelta1bar[1])**(2) * self.lambdaSigma[1] * self.yl[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * (self.lambdaDelta1bar[1])**(2) * self.lambdaSigma[1] * self.yl[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * (self.lambdaDelta1bar[1])**(2) * self.lambdaSigma[1] * self.yl[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * (self.lambdaDelta1bar[1])**(2) * self.lambdaSigma[1] * self.yl[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,1] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * self.yl[1,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * self.yl[1,1] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * self.yl[1,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * self.yl[1,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * self.yl[1,1] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,1] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,1] + -1/8 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] + 5/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] + 1/32 * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * (self.lambdaDelta1bar[1])**(2) * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * (self.lambdaDelta1bar[1])**(2) * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] + 1/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] + 1/8 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] + 3/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] + -3/32 * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] + 1/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * (self.lambdaDelta1bar[1])**(2) * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] + 1/32 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] + 1/32 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] + 1/32 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] + -3/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + -1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + 3/16 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + 1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + -3/16 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + -1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + -11/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + -5/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + 1/32 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + -5/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + -3/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + 1/32 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + 1/16 * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + 1/16 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + -3/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + -1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * (self.lambdaDelta1bar[2])**(2) * self.lambdaSigma[1] * self.yl[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * (self.lambdaDelta1bar[2])**(2) * self.lambdaSigma[1] * self.yl[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * (self.lambdaDelta1bar[2])**(2) * self.lambdaSigma[1] * self.yl[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * (self.lambdaDelta1bar[2])**(2) * self.lambdaSigma[1] * self.yl[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * (self.lambdaDelta1bar[2])**(2) * self.lambdaSigma[1] * self.yl[1,2] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * self.yl[1,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * self.yl[1,2] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * self.yl[1,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * self.yl[1,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * self.yl[1,2] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,2] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,2] + -1/8 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] + 5/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] + 1/32 * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * (self.lambdaDelta1bar[2])**(2) * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * (self.lambdaDelta1bar[2])**(2) * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] + 1/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] + 1/8 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] + 3/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] + -3/32 * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] + 1/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * (self.lambdaDelta1bar[2])**(2) * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] + 1/32 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] + 1/32 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] + 1/32 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] + -3/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + -1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + 3/16 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + 1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + -3/16 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + -1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + -11/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + -5/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + 1/32 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + -5/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + -3/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + 1/32 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + 1/16 * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + 1/16 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + -3/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + -1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * (self.lambdaDelta1bar[0])**(2) * self.lambdaSigma[2] * self.yl[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * (self.lambdaDelta1bar[0])**(2) * self.lambdaSigma[2] * self.yl[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * (self.lambdaDelta1bar[0])**(2) * self.lambdaSigma[2] * self.yl[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * (self.lambdaDelta1bar[0])**(2) * self.lambdaSigma[2] * self.yl[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * (self.lambdaDelta1bar[0])**(2) * self.lambdaSigma[2] * self.yl[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,0] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[2] * self.yl[2,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[2] * self.yl[2,0] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[2] * self.yl[2,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[2] * self.yl[2,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[2] * self.yl[2,0] + -1/8 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] + 5/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] + 1/32 * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * (self.lambdaDelta1bar[0])**(2) * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * (self.lambdaDelta1bar[0])**(2) * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] + 1/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] + 1/8 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] + 3/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] + -3/32 * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] + 1/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * (self.lambdaDelta1bar[0])**(2) * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] + 1/32 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] + 1/32 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] + 1/32 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] + -3/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + -1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + 3/16 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + 1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + -3/16 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + -1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + -11/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + -5/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + 1/32 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + -5/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + -3/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + 1/32 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + 1/16 * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + 1/16 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + -3/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + -1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * (self.lambdaDelta1bar[1])**(2) * self.lambdaSigma[2] * self.yl[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * (self.lambdaDelta1bar[1])**(2) * self.lambdaSigma[2] * self.yl[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * (self.lambdaDelta1bar[1])**(2) * self.lambdaSigma[2] * self.yl[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * (self.lambdaDelta1bar[1])**(2) * self.lambdaSigma[2] * self.yl[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * (self.lambdaDelta1bar[1])**(2) * self.lambdaSigma[2] * self.yl[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,1] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[2] * self.yl[2,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[2] * self.yl[2,1] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[2] * self.yl[2,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[2] * self.yl[2,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[2] * self.yl[2,1] + -1/8 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] + 5/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] + 1/32 * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * (self.lambdaDelta1bar[1])**(2) * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * (self.lambdaDelta1bar[1])**(2) * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] + 1/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] + 1/8 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] + 3/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] + -3/32 * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] + 1/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * (self.lambdaDelta1bar[1])**(2) * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] + 1/32 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] + 1/32 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] + 1/32 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] + -3/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + -1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + 3/16 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + 1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + -3/16 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + -1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + -11/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + -5/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + 1/32 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + -5/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + -3/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + 1/32 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + 1/16 * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + 1/16 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + -3/64 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + -1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * (self.lambdaDelta1bar[2])**(2) * self.lambdaSigma[2] * self.yl[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * (self.lambdaDelta1bar[2])**(2) * self.lambdaSigma[2] * self.yl[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * (self.lambdaDelta1bar[2])**(2) * self.lambdaSigma[2] * self.yl[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * (self.lambdaDelta1bar[2])**(2) * self.lambdaSigma[2] * self.yl[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * (self.lambdaDelta1bar[2])**(2) * self.lambdaSigma[2] * self.yl[2,2] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[2] * self.yl[2,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[2] * self.yl[2,2] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[2] * self.yl[2,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[2] * self.yl[2,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[2] * self.yl[2,2] + -1/8 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] + 5/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] + 1/32 * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * (self.lambdaDelta1bar[2])**(2) * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * (self.lambdaDelta1bar[2])**(2) * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] + 1/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] + 1/8 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] + 3/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] + -3/32 * self.lam * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] + 1/32 * self.lam * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * (self.lambdaDelta1bar[2])**(2) * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] + 1/32 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] + 1/32 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] + 1/32 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] + -1/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 3/16 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + -3/16 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + -1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + -11/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + -5/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 1/32 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + -5/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + -3/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 1/32 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 1/32 * self.lam * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + -1/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * self.lambdaDelta1bar[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * self.lambdaDelta1bar[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * self.lambdaDelta1bar[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * self.lambdaDelta1bar[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * self.lambdaDelta1bar[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[0] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[0] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[0] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[0] * self.ylbar[0,0] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[0] * (self.lambdaSigmabar[0])**(2) * self.ylbar[0,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[0] * (self.lambdaSigmabar[0])**(2) * self.ylbar[0,0] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[0] * (self.lambdaSigmabar[0])**(2) * self.ylbar[0,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[0] * (self.lambdaSigmabar[0])**(2) * self.ylbar[0,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[0] * (self.lambdaSigmabar[0])**(2) * self.ylbar[0,0] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.ylbar[0,0] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.ylbar[0,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.ylbar[0,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.ylbar[0,0] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.ylbar[0,0] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.ylbar[0,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.ylbar[0,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.ylbar[0,0] + -1/8 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + 1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + 5/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + 1/32 * self.lam * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * self.lambdaDelta1bar[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * self.lambdaDelta1bar[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[0] * (self.lambdaSigmabar[0])**(2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + 1/8 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + 3/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * self.lambdaDelta1bar[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[0] * (self.lambdaSigmabar[0])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + 1/32 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[0] * (self.lambdaSigmabar[0])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + 1/32 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + 1/32 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] + -3/16 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,0] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * (self.lambdaDelta1bar[0])**(2) * self.yl[0,0] * self.ylbar[0,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.yl[0,0] * self.ylbar[0,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.yl[0,0] * self.ylbar[0,0] + -7/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,0] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,0] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,0] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,0] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,0] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) * self.yl[0,0] * self.ylbar[0,0] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[0,0] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[0,0] + -1/8 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] + -1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * (self.yl[0,0])**(2) * self.ylbar[0,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * (self.yl[0,0])**(2) * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * (self.yl[0,0])**(2) * self.ylbar[0,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * (self.yl[0,0])**(2) * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * (self.yl[0,0])**(2) * self.ylbar[0,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * (self.yl[0,0])**(2) * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[0,0])**(2) * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[0,0])**(2) * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[0,0])**(2) * self.ylbar[0,0] + -3/16 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,0] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * (self.lambdaDelta1bar[1])**(2) * self.yl[0,1] * self.ylbar[0,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.yl[0,1] * self.ylbar[0,0] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,0] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,0] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,0] + -1/8 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,0] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,0] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,0] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] + -3/16 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,0] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * (self.lambdaDelta1bar[2])**(2) * self.yl[0,2] * self.ylbar[0,0] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,0] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,0] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,0] + -1/8 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,0] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,0] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,0] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] + -7/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * (self.lambdaSigmabar[0])**(2) * self.yl[1,0] * self.ylbar[0,0] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[0,0] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[0,0] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,0] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,0] + -1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,0] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,0] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,0] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,0] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,0] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,0] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,0] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,0] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,0] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,0] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,0] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,0] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,0] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,0] + -7/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * (self.lambdaSigmabar[0])**(2) * self.yl[2,0] * self.ylbar[0,0] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[0,0] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[0,0] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,0] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,0] + -1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,0] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,0] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,0] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,0] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,0] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,0] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,0] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,0] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,0] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,0] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,0] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,0] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,0] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,0] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[0,0] * (self.ylbar[0,0])**(2) + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[0,0] * (self.ylbar[0,0])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[0,0] * (self.ylbar[0,0])**(2) + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[0,0] * (self.ylbar[0,0])**(2) + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[0,0] * (self.ylbar[0,0])**(2) + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[0,0] * (self.ylbar[0,0])**(2) + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * (self.ylbar[0,0])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * (self.ylbar[0,0])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * (self.ylbar[0,0])**(2) + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * (self.yl[0,0])**(2) * (self.ylbar[0,0])**(2) + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * (self.yl[0,0])**(2) * (self.ylbar[0,0])**(2) + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * (self.yl[0,0])**(2) * (self.ylbar[0,0])**(2) + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * (self.yl[0,0])**(2) * (self.ylbar[0,0])**(2) + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[0,0])**(2) * (self.ylbar[0,0])**(2) + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[0,0])**(2) * (self.ylbar[0,0])**(2) + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,0] * self.yl[0,1] * (self.ylbar[0,0])**(2) + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,0] * self.yl[0,1] * (self.ylbar[0,0])**(2) + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,1] * (self.ylbar[0,0])**(2) + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,0] * self.yl[0,2] * (self.ylbar[0,0])**(2) + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,0] * self.yl[0,2] * (self.ylbar[0,0])**(2) + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,2] * (self.ylbar[0,0])**(2) + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[0,0] * self.yl[1,0] * (self.ylbar[0,0])**(2) + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[0,0] * self.yl[1,0] * (self.ylbar[0,0])**(2) + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,0] * (self.ylbar[0,0])**(2) + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[0,0] * self.yl[2,0] * (self.ylbar[0,0])**(2) + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[0,0] * self.yl[2,0] * (self.ylbar[0,0])**(2) + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,0] * (self.ylbar[0,0])**(2) + -1/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 3/16 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + -3/16 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + -1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + -11/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + -5/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 1/32 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + -5/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + -3/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 1/32 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 1/32 * self.lam * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + -1/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[0] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[0] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * self.lambdaDelta1bar[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * self.lambdaDelta1bar[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * self.lambdaDelta1bar[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * self.lambdaDelta1bar[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * self.lambdaDelta1bar[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[0] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[0] * self.ylbar[0,1] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[0] * (self.lambdaSigmabar[0])**(2) * self.ylbar[0,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[0] * (self.lambdaSigmabar[0])**(2) * self.ylbar[0,1] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[0] * (self.lambdaSigmabar[0])**(2) * self.ylbar[0,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[0] * (self.lambdaSigmabar[0])**(2) * self.ylbar[0,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[0] * (self.lambdaSigmabar[0])**(2) * self.ylbar[0,1] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.ylbar[0,1] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.ylbar[0,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.ylbar[0,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.ylbar[0,1] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.ylbar[0,1] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.ylbar[0,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.ylbar[0,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.ylbar[0,1] + -1/8 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + 1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + 5/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + 1/32 * self.lam * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * self.lambdaDelta1bar[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * self.lambdaDelta1bar[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[0] * (self.lambdaSigmabar[0])**(2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + 1/8 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + 3/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * self.lambdaDelta1bar[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[0] * (self.lambdaSigmabar[0])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + 1/32 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[0] * (self.lambdaSigmabar[0])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + 1/32 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + 1/32 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] + -3/16 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,1] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * (self.lambdaDelta1bar[0])**(2) * self.yl[0,0] * self.ylbar[0,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.yl[0,0] * self.ylbar[0,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.yl[0,0] * self.ylbar[0,1] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,1] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,1] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,1] + -1/8 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,1] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,1] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,1] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,1] + -3/16 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,1] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * (self.lambdaDelta1bar[1])**(2) * self.yl[0,1] * self.ylbar[0,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.yl[0,1] * self.ylbar[0,1] + -7/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,1] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,1] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,1] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,1] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,1] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) * self.yl[0,1] * self.ylbar[0,1] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[0,1] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[0,1] + -1/8 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] + -1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * (self.yl[0,1])**(2) * self.ylbar[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * (self.yl[0,1])**(2) * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * (self.yl[0,1])**(2) * self.ylbar[0,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * (self.yl[0,1])**(2) * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * (self.yl[0,1])**(2) * self.ylbar[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * (self.yl[0,1])**(2) * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[0,1])**(2) * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[0,1])**(2) * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[0,1])**(2) * self.ylbar[0,1] + -3/16 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,1] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * (self.lambdaDelta1bar[2])**(2) * self.yl[0,2] * self.ylbar[0,1] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,1] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,1] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,1] + -1/8 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,1] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,1] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,1] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,1] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,1] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,1] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,1] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,1] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,1] + -7/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * (self.lambdaSigmabar[0])**(2) * self.yl[1,1] * self.ylbar[0,1] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[0,1] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[0,1] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,1] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,1] + -1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,1] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,1] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,1] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,1] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,1] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,1] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,1] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,1] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,1] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,1] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,1] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,1] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,1] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,1] + -7/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * (self.lambdaSigmabar[0])**(2) * self.yl[2,1] * self.ylbar[0,1] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[0,1] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[0,1] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,1] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,1] + -1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,1] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,1] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,1] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,1] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,1] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,1] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,1] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[0,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * (self.yl[0,0])**(2) * self.ylbar[0,0] * self.ylbar[0,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * (self.yl[0,0])**(2) * self.ylbar[0,0] * self.ylbar[0,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[0,0])**(2) * self.ylbar[0,0] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,1] + -1/8 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,1] + -1/8 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,1] + 1/8 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * (self.yl[0,1])**(2) * self.ylbar[0,0] * self.ylbar[0,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * (self.yl[0,1])**(2) * self.ylbar[0,0] * self.ylbar[0,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[0,1])**(2) * self.ylbar[0,0] * self.ylbar[0,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[0,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[0,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,0] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,0] * self.ylbar[0,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,0] * self.ylbar[0,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[0,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[0,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,0] * self.ylbar[0,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,0] * self.ylbar[0,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,0] * self.ylbar[0,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[0,1] * (self.ylbar[0,1])**(2) + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[0,1] * (self.ylbar[0,1])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[0,1] * (self.ylbar[0,1])**(2) + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[0,1] * (self.ylbar[0,1])**(2) + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[0,1] * (self.ylbar[0,1])**(2) + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[0,1] * (self.ylbar[0,1])**(2) + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * (self.ylbar[0,1])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * (self.ylbar[0,1])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * (self.ylbar[0,1])**(2) + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[0,1] * (self.ylbar[0,1])**(2) + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[0,1] * (self.ylbar[0,1])**(2) + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,1] * (self.ylbar[0,1])**(2) + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * (self.yl[0,1])**(2) * (self.ylbar[0,1])**(2) + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * (self.yl[0,1])**(2) * (self.ylbar[0,1])**(2) + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * (self.yl[0,1])**(2) * (self.ylbar[0,1])**(2) + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * (self.yl[0,1])**(2) * (self.ylbar[0,1])**(2) + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[0,1])**(2) * (self.ylbar[0,1])**(2) + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[0,1])**(2) * (self.ylbar[0,1])**(2) + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,1] * self.yl[0,2] * (self.ylbar[0,1])**(2) + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,1] * self.yl[0,2] * (self.ylbar[0,1])**(2) + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[0,2] * (self.ylbar[0,1])**(2) + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[0,1] * self.yl[1,1] * (self.ylbar[0,1])**(2) + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[0,1] * self.yl[1,1] * (self.ylbar[0,1])**(2) + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,1] * (self.ylbar[0,1])**(2) + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[0,1] * self.yl[2,1] * (self.ylbar[0,1])**(2) + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[0,1] * self.yl[2,1] * (self.ylbar[0,1])**(2) + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,1] * (self.ylbar[0,1])**(2) + -1/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 3/16 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + -3/16 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + -1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + -11/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + -5/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 1/32 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + -5/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + -3/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 1/32 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 1/32 * self.lam * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + -1/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[0] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[0] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[0] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[0] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * self.lambdaDelta1bar[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * self.lambdaDelta1bar[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * self.lambdaDelta1bar[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * self.lambdaDelta1bar[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * self.lambdaDelta1bar[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[0] * (self.lambdaSigmabar[0])**(2) * self.ylbar[0,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[0] * (self.lambdaSigmabar[0])**(2) * self.ylbar[0,2] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[0] * (self.lambdaSigmabar[0])**(2) * self.ylbar[0,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[0] * (self.lambdaSigmabar[0])**(2) * self.ylbar[0,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[0] * (self.lambdaSigmabar[0])**(2) * self.ylbar[0,2] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.ylbar[0,2] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.ylbar[0,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.ylbar[0,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.ylbar[0,2] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.ylbar[0,2] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.ylbar[0,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.ylbar[0,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.ylbar[0,2] + -1/8 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + 1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + 5/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + 1/32 * self.lam * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * self.lambdaDelta1bar[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * self.lambdaDelta1bar[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[0] * (self.lambdaSigmabar[0])**(2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + 1/8 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + 3/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * self.lambdaDelta1bar[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[0] * (self.lambdaSigmabar[0])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + 1/32 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[0] * (self.lambdaSigmabar[0])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + 1/32 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + 1/32 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] + -3/16 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,2] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * (self.lambdaDelta1bar[0])**(2) * self.yl[0,0] * self.ylbar[0,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.yl[0,0] * self.ylbar[0,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.yl[0,0] * self.ylbar[0,2] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,2] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,2] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,2] + -1/8 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,2] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,2] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,2] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,2] + -3/16 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,2] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * (self.lambdaDelta1bar[1])**(2) * self.yl[0,1] * self.ylbar[0,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.yl[0,1] * self.ylbar[0,2] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,2] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,2] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,2] + -1/8 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,2] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,2] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,2] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,2] + -3/16 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,2] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * (self.lambdaDelta1bar[2])**(2) * self.yl[0,2] * self.ylbar[0,2] + -7/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,2] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,2] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,2] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,2] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) * self.yl[0,2] * self.ylbar[0,2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[0,2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[0,2] + -1/8 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] + -1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * (self.yl[0,2])**(2) * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * (self.yl[0,2])**(2) * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * (self.yl[0,2])**(2) * self.ylbar[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * (self.yl[0,2])**(2) * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * (self.yl[0,2])**(2) * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * (self.yl[0,2])**(2) * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[0,2])**(2) * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[0,2])**(2) * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[0,2])**(2) * self.ylbar[0,2] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,2] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,2] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,2] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,2] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,2] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,2] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,2] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,2] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,2] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,2] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,2] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,2] + -7/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * (self.lambdaSigmabar[0])**(2) * self.yl[1,2] * self.ylbar[0,2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[0,2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[0,2] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,2] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,2] + -1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,2] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,2] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,2] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,2] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,2] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,2] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,2] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,2] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,2] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,2] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,2] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,2] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,2] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,2] + -7/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * (self.lambdaSigmabar[0])**(2) * self.yl[2,2] * self.ylbar[0,2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[0,2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[0,2] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,2] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,2] + -1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,2] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,2] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[0,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * (self.yl[0,0])**(2) * self.ylbar[0,0] * self.ylbar[0,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * (self.yl[0,0])**(2) * self.ylbar[0,0] * self.ylbar[0,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[0,0])**(2) * self.ylbar[0,0] * self.ylbar[0,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] + -1/8 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] + -1/8 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] + 1/8 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[0,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * (self.yl[0,2])**(2) * self.ylbar[0,0] * self.ylbar[0,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * (self.yl[0,2])**(2) * self.ylbar[0,0] * self.ylbar[0,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[0,2])**(2) * self.ylbar[0,0] * self.ylbar[0,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[0,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[0,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,0] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,0] * self.ylbar[0,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,0] * self.ylbar[0,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[0,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[0,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,0] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,0] * self.ylbar[0,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,0] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[0,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[0,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[0,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[0,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * (self.yl[0,1])**(2) * self.ylbar[0,1] * self.ylbar[0,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * (self.yl[0,1])**(2) * self.ylbar[0,1] * self.ylbar[0,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[0,1])**(2) * self.ylbar[0,1] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] + -1/8 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] + -1/8 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] + 1/8 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[0,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * (self.yl[0,2])**(2) * self.ylbar[0,1] * self.ylbar[0,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * (self.yl[0,2])**(2) * self.ylbar[0,1] * self.ylbar[0,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[0,2])**(2) * self.ylbar[0,1] * self.ylbar[0,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[0,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[0,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,1] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,1] * self.ylbar[0,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,1] * self.ylbar[0,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[0,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[0,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,1] * self.ylbar[0,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,1] * self.ylbar[0,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,1] * self.ylbar[0,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[0,2] * (self.ylbar[0,2])**(2) + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[0,2] * (self.ylbar[0,2])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[0,2] * (self.ylbar[0,2])**(2) + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[0,2] * (self.ylbar[0,2])**(2) + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[0,2] * (self.ylbar[0,2])**(2) + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[0,2] * (self.ylbar[0,2])**(2) + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * (self.ylbar[0,2])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * (self.ylbar[0,2])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * (self.ylbar[0,2])**(2) + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[0,2] * (self.ylbar[0,2])**(2) + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[0,2] * (self.ylbar[0,2])**(2) + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,2] * (self.ylbar[0,2])**(2) + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[0,2] * (self.ylbar[0,2])**(2) + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[0,2] * (self.ylbar[0,2])**(2) + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[0,2] * (self.ylbar[0,2])**(2) + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * (self.yl[0,2])**(2) * (self.ylbar[0,2])**(2) + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * (self.yl[0,2])**(2) * (self.ylbar[0,2])**(2) + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * (self.yl[0,2])**(2) * (self.ylbar[0,2])**(2) + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * (self.yl[0,2])**(2) * (self.ylbar[0,2])**(2) + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[0,2])**(2) * (self.ylbar[0,2])**(2) + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[0,2])**(2) * (self.ylbar[0,2])**(2) + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[0,2] * self.yl[1,2] * (self.ylbar[0,2])**(2) + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[0,2] * self.yl[1,2] * (self.ylbar[0,2])**(2) + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,2] * (self.ylbar[0,2])**(2) + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[0,2] * self.yl[2,2] * (self.ylbar[0,2])**(2) + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[0,2] * self.yl[2,2] * (self.ylbar[0,2])**(2) + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,2] * (self.ylbar[0,2])**(2) + -1/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 3/16 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + -3/16 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + -11/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + -5/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 1/32 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + -5/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + -3/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 1/32 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 1/32 * self.lam * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + -1/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * self.lambdaDelta1bar[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * self.lambdaDelta1bar[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * self.lambdaDelta1bar[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * self.lambdaDelta1bar[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * self.lambdaDelta1bar[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[1] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[1] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[1] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[1] * (self.lambdaSigmabar[1])**(2) * self.ylbar[1,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[1] * (self.lambdaSigmabar[1])**(2) * self.ylbar[1,0] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[1] * (self.lambdaSigmabar[1])**(2) * self.ylbar[1,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[1] * (self.lambdaSigmabar[1])**(2) * self.ylbar[1,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[1] * (self.lambdaSigmabar[1])**(2) * self.ylbar[1,0] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.ylbar[1,0] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.ylbar[1,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.ylbar[1,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.ylbar[1,0] + -1/8 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + 1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + 5/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + 1/32 * self.lam * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * self.lambdaDelta1bar[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * self.lambdaDelta1bar[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[1] * (self.lambdaSigmabar[1])**(2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + 1/8 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + 3/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * self.lambdaDelta1bar[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + 1/32 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[1] * (self.lambdaSigmabar[1])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + 1/32 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[1] * (self.lambdaSigmabar[1])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + 1/32 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] + -7/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[1,0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[1,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[1,0] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[1,0] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[1,0] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[1,0] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[1,0] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[1,0] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * (self.lambdaSigmabar[1])**(2) * self.yl[0,0] * self.ylbar[1,0] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[1,0] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[1,0] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[1,0] + -1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[1,0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[1,0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[1,0] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[1,0] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[1,0] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[1,0] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[1,0] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[1,0] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[1,0] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[1,0] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[1,0] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[1,0] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[1,0] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[1,0] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[1,0] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[1,0] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[1,0] + -3/16 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,0] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * (self.lambdaDelta1bar[0])**(2) * self.yl[1,0] * self.ylbar[1,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.yl[1,0] * self.ylbar[1,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.yl[1,0] * self.ylbar[1,0] + -7/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,0] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,0] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,0] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,0] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,0] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,0] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) * self.yl[1,0] * self.ylbar[1,0] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[1,0] + -1/8 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] + -1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[1,0] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[1,0] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[1,0] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[1,0] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[1,0] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[1,0] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,0] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,0] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,0] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * (self.yl[1,0])**(2) * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * (self.yl[1,0])**(2) * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * (self.yl[1,0])**(2) * self.ylbar[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * (self.yl[1,0])**(2) * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * (self.yl[1,0])**(2) * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * (self.yl[1,0])**(2) * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[1,0])**(2) * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[1,0])**(2) * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[1,0])**(2) * self.ylbar[1,0] + -3/16 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,0] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * (self.lambdaDelta1bar[1])**(2) * self.yl[1,1] * self.ylbar[1,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.yl[1,1] * self.ylbar[1,0] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,0] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,0] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,0] + -1/8 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,0] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,0] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,0] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[1,1] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[1,1] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[1,1] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[1,1] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[1,1] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[1,1] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,1] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,1] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,1] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] + -3/16 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,0] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * (self.lambdaDelta1bar[2])**(2) * self.yl[1,2] * self.ylbar[1,0] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,0] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,0] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,0] + -1/8 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,0] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,0] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,0] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[1,2] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[1,2] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[1,2] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[1,2] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[1,2] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[1,2] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,2] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,2] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,2] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] + -7/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * (self.lambdaSigmabar[1])**(2) * self.yl[2,0] * self.ylbar[1,0] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[1,0] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,0] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,0] + -1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,0] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,0] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,0] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,0] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,0] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,0] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,0] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,0] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,0] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,0] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,0] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,0] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,0] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[1,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * (self.yl[0,0])**(2) * self.ylbar[0,0] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * (self.yl[0,0])**(2) * self.ylbar[0,0] * self.ylbar[1,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[0,0])**(2) * self.ylbar[0,0] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + -1/4 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + -1/4 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + 1/4 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * (self.yl[1,0])**(2) * self.ylbar[0,0] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * (self.yl[1,0])**(2) * self.ylbar[0,0] * self.ylbar[1,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[1,0])**(2) * self.ylbar[0,0] * self.ylbar[1,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,0] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,0] * self.ylbar[1,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,0] * self.ylbar[1,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,0] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,0] * self.ylbar[1,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,0] * self.ylbar[1,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[1,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[1,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[1,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[1,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[1,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[0,1] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[0,1] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[0,1] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[0,1] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[0,1] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[0,1] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,1] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,1] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,1] * self.ylbar[1,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[1,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[1,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,1] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,1] * self.ylbar[1,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,1] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,1] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,1] * self.ylbar[1,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,1] * self.ylbar[1,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[1,1] * self.yl[2,0] * self.ylbar[0,1] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[1,1] * self.yl[2,0] * self.ylbar[0,1] * self.ylbar[1,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,0] * self.ylbar[0,1] * self.ylbar[1,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[1,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[0,2] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[0,2] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[0,2] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[0,2] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[0,2] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[0,2] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,2] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,2] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,2] * self.ylbar[1,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[1,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[1,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,2] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,2] * self.ylbar[1,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,2] * self.ylbar[1,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,2] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,2] * self.ylbar[1,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,2] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[1,2] * self.yl[2,0] * self.ylbar[0,2] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[1,2] * self.yl[2,0] * self.ylbar[0,2] * self.ylbar[1,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,0] * self.ylbar[0,2] * self.ylbar[1,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[1,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[1,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[1,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[1,0] * (self.ylbar[1,0])**(2) + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[1,0] * (self.ylbar[1,0])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[1,0] * (self.ylbar[1,0])**(2) + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[1,0] * (self.ylbar[1,0])**(2) + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[1,0] * (self.ylbar[1,0])**(2) + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[1,0] * (self.ylbar[1,0])**(2) + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * (self.ylbar[1,0])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * (self.ylbar[1,0])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * (self.ylbar[1,0])**(2) + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[1,0] * (self.ylbar[1,0])**(2) + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[1,0] * (self.ylbar[1,0])**(2) + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,0] * (self.ylbar[1,0])**(2) + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * (self.yl[1,0])**(2) * (self.ylbar[1,0])**(2) + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * (self.yl[1,0])**(2) * (self.ylbar[1,0])**(2) + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * (self.yl[1,0])**(2) * (self.ylbar[1,0])**(2) + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * (self.yl[1,0])**(2) * (self.ylbar[1,0])**(2) + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[1,0])**(2) * (self.ylbar[1,0])**(2) + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[1,0])**(2) * (self.ylbar[1,0])**(2) + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,0] * self.yl[1,1] * (self.ylbar[1,0])**(2) + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,0] * self.yl[1,1] * (self.ylbar[1,0])**(2) + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,1] * (self.ylbar[1,0])**(2) + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,0] * self.yl[1,2] * (self.ylbar[1,0])**(2) + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,0] * self.yl[1,2] * (self.ylbar[1,0])**(2) + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,2] * (self.ylbar[1,0])**(2) + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[1,0] * self.yl[2,0] * (self.ylbar[1,0])**(2) + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[1,0] * self.yl[2,0] * (self.ylbar[1,0])**(2) + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,0] * (self.ylbar[1,0])**(2) + -1/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 3/16 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + -3/16 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + -11/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + -5/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 1/32 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + -5/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + -3/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 1/32 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 1/32 * self.lam * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + -1/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[1] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[1] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * self.lambdaDelta1bar[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * self.lambdaDelta1bar[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * self.lambdaDelta1bar[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * self.lambdaDelta1bar[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * self.lambdaDelta1bar[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[1] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.ylbar[1,1] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.ylbar[1,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.ylbar[1,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.ylbar[1,1] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[1] * (self.lambdaSigmabar[1])**(2) * self.ylbar[1,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[1] * (self.lambdaSigmabar[1])**(2) * self.ylbar[1,1] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[1] * (self.lambdaSigmabar[1])**(2) * self.ylbar[1,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[1] * (self.lambdaSigmabar[1])**(2) * self.ylbar[1,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[1] * (self.lambdaSigmabar[1])**(2) * self.ylbar[1,1] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.ylbar[1,1] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.ylbar[1,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.ylbar[1,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.ylbar[1,1] + -1/8 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + 1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + 5/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + 1/32 * self.lam * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * self.lambdaDelta1bar[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * self.lambdaDelta1bar[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[1] * (self.lambdaSigmabar[1])**(2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + 1/8 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + 3/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * self.lambdaDelta1bar[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + 1/32 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[1] * (self.lambdaSigmabar[1])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + 1/32 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[1] * (self.lambdaSigmabar[1])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + 1/32 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[1,1] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[1,1] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[1,1] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[1,1] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[1,1] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[1,1] + -7/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[1,1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[1,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[1,1] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[1,1] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[1,1] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[1,1] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[1,1] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[1,1] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * (self.lambdaSigmabar[1])**(2) * self.yl[0,1] * self.ylbar[1,1] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[1,1] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[1,1] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[1,1] + -1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[1,1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[1,1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[1,1] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[1,1] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[1,1] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[1,1] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[1,1] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[1,1] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[1,1] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[1,1] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[1,1] + -3/16 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,1] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * (self.lambdaDelta1bar[0])**(2) * self.yl[1,0] * self.ylbar[1,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.yl[1,0] * self.ylbar[1,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.yl[1,0] * self.ylbar[1,1] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,1] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,1] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,1] + -1/8 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,1] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,1] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,1] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[1,0] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[1,0] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[1,0] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[1,0] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[1,0] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[1,0] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,0] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,0] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,0] * self.ylbar[1,1] + -3/16 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,1] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * (self.lambdaDelta1bar[1])**(2) * self.yl[1,1] * self.ylbar[1,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.yl[1,1] * self.ylbar[1,1] + -7/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,1] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,1] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,1] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,1] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,1] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,1] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) * self.yl[1,1] * self.ylbar[1,1] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[1,1] + -1/8 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] + -1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[1,1] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[1,1] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[1,1] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[1,1] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[1,1] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[1,1] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,1] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,1] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,1] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * (self.yl[1,1])**(2) * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * (self.yl[1,1])**(2) * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * (self.yl[1,1])**(2) * self.ylbar[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * (self.yl[1,1])**(2) * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * (self.yl[1,1])**(2) * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * (self.yl[1,1])**(2) * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[1,1])**(2) * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[1,1])**(2) * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[1,1])**(2) * self.ylbar[1,1] + -3/16 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,1] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * (self.lambdaDelta1bar[2])**(2) * self.yl[1,2] * self.ylbar[1,1] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,1] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,1] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,1] + -1/8 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,1] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,1] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,1] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[1,2] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[1,2] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[1,2] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[1,2] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[1,2] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[1,2] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,2] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,2] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,2] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,1] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,1] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,1] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,1] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,1] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,1] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,1] + -7/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * (self.lambdaSigmabar[1])**(2) * self.yl[2,1] * self.ylbar[1,1] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[1,1] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,1] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,1] + -1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,1] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,1] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,1] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,1] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,1] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,1] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,1] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[1,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[1,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,0] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,0] * self.ylbar[1,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,0] * self.ylbar[1,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.yl[1,1] * self.ylbar[0,0] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.yl[1,1] * self.ylbar[0,0] * self.ylbar[1,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,1] * self.ylbar[0,0] * self.ylbar[1,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,0] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,0] * self.ylbar[1,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,0] * self.ylbar[1,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[1,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[1,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[1,0] * self.yl[2,1] * self.ylbar[0,0] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[1,0] * self.yl[2,1] * self.ylbar[0,0] * self.ylbar[1,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,1] * self.ylbar[0,0] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[1,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * (self.yl[0,1])**(2) * self.ylbar[0,1] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * (self.yl[0,1])**(2) * self.ylbar[0,1] * self.ylbar[1,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[0,1])**(2) * self.ylbar[0,1] * self.ylbar[1,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,1] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,1] * self.ylbar[1,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,1] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + -1/4 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + -1/4 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + 1/4 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * (self.yl[1,1])**(2) * self.ylbar[0,1] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * (self.yl[1,1])**(2) * self.ylbar[0,1] * self.ylbar[1,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[1,1])**(2) * self.ylbar[0,1] * self.ylbar[1,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,1] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,1] * self.ylbar[1,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,1] * self.ylbar[1,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[1,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[1,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[1,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[1,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[1,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[0,2] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[0,2] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[0,2] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[0,2] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[0,2] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[0,2] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,2] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,2] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,2] * self.ylbar[1,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[1,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[1,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,2] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,2] * self.ylbar[1,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,2] * self.ylbar[1,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,2] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,2] * self.ylbar[1,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,2] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[1,2] * self.yl[2,1] * self.ylbar[0,2] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[1,2] * self.yl[2,1] * self.ylbar[0,2] * self.ylbar[1,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,1] * self.ylbar[0,2] * self.ylbar[1,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[1,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[1,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[1,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[1,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * (self.yl[1,0])**(2) * self.ylbar[1,0] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * (self.yl[1,0])**(2) * self.ylbar[1,0] * self.ylbar[1,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[1,0])**(2) * self.ylbar[1,0] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,1] + -1/8 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,1] + 1/8 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * (self.yl[1,1])**(2) * self.ylbar[1,0] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * (self.yl[1,1])**(2) * self.ylbar[1,0] * self.ylbar[1,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[1,1])**(2) * self.ylbar[1,0] * self.ylbar[1,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[1,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[1,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,0] * self.ylbar[1,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,0] * self.ylbar[1,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,0] * self.ylbar[1,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[1,1] * (self.ylbar[1,1])**(2) + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[1,1] * (self.ylbar[1,1])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[1,1] * (self.ylbar[1,1])**(2) + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[1,1] * (self.ylbar[1,1])**(2) + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[1,1] * (self.ylbar[1,1])**(2) + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[1,1] * (self.ylbar[1,1])**(2) + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * (self.ylbar[1,1])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * (self.ylbar[1,1])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * (self.ylbar[1,1])**(2) + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.yl[1,1] * (self.ylbar[1,1])**(2) + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.yl[1,1] * (self.ylbar[1,1])**(2) + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,1] * (self.ylbar[1,1])**(2) + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[1,1] * (self.ylbar[1,1])**(2) + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[1,1] * (self.ylbar[1,1])**(2) + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,1] * (self.ylbar[1,1])**(2) + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * (self.yl[1,1])**(2) * (self.ylbar[1,1])**(2) + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * (self.yl[1,1])**(2) * (self.ylbar[1,1])**(2) + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * (self.yl[1,1])**(2) * (self.ylbar[1,1])**(2) + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * (self.yl[1,1])**(2) * (self.ylbar[1,1])**(2) + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[1,1])**(2) * (self.ylbar[1,1])**(2) + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[1,1])**(2) * (self.ylbar[1,1])**(2) + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,1] * self.yl[1,2] * (self.ylbar[1,1])**(2) + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,1] * self.yl[1,2] * (self.ylbar[1,1])**(2) + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[1,2] * (self.ylbar[1,1])**(2) + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[1,1] * self.yl[2,1] * (self.ylbar[1,1])**(2) + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[1,1] * self.yl[2,1] * (self.ylbar[1,1])**(2) + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,1] * (self.ylbar[1,1])**(2) + -1/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 3/16 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + -3/16 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + -11/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + -5/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 1/32 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + -5/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + -3/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 1/32 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 1/32 * self.lam * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + -1/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[1] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[1] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[1] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[1] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * self.lambdaDelta1bar[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * self.lambdaDelta1bar[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * self.lambdaDelta1bar[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * self.lambdaDelta1bar[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * self.lambdaDelta1bar[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.ylbar[1,2] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.ylbar[1,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.ylbar[1,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.ylbar[1,2] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[1] * (self.lambdaSigmabar[1])**(2) * self.ylbar[1,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[1] * (self.lambdaSigmabar[1])**(2) * self.ylbar[1,2] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[1] * (self.lambdaSigmabar[1])**(2) * self.ylbar[1,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[1] * (self.lambdaSigmabar[1])**(2) * self.ylbar[1,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[1] * (self.lambdaSigmabar[1])**(2) * self.ylbar[1,2] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.ylbar[1,2] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.ylbar[1,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.ylbar[1,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.ylbar[1,2] + -1/8 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + 1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + 5/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + 1/32 * self.lam * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * self.lambdaDelta1bar[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * self.lambdaDelta1bar[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[1] * (self.lambdaSigmabar[1])**(2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + 1/8 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + 3/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * self.lambdaDelta1bar[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + 1/32 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[1] * (self.lambdaSigmabar[1])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + 1/32 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[1] * (self.lambdaSigmabar[1])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + 1/32 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[1,2] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[1,2] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[1,2] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[1,2] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[1,2] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[1,2] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[1,2] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[1,2] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[1,2] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[1,2] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[1,2] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[1,2] + -7/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[1,2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[1,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[1,2] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[1,2] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[1,2] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[1,2] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[1,2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[1,2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * (self.lambdaSigmabar[1])**(2) * self.yl[0,2] * self.ylbar[1,2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[1,2] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[1,2] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[1,2] + -1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[1,2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[1,2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[1,2] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[1,2] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[1,2] + -3/16 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,2] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * (self.lambdaDelta1bar[0])**(2) * self.yl[1,0] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.yl[1,0] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.yl[1,0] * self.ylbar[1,2] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,2] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,2] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,2] + -1/8 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,2] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,2] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,2] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[1,0] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[1,0] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[1,0] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[1,0] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[1,0] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[1,0] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,0] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,0] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,0] * self.ylbar[1,2] + -3/16 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,2] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * (self.lambdaDelta1bar[1])**(2) * self.yl[1,1] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.yl[1,1] * self.ylbar[1,2] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,2] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,2] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,2] + -1/8 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,2] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,2] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,2] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[1,1] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[1,1] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[1,1] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[1,1] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[1,1] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[1,1] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,1] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,1] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,1] * self.ylbar[1,2] + -3/16 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,2] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * (self.lambdaDelta1bar[2])**(2) * self.yl[1,2] * self.ylbar[1,2] + -7/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,2] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,2] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,2] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,2] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) * self.yl[1,2] * self.ylbar[1,2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[1,2] + -1/8 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,2] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,2] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,2] + -1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,2] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,2] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[1,2] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[1,2] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[1,2] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[1,2] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[1,2] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[1,2] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,2] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,2] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,2] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * (self.yl[1,2])**(2) * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * (self.yl[1,2])**(2) * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * (self.yl[1,2])**(2) * self.ylbar[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * (self.yl[1,2])**(2) * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * (self.yl[1,2])**(2) * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * (self.yl[1,2])**(2) * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[1,2])**(2) * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[1,2])**(2) * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[1,2])**(2) * self.ylbar[1,2] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,2] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,2] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,2] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,2] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,2] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,2] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,2] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,2] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,2] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,2] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,2] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,2] + -7/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * (self.lambdaSigmabar[1])**(2) * self.yl[2,2] * self.ylbar[1,2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[1,2] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,2] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,2] + -1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,2] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,2] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[1,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[1,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[1,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,0] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,0] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,0] * self.ylbar[1,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,0] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,0] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,0] * self.ylbar[1,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.yl[1,2] * self.ylbar[0,0] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.yl[1,2] * self.ylbar[0,0] * self.ylbar[1,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,2] * self.ylbar[0,0] * self.ylbar[1,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[1,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[1,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[1,0] * self.yl[2,2] * self.ylbar[0,0] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[1,0] * self.yl[2,2] * self.ylbar[0,0] * self.ylbar[1,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,2] * self.ylbar[0,0] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[1,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[1,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[1,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,1] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,1] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,1] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[1,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,1] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,1] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,1] * self.ylbar[1,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.yl[1,2] * self.ylbar[0,1] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.yl[1,2] * self.ylbar[0,1] * self.ylbar[1,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[1,2] * self.ylbar[0,1] * self.ylbar[1,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[1,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[1,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[1,1] * self.yl[2,2] * self.ylbar[0,1] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[1,1] * self.yl[2,2] * self.ylbar[0,1] * self.ylbar[1,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,2] * self.ylbar[0,1] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[1,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * (self.yl[0,2])**(2) * self.ylbar[0,2] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * (self.yl[0,2])**(2) * self.ylbar[0,2] * self.ylbar[1,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[0,2])**(2) * self.ylbar[0,2] * self.ylbar[1,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,2] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,2] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,2] * self.ylbar[1,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,2] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,2] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,2] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + -1/4 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + -1/4 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + 1/4 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[1,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * (self.yl[1,2])**(2) * self.ylbar[0,2] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * (self.yl[1,2])**(2) * self.ylbar[0,2] * self.ylbar[1,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[1,2])**(2) * self.ylbar[0,2] * self.ylbar[1,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[1,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[1,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[1,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[1,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[1,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[1,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[1,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[1,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * (self.yl[1,0])**(2) * self.ylbar[1,0] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * (self.yl[1,0])**(2) * self.ylbar[1,0] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[1,0])**(2) * self.ylbar[1,0] * self.ylbar[1,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + -1/8 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + 1/8 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[1,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * (self.yl[1,2])**(2) * self.ylbar[1,0] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * (self.yl[1,2])**(2) * self.ylbar[1,0] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[1,2])**(2) * self.ylbar[1,0] * self.ylbar[1,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[1,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[1,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,0] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,0] * self.ylbar[1,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,0] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[1,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[1,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[1,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[1,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * (self.yl[1,1])**(2) * self.ylbar[1,1] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * (self.yl[1,1])**(2) * self.ylbar[1,1] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[1,1])**(2) * self.ylbar[1,1] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + -1/8 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + 1/8 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[1,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * (self.yl[1,2])**(2) * self.ylbar[1,1] * self.ylbar[1,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * (self.yl[1,2])**(2) * self.ylbar[1,1] * self.ylbar[1,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[1,2])**(2) * self.ylbar[1,1] * self.ylbar[1,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[1,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[1,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,1] * self.ylbar[1,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,1] * self.ylbar[1,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,1] * self.ylbar[1,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[1,2] * (self.ylbar[1,2])**(2) + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[1,2] * (self.ylbar[1,2])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[1,2] * (self.ylbar[1,2])**(2) + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[1,2] * (self.ylbar[1,2])**(2) + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[1,2] * (self.ylbar[1,2])**(2) + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[1,2] * (self.ylbar[1,2])**(2) + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * (self.ylbar[1,2])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * (self.ylbar[1,2])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * (self.ylbar[1,2])**(2) + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.yl[1,2] * (self.ylbar[1,2])**(2) + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.yl[1,2] * (self.ylbar[1,2])**(2) + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,2] * (self.ylbar[1,2])**(2) + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[1,2] * (self.ylbar[1,2])**(2) + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[1,2] * (self.ylbar[1,2])**(2) + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,2] * (self.ylbar[1,2])**(2) + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[1,2] * (self.ylbar[1,2])**(2) + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[1,2] * (self.ylbar[1,2])**(2) + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[1,2] * (self.ylbar[1,2])**(2) + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * (self.yl[1,2])**(2) * (self.ylbar[1,2])**(2) + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * (self.yl[1,2])**(2) * (self.ylbar[1,2])**(2) + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * (self.yl[1,2])**(2) * (self.ylbar[1,2])**(2) + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * (self.yl[1,2])**(2) * (self.ylbar[1,2])**(2) + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[1,2])**(2) * (self.ylbar[1,2])**(2) + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[1,2])**(2) * (self.ylbar[1,2])**(2) + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[1,2] * self.yl[2,2] * (self.ylbar[1,2])**(2) + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[1,2] * self.yl[2,2] * (self.ylbar[1,2])**(2) + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,2] * (self.ylbar[1,2])**(2) + -1/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 3/16 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + -3/16 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + -11/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + -5/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 1/32 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + -5/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + -3/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 1/32 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 1/32 * self.lam * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + -1/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * self.lambdaDelta1bar[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * self.lambdaDelta1bar[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * self.lambdaDelta1bar[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * self.lambdaDelta1bar[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * self.lambdaDelta1bar[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[2] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.ylbar[2,0] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.ylbar[2,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.ylbar[2,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.ylbar[2,0] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[2] * (self.lambdaSigmabar[2])**(2) * self.ylbar[2,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[2] * (self.lambdaSigmabar[2])**(2) * self.ylbar[2,0] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[2] * (self.lambdaSigmabar[2])**(2) * self.ylbar[2,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[2] * (self.lambdaSigmabar[2])**(2) * self.ylbar[2,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[2] * (self.lambdaSigmabar[2])**(2) * self.ylbar[2,0] + -1/8 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + 1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + 5/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + 1/32 * self.lam * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * self.lambdaDelta1bar[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * self.lambdaDelta1bar[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[2] * (self.lambdaSigmabar[2])**(2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + 1/8 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + 3/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * self.lambdaDelta1bar[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + 1/32 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + 1/32 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[2] * (self.lambdaSigmabar[2])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + 1/32 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[2] * (self.lambdaSigmabar[2])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] + -7/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,0] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,0] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,0] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,0] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,0] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,0] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,0] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * (self.lambdaSigmabar[2])**(2) * self.yl[0,0] * self.ylbar[2,0] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[2,0] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[2,0] + -1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[2,0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[2,0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[2,0] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[2,0] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[2,0] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,0] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,0] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,0] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[2,0] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[2,0] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[2,0] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,0] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,0] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,0] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[2,0] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[2,0] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[2,0] + -7/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,0] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,0] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,0] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,0] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,0] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,0] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,0] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * (self.lambdaSigmabar[2])**(2) * self.yl[1,0] * self.ylbar[2,0] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[2,0] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[2,0] + -1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[2,0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[2,0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[2,0] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[2,0] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[2,0] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,0] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,0] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,0] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[2,0] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[2,0] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[2,0] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,0] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,0] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,0] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[2,0] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[2,0] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[2,0] + -3/16 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,0] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * (self.lambdaDelta1bar[0])**(2) * self.yl[2,0] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.yl[2,0] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.yl[2,0] * self.ylbar[2,0] + -7/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) * self.yl[2,0] * self.ylbar[2,0] + -1/8 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] + -1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[2,0] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[2,0] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[2,0] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[2,0] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[2,0] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[2,0] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,0] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,0] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,0] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[2,0] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[2,0] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[2,0] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[2,0] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[2,0] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[2,0] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,0] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,0] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,0] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * (self.yl[2,0])**(2) * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * (self.yl[2,0])**(2) * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * (self.yl[2,0])**(2) * self.ylbar[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * (self.yl[2,0])**(2) * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * (self.yl[2,0])**(2) * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * (self.yl[2,0])**(2) * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[2,0])**(2) * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[2,0])**(2) * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[2,0])**(2) * self.ylbar[2,0] + -3/16 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,0] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * (self.lambdaDelta1bar[1])**(2) * self.yl[2,1] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.yl[2,1] * self.ylbar[2,0] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,0] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,0] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,0] + -1/8 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,0] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,0] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,0] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[2,1] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[2,1] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[2,1] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[2,1] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[2,1] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[2,1] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,1] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,1] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,1] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[2,1] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[2,1] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[2,1] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[2,1] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[2,1] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[2,1] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,1] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,1] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,1] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] + -3/16 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,0] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * (self.lambdaDelta1bar[2])**(2) * self.yl[2,2] * self.ylbar[2,0] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,0] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,0] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,0] + -1/8 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,0] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,0] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,0] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[2,2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[2,2] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[2,2] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[2,2] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[2,2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[2,2] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,2] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,2] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,2] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[2,2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[2,2] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[2,2] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[2,2] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[2,2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[2,2] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,2] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,2] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,2] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * (self.yl[0,0])**(2) * self.ylbar[0,0] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * (self.yl[0,0])**(2) * self.ylbar[0,0] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[0,0])**(2) * self.ylbar[0,0] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + -1/4 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + -1/4 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + 1/4 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * (self.yl[2,0])**(2) * self.ylbar[0,0] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * (self.yl[2,0])**(2) * self.ylbar[0,0] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[2,0])**(2) * self.ylbar[0,0] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,0] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,0] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,0] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,0] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,0] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,0] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[0,1] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[0,1] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[0,1] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[0,1] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[0,1] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[0,1] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,1] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,1] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,1] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,1] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,1] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,1] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,1] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,1] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,1] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[0,2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[0,2] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[0,2] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[0,2] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[0,2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[0,2] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,2] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,2] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,2] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,2] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,2] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,2] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,2] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,2] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,2] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,0] * self.ylbar[1,0] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * (self.yl[1,0])**(2) * self.ylbar[1,0] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * (self.yl[1,0])**(2) * self.ylbar[1,0] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[1,0])**(2) * self.ylbar[1,0] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + -1/4 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + -1/4 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + 1/4 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * (self.yl[2,0])**(2) * self.ylbar[1,0] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * (self.yl[2,0])**(2) * self.ylbar[1,0] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[2,0])**(2) * self.ylbar[1,0] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,0] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,0] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,0] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,0] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,0] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,0] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[1,1] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[1,1] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[1,1] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[1,1] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[1,1] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[1,1] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,1] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,1] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,1] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.yl[1,0] * self.ylbar[1,1] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.yl[1,0] * self.ylbar[1,1] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,0] * self.ylbar[1,1] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,1] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,1] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,1] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,1] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,1] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,1] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[1,2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[1,2] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[1,2] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[1,2] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[1,2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[1,2] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,2] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,2] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,2] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.yl[1,0] * self.ylbar[1,2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.yl[1,0] * self.ylbar[1,2] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,0] * self.ylbar[1,2] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,2] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,2] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,2] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,2] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,2] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,2] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,2] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,2] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,0] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[2,0] * (self.ylbar[2,0])**(2) + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[2,0] * (self.ylbar[2,0])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[2,0] * (self.ylbar[2,0])**(2) + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[2,0] * (self.ylbar[2,0])**(2) + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[2,0] * (self.ylbar[2,0])**(2) + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[2,0] * (self.ylbar[2,0])**(2) + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * (self.ylbar[2,0])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * (self.ylbar[2,0])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * (self.ylbar[2,0])**(2) + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[2,0] * (self.ylbar[2,0])**(2) + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[2,0] * (self.ylbar[2,0])**(2) + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,0] * (self.ylbar[2,0])**(2) + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.yl[2,0] * (self.ylbar[2,0])**(2) + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.yl[2,0] * (self.ylbar[2,0])**(2) + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,0] * (self.ylbar[2,0])**(2) + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * (self.yl[2,0])**(2) * (self.ylbar[2,0])**(2) + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * (self.yl[2,0])**(2) * (self.ylbar[2,0])**(2) + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * (self.yl[2,0])**(2) * (self.ylbar[2,0])**(2) + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * (self.yl[2,0])**(2) * (self.ylbar[2,0])**(2) + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[2,0])**(2) * (self.ylbar[2,0])**(2) + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[2,0])**(2) * (self.ylbar[2,0])**(2) + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[2,0] * self.yl[2,1] * (self.ylbar[2,0])**(2) + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[2,0] * self.yl[2,1] * (self.ylbar[2,0])**(2) + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,1] * (self.ylbar[2,0])**(2) + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[2,0] * self.yl[2,2] * (self.ylbar[2,0])**(2) + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[2,0] * self.yl[2,2] * (self.ylbar[2,0])**(2) + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,2] * (self.ylbar[2,0])**(2) + -1/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 3/16 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + -3/16 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + -11/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + -5/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 1/32 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + -5/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + -3/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 1/32 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 1/32 * self.lam * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + -1/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[2] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * self.lambdaDelta1bar[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * self.lambdaDelta1bar[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * self.lambdaDelta1bar[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * self.lambdaDelta1bar[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * self.lambdaDelta1bar[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.ylbar[2,1] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.ylbar[2,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.ylbar[2,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[2] * (self.lambdaSigmabar[2])**(2) * self.ylbar[2,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[2] * (self.lambdaSigmabar[2])**(2) * self.ylbar[2,1] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[2] * (self.lambdaSigmabar[2])**(2) * self.ylbar[2,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[2] * (self.lambdaSigmabar[2])**(2) * self.ylbar[2,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[2] * (self.lambdaSigmabar[2])**(2) * self.ylbar[2,1] + -1/8 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + 1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + 5/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + 1/32 * self.lam * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * self.lambdaDelta1bar[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * self.lambdaDelta1bar[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[2] * (self.lambdaSigmabar[2])**(2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + 1/8 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + 3/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * self.lambdaDelta1bar[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + 1/32 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + 1/32 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[2] * (self.lambdaSigmabar[2])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + 1/32 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[2] * (self.lambdaSigmabar[2])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,1] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,1] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,1] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[2,1] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[2,1] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[2,1] + -7/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,1] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,1] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,1] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,1] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,1] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,1] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,1] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * (self.lambdaSigmabar[2])**(2) * self.yl[0,1] * self.ylbar[2,1] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[2,1] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[2,1] + -1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[2,1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[2,1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[2,1] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[2,1] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[2,1] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,1] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,1] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,1] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[2,1] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[2,1] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[2,1] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,1] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,1] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,1] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[2,1] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[2,1] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[2,1] + -7/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,1] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,1] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,1] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,1] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,1] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,1] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,1] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * (self.lambdaSigmabar[2])**(2) * self.yl[1,1] * self.ylbar[2,1] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[2,1] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[2,1] + -1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[2,1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[2,1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[2,1] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[2,1] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[2,1] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,1] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,1] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,1] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[2,1] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[2,1] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[2,1] + -3/16 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,1] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * (self.lambdaDelta1bar[0])**(2) * self.yl[2,0] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.yl[2,0] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.yl[2,0] * self.ylbar[2,1] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,1] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,1] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,1] + -1/8 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,1] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,1] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,1] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[2,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[2,0] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[2,0] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[2,0] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[2,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[2,0] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,0] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,0] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,0] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[2,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[2,0] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[2,0] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[2,0] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[2,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[2,0] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,0] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,0] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,0] * self.ylbar[2,1] + -3/16 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,1] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * (self.lambdaDelta1bar[1])**(2) * self.yl[2,1] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.yl[2,1] * self.ylbar[2,1] + -7/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,1] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,1] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,1] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,1] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,1] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,1] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,1] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) * self.yl[2,1] * self.ylbar[2,1] + -1/8 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,1] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,1] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,1] + -1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,1] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,1] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,1] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[2,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[2,1] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[2,1] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[2,1] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[2,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[2,1] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,1] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,1] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,1] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[2,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[2,1] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[2,1] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[2,1] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[2,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[2,1] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,1] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,1] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,1] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * (self.yl[2,1])**(2) * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * (self.yl[2,1])**(2) * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * (self.yl[2,1])**(2) * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * (self.yl[2,1])**(2) * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * (self.yl[2,1])**(2) * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * (self.yl[2,1])**(2) * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[2,1])**(2) * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[2,1])**(2) * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[2,1])**(2) * self.ylbar[2,1] + -3/16 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,1] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * (self.lambdaDelta1bar[2])**(2) * self.yl[2,2] * self.ylbar[2,1] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,1] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,1] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,1] + -1/8 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,1] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,1] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,1] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[2,2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[2,2] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[2,2] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[2,2] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[2,2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[2,2] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,2] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,2] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,2] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[2,2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[2,2] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[2,2] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[2,2] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[2,2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[2,2] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,2] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,2] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,2] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,1] * self.ylbar[0,0] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,0] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,0] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.yl[2,1] * self.ylbar[0,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.yl[2,1] * self.ylbar[0,0] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,1] * self.ylbar[0,0] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,0] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,0] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * (self.yl[0,1])**(2) * self.ylbar[0,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * (self.yl[0,1])**(2) * self.ylbar[0,1] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[0,1])**(2) * self.ylbar[0,1] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,1] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,1] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,1] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + -1/4 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + -1/4 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + 1/4 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * (self.yl[2,1])**(2) * self.ylbar[0,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * (self.yl[2,1])**(2) * self.ylbar[0,1] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[2,1])**(2) * self.ylbar[0,1] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,1] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,1] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,1] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[0,2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[0,2] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[0,2] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[0,2] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[0,2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[0,2] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,2] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,2] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,2] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,2] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,2] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,2] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,2] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,2] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,2] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,1] * self.ylbar[1,0] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,0] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,0] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.yl[2,1] * self.ylbar[1,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.yl[2,1] * self.ylbar[1,0] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,1] * self.ylbar[1,0] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,0] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,0] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,1] * self.ylbar[1,1] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * (self.yl[1,1])**(2) * self.ylbar[1,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * (self.yl[1,1])**(2) * self.ylbar[1,1] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[1,1])**(2) * self.ylbar[1,1] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,1] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,1] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,1] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + -1/4 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + -1/4 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + 1/4 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * (self.yl[2,1])**(2) * self.ylbar[1,1] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * (self.yl[2,1])**(2) * self.ylbar[1,1] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[2,1])**(2) * self.ylbar[1,1] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,1] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,1] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,1] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[1,2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[1,2] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[1,2] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[1,2] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[1,2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[1,2] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,2] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,2] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,2] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.yl[1,1] * self.ylbar[1,2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.yl[1,1] * self.ylbar[1,2] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,1] * self.ylbar[1,2] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,2] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,2] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,2] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,2] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,2] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,2] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,2] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,2] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * (self.yl[2,0])**(2) * self.ylbar[2,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * (self.yl[2,0])**(2) * self.ylbar[2,0] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[2,0])**(2) * self.ylbar[2,0] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] + -1/8 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] + 1/8 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * (self.yl[2,1])**(2) * self.ylbar[2,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * (self.yl[2,1])**(2) * self.ylbar[2,0] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[2,1])**(2) * self.ylbar[2,0] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,1] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,1] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,1] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,1] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[2,1] * (self.ylbar[2,1])**(2) + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[2,1] * (self.ylbar[2,1])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[2,1] * (self.ylbar[2,1])**(2) + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[2,1] * (self.ylbar[2,1])**(2) + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[2,1] * (self.ylbar[2,1])**(2) + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[2,1] * (self.ylbar[2,1])**(2) + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * (self.ylbar[2,1])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * (self.ylbar[2,1])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * (self.ylbar[2,1])**(2) + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.yl[2,1] * (self.ylbar[2,1])**(2) + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.yl[2,1] * (self.ylbar[2,1])**(2) + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,1] * (self.ylbar[2,1])**(2) + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.yl[2,1] * (self.ylbar[2,1])**(2) + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.yl[2,1] * (self.ylbar[2,1])**(2) + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,1] * (self.ylbar[2,1])**(2) + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.yl[2,1] * (self.ylbar[2,1])**(2) + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.yl[2,1] * (self.ylbar[2,1])**(2) + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,1] * (self.ylbar[2,1])**(2) + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * (self.yl[2,1])**(2) * (self.ylbar[2,1])**(2) + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * (self.yl[2,1])**(2) * (self.ylbar[2,1])**(2) + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * (self.yl[2,1])**(2) * (self.ylbar[2,1])**(2) + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * (self.yl[2,1])**(2) * (self.ylbar[2,1])**(2) + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[2,1])**(2) * (self.ylbar[2,1])**(2) + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[2,1])**(2) * (self.ylbar[2,1])**(2) + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[2,1] * self.yl[2,2] * (self.ylbar[2,1])**(2) + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[2,1] * self.yl[2,2] * (self.ylbar[2,1])**(2) + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[2,2] * (self.ylbar[2,1])**(2) + -1/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 3/16 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + -3/16 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + -11/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + -5/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 1/32 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + -5/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + -3/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 1/32 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 1/32 * self.lam * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + -1/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[2] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[2] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * self.lambdaDelta1bar[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * self.lambdaDelta1bar[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * self.lambdaDelta1bar[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * self.lambdaDelta1bar[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * self.lambdaDelta1bar[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.ylbar[2,2] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.ylbar[2,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.ylbar[2,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.ylbar[2,2] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.ylbar[2,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.ylbar[2,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.ylbar[2,2] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[2] * (self.lambdaSigmabar[2])**(2) * self.ylbar[2,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[2] * (self.lambdaSigmabar[2])**(2) * self.ylbar[2,2] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[2] * (self.lambdaSigmabar[2])**(2) * self.ylbar[2,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[2] * (self.lambdaSigmabar[2])**(2) * self.ylbar[2,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[2] * (self.lambdaSigmabar[2])**(2) * self.ylbar[2,2] + -1/8 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + 1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + 5/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + 1/32 * self.lam * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * self.lambdaDelta1bar[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * self.lambdaDelta1bar[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[2] * (self.lambdaSigmabar[2])**(2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + 1/8 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + 3/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + -1/16 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + -1/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * self.lambdaDelta1bar[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + 1/32 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + 1/32 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[2] * (self.lambdaSigmabar[2])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + 1/32 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[2] * (self.lambdaSigmabar[2])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,2] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,2] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,2] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[2,2] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[2,2] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[2,2] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,2] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,2] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,2] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[2,2] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[2,2] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[2,2] + -7/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,2] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,2] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,2] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,2] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * (self.lambdaSigmabar[2])**(2) * self.yl[0,2] * self.ylbar[2,2] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[2,2] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[2,2] + -1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[2,2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[2,2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[2,2] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[2,2] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[2,2] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,2] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,2] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,2] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[2,2] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[2,2] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[2,2] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,2] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,2] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,2] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[2,2] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[2,2] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[2,2] + -7/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,2] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,2] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,2] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,2] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * (self.lambdaSigmabar[2])**(2) * self.yl[1,2] * self.ylbar[2,2] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[2,2] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[2,2] + -1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[2,2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[2,2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[2,2] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[2,2] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[2,2] + -3/16 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,2] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * (self.lambdaDelta1bar[0])**(2) * self.yl[2,0] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.yl[2,0] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.yl[2,0] * self.ylbar[2,2] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,2] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,2] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,2] + -1/8 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,2] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,2] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,2] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[2,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[2,0] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[2,0] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[2,0] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[2,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[2,0] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,0] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,0] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,0] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,2] * self.yl[2,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,2] * self.yl[2,0] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,2] * self.yl[2,0] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,2] * self.yl[2,0] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,2] * self.yl[2,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,2] * self.yl[2,0] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,0] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,0] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,0] * self.ylbar[2,2] + -3/16 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,2] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * (self.lambdaDelta1bar[1])**(2) * self.yl[2,1] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.yl[2,1] * self.ylbar[2,2] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,2] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,2] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,2] + -1/8 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,2] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,2] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,2] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[2,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[2,1] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[2,1] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[2,1] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[2,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[2,1] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,1] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,1] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,1] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,2] * self.yl[2,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,2] * self.yl[2,1] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,2] * self.yl[2,1] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,2] * self.yl[2,1] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,2] * self.yl[2,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,2] * self.yl[2,1] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,1] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,1] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,1] * self.ylbar[2,2] + -3/16 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,2] + 1/8 * self.invepsilonbar * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * (self.lambdaDelta1bar[2])**(2) * self.yl[2,2] * self.ylbar[2,2] + -7/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,2] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,2] + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,2] + -1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,2] + 1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) * self.yl[2,2] * self.ylbar[2,2] + -1/8 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,2] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,2] + 1/16 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,2] + -1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,2] + -1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,2] + -1/16 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[2,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[2,2] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[2,2] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[2,2] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[2,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[2,2] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,2] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,2] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,2] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] * self.yl[2,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] * self.yl[2,2] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] * self.yl[2,2] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] * self.yl[2,2] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] * self.yl[2,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] * self.yl[2,2] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,2] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,2] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,2] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * (self.yl[2,2])**(2) * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * (self.yl[2,2])**(2) * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * (self.yl[2,2])**(2) * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * (self.yl[2,2])**(2) * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * (self.yl[2,2])**(2) * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * (self.yl[2,2])**(2) * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[2,2])**(2) * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[2,2])**(2) * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[2,2])**(2) * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,2] * self.ylbar[0,0] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,0] * self.ylbar[0,0] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,0] * self.ylbar[0,0] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,0] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,0] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,0] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,0] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.yl[2,2] * self.ylbar[0,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.yl[2,2] * self.ylbar[0,0] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,2] * self.ylbar[0,0] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[0,2] * self.ylbar[0,1] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,1] * self.ylbar[0,1] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,1] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,1] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,1] * self.ylbar[0,1] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,1] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,1] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.yl[2,2] * self.ylbar[0,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.yl[2,2] * self.ylbar[0,1] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[2,2] * self.ylbar[0,1] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * (self.yl[0,2])**(2) * self.ylbar[0,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * (self.yl[0,2])**(2) * self.ylbar[0,2] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[0,2])**(2) * self.ylbar[0,2] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,2] * self.ylbar[0,2] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,2] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,2] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,0] * self.ylbar[0,2] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,2] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,2] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,1] * self.ylbar[0,2] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + -1/4 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + -1/4 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + 1/4 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,2] * self.ylbar[0,2] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * (self.yl[2,2])**(2) * self.ylbar[0,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * (self.yl[2,2])**(2) * self.ylbar[0,2] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[2,2])**(2) * self.ylbar[0,2] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,2] * self.ylbar[1,0] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,0] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,0] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,0] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,0] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,0] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.yl[2,2] * self.ylbar[1,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.yl[2,2] * self.ylbar[1,0] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,2] * self.ylbar[1,0] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[1,2] * self.ylbar[1,1] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,1] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,1] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,1] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,1] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,1] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.yl[2,2] * self.ylbar[1,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.yl[2,2] * self.ylbar[1,1] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[2,2] * self.ylbar[1,1] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[1,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[1,2] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[1,2] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[1,2] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[1,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[1,2] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,2] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,2] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,2] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.yl[1,2] * self.ylbar[1,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.yl[1,2] * self.ylbar[1,2] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,2] * self.ylbar[1,2] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * (self.yl[1,2])**(2) * self.ylbar[1,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * (self.yl[1,2])**(2) * self.ylbar[1,2] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[1,2])**(2) * self.ylbar[1,2] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,2] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,2] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,0] * self.ylbar[1,2] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,2] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,2] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,1] * self.ylbar[1,2] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + -1/4 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + -1/4 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + 1/4 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,2] * self.ylbar[1,2] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * (self.yl[2,2])**(2) * self.ylbar[1,2] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * (self.yl[2,2])**(2) * self.ylbar[1,2] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[2,2])**(2) * self.ylbar[1,2] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,0] * self.ylbar[2,0] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * (self.yl[2,0])**(2) * self.ylbar[2,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * (self.yl[2,0])**(2) * self.ylbar[2,0] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[2,0])**(2) * self.ylbar[2,0] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,0] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + -1/8 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + 1/8 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,0] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * (self.yl[2,2])**(2) * self.ylbar[2,0] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * (self.yl[2,2])**(2) * self.ylbar[2,0] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[2,2])**(2) * self.ylbar[2,0] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,1] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,1] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,1] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,1] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,1] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,1] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,1] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.yl[2,1] * self.ylbar[2,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.yl[2,1] * self.ylbar[2,1] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,1] * self.ylbar[2,1] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.yl[2,1] * self.ylbar[2,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.yl[2,1] * self.ylbar[2,1] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,1] * self.ylbar[2,1] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,1] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,1] * self.ylbar[2,1] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * (self.yl[2,1])**(2) * self.ylbar[2,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * (self.yl[2,1])**(2) * self.ylbar[2,1] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[2,1])**(2) * self.ylbar[2,1] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + -1/8 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + 1/8 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[2,2] * self.ylbar[2,1] * self.ylbar[2,2] + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * (self.yl[2,2])**(2) * self.ylbar[2,1] * self.ylbar[2,2] + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * (self.yl[2,2])**(2) * self.ylbar[2,1] * self.ylbar[2,2] + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[2,2])**(2) * self.ylbar[2,1] * self.ylbar[2,2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[2,2] * (self.ylbar[2,2])**(2) + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[2,2] * (self.ylbar[2,2])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[2,2] * (self.ylbar[2,2])**(2) + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[2,2] * (self.ylbar[2,2])**(2) + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[2,2] * (self.ylbar[2,2])**(2) + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[2,2] * (self.ylbar[2,2])**(2) + -1/16 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * (self.ylbar[2,2])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * (self.ylbar[2,2])**(2) + 1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * (self.ylbar[2,2])**(2) + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.yl[2,2] * (self.ylbar[2,2])**(2) + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.yl[2,2] * (self.ylbar[2,2])**(2) + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,2] * (self.ylbar[2,2])**(2) + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.yl[2,2] * (self.ylbar[2,2])**(2) + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.yl[2,2] * (self.ylbar[2,2])**(2) + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,2] * (self.ylbar[2,2])**(2) + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.yl[2,2] * (self.ylbar[2,2])**(2) + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.yl[2,2] * (self.ylbar[2,2])**(2) + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,2] * (self.ylbar[2,2])**(2) + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.yl[2,2] * (self.ylbar[2,2])**(2) + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.yl[2,2] * (self.ylbar[2,2])**(2) + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[2,2] * (self.ylbar[2,2])**(2) + -1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * (self.yl[2,2])**(2) * (self.ylbar[2,2])**(2) + -1/8 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * (self.yl[2,2])**(2) * (self.ylbar[2,2])**(2) + -1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * (self.yl[2,2])**(2) * (self.ylbar[2,2])**(2) + -1/16 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * (self.yl[2,2])**(2) * (self.ylbar[2,2])**(2) + 1/8 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * (self.yl[2,2])**(2) * (self.ylbar[2,2])**(2) + 1/16 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * (self.yl[2,2])**(2) * (self.ylbar[2,2])**(2))

    def alphaOuG(self, mif1,mif2):
        return 0

    def alphaOuW(self, mif1,mif2):
        return 0

    def alphaOuB(self, mif1,mif2):
        return 0

    def alphaOdG(self, mif1,mif2):
        return 0

    def alphaOdW(self, mif1,mif2):
        return 0

    def alphaOdB(self, mif1,mif2):
        return 0

    def alphaOeW(self, mif1,mif2):
        return (1/512 * self.g2 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + 1/512 * self.g2 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + 1/512 * self.g2 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + 1/256 * self.g2 * (self.iCPV)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2])

    def alphaOeB(self, mif1,mif2):
        return (1/512 * self.g1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + 1/512 * self.g1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + 1/512 * self.g1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + 1/96 * self.g1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[mif1,0] + -1/128 * self.g1 * (self.iCPV)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[mif1,0] + 1/96 * self.g1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[mif1,1] + -1/128 * self.g1 * (self.iCPV)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[mif1,1] + 1/96 * self.g1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[mif1,2] + -1/128 * self.g1 * (self.iCPV)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[mif1,2])

    def alphaOHq1(self, mif1,mif2):
        return (-1/1440 * (self.g1)**(4) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 11/1152 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/192 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -11/2304 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/384 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -11/2304 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/384 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -103/4608 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -11/768 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -3/512 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/256 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 7/512 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 3/256 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/768 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/768 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -7/1728 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -7/1728 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -7/1728 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -5/4608 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/768 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -5/4608 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/768 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -5/4608 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/768 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/192 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 11/768 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -3/256 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/768 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/768 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/288 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/288 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/288 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/384 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/384 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/256 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/768 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/768 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/768 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)))

    def alphaOHq3(self, mif1,mif2):
        return (3/160 * (self.g2)**(4) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/192 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/240 * (self.g2)**(4) * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/32 * (self.g2)**(4) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 73/1536 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/48 * (self.g2)**(4) * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -35/512 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 47/1536 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/160 * (self.g2)**(4) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -7/1536 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/480 * (self.g2)**(4) * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/288 * (self.g2)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -5/288 * (self.g2)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 5/144 * (self.g2)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -5/144 * (self.g2)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 5/288 * (self.g2)**(2) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -1/288 * (self.g2)**(2) * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 1/288 * (self.g2)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -5/288 * (self.g2)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 5/144 * (self.g2)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -5/144 * (self.g2)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 5/288 * (self.g2)**(2) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -1/288 * (self.g2)**(2) * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 1/288 * (self.g2)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -5/288 * (self.g2)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 5/144 * (self.g2)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -5/144 * (self.g2)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 5/288 * (self.g2)**(2) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -1/288 * (self.g2)**(2) * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -35/1536 * (self.g2)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -5/768 * (self.g2)**(2) * self.invepsilonbar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 7/1536 * (self.g2)**(2) * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 1/768 * (self.g2)**(2) * self.invepsilonbar * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 35/768 * (self.g2)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 5/384 * (self.g2)**(2) * self.invepsilonbar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -35/768 * (self.g2)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -5/384 * (self.g2)**(2) * self.invepsilonbar * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 35/1536 * (self.g2)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 5/768 * (self.g2)**(2) * self.invepsilonbar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -7/1536 * (self.g2)**(2) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/768 * (self.g2)**(2) * self.invepsilonbar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -35/1536 * (self.g2)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -5/768 * (self.g2)**(2) * self.invepsilonbar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 7/1536 * (self.g2)**(2) * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 1/768 * (self.g2)**(2) * self.invepsilonbar * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 35/768 * (self.g2)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 5/384 * (self.g2)**(2) * self.invepsilonbar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -35/768 * (self.g2)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -5/384 * (self.g2)**(2) * self.invepsilonbar * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 35/1536 * (self.g2)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 5/768 * (self.g2)**(2) * self.invepsilonbar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -7/1536 * (self.g2)**(2) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/768 * (self.g2)**(2) * self.invepsilonbar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -35/1536 * (self.g2)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -5/768 * (self.g2)**(2) * self.invepsilonbar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 7/1536 * (self.g2)**(2) * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/768 * (self.g2)**(2) * self.invepsilonbar * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 35/768 * (self.g2)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 5/384 * (self.g2)**(2) * self.invepsilonbar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -35/768 * (self.g2)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -5/384 * (self.g2)**(2) * self.invepsilonbar * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 35/1536 * (self.g2)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 5/768 * (self.g2)**(2) * self.invepsilonbar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -7/1536 * (self.g2)**(2) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/768 * (self.g2)**(2) * self.invepsilonbar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/192 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -5/192 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 5/768 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/768 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/192 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 5/192 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -5/768 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/768 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 5/768 * (self.g2)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/768 * (self.g2)**(2) * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -5/384 * (self.g2)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 5/384 * (self.g2)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -5/768 * (self.g2)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/768 * (self.g2)**(2) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 5/768 * (self.g2)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/768 * (self.g2)**(2) * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -5/384 * (self.g2)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 5/384 * (self.g2)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -5/768 * (self.g2)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/768 * (self.g2)**(2) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 5/768 * (self.g2)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/768 * (self.g2)**(2) * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -5/384 * (self.g2)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 5/384 * (self.g2)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -5/768 * (self.g2)**(2) * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/768 * (self.g2)**(2) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)))

    def alphaOHu(self, mif1,mif2):
        return (-1/360 * (self.g1)**(4) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 11/288 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/48 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -11/576 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/96 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -11/576 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/96 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -103/1152 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -11/192 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -3/128 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/64 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 7/128 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 3/64 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/192 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/192 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -7/432 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + -7/432 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + -7/432 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + -5/1152 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -5/1152 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -5/1152 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -1/48 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 11/192 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -3/64 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/192 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/192 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/72 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/72 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/72 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/96 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/96 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/64 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/192 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/192 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/192 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)))

    def alphaOHd(self, mif1,mif2):
        return (1/720 * (self.g1)**(4) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -11/576 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/96 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 11/1152 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/192 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 11/1152 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/192 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 103/2304 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 11/384 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 3/256 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/128 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -7/256 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -3/128 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/384 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/384 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 7/864 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 7/864 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 7/864 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 5/2304 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 1/384 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 5/2304 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 1/384 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 5/2304 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/384 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/96 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -11/384 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/128 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/384 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/384 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/144 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/144 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/144 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/192 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/192 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/128 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/384 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/384 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/384 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)))

    def alphaOHud(self, mif1,mif2):
        return 0

    def alphaOHl1(self, mif1,mif2):
        return (1/480 * (self.g1)**(4) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -11/384 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/64 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 11/768 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/128 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 11/768 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/128 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 103/1536 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 11/256 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 9/512 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 3/256 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -21/512 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -9/256 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/256 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/256 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 7/576 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 7/576 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 7/576 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 5/1536 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 1/256 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 5/1536 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 1/256 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 5/1536 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/256 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 3/16 * (self.MSigma)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 121/6144 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -21/2048 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 11/1024 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -45/1024 * (self.g2)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 9/2048 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 3/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -9/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 27/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 9/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -45/2048 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -21/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 9/2048 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 9/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 3/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -63/2048 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -27/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 3/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -3/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 3/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -3/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -3/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -3/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -3/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -81/4096 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] + -27/2048 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] + -27/2048 * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] + -9/1024 * self.invepsilonbar * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] + -81/4096 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] + -27/2048 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] + -27/2048 * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] + -9/1024 * self.invepsilonbar * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] + -81/4096 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] + -27/2048 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] + -27/2048 * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] + -9/1024 * self.invepsilonbar * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] + 1/64 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -11/256 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 9/256 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/256 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/256 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/96 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/96 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/96 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -3/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -3/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -3/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 27/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -3/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -3/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/128 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/128 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/256 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/256 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/256 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/256 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -11/1024 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 45/1024 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 27/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -9/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 27/2048 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 9/1024 * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 27/2048 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 9/1024 * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 27/2048 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 9/1024 * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 7/2048 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + -9/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + 3/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + 3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + 9/2048 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + 3/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + -9/2048 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + -3/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + -3/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + 29/2048 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + 15/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + -1/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + 11/2048 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + 11/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + -25/2048 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + -25/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 1/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + -1/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + -1/512 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 9/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + -3/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 3/1024 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + -7/1024 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 1/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + -9/1024 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 25/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 7/2048 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + -9/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + 3/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + 3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + 9/2048 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + 3/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + -9/2048 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + -3/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + -3/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + 29/2048 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + 15/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + -1/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + 11/2048 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + 11/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + -25/2048 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + -25/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 1/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + -1/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + -1/512 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 9/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + -3/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 3/1024 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + -7/1024 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 1/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + -9/1024 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 25/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 7/2048 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + -9/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + 3/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + 3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + 9/2048 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + 3/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + -9/2048 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + -3/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + -3/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + 29/2048 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + 15/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + -1/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + 11/2048 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + 11/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + -25/2048 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + -25/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 1/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + -1/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + -1/512 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 9/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + -3/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 3/1024 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + -7/1024 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 1/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + -9/1024 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 25/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,0] * self.ylbar[0,0] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,0] * self.ylbar[0,0] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[0,0] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,1] * self.ylbar[0,1] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,1] * self.ylbar[0,1] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[0,1] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,2] * self.ylbar[0,2] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,2] * self.ylbar[0,2] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[0,2] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,0] * self.ylbar[1,0] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,0] * self.ylbar[1,0] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[1,0] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,1] * self.ylbar[1,1] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,1] * self.ylbar[1,1] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[1,1] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,2] * self.ylbar[1,2] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,2] * self.ylbar[1,2] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[1,2] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,0] * self.ylbar[2,0] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,0] * self.ylbar[2,0] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[2,0] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,1] * self.ylbar[2,1] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,1] * self.ylbar[2,1] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[2,1] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,2] * self.ylbar[2,2] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,2] * self.ylbar[2,2] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[2,2] + 7/2048 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + -9/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + 3/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + 3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + 9/2048 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + 3/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + -9/2048 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + -3/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + -3/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + 29/2048 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + 15/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + -1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + 11/2048 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + 11/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + -25/2048 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + -25/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + -3/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,0] + 1/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,0] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,0] + -1/512 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,0] + 9/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,0] + -3/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,0] + 3/1024 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,0] + -7/1024 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,0] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,0] + -9/1024 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,0] + 25/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,0] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,0] * self.ylbar[mif2,0] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,0] * self.ylbar[mif2,0] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[mif2,0] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,0] * self.ylbar[mif2,0] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,0] * self.ylbar[mif2,0] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[mif2,0] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,0] * self.ylbar[mif2,0] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,0] * self.ylbar[mif2,0] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[mif2,0] + -1/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[mif1,0] * self.ylbar[mif2,0] + -1/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[mif1,0] * self.ylbar[mif2,0] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[mif2,0] + -1/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[mif1,1] * self.ylbar[mif2,0] + -1/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[mif1,1] * self.ylbar[mif2,0] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[mif2,0] + -1/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[mif1,2] * self.ylbar[mif2,0] + -1/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[mif1,2] * self.ylbar[mif2,0] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[mif2,0] + 7/2048 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + -9/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + 3/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + 3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + 9/2048 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + 3/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + -9/2048 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + -3/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + -3/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + 29/2048 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + 15/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + -1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + 11/2048 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + 11/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + -25/2048 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + -25/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + -3/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,1] + 1/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,1] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,1] + -1/512 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,1] + 9/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,1] + -3/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,1] + 3/1024 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,1] + -7/1024 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,1] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,1] + -9/1024 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,1] + 25/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,1] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,1] * self.ylbar[mif2,1] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,1] * self.ylbar[mif2,1] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[mif2,1] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,1] * self.ylbar[mif2,1] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,1] * self.ylbar[mif2,1] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[mif2,1] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,1] * self.ylbar[mif2,1] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,1] * self.ylbar[mif2,1] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[mif2,1] + -1/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[mif1,0] * self.ylbar[mif2,1] + -1/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[mif1,0] * self.ylbar[mif2,1] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[mif2,1] + -1/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[mif1,1] * self.ylbar[mif2,1] + -1/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[mif1,1] * self.ylbar[mif2,1] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[mif2,1] + -1/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[mif1,2] * self.ylbar[mif2,1] + -1/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[mif1,2] * self.ylbar[mif2,1] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[mif2,1] + 7/2048 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + -9/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + 3/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + 3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + 9/2048 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + 3/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + -9/2048 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + -3/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + -3/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + 29/2048 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + 15/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + -1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + 11/2048 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + 11/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + -25/2048 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + -25/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + -3/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,2] + 1/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,2] + -1/512 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,2] + 9/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,2] + -3/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,2] + 3/1024 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,2] + -7/1024 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,2] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,2] + -9/1024 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,2] + 25/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,2] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,2] * self.ylbar[mif2,2] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,2] * self.ylbar[mif2,2] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[mif2,2] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,2] * self.ylbar[mif2,2] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,2] * self.ylbar[mif2,2] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[mif2,2] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,2] * self.ylbar[mif2,2] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,2] * self.ylbar[mif2,2] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[mif2,2] + -1/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[mif1,0] * self.ylbar[mif2,2] + -1/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[mif1,0] * self.ylbar[mif2,2] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[mif2,2] + -1/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[mif1,1] * self.ylbar[mif2,2] + -1/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[mif1,1] * self.ylbar[mif2,2] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[mif2,2] + -1/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[mif1,2] * self.ylbar[mif2,2] + -1/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[mif1,2] * self.ylbar[mif2,2] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[mif2,2])

    def alphaOHl3(self, mif1,mif2):
        return (-1/480 * (self.g2)**(4) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/240 * (self.g2)**(4) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 11/1152 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/192 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 11/576 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/96 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -11/768 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/128 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -11/768 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/128 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 49/4608 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 5/768 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -3/256 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/128 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -9/256 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -3/128 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -15/512 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -5/256 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -13/512 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -5/256 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -5/256 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -3/128 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 5/768 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/96 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/768 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/288 * (self.g2)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 1/288 * (self.g2)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 1/288 * (self.g2)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 7/1536 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 1/768 * (self.g2)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 7/1536 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 1/768 * (self.g2)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 7/1536 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/768 * (self.g2)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/16 * (self.MSigma)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -3/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 11/2048 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -103/6144 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -1/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 3/1024 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -79/3072 * (self.g2)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 3/2048 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 1/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -3/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 9/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -33/2048 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -13/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 27/2048 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 11/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 13/2048 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 7/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -21/2048 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -9/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -1/2048 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 1/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 5/2048 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -1/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -1/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -1/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -1/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -17/4096 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] + -3/2048 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] + -9/2048 * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] + -3/1024 * self.invepsilonbar * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] + -17/4096 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] + -3/2048 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] + -9/2048 * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] + -3/1024 * self.invepsilonbar * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] + -17/4096 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] + -3/2048 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] + -9/2048 * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] + -3/1024 * self.invepsilonbar * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] + -1/192 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/96 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -5/768 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/128 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 5/256 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/768 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/768 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -3/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -7/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 9/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/128 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/128 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/128 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 5/256 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/128 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/192 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/96 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/768 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/768 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/768 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/1024 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 79/3072 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 9/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -11/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/2048 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/1024 * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/2048 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/1024 * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/2048 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/1024 * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 7/2048 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + -9/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + 1/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + 1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + 9/2048 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + 3/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + -9/2048 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + -3/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + -3/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + 29/2048 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + 15/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + -1/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + 11/2048 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + 11/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + -25/2048 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + -25/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * self.yl[mif1,0] + -1/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 1/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + -1/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + -1/512 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 9/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + -3/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 3/1024 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + -7/1024 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 1/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + -9/1024 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 25/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 7/2048 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + -9/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + 1/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + 1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + 9/2048 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + 3/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + -9/2048 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + -3/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + -3/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + 29/2048 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + 15/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + -1/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + 11/2048 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + 11/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + -25/2048 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + -25/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * self.yl[mif1,1] + -1/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 1/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + -1/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + -1/512 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 9/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + -3/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 3/1024 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + -7/1024 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 1/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + -9/1024 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 25/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 7/2048 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + -9/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + 1/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + 1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + 9/2048 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + 3/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + -9/2048 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + -3/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + -3/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + 29/2048 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + 15/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + -1/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + 11/2048 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + 11/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + -25/2048 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + -25/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * self.yl[mif1,2] + -1/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 1/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + -1/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + -1/512 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 9/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + -3/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 3/1024 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + -7/1024 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 1/64 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + -9/1024 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 25/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,0] * self.ylbar[0,0] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,0] * self.ylbar[0,0] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[0,0] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,1] * self.ylbar[0,1] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,1] * self.ylbar[0,1] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[0,1] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,2] * self.ylbar[0,2] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,2] * self.ylbar[0,2] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[0,2] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,0] * self.ylbar[1,0] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,0] * self.ylbar[1,0] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[1,0] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,1] * self.ylbar[1,1] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,1] * self.ylbar[1,1] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[1,1] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,2] * self.ylbar[1,2] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,2] * self.ylbar[1,2] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[1,2] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,0] * self.ylbar[2,0] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,0] * self.ylbar[2,0] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[2,0] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,1] * self.ylbar[2,1] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,1] * self.ylbar[2,1] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[2,1] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,2] * self.ylbar[2,2] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,2] * self.ylbar[2,2] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[2,2] + 7/2048 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + -9/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + 1/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + 1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + 9/2048 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + 3/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + -9/2048 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + -3/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + -3/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + 29/2048 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + 15/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + -1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + 11/2048 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + 11/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + -25/2048 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + -25/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,0] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,0] + 1/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,0] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,0] + -1/512 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,0] + 9/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,0] + -3/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,0] + 3/1024 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,0] + -7/1024 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,0] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,0] + -9/1024 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,0] + 25/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,0] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,0] * self.ylbar[mif2,0] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,0] * self.ylbar[mif2,0] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[mif2,0] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,0] * self.ylbar[mif2,0] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,0] * self.ylbar[mif2,0] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[mif2,0] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,0] * self.ylbar[mif2,0] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,0] * self.ylbar[mif2,0] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[mif2,0] + -1/96 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[mif1,0] * self.ylbar[mif2,0] + -1/96 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[mif1,1] * self.ylbar[mif2,0] + -1/96 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[mif1,2] * self.ylbar[mif2,0] + 7/2048 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + -9/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + 1/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + 1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + 9/2048 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + 3/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + -9/2048 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + -3/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + -3/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + 29/2048 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + 15/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + -1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + 11/2048 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + 11/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + -25/2048 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + -25/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,1] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,1] + 1/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,1] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,1] + -1/512 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,1] + 9/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,1] + -3/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,1] + 3/1024 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,1] + -7/1024 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,1] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,1] + -9/1024 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,1] + 25/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,1] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,1] * self.ylbar[mif2,1] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,1] * self.ylbar[mif2,1] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[mif2,1] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,1] * self.ylbar[mif2,1] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,1] * self.ylbar[mif2,1] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[mif2,1] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,1] * self.ylbar[mif2,1] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,1] * self.ylbar[mif2,1] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[mif2,1] + -1/96 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[mif1,0] * self.ylbar[mif2,1] + -1/96 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[mif1,1] * self.ylbar[mif2,1] + -1/96 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[mif1,2] * self.ylbar[mif2,1] + 7/2048 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + -9/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + 1/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + 1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + 9/2048 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + 3/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + -9/2048 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + -3/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + -3/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + 29/2048 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + 15/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + -1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + 11/2048 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + 11/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + -25/2048 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + -25/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,2] + 1/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,2] + -1/512 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,2] + 9/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,2] + -3/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,2] + 3/1024 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,2] + -7/1024 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,2] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,2] + -9/1024 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,2] + 25/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,2] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,2] * self.ylbar[mif2,2] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,2] * self.ylbar[mif2,2] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[mif2,2] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,2] * self.ylbar[mif2,2] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,2] * self.ylbar[mif2,2] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[mif2,2] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,2] * self.ylbar[mif2,2] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,2] * self.ylbar[mif2,2] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[mif2,2] + -1/96 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[mif1,0] * self.ylbar[mif2,2] + -1/96 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[mif1,1] * self.ylbar[mif2,2] + -1/96 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[mif1,2] * self.ylbar[mif2,2])

    def alphaOHe(self, mif1,mif2):
        return (1/240 * (self.g1)**(4) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -11/192 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/32 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 11/384 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/64 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 11/384 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/64 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 103/768 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 11/128 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 9/256 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 3/128 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -21/256 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -9/128 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/128 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/128 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 7/288 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] + 7/288 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] + 7/288 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] + 1/2 * (self.MDelta1)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] + 179/2304 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] + 3/256 * (self.g2)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] + 1/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] + 29/384 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] + -9/128 * (self.g2)**(2) * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] + 27/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] + 9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] + -15/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] + -3/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] + 3/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] + -51/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] + -21/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] + -15/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] + -9/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] + -21/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] + -15/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] + 3/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] + 3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] + -3/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[mif1] + -1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[mif1] + -3/32 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[mif1] + -1/16 * self.invepsilonbar * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[mif1] + -3/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[mif1] + -1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[mif1] + -3/32 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[mif1] + -1/16 * self.invepsilonbar * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[mif1] + -3/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaDelta1bar[mif1] + -1/16 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaDelta1bar[mif1] + -3/32 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaDelta1bar[mif1] + -1/16 * self.invepsilonbar * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaDelta1bar[mif1] + 5/768 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 1/128 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -3/256 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] + -3/128 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] + 5/768 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 1/128 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -3/256 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] + -3/128 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] + 5/768 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/128 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -3/256 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] + -3/128 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] + 1/32 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -11/128 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 9/128 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/128 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/128 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/48 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/48 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/48 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -29/384 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 9/128 * (self.g2)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -9/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 21/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 15/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/16 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/16 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/16 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaDelta1bar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/16 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaDelta1bar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/64 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/64 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/128 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 9/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/128 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/128 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/128 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/128 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/128 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/128 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[0] * self.yl[0,mif2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[0] * self.yl[0,mif2] + 17/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[0] * self.yl[0,mif2] + 5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[0] * self.yl[0,mif2] + -17/512 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[0] * self.yl[0,mif2] + -5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[0] * self.yl[0,mif2] + -1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[0] * self.yl[0,mif2] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[0] * self.yl[0,mif2] + -1/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[0] * self.yl[0,mif2] + -1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[0] * self.yl[0,mif2] + -3/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + 1/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + 5/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + 7/256 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + 1/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + 5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[1] * self.yl[1,mif2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[1] * self.yl[1,mif2] + 17/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[1] * self.yl[1,mif2] + 5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[1] * self.yl[1,mif2] + -17/512 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[1] * self.yl[1,mif2] + -5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[1] * self.yl[1,mif2] + -1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[1] * self.yl[1,mif2] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[1] * self.yl[1,mif2] + -1/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[1] * self.yl[1,mif2] + -1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[1] * self.yl[1,mif2] + -3/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + 1/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + 5/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + 7/256 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + 1/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + 5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[2] * self.yl[2,mif2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[2] * self.yl[2,mif2] + 17/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[2] * self.yl[2,mif2] + 5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[2] * self.yl[2,mif2] + -17/512 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[2] * self.yl[2,mif2] + -5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[2] * self.yl[2,mif2] + -1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[2] * self.yl[2,mif2] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[2] * self.yl[2,mif2] + -1/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[2] * self.yl[2,mif2] + -1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[2] * self.yl[2,mif2] + -3/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + 1/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + 5/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + 7/256 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + 1/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + 1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[mif1] * self.yl[0,mif2] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[mif1] * self.yl[0,mif2] * self.ylbar[0,0] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,0] + 1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[mif1] * self.yl[0,mif2] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[mif1] * self.yl[0,mif2] * self.ylbar[0,1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,1] + 1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[mif1] * self.yl[0,mif2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[mif1] * self.yl[0,mif2] * self.ylbar[0,2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,2] + 5/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.ylbar[0,mif1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.ylbar[0,mif1] + 17/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.ylbar[0,mif1] + 5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.ylbar[0,mif1] + -17/512 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.ylbar[0,mif1] + -5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.ylbar[0,mif1] + -1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.ylbar[0,mif1] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.ylbar[0,mif1] + -1/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.ylbar[0,mif1] + -1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.ylbar[0,mif1] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,mif1] + -3/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,mif1] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,mif1] + 1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,mif1] + 5/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,mif1] + 7/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,mif1] + 1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,mif1] + 1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,mif1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,mif1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,mif1] + 1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,mif1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,mif1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,mif1] + 1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,mif1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,mif1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,mif1] + 19/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,mif2] * self.ylbar[0,mif1] + -3/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,mif2] * self.ylbar[0,mif1] + 3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,mif1] + 19/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,mif2] * self.ylbar[0,mif1] + -3/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,mif2] * self.ylbar[0,mif1] + 3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[0,mif1] + 19/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,mif2] * self.ylbar[0,mif1] + -3/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,mif2] * self.ylbar[0,mif1] + 3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[0,mif1] + 1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[mif1] * self.yl[1,mif2] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[mif1] * self.yl[1,mif2] * self.ylbar[1,0] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,0] + 1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[mif1] * self.yl[1,mif2] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[mif1] * self.yl[1,mif2] * self.ylbar[1,1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,1] + 1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[mif1] * self.yl[1,mif2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[mif1] * self.yl[1,mif2] * self.ylbar[1,2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,2] + 5/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.ylbar[1,mif1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.ylbar[1,mif1] + 17/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.ylbar[1,mif1] + 5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.ylbar[1,mif1] + -17/512 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.ylbar[1,mif1] + -5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.ylbar[1,mif1] + -1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.ylbar[1,mif1] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.ylbar[1,mif1] + -1/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.ylbar[1,mif1] + -1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.ylbar[1,mif1] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,mif1] + -3/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,mif1] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,mif1] + 1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,mif1] + 5/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,mif1] + 7/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,mif1] + 1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,mif1] + 19/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,mif2] * self.ylbar[1,mif1] + -3/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,mif2] * self.ylbar[1,mif1] + 3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[1,mif1] + 1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,mif1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,mif1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,mif1] + 1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,mif1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,mif1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,mif1] + 1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,mif1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,mif1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,mif1] + 19/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,mif2] * self.ylbar[1,mif1] + -3/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,mif2] * self.ylbar[1,mif1] + 3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,mif1] + 19/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,mif2] * self.ylbar[1,mif1] + -3/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,mif2] * self.ylbar[1,mif1] + 3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[1,mif1] + 1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[mif1] * self.yl[2,mif2] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[mif1] * self.yl[2,mif2] * self.ylbar[2,0] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,0] + 1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[mif1] * self.yl[2,mif2] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[mif1] * self.yl[2,mif2] * self.ylbar[2,1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,1] + 1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[mif1] * self.yl[2,mif2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[mif1] * self.yl[2,mif2] * self.ylbar[2,2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,2] + 5/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.ylbar[2,mif1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.ylbar[2,mif1] + 17/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.ylbar[2,mif1] + 5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.ylbar[2,mif1] + -17/512 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.ylbar[2,mif1] + -5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.ylbar[2,mif1] + -1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.ylbar[2,mif1] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.ylbar[2,mif1] + -1/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.ylbar[2,mif1] + -1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.ylbar[2,mif1] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,mif1] + -3/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,mif1] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,mif1] + 1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,mif1] + 5/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,mif1] + 7/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,mif1] + 1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,mif1] + 19/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,mif2] * self.ylbar[2,mif1] + -3/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,mif2] * self.ylbar[2,mif1] + 3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[2,mif1] + 19/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,mif2] * self.ylbar[2,mif1] + -3/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,mif2] * self.ylbar[2,mif1] + 3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[2,mif1] + 1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,mif1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,mif1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,mif1] + 1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,mif1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,mif1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,mif1] + 1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,mif1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,mif1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,mif1] + 19/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,mif2] * self.ylbar[2,mif1] + -3/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,mif2] * self.ylbar[2,mif1] + 3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,mif1])

    def alphaOuH(self, mif1,mif2):
        return (-1/480 * (self.g2)**(4) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -1/240 * (self.g2)**(4) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + 11/576 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + 1/96 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -11/16 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -3/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + 15/128 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + 5/64 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + 11/288 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + 1/48 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + 9/128 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + 3/64 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -11/384 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -1/64 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -55/96 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -5/16 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -11/384 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -1/64 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + 121/96 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + 11/16 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -3/16 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -1/8 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + 49/2304 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + 5/384 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + 19/16 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + 3/4 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -203/1024 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -83/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -3/128 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -1/64 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -49/1024 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -21/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -9/128 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -3/64 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -45/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -15/64 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -15/256 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -5/128 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + 811/384 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + 83/64 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -79/256 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -1/4 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -13/256 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -5/128 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -15/32 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -3/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + 37/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + 21/256 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -5/128 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -3/64 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + 105/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + 39/64 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -111/1024 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -63/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + 5/384 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -1/1536 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + 1/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -1/48 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + -1/1536 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + 1/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + 1/384 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + 1/144 * (self.g2)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yu[mif1,mif2] + 1/24 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yu[mif1,mif2] + 15/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yu[mif1,mif2] + 5/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yu[mif1,mif2] + -15/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yu[mif1,mif2] + -5/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yu[mif1,mif2] + -3/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yu[mif1,mif2] + -5/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yu[mif1,mif2] + -11/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yu[mif1,mif2] + -5/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yu[mif1,mif2] + 15/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yu[mif1,mif2] + 9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yu[mif1,mif2] + 1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yu[mif1,mif2] + -7/768 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yu[mif1,mif2] + -5/192 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * (self.lambdaDelta1bar[0])**(2) * self.yu[mif1,mif2] + 1/144 * (self.g2)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yu[mif1,mif2] + 1/24 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yu[mif1,mif2] + 15/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yu[mif1,mif2] + 5/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yu[mif1,mif2] + -15/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yu[mif1,mif2] + -5/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yu[mif1,mif2] + -3/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yu[mif1,mif2] + -5/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yu[mif1,mif2] + -11/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yu[mif1,mif2] + -5/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yu[mif1,mif2] + 15/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yu[mif1,mif2] + 9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yu[mif1,mif2] + 1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yu[mif1,mif2] + -7/768 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yu[mif1,mif2] + -5/96 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.yu[mif1,mif2] + -5/192 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * (self.lambdaDelta1bar[1])**(2) * self.yu[mif1,mif2] + 1/144 * (self.g2)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yu[mif1,mif2] + 1/24 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yu[mif1,mif2] + 15/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yu[mif1,mif2] + 5/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yu[mif1,mif2] + -15/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yu[mif1,mif2] + -5/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yu[mif1,mif2] + -3/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yu[mif1,mif2] + -5/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yu[mif1,mif2] + -11/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yu[mif1,mif2] + -5/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yu[mif1,mif2] + 15/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yu[mif1,mif2] + 9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yu[mif1,mif2] + 1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yu[mif1,mif2] + -7/768 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yu[mif1,mif2] + -5/96 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.yu[mif1,mif2] + -5/96 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.yu[mif1,mif2] + -5/192 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * (self.lambdaDelta1bar[2])**(2) * self.yu[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif2] + 7/768 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif2] + 1/384 * (self.g2)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif2] + 1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif2] + -33/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif2] + -11/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif2] + -21/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif2] + -7/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif2] + 27/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif2] + 9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif2] + 35/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif2] + 15/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif2] + 1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif2] + 69/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif2] + 31/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif2] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif2] + 1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif2] + 5/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif2] + 9/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif2] + -1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif2] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif2] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif2] + -9/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif2] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif2] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif2] + -13/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) * self.yu[mif1,mif2] + -1/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) * self.yu[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif2] + 7/768 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif2] + 1/384 * (self.g2)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif2] + 1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif2] + -33/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif2] + -11/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif2] + -21/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif2] + -7/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif2] + 27/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif2] + 9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif2] + 35/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif2] + 15/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif2] + 1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif2] + 69/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif2] + 31/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif2] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif2] + 1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif2] + 5/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif2] + 9/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif2] + -1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif2] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif2] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif2] + -9/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif2] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif2] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif2] + -13/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.yu[mif1,mif2] + -1/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.yu[mif1,mif2] + -13/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) * self.yu[mif1,mif2] + -1/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) * self.yu[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif2] + 7/768 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif2] + 1/384 * (self.g2)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif2] + 1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif2] + -33/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif2] + -11/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif2] + -21/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif2] + -7/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif2] + 27/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif2] + 9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif2] + 35/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif2] + 15/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif2] + 1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif2] + 69/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif2] + 31/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif2] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif2] + 1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif2] + 5/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif2] + 9/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif2] + -1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif2] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif2] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif2] + -9/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif2] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif2] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif2] + -13/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.yu[mif1,mif2] + -1/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.yu[mif1,mif2] + -13/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.yu[mif1,mif2] + -1/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.yu[mif1,mif2] + -13/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) * self.yu[mif1,mif2] + -1/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) * self.yu[mif1,mif2] + -1/96 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 3/8 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -5/64 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -1/48 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -3/64 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -5/384 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -3/4 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 83/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 1/64 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 21/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 5/128 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 3/8 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -21/256 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -1/384 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -1/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -1/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -1/384 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -5/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 5/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -9/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -5/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 5/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -9/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -5/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 5/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -9/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 11/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 7/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -15/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 11/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 7/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -15/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 11/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 7/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -15/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 1/64 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 5/16 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 1/64 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -11/16 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 1/8 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 3/64 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 15/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 5/128 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -83/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 1/4 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 3/64 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -39/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 63/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -1/96 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 1/48 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 5/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 5/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 5/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 5/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 5/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 5/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -1/384 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -9/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -31/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -1/384 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -9/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -31/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 1/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -1/384 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -9/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -31/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 1/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 1/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yu[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yu[mif1,mif2] + -9/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yu[mif1,mif2] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yu[mif1,mif2] + 9/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yu[mif1,mif2] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yu[mif1,mif2] + 3/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yu[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yu[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yu[mif1,mif2] + 3/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yu[mif1,mif2] + -3/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yu[mif1,mif2] + -5/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yu[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yu[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yu[mif1,mif2] + -9/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yu[mif1,mif2] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yu[mif1,mif2] + 9/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yu[mif1,mif2] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yu[mif1,mif2] + 3/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yu[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yu[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yu[mif1,mif2] + 3/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yu[mif1,mif2] + -3/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yu[mif1,mif2] + -5/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yu[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yu[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yu[mif1,mif2] + -9/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yu[mif1,mif2] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yu[mif1,mif2] + 9/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yu[mif1,mif2] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yu[mif1,mif2] + 3/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yu[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yu[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yu[mif1,mif2] + 3/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yu[mif1,mif2] + -3/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yu[mif1,mif2] + -5/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yu[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yu[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yu[mif1,mif2] + -9/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yu[mif1,mif2] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yu[mif1,mif2] + 9/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yu[mif1,mif2] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yu[mif1,mif2] + 3/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yu[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yu[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yu[mif1,mif2] + 3/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yu[mif1,mif2] + -3/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yu[mif1,mif2] + -5/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yu[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yu[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yu[mif1,mif2] + -9/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yu[mif1,mif2] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yu[mif1,mif2] + 9/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yu[mif1,mif2] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yu[mif1,mif2] + 3/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yu[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yu[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yu[mif1,mif2] + 3/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yu[mif1,mif2] + -3/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yu[mif1,mif2] + -5/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yu[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] * self.yu[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] * self.yu[mif1,mif2] + -9/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] * self.yu[mif1,mif2] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] * self.yu[mif1,mif2] + 9/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] * self.yu[mif1,mif2] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] * self.yu[mif1,mif2] + 3/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] * self.yu[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] * self.yu[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] * self.yu[mif1,mif2] + 3/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yu[mif1,mif2] + -3/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yu[mif1,mif2] + -5/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yu[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yu[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yu[mif1,mif2] + -9/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yu[mif1,mif2] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yu[mif1,mif2] + 9/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yu[mif1,mif2] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yu[mif1,mif2] + 3/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yu[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yu[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yu[mif1,mif2] + 3/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yu[mif1,mif2] + -3/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yu[mif1,mif2] + -5/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yu[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] * self.yu[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] * self.yu[mif1,mif2] + -9/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] * self.yu[mif1,mif2] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] * self.yu[mif1,mif2] + 9/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] * self.yu[mif1,mif2] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] * self.yu[mif1,mif2] + 3/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] * self.yu[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] * self.yu[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] * self.yu[mif1,mif2] + 3/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yu[mif1,mif2] + -3/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yu[mif1,mif2] + -5/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yu[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] * self.yu[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] * self.yu[mif1,mif2] + -9/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] * self.yu[mif1,mif2] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] * self.yu[mif1,mif2] + 9/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] * self.yu[mif1,mif2] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] * self.yu[mif1,mif2] + 3/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] * self.yu[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] * self.yu[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] * self.yu[mif1,mif2] + 3/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.yu[mif1,mif2] + -3/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.yu[mif1,mif2] + -5/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.yu[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] * self.yu[mif1,mif2] + 3/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] * self.yu[mif1,mif2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] * self.yu[mif1,mif2] + -3/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] * self.yu[mif1,mif2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] * self.yu[mif1,mif2] + -13/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] * self.yu[mif1,mif2] + -7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] * self.yu[mif1,mif2] + -19/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] * self.yu[mif1,mif2] + -9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] * self.yu[mif1,mif2] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] * self.yu[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.ylbar[0,0] * self.yu[mif1,mif2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] * self.yu[mif1,mif2] + 7/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] * self.yu[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] * self.yu[mif1,mif2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] * self.yu[mif1,mif2] + 9/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] * self.yu[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,0] * self.yu[mif1,mif2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,0] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,0] * self.yu[mif1,mif2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,0] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.ylbar[0,0] * self.yu[mif1,mif2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] * self.yu[mif1,mif2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,0] * self.yu[mif1,mif2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,0] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,0] * self.yu[mif1,mif2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,0] * self.yu[mif1,mif2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,0] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,0] * self.yu[mif1,mif2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,0] * self.yu[mif1,mif2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.ylbar[0,0] * self.yu[mif1,mif2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[0,0] * self.yu[mif1,mif2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.ylbar[0,0] * self.yu[mif1,mif2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[0,0] * self.yu[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] * self.yu[mif1,mif2] + 3/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] * self.yu[mif1,mif2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] * self.yu[mif1,mif2] + -3/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] * self.yu[mif1,mif2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] * self.yu[mif1,mif2] + -13/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] * self.yu[mif1,mif2] + -7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] * self.yu[mif1,mif2] + -19/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] * self.yu[mif1,mif2] + -9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] * self.yu[mif1,mif2] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] * self.yu[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.ylbar[0,1] * self.yu[mif1,mif2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] * self.yu[mif1,mif2] + 7/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] * self.yu[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] * self.yu[mif1,mif2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] * self.yu[mif1,mif2] + 9/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] * self.yu[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,1] * self.yu[mif1,mif2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,1] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,1] * self.yu[mif1,mif2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,1] * self.yu[mif1,mif2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,1] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,1] * self.yu[mif1,mif2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,1] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.ylbar[0,1] * self.yu[mif1,mif2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] * self.yu[mif1,mif2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,1] * self.yu[mif1,mif2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,1] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,1] * self.yu[mif1,mif2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,1] * self.yu[mif1,mif2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.ylbar[0,1] * self.yu[mif1,mif2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[0,1] * self.yu[mif1,mif2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.ylbar[0,1] * self.yu[mif1,mif2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[0,1] * self.yu[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] * self.yu[mif1,mif2] + 3/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] * self.yu[mif1,mif2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] * self.yu[mif1,mif2] + -3/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] * self.yu[mif1,mif2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] * self.yu[mif1,mif2] + -13/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] * self.yu[mif1,mif2] + -7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] * self.yu[mif1,mif2] + -19/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] * self.yu[mif1,mif2] + -9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] * self.yu[mif1,mif2] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] * self.yu[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.ylbar[0,2] * self.yu[mif1,mif2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] * self.yu[mif1,mif2] + 7/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] * self.yu[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] * self.yu[mif1,mif2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] * self.yu[mif1,mif2] + 9/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] * self.yu[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[0,2] * self.yu[mif1,mif2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,2] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.ylbar[0,2] * self.yu[mif1,mif2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[0,2] * self.yu[mif1,mif2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,2] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.ylbar[0,2] * self.yu[mif1,mif2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[0,2] * self.yu[mif1,mif2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,2] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.ylbar[0,2] * self.yu[mif1,mif2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,2] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.ylbar[0,2] * self.yu[mif1,mif2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] * self.yu[mif1,mif2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[0,2] * self.yu[mif1,mif2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.ylbar[0,2] * self.yu[mif1,mif2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[0,2] * self.yu[mif1,mif2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.ylbar[0,2] * self.yu[mif1,mif2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[0,2] * self.yu[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] * self.yu[mif1,mif2] + 3/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] * self.yu[mif1,mif2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] * self.yu[mif1,mif2] + -3/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] * self.yu[mif1,mif2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] * self.yu[mif1,mif2] + -13/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] * self.yu[mif1,mif2] + -7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] * self.yu[mif1,mif2] + -19/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] * self.yu[mif1,mif2] + -9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] * self.yu[mif1,mif2] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] * self.yu[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.ylbar[1,0] * self.yu[mif1,mif2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] * self.yu[mif1,mif2] + 7/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] * self.yu[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] * self.yu[mif1,mif2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] * self.yu[mif1,mif2] + 9/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] * self.yu[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,0] * self.yu[mif1,mif2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[1,0] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.ylbar[1,0] * self.yu[mif1,mif2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[1,0] * self.yu[mif1,mif2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,0] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,0] * self.yu[mif1,mif2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,0] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.ylbar[1,0] * self.yu[mif1,mif2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] * self.yu[mif1,mif2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,0] * self.yu[mif1,mif2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,0] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,0] * self.yu[mif1,mif2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,0] * self.yu[mif1,mif2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,0] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,0] * self.yu[mif1,mif2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,0] * self.yu[mif1,mif2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.ylbar[1,0] * self.yu[mif1,mif2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[1,0] * self.yu[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] * self.yu[mif1,mif2] + 3/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] * self.yu[mif1,mif2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] * self.yu[mif1,mif2] + -3/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] * self.yu[mif1,mif2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] * self.yu[mif1,mif2] + -13/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] * self.yu[mif1,mif2] + -7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] * self.yu[mif1,mif2] + -19/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] * self.yu[mif1,mif2] + -9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] * self.yu[mif1,mif2] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] * self.yu[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.ylbar[1,1] * self.yu[mif1,mif2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] * self.yu[mif1,mif2] + 7/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] * self.yu[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] * self.yu[mif1,mif2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] * self.yu[mif1,mif2] + 9/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] * self.yu[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,1] * self.yu[mif1,mif2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[1,1] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.ylbar[1,1] * self.yu[mif1,mif2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[1,1] * self.yu[mif1,mif2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,1] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,1] * self.yu[mif1,mif2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,1] * self.yu[mif1,mif2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,1] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,1] * self.yu[mif1,mif2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,1] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.ylbar[1,1] * self.yu[mif1,mif2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] * self.yu[mif1,mif2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,1] * self.yu[mif1,mif2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,1] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,1] * self.yu[mif1,mif2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,1] * self.yu[mif1,mif2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.ylbar[1,1] * self.yu[mif1,mif2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[1,1] * self.yu[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] * self.yu[mif1,mif2] + 3/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] * self.yu[mif1,mif2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] * self.yu[mif1,mif2] + -3/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] * self.yu[mif1,mif2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] * self.yu[mif1,mif2] + -13/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] * self.yu[mif1,mif2] + -7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] * self.yu[mif1,mif2] + -19/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] * self.yu[mif1,mif2] + -9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] * self.yu[mif1,mif2] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] * self.yu[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.ylbar[1,2] * self.yu[mif1,mif2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] * self.yu[mif1,mif2] + 7/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] * self.yu[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] * self.yu[mif1,mif2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] * self.yu[mif1,mif2] + 9/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] * self.yu[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[1,2] * self.yu[mif1,mif2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[1,2] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.ylbar[1,2] * self.yu[mif1,mif2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[1,2] * self.yu[mif1,mif2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,2] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.ylbar[1,2] * self.yu[mif1,mif2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[1,2] * self.yu[mif1,mif2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,2] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.ylbar[1,2] * self.yu[mif1,mif2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[1,2] * self.yu[mif1,mif2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,2] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.ylbar[1,2] * self.yu[mif1,mif2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,2] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.ylbar[1,2] * self.yu[mif1,mif2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,2] * self.yu[mif1,mif2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[1,2] * self.yu[mif1,mif2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.ylbar[1,2] * self.yu[mif1,mif2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[1,2] * self.yu[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] * self.yu[mif1,mif2] + 3/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] * self.yu[mif1,mif2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] * self.yu[mif1,mif2] + -3/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] * self.yu[mif1,mif2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] * self.yu[mif1,mif2] + -13/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] * self.yu[mif1,mif2] + -7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] * self.yu[mif1,mif2] + -19/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] * self.yu[mif1,mif2] + -9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] * self.yu[mif1,mif2] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] * self.yu[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.ylbar[2,0] * self.yu[mif1,mif2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] * self.yu[mif1,mif2] + 7/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] * self.yu[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] * self.yu[mif1,mif2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] * self.yu[mif1,mif2] + 9/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] * self.yu[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,0] * self.yu[mif1,mif2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,0] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.ylbar[2,0] * self.yu[mif1,mif2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[2,0] * self.yu[mif1,mif2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,0] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.ylbar[2,0] * self.yu[mif1,mif2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[2,0] * self.yu[mif1,mif2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,0] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,0] * self.yu[mif1,mif2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.ylbar[2,0] * self.yu[mif1,mif2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] * self.yu[mif1,mif2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,0] * self.yu[mif1,mif2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,0] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,0] * self.yu[mif1,mif2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,0] * self.yu[mif1,mif2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,0] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,0] * self.yu[mif1,mif2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,0] * self.yu[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] * self.yu[mif1,mif2] + 3/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] * self.yu[mif1,mif2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] * self.yu[mif1,mif2] + -3/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] * self.yu[mif1,mif2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] * self.yu[mif1,mif2] + -13/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] * self.yu[mif1,mif2] + -7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] * self.yu[mif1,mif2] + -19/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] * self.yu[mif1,mif2] + -9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] * self.yu[mif1,mif2] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] * self.yu[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.ylbar[2,1] * self.yu[mif1,mif2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] * self.yu[mif1,mif2] + 7/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] * self.yu[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] * self.yu[mif1,mif2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] * self.yu[mif1,mif2] + 9/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] * self.yu[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,1] * self.yu[mif1,mif2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,1] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.ylbar[2,1] * self.yu[mif1,mif2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[2,1] * self.yu[mif1,mif2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,1] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.ylbar[2,1] * self.yu[mif1,mif2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[2,1] * self.yu[mif1,mif2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,1] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,1] * self.yu[mif1,mif2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,1] * self.yu[mif1,mif2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,1] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,1] * self.yu[mif1,mif2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,1] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.ylbar[2,1] * self.yu[mif1,mif2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,1] * self.yu[mif1,mif2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,1] * self.yu[mif1,mif2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,1] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,1] * self.yu[mif1,mif2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,1] * self.yu[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] * self.yu[mif1,mif2] + 3/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] * self.yu[mif1,mif2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] * self.yu[mif1,mif2] + -3/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] * self.yu[mif1,mif2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] * self.yu[mif1,mif2] + -13/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] * self.yu[mif1,mif2] + -7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] * self.yu[mif1,mif2] + -19/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] * self.yu[mif1,mif2] + -9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] * self.yu[mif1,mif2] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] * self.yu[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.ylbar[2,2] * self.yu[mif1,mif2] + -1/16 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] * self.yu[mif1,mif2] + 7/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] * self.yu[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] * self.yu[mif1,mif2] + 1/16 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] * self.yu[mif1,mif2] + 9/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] * self.yu[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] * self.yu[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[2,2] * self.yu[mif1,mif2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,2] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.ylbar[2,2] * self.yu[mif1,mif2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[2,2] * self.yu[mif1,mif2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,2] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.ylbar[2,2] * self.yu[mif1,mif2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[2,2] * self.yu[mif1,mif2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,2] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.ylbar[2,2] * self.yu[mif1,mif2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[2,2] * self.yu[mif1,mif2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,2] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.ylbar[2,2] * self.yu[mif1,mif2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[2,2] * self.yu[mif1,mif2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,2] * self.yu[mif1,mif2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.ylbar[2,2] * self.yu[mif1,mif2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,2] * self.yu[mif1,mif2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.ylbar[2,2] * self.yu[mif1,mif2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,2] * self.yu[mif1,mif2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[2,2] * self.yu[mif1,mif2])

    def alphaOdH(self, mif1,mif2):
        return (-1/480 * (self.g2)**(4) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -1/240 * (self.g2)**(4) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + 11/576 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + 1/96 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -11/16 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -3/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + 15/128 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + 5/64 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + 11/288 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + 1/48 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + 9/128 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + 3/64 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -11/384 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -1/64 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -55/96 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -5/16 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -11/384 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -1/64 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + 121/96 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + 11/16 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -3/16 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -1/8 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + 49/2304 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + 5/384 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + 19/16 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + 3/4 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -203/1024 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -83/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -3/128 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -1/64 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -49/1024 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -21/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -9/128 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -3/64 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -45/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -15/64 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -15/256 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -5/128 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + 811/384 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + 83/64 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -79/256 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -1/4 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -13/256 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -5/128 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -15/32 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -3/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + 37/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + 21/256 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -5/128 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -3/64 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + 105/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + 39/64 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -111/1024 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -63/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + 5/384 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -1/1536 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + 1/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -1/48 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + -1/1536 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + 1/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + 1/384 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + 1/144 * (self.g2)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] + 1/24 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] + 15/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] + 5/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] + -15/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] + -5/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] + -3/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] + -5/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] + -11/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] + -5/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] + 15/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] + 9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] + 1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] + -7/768 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] + -5/192 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * (self.lambdaDelta1bar[0])**(2) * self.yd[mif1,mif2] + 1/144 * (self.g2)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] + 1/24 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] + 15/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] + 5/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] + -15/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] + -5/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] + -3/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] + -5/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] + -11/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] + -5/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] + 15/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] + 9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] + 1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] + -7/768 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] + -5/96 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] + -5/192 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * (self.lambdaDelta1bar[1])**(2) * self.yd[mif1,mif2] + 1/144 * (self.g2)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] + 1/24 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] + 15/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] + 5/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] + -15/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] + -5/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] + -3/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] + -5/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] + -11/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] + -5/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] + 15/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] + 9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] + 1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] + -7/768 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] + -5/96 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] + -5/96 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] + -5/192 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * (self.lambdaDelta1bar[2])**(2) * self.yd[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] + 7/768 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] + 1/384 * (self.g2)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] + 1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] + -33/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] + -11/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] + -21/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] + -7/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] + 27/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] + 9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] + 35/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] + 15/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] + 1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] + 69/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] + 31/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] + 1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] + 5/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] + 9/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] + -1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] + -9/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] + -13/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) * self.yd[mif1,mif2] + -1/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) * self.yd[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] + 7/768 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] + 1/384 * (self.g2)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] + 1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] + -33/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] + -11/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] + -21/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] + -7/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] + 27/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] + 9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] + 35/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] + 15/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] + 1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] + 69/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] + 31/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] + 1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] + 5/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] + 9/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] + -1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] + -9/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] + -13/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] + -1/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] + -13/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) * self.yd[mif1,mif2] + -1/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) * self.yd[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] + 7/768 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] + 1/384 * (self.g2)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] + 1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] + -33/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] + -11/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] + -21/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] + -7/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] + 27/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] + 9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] + 35/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] + 15/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] + 1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] + 69/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] + 31/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] + 1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] + 5/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] + 9/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] + -1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] + -9/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] + -13/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] + -1/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] + -13/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] + -1/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] + -13/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) * self.yd[mif1,mif2] + -1/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) * self.yd[mif1,mif2] + -1/96 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 3/8 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -5/64 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -1/48 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -3/64 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -5/384 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -3/4 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 83/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 1/64 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 21/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 5/128 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 3/8 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -21/256 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -1/384 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -1/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -1/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -1/384 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -5/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 5/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -9/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -5/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 5/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -9/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -5/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 5/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -9/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 11/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 7/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -15/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 11/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 7/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -15/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 11/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 7/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -15/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 1/64 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 5/16 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 1/64 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -11/16 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 1/8 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 3/64 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 15/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 5/128 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -83/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 1/4 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 3/64 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -39/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 63/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -1/96 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 1/48 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 5/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 5/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 5/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 5/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 5/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 5/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -1/384 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -9/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -31/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -1/384 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -9/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -31/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 1/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -1/384 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -9/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -31/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 1/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 1/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,0] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,0] + 3/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,0] + -3/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,0] + -13/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,0] + -7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,0] + -19/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,0] + -9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,0] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,0] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,0] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,0] + 7/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,0] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,0] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,0] + 9/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,0] + -1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,0] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,0] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,1] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,1] + 3/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,1] + -3/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,1] + -13/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,1] + -7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,1] + -19/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,1] + -9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,1] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,1] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,1] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,1] + 7/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,1] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,1] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,1] + 9/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,1] + -1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,1] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,1] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,2] + 3/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,2] + -3/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,2] + -13/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,2] + -7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,2] + -19/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,2] + -9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yd[mif1,mif2] * self.yl[0,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,2] + 7/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,2] + 9/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,2] + -1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,0] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,0] + 3/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,0] + -3/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,0] + -13/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,0] + -7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,0] + -19/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,0] + -9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,0] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,0] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,0] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,0] + 7/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,0] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,0] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,0] + 9/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,0] + -1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,0] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,0] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,1] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,1] + 3/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,1] + -3/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,1] + -13/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,1] + -7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,1] + -19/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,1] + -9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,1] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,1] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,1] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,1] + 7/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,1] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,1] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,1] + 9/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,1] + -1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,1] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,1] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,2] + 3/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,2] + -3/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,2] + -13/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,2] + -7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,2] + -19/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,2] + -9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yd[mif1,mif2] * self.yl[1,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,2] + 7/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,2] + 9/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,2] + -1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,0] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,0] + 3/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,0] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,0] + -3/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,0] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,0] + -13/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,0] + -7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,0] + -19/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,0] + -9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,0] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,0] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,0] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,0] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,0] + 7/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,0] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,0] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,0] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,0] + 9/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,0] + -1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,0] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,0] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,1] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,1] + 3/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,1] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,1] + -3/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,1] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,1] + -13/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,1] + -7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,1] + -19/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,1] + -9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,1] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,1] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,1] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,1] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,1] + 7/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,1] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,1] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,1] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,1] + 9/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,1] + -1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,1] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,1] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,2] + 3/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,2] + -3/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,2] + -13/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,2] + -7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,2] + -19/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,2] + -9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yd[mif1,mif2] * self.yl[2,2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,2] + 7/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,2] + 9/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,2] + -1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.ylbar[0,0] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.ylbar[0,0] + -9/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.ylbar[0,0] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.ylbar[0,0] + 9/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.ylbar[0,0] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.ylbar[0,0] + 1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.ylbar[0,0] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.ylbar[0,0] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.ylbar[0,0] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.ylbar[0,0] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[0,0] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[0,0] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[0,0] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[0,0] + -3/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[0,0] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[0,0] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[0,0] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[0,0] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[0,0] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[0,0] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[0,0] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[0,0] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[0,0] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[0,0] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[0,0] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[0,0] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[0,0] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[0,0] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[0,0] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[0,0] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[0,0] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.ylbar[0,1] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.ylbar[0,1] + -9/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.ylbar[0,1] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.ylbar[0,1] + 9/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.ylbar[0,1] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.ylbar[0,1] + 1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.ylbar[0,1] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.ylbar[0,1] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.ylbar[0,1] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.ylbar[0,1] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[0,1] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[0,1] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[0,1] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[0,1] + -3/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[0,1] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[0,1] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[0,1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[0,1] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[0,1] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[0,1] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[0,1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[0,1] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[0,1] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[0,1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[0,1] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[0,1] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[0,1] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[0,1] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[0,1] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[0,1] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[0,1] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.ylbar[0,2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.ylbar[0,2] + -9/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.ylbar[0,2] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.ylbar[0,2] + 9/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.ylbar[0,2] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.ylbar[0,2] + 1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.ylbar[0,2] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.ylbar[0,2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.ylbar[0,2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.ylbar[0,2] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[0,2] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[0,2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[0,2] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[0,2] + -3/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[0,2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[0,2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[0,2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[0,2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[0,2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[0,2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[0,2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[0,2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[0,2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[0,2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[0,2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[0,2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[0,2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[0,2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[0,2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[0,2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[0,2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.ylbar[1,0] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.ylbar[1,0] + -9/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.ylbar[1,0] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.ylbar[1,0] + 9/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.ylbar[1,0] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.ylbar[1,0] + 1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.ylbar[1,0] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.ylbar[1,0] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.ylbar[1,0] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.ylbar[1,0] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[1,0] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[1,0] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[1,0] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[1,0] + -3/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[1,0] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[1,0] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[1,0] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[1,0] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[1,0] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[1,0] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[1,0] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[1,0] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[1,0] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[1,0] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[1,0] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[1,0] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[1,0] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[1,0] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[1,0] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[1,0] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[1,0] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.ylbar[1,1] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.ylbar[1,1] + -9/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.ylbar[1,1] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.ylbar[1,1] + 9/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.ylbar[1,1] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.ylbar[1,1] + 1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.ylbar[1,1] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.ylbar[1,1] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.ylbar[1,1] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.ylbar[1,1] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[1,1] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[1,1] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[1,1] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[1,1] + -3/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[1,1] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[1,1] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[1,1] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[1,1] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[1,1] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[1,1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[1,1] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[1,1] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[1,1] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[1,1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[1,1] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[1,1] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[1,1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[1,1] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[1,1] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[1,1] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[1,1] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.ylbar[1,2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.ylbar[1,2] + -9/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.ylbar[1,2] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.ylbar[1,2] + 9/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.ylbar[1,2] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.ylbar[1,2] + 1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.ylbar[1,2] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.ylbar[1,2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.ylbar[1,2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.ylbar[1,2] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[1,2] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[1,2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[1,2] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[1,2] + -3/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[1,2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[1,2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[1,2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[1,2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[1,2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[1,2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[1,2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[1,2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[1,2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[1,2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[1,2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[1,2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[1,2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[1,2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[1,2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[1,2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[1,2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.ylbar[2,0] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.ylbar[2,0] + -9/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.ylbar[2,0] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.ylbar[2,0] + 9/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.ylbar[2,0] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.ylbar[2,0] + 1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.ylbar[2,0] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.ylbar[2,0] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.ylbar[2,0] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.ylbar[2,0] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[2,0] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[2,0] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[2,0] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[2,0] + -3/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[2,0] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[2,0] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[2,0] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[2,0] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,0] * self.ylbar[2,0] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[2,0] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[2,0] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,0] * self.ylbar[2,0] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[2,0] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[2,0] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[2,0] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[2,0] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[2,0] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[2,0] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[2,0] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[2,0] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[2,0] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.ylbar[2,1] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.ylbar[2,1] + -9/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.ylbar[2,1] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.ylbar[2,1] + 9/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.ylbar[2,1] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.ylbar[2,1] + 1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.ylbar[2,1] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.ylbar[2,1] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.ylbar[2,1] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.ylbar[2,1] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[2,1] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[2,1] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[2,1] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[2,1] + -3/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[2,1] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[2,1] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[2,1] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[2,1] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,1] * self.ylbar[2,1] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[2,1] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[2,1] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,1] * self.ylbar[2,1] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[2,1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[2,1] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[2,1] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[2,1] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[2,1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[2,1] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[2,1] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[2,1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[2,1] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.ylbar[2,2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.ylbar[2,2] + -9/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.ylbar[2,2] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.ylbar[2,2] + 9/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.ylbar[2,2] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.ylbar[2,2] + 1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.ylbar[2,2] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.ylbar[2,2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.ylbar[2,2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.ylbar[2,2] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[2,2] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[2,2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[2,2] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[2,2] + -3/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[2,2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.ylbar[2,2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[2,2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[2,2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[0,2] * self.ylbar[2,2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[2,2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[2,2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[1,2] * self.ylbar[2,2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[2,2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,0] * self.ylbar[2,2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[2,2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,1] * self.ylbar[2,2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[2,2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[2,2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[2,2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[2,2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif2] * self.yl[2,2] * self.ylbar[2,2])

    def alphaOeH(self, mif1,mif2):
        return (-1/128 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + -1/64 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + -3/128 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + -3/64 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + 9/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + 1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + -9/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + -3/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + 5/128 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + 5/128 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + 1/128 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + 1/128 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + 9/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + 3/32 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + -3/64 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + -3/64 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + 13/128 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + 7/64 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + -3/256 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + -1/32 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + 11/128 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + 5/64 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + -7/256 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + -7/128 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + 1/128 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + 1/64 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + 3/128 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + 3/64 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + -19/128 * self.lam * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + -9/64 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + -1/128 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + -1/128 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + -1/64 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + -3/128 * (self.g1)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + -3/64 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + 9/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + 1/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[mif1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[mif1] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[mif1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[mif1] + 3/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[mif1] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[mif1] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[mif1] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[mif1] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[mif1] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[mif1] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[mif1] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[mif1] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[mif1] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[mif1] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[mif1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[mif1] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[mif1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[mif1] + 3/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[mif1] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[mif1] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[mif1] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[mif1] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[mif1] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[mif1] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[mif1] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[mif1] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[mif1] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[mif1] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[mif1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[mif1] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[mif1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[mif1] + 3/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[mif1] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[mif1] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[mif1] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[mif1] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[mif1] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[mif1] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[mif1] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[mif1] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[mif1] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[mif1] + 1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] + -5/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] + -5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] + 1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] + 1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] + -5/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] + 3/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] + 3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] + 1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] + 3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] + -3/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] + -3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] + -3/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] + -3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] + 3/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] + 3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] + 1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] + -5/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] + -5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] + 1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] + 1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] + -5/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] + 3/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] + 3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] + 1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] + 3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] + -3/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] + -3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] + -3/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] + -3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] + 3/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] + 3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] + 1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] + -5/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] + -5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] + 1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] + 1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] + -5/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] + 3/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] + 3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] + 1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] + 3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] + -3/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] + -3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] + -3/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] + -3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] + 3/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] + 3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] + 3/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -5/128 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/128 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -3/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/32 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/256 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -3/128 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -3/64 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 5/32 * self.lam * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/128 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 5/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -3/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -3/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 5/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -3/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -3/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 5/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -3/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -3/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/128 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/64 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/8 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/32 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/64 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -5/64 * self.lam * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 13/256 * (self.lambdaHatSigmaDelta1)**(2) * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/64 * self.lam * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/128 * (self.g1)**(2) * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/64 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/8 * self.lam * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/32 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -5/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -5/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -5/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -65/1024 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,0] + -31/512 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,0] + -3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,0] + -1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,0] + 1/32 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,0] + 1/32 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,0] + -1/32 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,0] + -1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,0] + -33/512 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,0] + -13/256 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,0] + 1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] + -1/32 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] + 1/64 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] + 31/512 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] + 1/32 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] + 9/256 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] + -65/1024 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,1] + -31/512 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,1] + -3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,1] + -1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,1] + 1/32 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,1] + 1/32 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,1] + -1/32 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,1] + -1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,1] + -33/512 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,1] + -13/256 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,1] + 1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] + -1/32 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] + 1/64 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] + 31/512 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] + 1/32 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] + 9/256 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] + -65/1024 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,2] + -31/512 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,2] + -3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,2] + -1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,2] + 1/32 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,2] + 1/32 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,2] + -1/32 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,2] + -1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,2] + -33/512 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,2] + -13/256 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,2] + 1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] + -1/32 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] + 1/64 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] + 31/512 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] + 1/32 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] + 9/256 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] + 1/4 * (self.MSigma)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -1/64 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -1/32 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -3/64 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -3/32 * (self.g2)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + 41/128 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + 15/64 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + 3/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + 1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + 27/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + 9/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -63/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -27/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + 9/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + 9/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + 55/2048 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + 25/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -63/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -27/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -43/2048 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -19/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -3/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + 21/2048 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -13/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -7/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -9/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -7/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -1/32 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -39/1024 * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -15/512 * self.invepsilonbar * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -7/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -1/32 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -39/1024 * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -15/512 * self.invepsilonbar * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -7/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -1/32 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -39/1024 * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -15/512 * self.invepsilonbar * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + -9/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + -25/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + 27/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + -5/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + -3/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + 3/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + 3/64 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + 3/32 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + -15/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + 27/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + -9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + 3/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + 3/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + 25/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + 9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + 15/512 * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + 15/512 * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + 15/512 * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] + -65/1024 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,0] + -31/512 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,0] + -3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,0] + -1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,0] + 1/32 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,0] + 1/32 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,0] + -1/32 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,0] + -1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,0] + -33/512 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,0] + -13/256 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,0] + 1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] + -1/32 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] + 1/64 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] + 31/512 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] + 1/32 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] + 9/256 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] + -65/1024 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,1] + -31/512 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,1] + -3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,1] + -1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,1] + 1/32 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,1] + 1/32 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,1] + -1/32 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,1] + -1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,1] + -33/512 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,1] + -13/256 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,1] + 1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] + -1/32 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] + 1/64 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] + 31/512 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] + 1/32 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] + 9/256 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] + -65/1024 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,2] + -31/512 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,2] + -3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,2] + -1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,2] + 1/32 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,2] + 1/32 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,2] + -1/32 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,2] + -1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,2] + -33/512 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,2] + -13/256 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,2] + 1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] + -1/32 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] + 1/64 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] + 31/512 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] + 1/32 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] + 9/256 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] + 1/4 * (self.MSigma)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -1/64 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -1/32 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -3/64 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -3/32 * (self.g2)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + 41/128 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + 15/64 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + 3/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + 1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + 27/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + 9/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -63/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -27/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + 9/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + 9/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + 55/2048 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + 25/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -63/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -27/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -43/2048 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -19/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -3/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + 21/2048 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -13/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -7/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -9/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -7/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -1/32 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -39/1024 * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -15/512 * self.invepsilonbar * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -7/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -1/32 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -39/1024 * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -15/512 * self.invepsilonbar * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -7/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -1/32 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -39/1024 * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -15/512 * self.invepsilonbar * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + -9/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + -25/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + 27/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + -5/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + -3/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + 3/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + 3/64 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + 3/32 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + -15/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + 27/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + -9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + 3/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + 3/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + 25/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + 9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + 15/512 * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + 15/512 * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + 15/512 * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] + -65/1024 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,0] + -31/512 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,0] + -3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,0] + -1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,0] + 1/32 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,0] + 1/32 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,0] + -1/32 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,0] + -1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,0] + -33/512 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,0] + -13/256 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,0] + 1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] + -1/32 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] + 1/64 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] + 31/512 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] + 1/32 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] + 9/256 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] + -65/1024 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,1] + -31/512 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,1] + -3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,1] + -1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,1] + 1/32 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,1] + 1/32 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,1] + -1/32 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,1] + -1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,1] + -33/512 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,1] + -13/256 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,1] + 1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] + -1/32 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] + 1/64 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] + 31/512 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] + 1/32 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] + 9/256 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] + -65/1024 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,2] + -31/512 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,2] + -3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,2] + -1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,2] + 1/32 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,2] + 1/32 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,2] + -1/32 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,2] + -1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,2] + -33/512 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,2] + -13/256 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,2] + 1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] + -1/32 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] + 1/64 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] + 31/512 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] + 1/32 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] + 9/256 * (self.MDelta1)**(-2) * (self.MSigma)**(-2) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] + 1/4 * (self.MSigma)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -1/64 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -1/32 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -3/64 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -3/32 * (self.g2)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + 41/128 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + 15/64 * self.invepsilonbar * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + 3/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + 1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + 27/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + 9/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -63/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -27/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + 9/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + 9/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + 55/2048 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + 25/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -63/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -27/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -43/2048 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -19/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -3/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + 21/2048 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -13/1024 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -7/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -9/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -7/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -1/32 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -39/1024 * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -15/512 * self.invepsilonbar * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -7/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -1/32 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -39/1024 * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -15/512 * self.invepsilonbar * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -7/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -1/32 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -39/1024 * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -15/512 * self.invepsilonbar * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + -9/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + -25/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + 27/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + -5/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + -3/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + 3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + 3/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + 3/64 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + 3/32 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + -15/64 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + 27/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + -9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + 3/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + 3/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + 25/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + 9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + 15/512 * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + 15/512 * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + 1/32 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + 15/512 * (self.MSigma)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * self.lambdaSigmabar[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] + 1/2 * (self.MDelta1)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[mif1,0] + -1/32 * (self.g2)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[mif1,0] + -3/32 * (self.g2)**(2) * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[mif1,0] + 13/32 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[mif1,0] + 5/16 * self.invepsilonbar * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[mif1,0] + 27/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[mif1,0] + 9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[mif1,0] + -63/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[mif1,0] + -27/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[mif1,0] + 9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[mif1,0] + 9/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[mif1,0] + -9/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[mif1,0] + -15/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[mif1,0] + 9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[mif1,0] + 3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[mif1,0] + -21/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[mif1,0] + -9/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[mif1,0] + 3/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[mif1,0] + 3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[mif1,0] + -7/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * (self.lambdaDelta1bar[0])**(2) * self.yl[mif1,0] + -3/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * (self.lambdaDelta1bar[0])**(2) * self.yl[mif1,0] + -9/64 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * (self.lambdaDelta1bar[0])**(2) * self.yl[mif1,0] + -3/32 * self.invepsilonbar * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * (self.lambdaDelta1bar[0])**(2) * self.yl[mif1,0] + -7/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.yl[mif1,0] + -3/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.yl[mif1,0] + -9/64 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.yl[mif1,0] + -3/32 * self.invepsilonbar * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.yl[mif1,0] + -7/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.yl[mif1,0] + -3/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.yl[mif1,0] + -9/64 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.yl[mif1,0] + -3/32 * self.invepsilonbar * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.yl[mif1,0] + -9/512 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,0] + -9/256 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,0] + -9/512 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,0] + -9/256 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,0] + -9/512 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,0] + -9/256 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,0] + 3/32 * (self.g2)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + -5/16 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + -9/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 15/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 9/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 3/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * (self.lambdaDelta1bar[0])**(2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 3/32 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * (self.lambdaDelta1bar[0])**(2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 3/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 3/32 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 3/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 3/32 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 27/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + -9/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + -3/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + -3/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 9/256 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 9/256 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 9/256 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] + 129/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,0] + 41/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,0] + 1/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,0] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,0] + -9/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,0] + -3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,0] + 9/1024 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,0] + 3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,0] + -5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,0] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,0] + 81/1024 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,0] + 31/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,0] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,0] + -59/1024 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,0] + -11/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,0] + 55/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,0] + 7/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,0] + -1/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,0] + 7/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,0] + -1/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,0] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,0] + -41/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,0] + 3/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,0] + -3/512 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,0] + -1/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,0] + -23/512 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,0] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,0] + 7/512 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,0] + -7/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,0] + 129/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,0] + 41/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,0] + 1/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,0] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,0] + -9/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,0] + -3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,0] + 9/1024 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,0] + 3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,0] + -5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,0] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,0] + 81/1024 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,0] + 31/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,0] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,0] + -59/1024 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,0] + -11/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,0] + 55/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,0] + 7/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,0] + -1/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,0] + 7/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,0] + -1/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,0] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,0] + -41/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,0] + 3/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,0] + -3/512 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,0] + -1/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,0] + -23/512 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,0] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,0] + 7/512 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,0] + -7/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,0] + 129/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,0] + 41/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,0] + 1/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,0] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,0] + -9/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,0] + -3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,0] + 9/1024 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,0] + 3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,0] + -5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,0] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,0] + 81/1024 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,0] + 31/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,0] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,0] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,0] + -59/1024 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,0] + -11/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,0] + 55/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,0] + 7/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,0] + -1/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,0] + 7/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,0] + -1/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,0] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,0] + -41/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,0] + 3/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,0] + -3/512 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,0] + -1/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,0] + -23/512 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,0] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,0] + 7/512 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,0] + -7/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,0] + 1/2 * (self.MDelta1)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[mif1,1] + -1/32 * (self.g2)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[mif1,1] + -3/32 * (self.g2)**(2) * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[mif1,1] + 13/32 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[mif1,1] + 5/16 * self.invepsilonbar * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[mif1,1] + 27/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[mif1,1] + 9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[mif1,1] + -63/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[mif1,1] + -27/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[mif1,1] + 9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[mif1,1] + 9/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[mif1,1] + -9/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[mif1,1] + -15/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[mif1,1] + 9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[mif1,1] + 3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[mif1,1] + -21/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[mif1,1] + -9/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[mif1,1] + 3/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[mif1,1] + 3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[mif1,1] + -7/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.yl[mif1,1] + -3/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.yl[mif1,1] + -9/64 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.yl[mif1,1] + -3/32 * self.invepsilonbar * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.yl[mif1,1] + -7/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * (self.lambdaDelta1bar[1])**(2) * self.yl[mif1,1] + -3/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * (self.lambdaDelta1bar[1])**(2) * self.yl[mif1,1] + -9/64 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * (self.lambdaDelta1bar[1])**(2) * self.yl[mif1,1] + -3/32 * self.invepsilonbar * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * (self.lambdaDelta1bar[1])**(2) * self.yl[mif1,1] + -7/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.yl[mif1,1] + -3/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.yl[mif1,1] + -9/64 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.yl[mif1,1] + -3/32 * self.invepsilonbar * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.yl[mif1,1] + -9/512 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,1] + -9/256 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,1] + -9/512 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,1] + -9/256 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,1] + -9/512 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,1] + -9/256 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,1] + 3/32 * (self.g2)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + -5/16 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + -9/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 15/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 9/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 3/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 3/32 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 3/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * (self.lambdaDelta1bar[1])**(2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 3/32 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * (self.lambdaDelta1bar[1])**(2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 3/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 3/32 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 27/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + -9/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + -3/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + -3/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 9/256 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 9/256 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 9/256 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] + 129/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,1] + 41/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,1] + 1/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,1] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,1] + -9/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,1] + -3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,1] + 9/1024 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,1] + 3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,1] + -5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,1] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,1] + 81/1024 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,1] + 31/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,1] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,1] + -59/1024 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,1] + -11/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,1] + 55/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,1] + 7/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,1] + -1/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,1] + 7/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,1] + -1/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,1] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,1] + -41/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,1] + 3/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,1] + -3/512 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,1] + -1/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,1] + -23/512 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,1] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,1] + 7/512 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,1] + -7/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,1] + 129/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,1] + 41/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,1] + 1/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,1] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,1] + -9/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,1] + -3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,1] + 9/1024 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,1] + 3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,1] + -5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,1] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,1] + 81/1024 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,1] + 31/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,1] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,1] + -59/1024 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,1] + -11/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,1] + 55/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,1] + 7/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,1] + -1/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,1] + 7/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,1] + -1/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,1] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,1] + -41/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,1] + 3/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,1] + -3/512 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,1] + -1/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,1] + -23/512 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,1] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,1] + 7/512 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,1] + -7/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,1] + 129/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,1] + 41/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,1] + 1/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,1] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,1] + -9/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,1] + -3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,1] + 9/1024 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,1] + 3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,1] + -5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,1] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,1] + 81/1024 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,1] + 31/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,1] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,1] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,1] + -59/1024 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,1] + -11/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,1] + 55/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,1] + 7/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,1] + -1/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,1] + 7/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,1] + -1/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,1] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,1] + -41/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,1] + 3/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,1] + -3/512 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,1] + -1/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,1] + -23/512 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,1] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,1] + 7/512 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,1] + -7/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,1] + 1/2 * (self.MDelta1)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[mif1,2] + -1/32 * (self.g2)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[mif1,2] + -3/32 * (self.g2)**(2) * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[mif1,2] + 13/32 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[mif1,2] + 5/16 * self.invepsilonbar * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[mif1,2] + 27/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[mif1,2] + 9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[mif1,2] + -63/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[mif1,2] + -27/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[mif1,2] + 9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[mif1,2] + 9/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[mif1,2] + -9/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[mif1,2] + -15/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[mif1,2] + 9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[mif1,2] + 3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[mif1,2] + -21/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[mif1,2] + -9/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[mif1,2] + 3/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[mif1,2] + 3/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[mif1,2] + -7/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.yl[mif1,2] + -3/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.yl[mif1,2] + -9/64 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.yl[mif1,2] + -3/32 * self.invepsilonbar * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.yl[mif1,2] + -7/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.yl[mif1,2] + -3/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.yl[mif1,2] + -9/64 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.yl[mif1,2] + -3/32 * self.invepsilonbar * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.yl[mif1,2] + -7/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * (self.lambdaDelta1bar[2])**(2) * self.yl[mif1,2] + -3/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * (self.lambdaDelta1bar[2])**(2) * self.yl[mif1,2] + -9/64 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * (self.lambdaDelta1bar[2])**(2) * self.yl[mif1,2] + -3/32 * self.invepsilonbar * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * (self.lambdaDelta1bar[2])**(2) * self.yl[mif1,2] + -9/512 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,2] + -9/256 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,2] + -9/512 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,2] + -9/256 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,2] + -9/512 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,2] + -9/256 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,2] + 3/32 * (self.g2)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + -5/16 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + -9/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 15/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 9/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 3/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 3/32 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 3/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 3/32 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 3/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * (self.lambdaDelta1bar[2])**(2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 3/32 * (self.MDelta1)**(-4) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1[mif2] * (self.lambdaDelta1bar[2])**(2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 27/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + -9/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + -3/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + -3/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 9/256 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 9/256 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 9/256 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] + 129/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,2] + 41/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,2] + 1/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,2] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,2] + -9/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,2] + -3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,2] + 9/1024 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,2] + 3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,2] + -5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,2] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,2] + 81/1024 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,2] + 31/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,2] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,2] + -59/1024 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,2] + -11/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,2] + 55/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,2] + 7/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,mif2] * self.yl[mif1,2] + -1/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,2] + 7/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,2] + -1/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,2] + -41/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,2] + 3/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,2] + -3/512 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,2] + -1/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,2] + -23/512 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,2] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,2] + 7/512 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,2] + -7/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,2] + 129/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,2] + 41/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,2] + 1/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,2] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,2] + -9/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,2] + -3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,2] + 9/1024 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,2] + 3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,2] + -5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,2] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,2] + 81/1024 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,2] + 31/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,2] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,2] + -59/1024 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,2] + -11/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,2] + 55/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,2] + 7/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,mif2] * self.yl[mif1,2] + -1/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,2] + 7/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,2] + -1/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,2] + -41/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,2] + 3/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,2] + -3/512 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,2] + -1/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,2] + -23/512 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,2] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,2] + 7/512 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,2] + -7/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,2] + 129/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,2] + 41/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,2] + 1/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,2] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,2] + -9/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,2] + -3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,2] + 9/1024 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,2] + 3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,2] + -5/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,2] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,2] + 81/1024 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,2] + 31/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,2] + -1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,2] + -1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,2] + -59/1024 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,2] + -11/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,2] + 55/1024 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,2] + 7/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,mif2] * self.yl[mif1,2] + -1/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,2] + 7/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,2] + -1/64 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,2] + -41/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,2] + 3/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,2] + -3/512 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,2] + -1/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,2] + -23/512 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,2] + 1/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,2] + 7/512 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,2] + -7/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,2] + -1/480 * (self.g2)**(4) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -1/240 * (self.g2)**(4) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + 11/576 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + 1/96 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -11/16 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -3/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + 15/128 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + 5/64 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + 11/288 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + 1/48 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + 9/128 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + 3/64 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -11/384 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -1/64 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -55/96 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -5/16 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -11/384 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -1/64 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + 121/96 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + 11/16 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -3/16 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -1/8 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + 49/2304 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + 5/384 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + 19/16 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + 3/4 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -203/1024 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -83/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -3/128 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -1/64 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -49/1024 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -21/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -9/128 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -3/64 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -45/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -15/64 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -15/256 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -5/128 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + 811/384 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + 83/64 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -79/256 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -1/4 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -13/256 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -5/128 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -15/32 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -3/8 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + 37/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + 21/256 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -5/128 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -3/64 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + 105/128 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + 39/64 * self.invepsilonbar * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -111/1024 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -63/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + 5/384 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -1/1536 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + 1/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -1/48 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + -1/1536 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + 1/512 * self.invepsilonbar * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + 1/384 * (self.g2)**(2) * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + 1/144 * (self.g2)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[mif1,mif2] + 1/24 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[mif1,mif2] + 15/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[mif1,mif2] + 5/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[mif1,mif2] + -15/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[mif1,mif2] + -5/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[mif1,mif2] + -3/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[mif1,mif2] + -5/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[mif1,mif2] + -11/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[mif1,mif2] + -5/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[mif1,mif2] + 15/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[mif1,mif2] + 9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[mif1,mif2] + 1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[mif1,mif2] + -7/768 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[mif1,mif2] + -5/192 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[0])**(2) * (self.lambdaDelta1bar[0])**(2) * self.yl[mif1,mif2] + 1/144 * (self.g2)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[mif1,mif2] + 1/24 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[mif1,mif2] + 15/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[mif1,mif2] + 5/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[mif1,mif2] + -15/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[mif1,mif2] + -5/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[mif1,mif2] + -3/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[mif1,mif2] + -5/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[mif1,mif2] + -11/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[mif1,mif2] + -5/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[mif1,mif2] + 15/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[mif1,mif2] + 9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[mif1,mif2] + 1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[mif1,mif2] + -7/768 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[mif1,mif2] + -5/96 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[1] * self.yl[mif1,mif2] + -5/192 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[1])**(2) * (self.lambdaDelta1bar[1])**(2) * self.yl[mif1,mif2] + 1/144 * (self.g2)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[mif1,mif2] + 1/24 * self.lam * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[mif1,mif2] + 15/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[mif1,mif2] + 5/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[mif1,mif2] + -15/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[mif1,mif2] + -5/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[mif1,mif2] + -3/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[mif1,mif2] + -5/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[mif1,mif2] + -11/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[mif1,mif2] + -5/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[mif1,mif2] + 15/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[mif1,mif2] + 9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[mif1,mif2] + 1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[mif1,mif2] + -7/768 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[mif1,mif2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[mif1,mif2] + -5/96 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.lambdaDelta1bar[2] * self.yl[mif1,mif2] + -5/96 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.lambdaDelta1bar[2] * self.yl[mif1,mif2] + -5/192 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaDelta1[2])**(2) * (self.lambdaDelta1bar[2])**(2) * self.yl[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] + 7/768 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] + 1/384 * (self.g2)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] + 1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] + -33/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] + -11/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] + -21/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] + -7/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] + 27/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] + 9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] + 35/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] + 15/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] + 1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] + 69/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] + 31/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] + 1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] + 5/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] + 9/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] + -1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] + -9/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] + -13/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) * self.yl[mif1,mif2] + -1/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) * self.yl[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] + 7/768 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] + 1/384 * (self.g2)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] + 1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] + -33/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] + -11/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] + -21/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] + -7/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] + 27/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] + 9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] + 35/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] + 15/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] + 1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] + 69/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] + 31/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] + 1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] + 5/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] + 9/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] + -1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] + -9/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] + -13/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] + -1/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] + -13/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) * self.yl[mif1,mif2] + -1/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) * self.yl[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] + 7/768 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] + 1/384 * (self.g2)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] + 1/32 * self.lam * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] + -33/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] + -11/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] + -21/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] + -7/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] + 27/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] + 9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] + 35/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] + 15/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] + 1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] + 69/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] + 31/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] + 1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] + 5/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] + 9/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] + -1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] + -9/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] + 1/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] + -1/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] + -13/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] + -1/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] + -13/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] + -1/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] + -13/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) * self.yl[mif1,mif2] + -1/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) * self.yl[mif1,mif2] + -1/96 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 3/8 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -5/64 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -1/48 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -3/64 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -5/384 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -3/4 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 83/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 1/64 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 21/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 5/128 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 3/8 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -21/256 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -1/384 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -1/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -1/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -1/384 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -5/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 5/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -9/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -5/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 5/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -9/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -5/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 5/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -9/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 11/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 7/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -15/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 11/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 7/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -15/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 11/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 7/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -15/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -1/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 1/64 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 5/16 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 1/64 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -11/16 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 1/8 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 3/64 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 15/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 5/128 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -83/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 1/4 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 3/64 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -39/64 * self.lam * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 63/512 * (self.lambdaHatSigmaDelta1)**(2) * (self.lambdaHatSigmaDelta1bar)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -1/96 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 1/48 * (self.g2)**(2) * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 5/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 5/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 5/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 5/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 5/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 5/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -1/384 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -9/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -31/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[0])**(2) * (self.lambdaSigmabar[0])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -1/384 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -9/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -31/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 1/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[1])**(2) * (self.lambdaSigmabar[1])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -1/384 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -9/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -31/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 1/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 1/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 1/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * (self.lambdaSigma[2])**(2) * (self.lambdaSigmabar[2])**(2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[mif1,mif2] + 3/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[mif1,mif2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[mif1,mif2] + -3/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[mif1,mif2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[mif1,mif2] + -13/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[mif1,mif2] + -7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[mif1,mif2] + -19/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[mif1,mif2] + -9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * self.yl[0,0] * self.yl[mif1,mif2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[mif1,mif2] + 7/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[mif1,mif2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[mif1,mif2] + 9/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[mif1,mif2] + 3/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[mif1,mif2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[mif1,mif2] + -3/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[mif1,mif2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[mif1,mif2] + -13/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[mif1,mif2] + -7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[mif1,mif2] + -19/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[mif1,mif2] + -9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * self.yl[0,1] * self.yl[mif1,mif2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[mif1,mif2] + 7/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[mif1,mif2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[mif1,mif2] + 9/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[mif1,mif2] + 3/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[mif1,mif2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[mif1,mif2] + -3/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[mif1,mif2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[mif1,mif2] + -13/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[mif1,mif2] + -7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[mif1,mif2] + -19/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[mif1,mif2] + -9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * self.yl[0,2] * self.yl[mif1,mif2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[mif1,mif2] + 7/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[mif1,mif2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[mif1,mif2] + 9/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[mif1,mif2] + 3/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[mif1,mif2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[mif1,mif2] + -3/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[mif1,mif2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[mif1,mif2] + -13/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[mif1,mif2] + -7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[mif1,mif2] + -19/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[mif1,mif2] + -9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * self.yl[1,0] * self.yl[mif1,mif2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[mif1,mif2] + 7/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[mif1,mif2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[mif1,mif2] + 9/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[mif1,mif2] + 3/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[mif1,mif2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[mif1,mif2] + -3/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[mif1,mif2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[mif1,mif2] + -13/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[mif1,mif2] + -7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[mif1,mif2] + -19/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[mif1,mif2] + -9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * self.yl[1,1] * self.yl[mif1,mif2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[mif1,mif2] + 7/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[mif1,mif2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[mif1,mif2] + 9/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] * self.yl[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] * self.yl[mif1,mif2] + 3/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] * self.yl[mif1,mif2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] * self.yl[mif1,mif2] + -3/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] * self.yl[mif1,mif2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] * self.yl[mif1,mif2] + -13/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] * self.yl[mif1,mif2] + -7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] * self.yl[mif1,mif2] + -19/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] * self.yl[mif1,mif2] + -9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] * self.yl[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] * self.yl[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * self.yl[1,2] * self.yl[mif1,mif2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[mif1,mif2] + 7/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[mif1,mif2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[mif1,mif2] + 9/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[mif1,mif2] + 3/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[mif1,mif2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[mif1,mif2] + -3/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[mif1,mif2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[mif1,mif2] + -13/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[mif1,mif2] + -7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[mif1,mif2] + -19/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[mif1,mif2] + -9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * self.yl[2,0] * self.yl[mif1,mif2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[mif1,mif2] + 7/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[mif1,mif2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[mif1,mif2] + 9/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[0] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] * self.yl[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] * self.yl[mif1,mif2] + 3/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] * self.yl[mif1,mif2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] * self.yl[mif1,mif2] + -3/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] * self.yl[mif1,mif2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] * self.yl[mif1,mif2] + -13/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] * self.yl[mif1,mif2] + -7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] * self.yl[mif1,mif2] + -19/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] * self.yl[mif1,mif2] + -9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] * self.yl[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] * self.yl[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * self.yl[2,1] * self.yl[mif1,mif2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[mif1,mif2] + 7/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[mif1,mif2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[mif1,mif2] + 9/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[1] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] * self.yl[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] * self.yl[mif1,mif2] + 3/32 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] * self.yl[mif1,mif2] + 1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] * self.yl[mif1,mif2] + -3/32 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] * self.yl[mif1,mif2] + -1/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] * self.yl[mif1,mif2] + -13/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] * self.yl[mif1,mif2] + -7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] * self.yl[mif1,mif2] + -19/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] * self.yl[mif1,mif2] + -9/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] * self.yl[mif1,mif2] + -3/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] * self.yl[mif1,mif2] + -1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * self.yl[2,2] * self.yl[mif1,mif2] + -1/16 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.yl[mif1,mif2] + 7/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.yl[mif1,mif2] + 1/16 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.yl[mif1,mif2] + 9/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.yl[mif1,mif2] + -1/128 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.yl[mif1,mif2] + 1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[2] * self.lambdaSigma[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.yl[mif1,mif2] + 25/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,0] + 25/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,0] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,0] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,0] + -9/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,0] + -3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,0] + 9/1024 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,0] + 3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,0] + 3/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,0] + 1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,0] + -29/1024 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,0] + -15/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,0] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,0] + -43/1024 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,0] + -27/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,0] + 57/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,0] + 41/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,0] + -1/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,0] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,0] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,0] + 9/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,0] + -25/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,0] + 3/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,0] + -3/512 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,0] + 7/512 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,0] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,0] + 9/512 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,0] + -41/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,0] + 7/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,0] * self.yl[0,mif2] * self.ylbar[0,0] + 5/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,0] * self.yl[0,mif2] * self.ylbar[0,0] + -5/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[0,mif2] * self.ylbar[0,0] + 7/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.yl[1,0] * self.ylbar[0,0] + 5/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.yl[1,0] * self.ylbar[0,0] + -5/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[1,0] * self.ylbar[0,0] + 7/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.yl[2,0] * self.ylbar[0,0] + 5/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.yl[2,0] * self.ylbar[0,0] + -5/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[2,0] * self.ylbar[0,0] + 13/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,0] * self.ylbar[0,0] + 7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,0] * self.ylbar[0,0] + 17/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,0] * self.ylbar[0,0] + 5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,0] * self.ylbar[0,0] + -17/512 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,0] * self.ylbar[0,0] + -5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,0] * self.ylbar[0,0] + -5/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,0] * self.ylbar[0,0] + -5/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,0] * self.ylbar[0,0] + 5/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,0] * self.ylbar[0,0] + 5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,0] * self.ylbar[0,0] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[0,0] + 3/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[0,0] + -7/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[0,0] + 1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[0,0] + 5/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[0,0] + 7/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[0,0] + -5/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[0,0] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[mif1,0] * self.ylbar[0,0] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[mif1,0] * self.ylbar[0,0] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[mif1,0] * self.ylbar[0,0] + 41/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,0] + 3/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,0] + 17/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,0] + 3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,0] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,0] + -3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,0] + 17/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[0,0] + 3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[0,0] + -3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[0,0] + 17/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[0,0] + 3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[0,0] + -3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[0,0] + 41/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,0] + 3/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,0] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,0] + 41/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,0] + 3/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,0] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,0] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.ylbar[0,0] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.ylbar[0,0] + -9/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.ylbar[0,0] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.ylbar[0,0] + 9/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.ylbar[0,0] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.ylbar[0,0] + 1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.ylbar[0,0] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.ylbar[0,0] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.ylbar[0,0] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.ylbar[0,0] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[0,0] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[0,0] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[0,0] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[0,0] + -3/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[0,0] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[0,0] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[0,0] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[0,0] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[0,0] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[0,0] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[0,0] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[0,0] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[0,0] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[0,0] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[0,0] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[0,0] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[0,0] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[0,0] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[0,0] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[0,0] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[0,0] + 25/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,1] + 25/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,1] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,1] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,1] + -9/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,1] + -3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,1] + 9/1024 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,1] + 3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,1] + 3/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,1] + 1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,1] + -29/1024 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,1] + -15/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,1] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,1] + -43/1024 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,1] + -27/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,1] + 57/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,1] + 41/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,1] + -1/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,1] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,1] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,1] + 9/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,1] + -25/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,1] + 3/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,1] + -3/512 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,1] + 7/512 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,1] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,1] + 9/512 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,1] + -41/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,1] + 7/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,1] * self.yl[0,mif2] * self.ylbar[0,1] + 5/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,1] * self.yl[0,mif2] * self.ylbar[0,1] + -5/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[0,mif2] * self.ylbar[0,1] + 7/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.yl[1,1] * self.ylbar[0,1] + 5/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.yl[1,1] * self.ylbar[0,1] + -5/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[1,1] * self.ylbar[0,1] + 7/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.yl[2,1] * self.ylbar[0,1] + 5/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.yl[2,1] * self.ylbar[0,1] + -5/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[2,1] * self.ylbar[0,1] + 41/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,1] + 3/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,1] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,1] + 13/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,1] * self.ylbar[0,1] + 7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,1] * self.ylbar[0,1] + 17/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,1] * self.ylbar[0,1] + 5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,1] * self.ylbar[0,1] + -17/512 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,1] * self.ylbar[0,1] + -5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,1] * self.ylbar[0,1] + -5/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,1] * self.ylbar[0,1] + -5/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,1] * self.ylbar[0,1] + 5/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,1] * self.ylbar[0,1] + 5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,1] * self.ylbar[0,1] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[0,1] + 3/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[0,1] + -7/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[0,1] + 1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[0,1] + 5/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[0,1] + 7/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[0,1] + -5/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[0,1] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[mif1,1] * self.ylbar[0,1] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[mif1,1] * self.ylbar[0,1] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[mif1,1] * self.ylbar[0,1] + 41/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,1] + 3/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,1] + 17/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,1] + 3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,1] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,1] + -3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,1] + 17/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[0,1] + 3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[0,1] + -3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[0,1] + 17/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[0,1] + 3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[0,1] + -3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[0,1] + 41/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,1] + 3/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,1] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,1] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.ylbar[0,1] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.ylbar[0,1] + -9/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.ylbar[0,1] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.ylbar[0,1] + 9/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.ylbar[0,1] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.ylbar[0,1] + 1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.ylbar[0,1] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.ylbar[0,1] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.ylbar[0,1] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.ylbar[0,1] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[0,1] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[0,1] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[0,1] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[0,1] + -3/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[0,1] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[0,1] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[0,1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[0,1] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[0,1] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[0,1] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[0,1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[0,1] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[0,1] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[0,1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[0,1] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[0,1] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[0,1] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[0,1] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[0,1] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[0,1] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[0,1] + 25/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,2] + 25/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,2] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,2] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,2] + -9/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,2] + -3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,2] + 9/1024 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,2] + 3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,2] + 3/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,2] + 1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,2] + -29/1024 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,2] + -15/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,2] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,2] + -43/1024 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,2] + -27/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,2] + 57/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,2] + 41/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.ylbar[0,2] + -1/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,2] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,2] + 9/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,2] + -25/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,2] + 3/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,2] + -3/512 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,2] + 7/512 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,2] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,2] + 9/512 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,2] + -41/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,2] + 7/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,2] * self.yl[0,mif2] * self.ylbar[0,2] + 5/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,2] * self.yl[0,mif2] * self.ylbar[0,2] + -5/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[0,mif2] * self.ylbar[0,2] + 7/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.yl[1,2] * self.ylbar[0,2] + 5/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.yl[1,2] * self.ylbar[0,2] + -5/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[1,2] * self.ylbar[0,2] + 7/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.yl[2,2] * self.ylbar[0,2] + 5/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.yl[2,2] * self.ylbar[0,2] + -5/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[2,2] * self.ylbar[0,2] + 41/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,2] + 3/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,2] + 41/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,2] + 3/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,2] + 13/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,2] * self.ylbar[0,2] + 7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,2] * self.ylbar[0,2] + 17/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,2] * self.ylbar[0,2] + 5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,2] * self.ylbar[0,2] + -17/512 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,2] * self.ylbar[0,2] + -5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,2] * self.ylbar[0,2] + -5/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,2] * self.ylbar[0,2] + -5/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,2] * self.ylbar[0,2] + 5/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,2] * self.ylbar[0,2] + 5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,2] * self.ylbar[0,2] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[0,2] + 3/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[0,2] + -7/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[0,2] + 1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[0,2] + 5/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[0,2] + 7/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[0,2] + -5/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[0,2] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[mif1,2] * self.ylbar[0,2] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[mif1,2] * self.ylbar[0,2] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[mif1,2] * self.ylbar[0,2] + 41/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,2] + 3/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,2] + 17/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,2] + 3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,2] + -3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,2] + 17/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[0,2] + 3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[0,2] + -3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[0,2] + 17/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[0,2] + 3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[0,2] + -3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[0,2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.ylbar[0,2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.ylbar[0,2] + -9/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.ylbar[0,2] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.ylbar[0,2] + 9/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.ylbar[0,2] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.ylbar[0,2] + 1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.ylbar[0,2] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.ylbar[0,2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.ylbar[0,2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.ylbar[0,2] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[0,2] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[0,2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[0,2] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[0,2] + -3/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[0,2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[0,2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[0,2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[0,2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[0,2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[0,2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[0,2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[0,2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[0,2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[0,2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[0,2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[0,2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[0,2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[0,2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[0,2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[0,2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[0,2] + 25/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,0] + 25/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,0] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,0] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,0] + -9/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,0] + -3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,0] + 9/1024 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,0] + 3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,0] + 3/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,0] + 1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,0] + -29/1024 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,0] + -15/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,0] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,0] + -43/1024 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,0] + -27/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,0] + 57/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,0] + 41/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,0] + -1/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,0] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,0] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,0] + 9/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,0] + -25/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,0] + 3/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,0] + -3/512 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,0] + 7/512 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,0] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,0] + 9/512 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,0] + -41/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,0] + 7/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,0] * self.yl[1,mif2] * self.ylbar[1,0] + 5/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,0] * self.yl[1,mif2] * self.ylbar[1,0] + -5/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[1,mif2] * self.ylbar[1,0] + 7/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,0] * self.yl[1,mif2] * self.ylbar[1,0] + 5/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,0] * self.yl[1,mif2] * self.ylbar[1,0] + -5/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[1,mif2] * self.ylbar[1,0] + 7/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.yl[2,0] * self.ylbar[1,0] + 5/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.yl[2,0] * self.ylbar[1,0] + -5/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[2,0] * self.ylbar[1,0] + 13/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,0] * self.ylbar[1,0] + 7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,0] * self.ylbar[1,0] + 17/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,0] * self.ylbar[1,0] + 5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,0] * self.ylbar[1,0] + -17/512 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,0] * self.ylbar[1,0] + -5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,0] * self.ylbar[1,0] + -5/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,0] * self.ylbar[1,0] + -5/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,0] * self.ylbar[1,0] + 5/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,0] * self.ylbar[1,0] + 5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,0] * self.ylbar[1,0] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[1,0] + 3/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[1,0] + -7/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[1,0] + 1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[1,0] + 5/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[1,0] + 7/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[1,0] + -5/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[1,0] + 17/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[1,0] + 3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[1,0] + -3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[1,0] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[mif1,0] * self.ylbar[1,0] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[mif1,0] * self.ylbar[1,0] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.yl[mif1,0] * self.ylbar[1,0] + 41/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,0] + 3/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,0] + 17/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,0] + 3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,0] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,0] + -3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,0] + 17/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[1,0] + 3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[1,0] + -3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[1,0] + 41/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,0] + 3/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,0] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,0] + 41/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,0] + 3/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,0] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,0] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.ylbar[1,0] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.ylbar[1,0] + -9/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.ylbar[1,0] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.ylbar[1,0] + 9/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.ylbar[1,0] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.ylbar[1,0] + 1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.ylbar[1,0] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.ylbar[1,0] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.ylbar[1,0] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.ylbar[1,0] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[1,0] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[1,0] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[1,0] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[1,0] + -3/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[1,0] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[1,0] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[1,0] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[1,0] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[1,0] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[1,0] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[1,0] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[1,0] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[1,0] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[1,0] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[1,0] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[1,0] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[1,0] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[1,0] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[1,0] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[1,0] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[1,0] + 25/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,1] + 25/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,1] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,1] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,1] + -9/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,1] + -3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,1] + 9/1024 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,1] + 3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,1] + 3/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,1] + 1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,1] + -29/1024 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,1] + -15/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,1] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,1] + -43/1024 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,1] + -27/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,1] + 57/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,1] + 41/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,1] + -1/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,1] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,1] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,1] + 9/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,1] + -25/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,1] + 3/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,1] + -3/512 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,1] + 7/512 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,1] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,1] + 9/512 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,1] + -41/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,1] + 7/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,1] * self.yl[1,mif2] * self.ylbar[1,1] + 5/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,1] * self.yl[1,mif2] * self.ylbar[1,1] + -5/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[1,mif2] * self.ylbar[1,1] + 7/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,1] * self.yl[1,mif2] * self.ylbar[1,1] + 5/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,1] * self.yl[1,mif2] * self.ylbar[1,1] + -5/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[1,mif2] * self.ylbar[1,1] + 7/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.yl[2,1] * self.ylbar[1,1] + 5/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.yl[2,1] * self.ylbar[1,1] + -5/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[2,1] * self.ylbar[1,1] + 41/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,1] + 3/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,1] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,1] + 13/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,1] * self.ylbar[1,1] + 7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,1] * self.ylbar[1,1] + 17/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,1] * self.ylbar[1,1] + 5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,1] * self.ylbar[1,1] + -17/512 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,1] * self.ylbar[1,1] + -5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,1] * self.ylbar[1,1] + -5/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,1] * self.ylbar[1,1] + -5/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,1] * self.ylbar[1,1] + 5/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,1] * self.ylbar[1,1] + 5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,1] * self.ylbar[1,1] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[1,1] + 3/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[1,1] + -7/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[1,1] + 1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[1,1] + 5/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[1,1] + 7/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[1,1] + -5/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[1,1] + 17/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[1,1] + 3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[1,1] + -3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[1,1] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[mif1,1] * self.ylbar[1,1] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[mif1,1] * self.ylbar[1,1] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.yl[mif1,1] * self.ylbar[1,1] + 41/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,1] + 3/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,1] + 17/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,1] + 3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,1] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,1] + -3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,1] + 17/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[1,1] + 3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[1,1] + -3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[1,1] + 41/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,1] + 3/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,1] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,1] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.ylbar[1,1] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.ylbar[1,1] + -9/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.ylbar[1,1] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.ylbar[1,1] + 9/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.ylbar[1,1] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.ylbar[1,1] + 1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.ylbar[1,1] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.ylbar[1,1] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.ylbar[1,1] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.ylbar[1,1] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[1,1] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[1,1] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[1,1] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[1,1] + -3/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[1,1] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[1,1] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[1,1] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[1,1] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[1,1] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[1,1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[1,1] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[1,1] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[1,1] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[1,1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[1,1] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[1,1] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[1,1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[1,1] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[1,1] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[1,1] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[1,1] + 25/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,2] + 25/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,2] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,2] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,2] + -9/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,2] + -3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,2] + 9/1024 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,2] + 3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,2] + 3/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,2] + 1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,2] + -29/1024 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,2] + -15/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,2] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,2] + -43/1024 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,2] + -27/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,2] + 57/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,2] + 41/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.ylbar[1,2] + -1/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,2] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,2] + 9/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,2] + -25/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,2] + 3/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,2] + -3/512 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,2] + 7/512 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,2] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,2] + 9/512 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,2] + -41/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,2] + 7/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,2] * self.yl[1,mif2] * self.ylbar[1,2] + 5/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,2] * self.yl[1,mif2] * self.ylbar[1,2] + -5/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[1,mif2] * self.ylbar[1,2] + 7/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,2] * self.yl[1,mif2] * self.ylbar[1,2] + 5/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,2] * self.yl[1,mif2] * self.ylbar[1,2] + -5/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[1,mif2] * self.ylbar[1,2] + 7/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.yl[2,2] * self.ylbar[1,2] + 5/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.yl[2,2] * self.ylbar[1,2] + -5/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[2,2] * self.ylbar[1,2] + 41/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,2] + 3/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,2] + 41/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,2] + 3/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,2] + 13/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,2] * self.ylbar[1,2] + 7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,2] * self.ylbar[1,2] + 17/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,2] * self.ylbar[1,2] + 5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,2] * self.ylbar[1,2] + -17/512 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,2] * self.ylbar[1,2] + -5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,2] * self.ylbar[1,2] + -5/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,2] * self.ylbar[1,2] + -5/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,2] * self.ylbar[1,2] + 5/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,2] * self.ylbar[1,2] + 5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,2] * self.ylbar[1,2] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[1,2] + 3/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[1,2] + -7/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[1,2] + 1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[1,2] + 5/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[1,2] + 7/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[1,2] + -5/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[1,2] + 17/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[1,2] + 3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[1,2] + -3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[1,2] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[mif1,2] * self.ylbar[1,2] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[mif1,2] * self.ylbar[1,2] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.yl[mif1,2] * self.ylbar[1,2] + 41/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,2] + 3/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,2] + 17/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,2] + 3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,2] + -3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,2] + 17/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[1,2] + 3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[1,2] + -3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[1,2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.ylbar[1,2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.ylbar[1,2] + -9/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.ylbar[1,2] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.ylbar[1,2] + 9/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.ylbar[1,2] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.ylbar[1,2] + 1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.ylbar[1,2] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.ylbar[1,2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.ylbar[1,2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.ylbar[1,2] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[1,2] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[1,2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[1,2] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[1,2] + -3/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[1,2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[1,2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[1,2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[1,2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[1,2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[1,2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[1,2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[1,2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[1,2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[1,2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[1,2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[1,2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[1,2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[1,2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[1,2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[1,2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[1,2] + 25/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,0] + 25/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,0] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,0] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,0] + -9/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,0] + -3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,0] + 9/1024 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,0] + 3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,0] + 3/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,0] + 1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,0] + -29/1024 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,0] + -15/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,0] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,0] + -43/1024 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,0] + -27/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,0] + 57/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,0] + 41/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,0] + -1/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,0] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,0] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,0] + 9/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,0] + -25/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,0] + 3/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,0] + -3/512 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,0] + 7/512 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,0] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,0] + 9/512 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,0] + -41/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,0] + 7/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,0] * self.yl[2,mif2] * self.ylbar[2,0] + 5/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,0] * self.yl[2,mif2] * self.ylbar[2,0] + -5/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[2,mif2] * self.ylbar[2,0] + 7/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,0] * self.yl[2,mif2] * self.ylbar[2,0] + 5/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,0] * self.yl[2,mif2] * self.ylbar[2,0] + -5/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[2,mif2] * self.ylbar[2,0] + 7/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,0] * self.yl[2,mif2] * self.ylbar[2,0] + 5/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,0] * self.yl[2,mif2] * self.ylbar[2,0] + -5/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[2,mif2] * self.ylbar[2,0] + 13/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,0] * self.ylbar[2,0] + 7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,0] * self.ylbar[2,0] + 17/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,0] * self.ylbar[2,0] + 5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,0] * self.ylbar[2,0] + -17/512 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,0] * self.ylbar[2,0] + -5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,0] * self.ylbar[2,0] + -5/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,0] * self.ylbar[2,0] + -5/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,0] * self.ylbar[2,0] + 5/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,0] * self.ylbar[2,0] + 5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,0] * self.ylbar[2,0] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[2,0] + 3/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[2,0] + -7/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[2,0] + 1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[2,0] + 5/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[2,0] + 7/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[2,0] + -5/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[2,0] + 17/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[2,0] + 3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[2,0] + -3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[2,0] + 17/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[2,0] + 3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[2,0] + -3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[2,0] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.yl[mif1,0] * self.ylbar[2,0] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.yl[mif1,0] * self.ylbar[2,0] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.yl[mif1,0] * self.ylbar[2,0] + 41/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,0] + 3/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,0] + 17/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,0] + 3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,0] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,0] + -3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,0] + 41/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,0] + 3/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,0] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,0] + 41/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,0] + 3/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,0] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,0] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.ylbar[2,0] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.ylbar[2,0] + -9/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.ylbar[2,0] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.ylbar[2,0] + 9/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.ylbar[2,0] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.ylbar[2,0] + 1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.ylbar[2,0] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.ylbar[2,0] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.ylbar[2,0] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.ylbar[2,0] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[2,0] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[2,0] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[2,0] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[2,0] + -3/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[2,0] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[2,0] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[2,0] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[2,0] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.yl[mif1,mif2] * self.ylbar[2,0] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[2,0] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[2,0] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.yl[mif1,mif2] * self.ylbar[2,0] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[2,0] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[2,0] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[2,0] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[2,0] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[2,0] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[2,0] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[2,0] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[2,0] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[2,0] + 25/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,1] + 25/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,1] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,1] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,1] + -9/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,1] + -3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,1] + 9/1024 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,1] + 3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,1] + 3/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,1] + 1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,1] + -29/1024 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,1] + -15/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,1] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,1] + -43/1024 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,1] + -27/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,1] + 57/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,1] + 41/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,1] + -1/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,1] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,1] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,1] + 9/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,1] + -25/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,1] + 3/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,1] + -3/512 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,1] + 7/512 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,1] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,1] + 9/512 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,1] + -41/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,1] + 7/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,1] * self.yl[2,mif2] * self.ylbar[2,1] + 5/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,1] * self.yl[2,mif2] * self.ylbar[2,1] + -5/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[2,mif2] * self.ylbar[2,1] + 7/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,1] * self.yl[2,mif2] * self.ylbar[2,1] + 5/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,1] * self.yl[2,mif2] * self.ylbar[2,1] + -5/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[2,mif2] * self.ylbar[2,1] + 7/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,1] * self.yl[2,mif2] * self.ylbar[2,1] + 5/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,1] * self.yl[2,mif2] * self.ylbar[2,1] + -5/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[2,mif2] * self.ylbar[2,1] + 41/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,1] + 3/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,1] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,1] + 13/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,1] * self.ylbar[2,1] + 7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,1] * self.ylbar[2,1] + 17/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,1] * self.ylbar[2,1] + 5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,1] * self.ylbar[2,1] + -17/512 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,1] * self.ylbar[2,1] + -5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,1] * self.ylbar[2,1] + -5/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,1] * self.ylbar[2,1] + -5/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,1] * self.ylbar[2,1] + 5/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,1] * self.ylbar[2,1] + 5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,1] * self.ylbar[2,1] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[2,1] + 3/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[2,1] + -7/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[2,1] + 1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[2,1] + 5/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[2,1] + 7/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[2,1] + -5/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[2,1] + 17/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[2,1] + 3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[2,1] + -3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[2,1] + 17/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[2,1] + 3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[2,1] + -3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[2,1] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.yl[mif1,1] * self.ylbar[2,1] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.yl[mif1,1] * self.ylbar[2,1] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.yl[mif1,1] * self.ylbar[2,1] + 41/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,1] + 3/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,1] + 17/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,1] + 3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,1] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,1] + -3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,1] + 41/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,1] + 3/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,1] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,1] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.ylbar[2,1] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.ylbar[2,1] + -9/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.ylbar[2,1] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.ylbar[2,1] + 9/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.ylbar[2,1] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.ylbar[2,1] + 1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.ylbar[2,1] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.ylbar[2,1] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.ylbar[2,1] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.ylbar[2,1] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[2,1] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[2,1] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[2,1] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[2,1] + -3/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[2,1] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[2,1] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[2,1] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[2,1] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.yl[mif1,mif2] * self.ylbar[2,1] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[2,1] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[2,1] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.yl[mif1,mif2] * self.ylbar[2,1] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[2,1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[2,1] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[2,1] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[2,1] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[2,1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[2,1] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[2,1] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[2,1] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[2,1] + 25/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,2] + 25/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,2] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,2] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,2] + -9/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,2] + -3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,2] + 9/1024 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,2] + 3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,2] + 3/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,2] + 1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,2] + -29/1024 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,2] + -15/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,2] + 1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,2] + -43/1024 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,2] + -27/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,2] + 57/1024 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,2] + 41/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.ylbar[2,2] + -1/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,2] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,2] + 9/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,2] + -25/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,2] + 3/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,2] + -3/512 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,2] + 7/512 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,2] + -1/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,2] + 9/512 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,2] + -41/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,2] + 7/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,2] * self.yl[2,mif2] * self.ylbar[2,2] + 5/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,2] * self.yl[2,mif2] * self.ylbar[2,2] + -5/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[2,mif2] * self.ylbar[2,2] + 7/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,2] * self.yl[2,mif2] * self.ylbar[2,2] + 5/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,2] * self.yl[2,mif2] * self.ylbar[2,2] + -5/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[2,mif2] * self.ylbar[2,2] + 7/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,2] * self.yl[2,mif2] * self.ylbar[2,2] + 5/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,2] * self.yl[2,mif2] * self.ylbar[2,2] + -5/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.yl[2,mif2] * self.ylbar[2,2] + 41/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,2] + 3/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,2] + 41/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,2] + 3/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,2] + 13/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,2] * self.ylbar[2,2] + 7/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,2] * self.ylbar[2,2] + 17/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,2] * self.ylbar[2,2] + 5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,2] * self.ylbar[2,2] + -17/512 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,2] * self.ylbar[2,2] + -5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,2] * self.ylbar[2,2] + -5/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,2] * self.ylbar[2,2] + -5/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,2] * self.ylbar[2,2] + 5/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,2] * self.ylbar[2,2] + 5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,2] * self.ylbar[2,2] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[2,2] + 3/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[2,2] + -7/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[2,2] + 1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[2,2] + 5/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[2,2] + 7/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[2,2] + -5/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[2,2] + 17/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[2,2] + 3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[2,2] + -3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[2,2] + 17/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[2,2] + 3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[2,2] + -3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[2,2] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.yl[mif1,2] * self.ylbar[2,2] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.yl[mif1,2] * self.ylbar[2,2] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.yl[mif1,2] * self.ylbar[2,2] + 41/384 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,2] + 3/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,2] + 17/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,2] + 3/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,2] + -3/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.ylbar[2,2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.ylbar[2,2] + -9/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.ylbar[2,2] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.ylbar[2,2] + 9/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.ylbar[2,2] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.ylbar[2,2] + 1/64 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.ylbar[2,2] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.ylbar[2,2] + -1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.ylbar[2,2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.ylbar[2,2] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[2,2] + 1/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[2,2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[2,2] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[2,2] + -3/128 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[2,2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.ylbar[2,2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[2,2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[2,2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.yl[mif1,mif2] * self.ylbar[2,2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[2,2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[2,2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.yl[mif1,mif2] * self.ylbar[2,2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[2,2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[0] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.yl[mif1,mif2] * self.ylbar[2,2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[2,2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.yl[mif1,mif2] * self.ylbar[2,2] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[2,2] + -7/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[2,2] + 1/128 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[2,2] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[2,2] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.yl[mif1,mif2] * self.ylbar[2,2])

    def alphaOqq1(self, mif1,mif2,mif3,mif4):
        return -1/8640 * (self.g1)**(4) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4)

    def alphaOqq3(self, mif1,mif2,mif3,mif4):
        return (-1/960 * (self.g2)**(4) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -1/480 * (self.g2)**(4) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4))

    def alphaOuu(self, mif1,mif2,mif3,mif4):
        return -1/540 * (self.g1)**(4) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4)

    def alphaOdd(self, mif1,mif2,mif3,mif4):
        return -1/2160 * (self.g1)**(4) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4)

    def alphaOud1(self, mif1,mif2,mif3,mif4):
        return 1/540 * (self.g1)**(4) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4)

    def alphaOud8(self, mif1,mif2,mif3,mif4):
        return 0

    def alphaOqu1(self, mif1,mif2,mif3,mif4):
        return (-1/1080 * (self.g1)**(4) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/216 * (self.g1)**(4) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -1/108 * (self.g1)**(4) * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/108 * (self.g1)**(4) * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -1/216 * (self.g1)**(4) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/1080 * (self.g1)**(4) * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -1/384 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 1/48 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/48 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 1/384 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/288 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 5/288 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -5/144 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 5/144 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -5/288 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 1/288 * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/288 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 5/288 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -5/144 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 5/144 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -5/288 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 1/288 * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/288 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 5/288 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -5/144 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 5/144 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -5/288 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 1/288 * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 5/384 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/384 * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -5/192 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 5/192 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -5/384 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 1/384 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 5/384 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/384 * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -5/192 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 5/192 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -5/384 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 1/384 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 5/384 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/384 * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -5/192 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 5/192 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -5/384 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 1/384 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif4] * self.yubar[mif2,mif3])

    def alphaOqu8(self, mif1,mif2,mif3,mif4):
        return (-1/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 1/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/48 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 5/48 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -5/24 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 5/24 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -5/48 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 1/48 * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/48 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 5/48 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -5/24 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 5/24 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -5/48 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 1/48 * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/48 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 5/48 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -5/24 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 5/24 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -5/48 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 1/48 * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 5/64 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/64 * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -5/32 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 5/32 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -5/64 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 1/64 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 5/64 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/64 * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -5/32 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 5/32 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -5/64 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 1/64 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 5/64 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -1/64 * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -5/32 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 5/32 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -5/64 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 1/64 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + -3/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif4] * self.yubar[mif2,mif3] + 3/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif1,mif4] * self.yubar[mif2,mif3])

    def alphaOqd1(self, mif1,mif2,mif3,mif4):
        return (1/2160 * (self.g1)**(4) * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -1/432 * (self.g1)**(4) * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/216 * (self.g1)**(4) * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -1/216 * (self.g1)**(4) * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/432 * (self.g1)**(4) * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -1/2160 * (self.g1)**(4) * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -1/384 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 1/48 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/48 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 1/384 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/288 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 5/288 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -5/144 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 5/144 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -5/288 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 1/288 * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/288 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 5/288 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -5/144 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 5/144 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -5/288 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 1/288 * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/288 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 5/288 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -5/144 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 5/144 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -5/288 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 1/288 * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 5/384 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/384 * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -5/192 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 5/192 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -5/384 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 1/384 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 5/384 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/384 * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -5/192 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 5/192 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -5/384 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 1/384 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 5/384 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/384 * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -5/192 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 5/192 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -5/384 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 1/384 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 1/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.ydbar[mif2,mif3])

    def alphaOqd8(self, mif1,mif2,mif3,mif4):
        return (-1/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 1/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/48 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 5/48 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -5/24 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 5/24 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -5/48 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 1/48 * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/48 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 5/48 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -5/24 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 5/24 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -5/48 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 1/48 * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/48 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 5/48 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -5/24 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 5/24 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -5/48 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 1/48 * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 5/64 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/64 * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -5/32 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 5/32 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -5/64 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 1/64 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 5/64 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/64 * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -5/32 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 5/32 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -5/64 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 1/64 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 5/64 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -1/64 * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -5/32 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 5/32 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -5/64 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 1/64 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + -3/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.ydbar[mif2,mif3] + 3/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.ydbar[mif2,mif3])

    def alphaOquqd1(self, mif1,mif2,mif3,mif4):
        return (1/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.yu[mif1,mif2] + -1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.yu[mif1,mif2] + 1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.yu[mif1,mif2] + -1/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.yu[mif1,mif2] + 1/48 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + -5/48 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + 5/24 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + -5/24 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + 5/48 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + -1/48 * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + 1/48 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + -5/48 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + 5/24 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + -5/24 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + 5/48 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + -1/48 * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + 1/48 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + -5/48 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + 5/24 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + -5/24 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + 5/48 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + -1/48 * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + -5/64 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + 1/64 * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + 5/32 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + -5/32 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + 5/64 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + -1/64 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + -5/64 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + 1/64 * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + 5/32 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + -5/32 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + 5/64 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + -1/64 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + -5/64 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + 1/64 * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + 5/32 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + -5/32 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + 5/64 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + -1/64 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yd[mif3,mif4] * self.yu[mif1,mif2] + 3/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif3,mif4] * self.yu[mif1,mif2] + -3/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif3,mif4] * self.yu[mif1,mif2])

    def alphaOquqd8(self, mif1,mif2,mif3,mif4):
        return 0

    def alphaOll(self, mif1,mif2,mif3,mif4):
        return (-1/480 * (self.g2)**(4) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -1/240 * (self.g2)**(4) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -1/960 * (self.g1)**(4) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/960 * (self.g2)**(4) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/480 * (self.g2)**(4) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -11/6144 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -25/6144 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 1/512 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -1/1024 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -1/3072 * (self.g2)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 25/3072 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.lambdaSigma[mif4] * self.lambdaSigmabar[mif1] + -1/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.lambdaSigma[mif4] * self.lambdaSigmabar[mif1] + 1/1536 * (self.g2)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.lambdaSigma[mif4] * self.lambdaSigmabar[mif1] + 25/3072 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif3] + -1/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif3] + 1/1536 * (self.g2)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif3] + -11/6144 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[mif4] * self.lambdaSigmabar[mif3] + -25/6144 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[mif4] * self.lambdaSigmabar[mif3] + 1/512 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[mif4] * self.lambdaSigmabar[mif3] + -1/1024 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[mif4] * self.lambdaSigmabar[mif3] + -1/3072 * (self.g2)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[mif4] * self.lambdaSigmabar[mif3] + -9/2048 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigma[mif4] * self.lambdaSigmabar[mif1] * self.lambdaSigmabar[mif3] + -1/1024 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigma[mif4] * self.lambdaSigmabar[mif1] * self.lambdaSigmabar[mif3] + 1/1024 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/3072 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/1536 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.lambdaSigma[mif4] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/1536 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif3] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/1024 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[mif4] * self.lambdaSigmabar[mif3] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/3072 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaSigma[mif4] * self.lambdaSigmabar[mif3] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigma[mif4] * self.lambdaSigmabar[mif1] * self.lambdaSigmabar[mif3] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif4] * self.lambdaSigmabar[mif3] * self.yl[mif1,0] * self.ylbar[mif2,0] + -1/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif4] * self.lambdaSigmabar[mif3] * self.yl[mif1,0] * self.ylbar[mif2,0] + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif4] * self.lambdaSigmabar[mif3] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[mif2,0] + -3/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif4] * self.lambdaSigmabar[mif1] * self.yl[mif3,0] * self.ylbar[mif2,0] + -1/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif4] * self.lambdaSigmabar[mif1] * self.yl[mif3,0] * self.ylbar[mif2,0] + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif4] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif3,0] * self.ylbar[mif2,0] + -3/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif4] * self.lambdaSigmabar[mif3] * self.yl[mif1,1] * self.ylbar[mif2,1] + -1/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif4] * self.lambdaSigmabar[mif3] * self.yl[mif1,1] * self.ylbar[mif2,1] + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif4] * self.lambdaSigmabar[mif3] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[mif2,1] + -3/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif4] * self.lambdaSigmabar[mif1] * self.yl[mif3,1] * self.ylbar[mif2,1] + -1/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif4] * self.lambdaSigmabar[mif1] * self.yl[mif3,1] * self.ylbar[mif2,1] + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif4] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif3,1] * self.ylbar[mif2,1] + -3/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif4] * self.lambdaSigmabar[mif3] * self.yl[mif1,2] * self.ylbar[mif2,2] + -1/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif4] * self.lambdaSigmabar[mif3] * self.yl[mif1,2] * self.ylbar[mif2,2] + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif4] * self.lambdaSigmabar[mif3] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[mif2,2] + -3/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif4] * self.lambdaSigmabar[mif1] * self.yl[mif3,2] * self.ylbar[mif2,2] + -1/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif4] * self.lambdaSigmabar[mif1] * self.yl[mif3,2] * self.ylbar[mif2,2] + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif4] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif3,2] * self.ylbar[mif2,2] + -3/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif3] * self.yl[mif1,0] * self.ylbar[mif4,0] + -1/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif3] * self.yl[mif1,0] * self.ylbar[mif4,0] + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif3] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[mif4,0] + -3/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yl[mif3,0] * self.ylbar[mif4,0] + -1/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yl[mif3,0] * self.ylbar[mif4,0] + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif3,0] * self.ylbar[mif4,0] + -3/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif3] * self.yl[mif1,1] * self.ylbar[mif4,1] + -1/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif3] * self.yl[mif1,1] * self.ylbar[mif4,1] + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif3] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[mif4,1] + -3/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yl[mif3,1] * self.ylbar[mif4,1] + -1/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yl[mif3,1] * self.ylbar[mif4,1] + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif3,1] * self.ylbar[mif4,1] + -3/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif3] * self.yl[mif1,2] * self.ylbar[mif4,2] + -1/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif3] * self.yl[mif1,2] * self.ylbar[mif4,2] + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif3] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[mif4,2] + -3/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yl[mif3,2] * self.ylbar[mif4,2] + -1/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yl[mif3,2] * self.ylbar[mif4,2] + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif3,2] * self.ylbar[mif4,2])

    def alphaOee(self, mif1,mif2,mif3,mif4):
        return (-1/240 * (self.g1)**(4) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 5/1152 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] + -1/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] + -1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] + 5/1152 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] + -1/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] + -1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif1] * self.lambdaDelta1bar[mif3] + 1/192 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/192 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/128 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.yl[0,mif2] * self.ylbar[0,mif1] + 1/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.yl[0,mif2] * self.ylbar[0,mif1] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif2] * self.ylbar[0,mif1] + 3/128 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * self.yl[0,mif4] * self.ylbar[0,mif3] + 1/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * self.yl[0,mif4] * self.ylbar[0,mif3] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[0,mif4] * self.ylbar[0,mif3] + 3/128 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.yl[1,mif2] * self.ylbar[1,mif1] + 1/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.yl[1,mif2] * self.ylbar[1,mif1] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif2] * self.ylbar[1,mif1] + 3/128 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * self.yl[1,mif4] * self.ylbar[1,mif3] + 1/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * self.yl[1,mif4] * self.ylbar[1,mif3] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[1,mif4] * self.ylbar[1,mif3] + 3/128 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.yl[2,mif2] * self.ylbar[2,mif1] + 1/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.yl[2,mif2] * self.ylbar[2,mif1] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif2] * self.ylbar[2,mif1] + 3/128 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * self.yl[2,mif4] * self.ylbar[2,mif3] + 1/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * self.yl[2,mif4] * self.ylbar[2,mif3] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[2,mif4] * self.ylbar[2,mif3])

    def alphaOle(self, mif1,mif2,mif3,mif4):
        return (-1/240 * (self.g1)**(4) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 5/1152 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] + -1/128 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] + -1/192 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] + -11/1536 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -1/256 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -9/512 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -3/256 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 9/512 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 3/256 * self.invepsilonbar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -9/512 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -3/256 * self.invepsilonbar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 1/192 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -3/256 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/256 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/256 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/256 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif3] * self.lambdaSigma[mif2] * self.yl[mif1,mif4] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif3] * self.lambdaSigma[mif2] * self.yl[mif1,mif4] + 9/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif3] * self.lambdaSigma[mif2] * self.yl[mif1,mif4] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif3] * self.lambdaSigma[mif2] * self.yl[mif1,mif4] + -9/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif3] * self.lambdaSigma[mif2] * self.yl[mif1,mif4] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif3] * self.lambdaSigma[mif2] * self.yl[mif1,mif4] + -13/512 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif3] * self.lambdaSigma[mif2] * self.yl[mif1,mif4] + -7/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif3] * self.lambdaSigma[mif2] * self.yl[mif1,mif4] + -11/512 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif3] * self.lambdaSigma[mif2] * self.yl[mif1,mif4] + -5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif3] * self.lambdaSigma[mif2] * self.yl[mif1,mif4] + -1/512 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif3] * self.lambdaSigma[mif2] * self.yl[mif1,mif4] + -1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif3] * self.lambdaSigma[mif2] * self.yl[mif1,mif4] + 1/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif3] * self.lambdaSigma[mif2] * self.yl[mif1,mif4] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif3] * self.lambdaSigma[mif2] * self.yl[mif1,mif4] + -3/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif3] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif4] + 3/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif3] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif4] + -1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif3] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif4] + 3/128 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif3] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif4] + 1/256 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif3] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif4] + 5/256 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif3] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif4] + 1/256 * self.lambdaHatSigmaDelta1bar * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif3] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif4] + -1/128 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1bar[mif3] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif4] + 9/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yl[0,mif4] * self.ylbar[0,mif3] + 3/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yl[0,mif4] * self.ylbar[0,mif3] + -3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,mif4] * self.ylbar[0,mif3] + -3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * self.yl[mif1,mif4] * self.ylbar[0,mif3] + 9/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yl[1,mif4] * self.ylbar[1,mif3] + 3/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yl[1,mif4] * self.ylbar[1,mif3] + -3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,mif4] * self.ylbar[1,mif3] + -3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * self.yl[mif1,mif4] * self.ylbar[1,mif3] + 9/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yl[2,mif4] * self.ylbar[2,mif3] + 3/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yl[2,mif4] * self.ylbar[2,mif3] + -3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,mif4] * self.ylbar[2,mif3] + -3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * self.yl[mif1,mif4] * self.ylbar[2,mif3] + -3/128 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.yl[mif1,0] * self.ylbar[mif2,0] + -1/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.yl[mif1,0] * self.ylbar[mif2,0] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,0] * self.ylbar[mif2,0] + -3/128 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.yl[mif1,1] * self.ylbar[mif2,1] + -1/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.yl[mif1,1] * self.ylbar[mif2,1] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,1] * self.ylbar[mif2,1] + -3/128 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.yl[mif1,2] * self.ylbar[mif2,2] + -1/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.yl[mif1,2] * self.ylbar[mif2,2] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,2] * self.ylbar[mif2,2] + 1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,mif3] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,mif3] + 9/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,mif3] + 3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,mif3] + -9/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,mif3] + -3/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,mif3] + -13/512 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,mif3] + -7/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,mif3] + -11/512 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,mif3] + -5/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,mif3] + -1/512 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,mif3] + -1/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,mif3] + 1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,mif3] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaSigmabar[mif1] * self.ylbar[mif2,mif3] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,mif3] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,mif3] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,mif3] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,mif3] + 1/256 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,mif3] + 5/256 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,mif3] + 1/256 * self.lambdaHatSigmaDelta1 * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,mif3] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,mif3] + -3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif4] * self.ylbar[mif2,mif3] + -3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif4] * self.ylbar[mif2,mif3] + -3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif4] * self.ylbar[mif2,mif3] + 11/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + 3/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + 55/384 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + 5/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + -121/384 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + -11/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + -19/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + -3/16 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + 45/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + 15/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + -811/1536 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + -83/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + 15/128 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + 3/32 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + -105/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + -39/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + -1/96 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + -1/96 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + -1/96 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + -1/128 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + -3/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + 3/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + -3/32 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + -5/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + 11/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + -15/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + 83/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-4) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif4] * self.ylbar[mif2,mif3] + 39/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif4] * self.ylbar[mif2,mif3])

    def alphaOlq1(self, mif1,mif2,mif3,mif4):
        return (1/1440 * (self.g1)**(4) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 11/9216 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 1/1536 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -1/1536 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yd[mif3,0] * self.ydbar[mif4,0] + -3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yd[mif3,0] * self.ydbar[mif4,0] + 3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif3,0] * self.ydbar[mif4,0] + -9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yd[mif3,1] * self.ydbar[mif4,1] + -3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yd[mif3,1] * self.ydbar[mif4,1] + 3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif3,1] * self.ydbar[mif4,1] + -9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yd[mif3,2] * self.ydbar[mif4,2] + -3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yd[mif3,2] * self.ydbar[mif4,2] + 3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif3,2] * self.ydbar[mif4,2] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yu[mif3,0] * self.yubar[mif4,0] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yu[mif3,0] * self.yubar[mif4,0] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif3,0] * self.yubar[mif4,0] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yu[mif3,1] * self.yubar[mif4,1] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yu[mif3,1] * self.yubar[mif4,1] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif3,1] * self.yubar[mif4,1] + 9/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yu[mif3,2] * self.yubar[mif4,2] + 3/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yu[mif3,2] * self.yubar[mif4,2] + -3/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif3,2] * self.yubar[mif4,2])

    def alphaOlq3(self, mif1,mif2,mif3,mif4):
        return (-1/480 * (self.g2)**(4) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -1/240 * (self.g2)**(4) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 25/3072 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -1/256 * (self.g2)**(2) * (self.iCPV)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 1/1536 * (self.g2)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -1/1536 * (self.g2)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yd[mif3,0] * self.ydbar[mif4,0] + -1/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yd[mif3,0] * self.ydbar[mif4,0] + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif3,0] * self.ydbar[mif4,0] + -3/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yd[mif3,1] * self.ydbar[mif4,1] + -1/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yd[mif3,1] * self.ydbar[mif4,1] + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif3,1] * self.ydbar[mif4,1] + -3/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yd[mif3,2] * self.ydbar[mif4,2] + -1/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yd[mif3,2] * self.ydbar[mif4,2] + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[mif3,2] * self.ydbar[mif4,2] + -3/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yu[mif3,0] * self.yubar[mif4,0] + -1/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yu[mif3,0] * self.yubar[mif4,0] + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif3,0] * self.yubar[mif4,0] + -3/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yu[mif3,1] * self.yubar[mif4,1] + -1/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yu[mif3,1] * self.yubar[mif4,1] + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif3,1] * self.yubar[mif4,1] + -3/1024 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yu[mif3,2] * self.yubar[mif4,2] + -1/512 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yu[mif3,2] * self.yubar[mif4,2] + 1/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif3,2] * self.yubar[mif4,2])

    def alphaOeu(self, mif1,mif2,mif3,mif4):
        return (1/180 * (self.g1)**(4) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -5/864 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] + 1/96 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] + 1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] + -1/144 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * self.yu[0,mif4] * self.yubar[0,mif3] + -1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * self.yu[0,mif4] * self.yubar[0,mif3] + 1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[0,mif4] * self.yubar[0,mif3] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * self.yu[1,mif4] * self.yubar[1,mif3] + -1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * self.yu[1,mif4] * self.yubar[1,mif3] + 1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[1,mif4] * self.yubar[1,mif3] + -3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * self.yu[2,mif4] * self.yubar[2,mif3] + -1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * self.yu[2,mif4] * self.yubar[2,mif3] + 1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[2,mif4] * self.yubar[2,mif3])

    def alphaOed(self, mif1,mif2,mif3,mif4):
        return (-1/360 * (self.g1)**(4) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 5/1728 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] + -1/192 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] + -1/288 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] + 1/288 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * self.yd[0,mif4] * self.ydbar[0,mif3] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * self.yd[0,mif4] * self.ydbar[0,mif3] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[0,mif3] + 3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * self.yd[1,mif4] * self.ydbar[1,mif3] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * self.yd[1,mif4] * self.ydbar[1,mif3] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[1,mif3] + 3/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * self.yd[2,mif4] * self.ydbar[2,mif3] + 1/32 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * self.yd[2,mif4] * self.ydbar[2,mif3] + -1/32 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaDelta1bar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[2,mif3])

    def alphaOqe(self, mif1,mif2,mif3,mif4):
        return (1/720 * (self.g1)**(4) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -5/3456 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] + 1/384 * (self.g1)**(2) * (self.iCPV)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] + -1/576 * (self.g1)**(2) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -3/128 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.yd[mif1,0] * self.ydbar[mif2,0] + -1/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.yd[mif1,0] * self.ydbar[mif2,0] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[mif2,0] + -3/128 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.yd[mif1,1] * self.ydbar[mif2,1] + -1/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.yd[mif1,1] * self.ydbar[mif2,1] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[mif2,1] + -3/128 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.yd[mif1,2] * self.ydbar[mif2,2] + -1/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.yd[mif1,2] * self.ydbar[mif2,2] + 1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[mif2,2] + 3/128 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.yu[mif1,0] * self.yubar[mif2,0] + 1/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.yu[mif1,0] * self.yubar[mif2,0] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,0] * self.yubar[mif2,0] + 3/128 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.yu[mif1,1] * self.yubar[mif2,1] + 1/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.yu[mif1,1] * self.yubar[mif2,1] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,1] * self.yubar[mif2,1] + 3/128 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.yu[mif1,2] * self.yubar[mif2,2] + 1/64 * self.invepsilonbar * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * self.yu[mif1,2] * self.yubar[mif2,2] + -1/64 * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif4] * self.lambdaDelta1bar[mif3] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif1,2] * self.yubar[mif2,2])

    def alphaOlu(self, mif1,mif2,mif3,mif4):
        return (1/360 * (self.g1)**(4) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 11/2304 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 1/384 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -1/384 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -9/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yu[0,mif4] * self.yubar[0,mif3] + -3/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yu[0,mif4] * self.yubar[0,mif3] + 3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[0,mif4] * self.yubar[0,mif3] + -9/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yu[1,mif4] * self.yubar[1,mif3] + -3/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yu[1,mif4] * self.yubar[1,mif3] + 3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[1,mif4] * self.yubar[1,mif3] + -9/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yu[2,mif4] * self.yubar[2,mif3] + -3/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yu[2,mif4] * self.yubar[2,mif3] + 3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[2,mif4] * self.yubar[2,mif3])

    def alphaOld(self, mif1,mif2,mif3,mif4):
        return (-1/720 * (self.g1)**(4) * (self.MDelta1)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -11/4608 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + -1/768 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] + 1/768 * (self.g1)**(2) * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 9/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yd[0,mif4] * self.ydbar[0,mif3] + 3/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yd[0,mif4] * self.ydbar[0,mif3] + -3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[0,mif3] + 9/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yd[1,mif4] * self.ydbar[1,mif3] + 3/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yd[1,mif4] * self.ydbar[1,mif3] + -3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[1,mif3] + 9/512 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yd[2,mif4] * self.ydbar[2,mif3] + 3/256 * self.invepsilonbar * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * self.yd[2,mif4] * self.ydbar[2,mif3] + -3/256 * (self.MSigma)**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[2,mif3])

    def alphaOledq(self, mif1,mif2,mif3,mif4):
        return (-3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * self.ydbar[mif4,mif3] + 3/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * self.ydbar[mif4,mif3] + -3/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * self.ydbar[mif4,mif3] + 3/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * self.ydbar[mif4,mif3] + 3/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,mif3] + -3/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,mif3] + 3/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,mif3] + -3/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,mif3] + 3/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,mif3] + -3/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,mif3] + -15/128 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.ydbar[mif4,mif3] * self.yl[0,mif2] + 3/128 * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.ydbar[mif4,mif3] * self.yl[0,mif2] + 15/64 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.ydbar[mif4,mif3] * self.yl[0,mif2] + -15/64 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.ydbar[mif4,mif3] * self.yl[0,mif2] + 15/128 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.ydbar[mif4,mif3] * self.yl[0,mif2] + -3/128 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.ydbar[mif4,mif3] * self.yl[0,mif2] + -15/128 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.ydbar[mif4,mif3] * self.yl[1,mif2] + 3/128 * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.ydbar[mif4,mif3] * self.yl[1,mif2] + 15/64 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.ydbar[mif4,mif3] * self.yl[1,mif2] + -15/64 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.ydbar[mif4,mif3] * self.yl[1,mif2] + 15/128 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.ydbar[mif4,mif3] * self.yl[1,mif2] + -3/128 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.ydbar[mif4,mif3] * self.yl[1,mif2] + -15/128 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.ydbar[mif4,mif3] * self.yl[2,mif2] + 3/128 * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.ydbar[mif4,mif3] * self.yl[2,mif2] + 15/64 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.ydbar[mif4,mif3] * self.yl[2,mif2] + -15/64 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.ydbar[mif4,mif3] * self.yl[2,mif2] + 15/128 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.ydbar[mif4,mif3] * self.yl[2,mif2] + -3/128 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.ydbar[mif4,mif3] * self.yl[2,mif2] + 1/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + -1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + 1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + -1/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + 1/48 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + -5/48 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + 5/24 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + -5/24 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + 5/48 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + -1/48 * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + 1/48 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + -5/48 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + 5/24 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + -5/24 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + 5/48 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + -1/48 * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + 1/48 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + -5/48 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + 5/24 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + -5/24 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + 5/48 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + -1/48 * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + -5/64 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + 1/64 * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + 5/32 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + -5/32 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + 5/64 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + -1/64 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + -5/64 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + 1/64 * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + 5/32 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + -5/32 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + 5/64 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + -1/64 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + -5/64 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + 1/64 * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + 5/32 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + -5/32 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + 5/64 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + -1/64 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + 3/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,mif3] * self.yl[mif1,mif2] + -3/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,mif3] * self.yl[mif1,mif2])

    def alphaOlequ1(self, mif1,mif2,mif3,mif4):
        return (3/128 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * self.yu[mif3,mif4] + -3/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * self.yu[mif3,mif4] + 3/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * self.yu[mif3,mif4] + -3/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * self.yu[mif3,mif4] + -3/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif3,mif4] + 3/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif3,mif4] + -3/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yu[mif3,mif4] + 3/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif3,mif4] + -3/32 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif3,mif4] + 3/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[mif2] * self.lambdaSigmabar[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yu[mif3,mif4] + 15/128 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.yu[mif3,mif4] + -3/128 * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.yu[mif3,mif4] + -15/64 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.yu[mif3,mif4] + 15/64 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.yu[mif3,mif4] + -15/128 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.yu[mif3,mif4] + 3/128 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[mif1] * self.yl[0,mif2] * self.yu[mif3,mif4] + 15/128 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.yu[mif3,mif4] + -3/128 * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.yu[mif3,mif4] + -15/64 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.yu[mif3,mif4] + 15/64 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.yu[mif3,mif4] + -15/128 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.yu[mif3,mif4] + 3/128 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[mif1] * self.yl[1,mif2] * self.yu[mif3,mif4] + 15/128 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.yu[mif3,mif4] + -3/128 * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.yu[mif3,mif4] + -15/64 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.yu[mif3,mif4] + 15/64 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.yu[mif3,mif4] + -15/128 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.yu[mif3,mif4] + 3/128 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[mif1] * self.yl[2,mif2] * self.yu[mif3,mif4] + -1/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] * self.yu[mif3,mif4] + 1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] * self.yu[mif3,mif4] + -1/8 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] * self.yu[mif3,mif4] + 1/64 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] * self.yu[mif3,mif4] + -1/48 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + 5/48 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + -5/24 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + 5/24 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + -5/48 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + 1/48 * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + -1/48 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + 5/48 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + -5/24 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + 5/24 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + -5/48 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + 1/48 * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + -1/48 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + 5/48 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + -5/24 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + 5/24 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + -5/48 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + 1/48 * (self.MDelta1)**(-2) * (self.MSigma)**(10) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + 5/64 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + -1/64 * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + -5/32 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + 5/32 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + -5/64 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + 1/64 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigmabar[0] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + 5/64 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + -1/64 * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + -5/32 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + 5/32 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + -5/64 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + 1/64 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigmabar[1] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + 5/64 * (self.MDelta1)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + -1/64 * (self.MDelta1)**(10) * (self.MSigma)**(-2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + -5/32 * (self.MDelta1)**(6) * (self.MSigma)**(2) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + 5/32 * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + -5/64 * (self.MDelta1)**(2) * (self.MSigma)**(6) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + 1/64 * (self.MSigma)**(8) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigmabar[2] * self.yl[mif1,mif2] * self.yu[mif3,mif4] + -3/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yu[mif3,mif4] + 3/16 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(4) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-5) * self.onelooporder * (np.pi)**(-2) * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[mif1,mif2] * self.yu[mif3,mif4])

    def alphaOlequ3(self, mif1,mif2,mif3,mif4):
        return 0

    def alphaWeinberg(self, mif1,mif2):
        return (1/8 * (self.MSigma)**(-1) * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] + 1/512 * (self.g1)**(2) * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] + 1/512 * (self.g2)**(2) * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] + 3/512 * (self.g1)**(2) * self.invepsilonbar * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] + 3/512 * (self.g2)**(2) * self.invepsilonbar * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] + 1/64 * self.lam * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] + 1/64 * self.invepsilonbar * self.lam * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] + 9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(-1) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] + 3/256 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(-1) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] + -21/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(3) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] + -9/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(3) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] + 3/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(5) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] + 3/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(5) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] + -21/1024 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(-1) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] + -9/512 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(-1) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] + -1/256 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] + -1/128 * self.invepsilonbar * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] + -1/256 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] + -1/128 * self.invepsilonbar * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] + -1/256 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] + -1/128 * self.invepsilonbar * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] + -15/2048 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] + -9/1024 * self.invepsilonbar * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] + -9/1024 * (self.MSigma)**(-3) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] + -3/512 * self.invepsilonbar * (self.MSigma)**(-3) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] + -15/2048 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] + -9/1024 * self.invepsilonbar * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] + -9/1024 * (self.MSigma)**(-3) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] + -3/512 * self.invepsilonbar * (self.MSigma)**(-3) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] + -15/2048 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] + -9/1024 * self.invepsilonbar * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] + -9/1024 * (self.MSigma)**(-3) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] + -3/512 * self.invepsilonbar * (self.MSigma)**(-3) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] + -3/256 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(6) * (self.MSigma)**(-1) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(4) * (self.MSigma)**(-1) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/128 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaDelta1bar[0] * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/128 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaDelta1bar[1] * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + 1/128 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaDelta1bar[2] * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) + -3/512 * (self.g1)**(2) * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/512 * (self.g2)**(2) * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -1/64 * self.lam * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 9/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MDelta1)**(2) * (self.MSigma)**(3) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + -3/512 * self.lambdaHatSigmaDelta1 * self.lambdaHatSigmaDelta1bar * (self.MSigma)**(5) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-3) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 9/1024 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/512 * (self.MSigma)**(-3) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[0] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 9/1024 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/512 * (self.MSigma)**(-3) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 9/1024 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 3/512 * (self.MSigma)**(-3) * (self.muH)**(2) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif1] * self.lambdaSigma[mif2] * self.lambdaSigmabar[2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) + 1/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[mif2] * self.ylbar[mif1,0] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[mif2] * self.ylbar[mif1,0] + -1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.MSigma * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[mif2] * self.ylbar[mif1,0] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.MSigma * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[mif2] * self.ylbar[mif1,0] + 1/64 * self.lambdaHatSigmaDelta1 * self.MSigma * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[mif2] * self.ylbar[mif1,0] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.MSigma * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[mif2] * self.ylbar[mif1,0] + -1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(3) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[mif2] * self.ylbar[mif1,0] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(3) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[mif2] * self.ylbar[mif1,0] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif1,0] + -1/64 * self.lambdaHatSigmaDelta1 * self.MSigma * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif1,0] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.MSigma * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif1,0] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(3) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif1,0] + -1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif2] * self.yl[0,0] * self.ylbar[mif1,0] + -1/64 * self.invepsilonbar * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif2] * self.yl[0,0] * self.ylbar[mif1,0] + 1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[mif1,0] + -1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif2] * self.yl[1,0] * self.ylbar[mif1,0] + -1/64 * self.invepsilonbar * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif2] * self.yl[1,0] * self.ylbar[mif1,0] + 1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[mif1,0] + -1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif2] * self.yl[2,0] * self.ylbar[mif1,0] + -1/64 * self.invepsilonbar * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif2] * self.yl[2,0] * self.ylbar[mif1,0] + 1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[mif1,0] + 1/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[mif2] * self.ylbar[mif1,1] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[mif2] * self.ylbar[mif1,1] + -1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.MSigma * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[mif2] * self.ylbar[mif1,1] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.MSigma * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[mif2] * self.ylbar[mif1,1] + 1/64 * self.lambdaHatSigmaDelta1 * self.MSigma * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[mif2] * self.ylbar[mif1,1] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.MSigma * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[mif2] * self.ylbar[mif1,1] + -1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(3) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[mif2] * self.ylbar[mif1,1] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(3) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[mif2] * self.ylbar[mif1,1] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif1,1] + -1/64 * self.lambdaHatSigmaDelta1 * self.MSigma * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif1,1] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.MSigma * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif1,1] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(3) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif1,1] + -1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif2] * self.yl[0,1] * self.ylbar[mif1,1] + -1/64 * self.invepsilonbar * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif2] * self.yl[0,1] * self.ylbar[mif1,1] + 1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[mif1,1] + -1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif2] * self.yl[1,1] * self.ylbar[mif1,1] + -1/64 * self.invepsilonbar * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif2] * self.yl[1,1] * self.ylbar[mif1,1] + 1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[mif1,1] + -1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif2] * self.yl[2,1] * self.ylbar[mif1,1] + -1/64 * self.invepsilonbar * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif2] * self.yl[2,1] * self.ylbar[mif1,1] + 1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[mif1,1] + 1/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[mif2] * self.ylbar[mif1,2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[mif2] * self.ylbar[mif1,2] + -1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.MSigma * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[mif2] * self.ylbar[mif1,2] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.MSigma * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[mif2] * self.ylbar[mif1,2] + 1/64 * self.lambdaHatSigmaDelta1 * self.MSigma * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[mif2] * self.ylbar[mif1,2] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.MSigma * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[mif2] * self.ylbar[mif1,2] + -1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(3) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[mif2] * self.ylbar[mif1,2] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(3) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[mif2] * self.ylbar[mif1,2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif1,2] + -1/64 * self.lambdaHatSigmaDelta1 * self.MSigma * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[mif2] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif1,2] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.MSigma * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif1,2] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(3) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif1,2] + -1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif2] * self.yl[0,2] * self.ylbar[mif1,2] + -1/64 * self.invepsilonbar * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif2] * self.yl[0,2] * self.ylbar[mif1,2] + 1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[mif1,2] + -1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif2] * self.yl[1,2] * self.ylbar[mif1,2] + -1/64 * self.invepsilonbar * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif2] * self.yl[1,2] * self.ylbar[mif1,2] + 1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[mif1,2] + -1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif2] * self.yl[2,2] * self.ylbar[mif1,2] + -1/64 * self.invepsilonbar * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif2] * self.yl[2,2] * self.ylbar[mif1,2] + 1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif2] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[mif1,2] + 1/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[mif1] * self.ylbar[mif2,0] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[mif1] * self.ylbar[mif2,0] + -1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.MSigma * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[mif1] * self.ylbar[mif2,0] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.MSigma * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[mif1] * self.ylbar[mif2,0] + 1/64 * self.lambdaHatSigmaDelta1 * self.MSigma * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[mif1] * self.ylbar[mif2,0] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.MSigma * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[mif1] * self.ylbar[mif2,0] + -1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(3) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[mif1] * self.ylbar[mif2,0] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(3) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[mif1] * self.ylbar[mif2,0] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,0] + -1/64 * self.lambdaHatSigmaDelta1 * self.MSigma * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,0] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.MSigma * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,0] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(3) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[0] * self.lambdaSigma[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,0] + -1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif1] * self.yl[0,0] * self.ylbar[mif2,0] + -1/64 * self.invepsilonbar * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif1] * self.yl[0,0] * self.ylbar[mif2,0] + 1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,0] * self.ylbar[mif2,0] + -1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif1] * self.yl[1,0] * self.ylbar[mif2,0] + -1/64 * self.invepsilonbar * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif1] * self.yl[1,0] * self.ylbar[mif2,0] + 1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,0] * self.ylbar[mif2,0] + -1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif1] * self.yl[2,0] * self.ylbar[mif2,0] + -1/64 * self.invepsilonbar * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif1] * self.yl[2,0] * self.ylbar[mif2,0] + 1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,0] * self.ylbar[mif2,0] + 1/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[mif1] * self.ylbar[mif2,1] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[mif1] * self.ylbar[mif2,1] + -1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.MSigma * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[mif1] * self.ylbar[mif2,1] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.MSigma * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[mif1] * self.ylbar[mif2,1] + 1/64 * self.lambdaHatSigmaDelta1 * self.MSigma * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[mif1] * self.ylbar[mif2,1] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.MSigma * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[mif1] * self.ylbar[mif2,1] + -1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(3) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[mif1] * self.ylbar[mif2,1] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(3) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[mif1] * self.ylbar[mif2,1] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,1] + -1/64 * self.lambdaHatSigmaDelta1 * self.MSigma * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,1] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.MSigma * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,1] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(3) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[1] * self.lambdaSigma[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,1] + -1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif1] * self.yl[0,1] * self.ylbar[mif2,1] + -1/64 * self.invepsilonbar * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif1] * self.yl[0,1] * self.ylbar[mif2,1] + 1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,1] * self.ylbar[mif2,1] + -1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif1] * self.yl[1,1] * self.ylbar[mif2,1] + -1/64 * self.invepsilonbar * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif1] * self.yl[1,1] * self.ylbar[mif2,1] + 1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,1] * self.ylbar[mif2,1] + -1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif1] * self.yl[2,1] * self.ylbar[mif2,1] + -1/64 * self.invepsilonbar * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif1] * self.yl[2,1] * self.ylbar[mif2,1] + 1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,1] * self.ylbar[mif2,1] + 1/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[mif1] * self.ylbar[mif2,2] + 1/128 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[mif1] * self.ylbar[mif2,2] + -1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.MSigma * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[mif1] * self.ylbar[mif2,2] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.MSigma * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[mif1] * self.ylbar[mif2,2] + 1/64 * self.lambdaHatSigmaDelta1 * self.MSigma * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[mif1] * self.ylbar[mif2,2] + 1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * self.MSigma * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[mif1] * self.ylbar[mif2,2] + -1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(3) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[mif1] * self.ylbar[mif2,2] + -1/64 * self.invepsilonbar * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(3) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[mif1] * self.ylbar[mif2,2] + -1/128 * self.lambdaHatSigmaDelta1 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,2] + -1/64 * self.lambdaHatSigmaDelta1 * self.MSigma * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[mif1] * np.log((self.MDelta1)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,2] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * self.MSigma * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,2] + 1/64 * self.lambdaHatSigmaDelta1 * (self.MDelta1)**(-2) * (self.MSigma)**(3) * (((self.MDelta1)**(2) + -1 * (self.MSigma)**(2)))**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaDelta1[2] * self.lambdaSigma[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.ylbar[mif2,2] + -1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif1] * self.yl[0,2] * self.ylbar[mif2,2] + -1/64 * self.invepsilonbar * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif1] * self.yl[0,2] * self.ylbar[mif2,2] + 1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[0] * self.lambdaSigma[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[0,2] * self.ylbar[mif2,2] + -1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif1] * self.yl[1,2] * self.ylbar[mif2,2] + -1/64 * self.invepsilonbar * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif1] * self.yl[1,2] * self.ylbar[mif2,2] + 1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[1] * self.lambdaSigma[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[1,2] * self.ylbar[mif2,2] + -1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif1] * self.yl[2,2] * self.ylbar[mif2,2] + -1/64 * self.invepsilonbar * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif1] * self.yl[2,2] * self.ylbar[mif2,2] + 1/64 * (self.MSigma)**(-1) * self.onelooporder * (np.pi)**(-2) * self.lambdaSigma[2] * self.lambdaSigma[mif1] * np.log((self.MSigma)**(2) * (self.mu)**(-2)) * self.yl[2,2] * self.ylbar[mif2,2])
